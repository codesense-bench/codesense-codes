{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\nslab_arena_create(struct slab_arena *arena, struct quota *quota,\n\t\t  size_t prealloc, uint32_t slab_size, int flags)\n{\n\tlf_lifo_init(&arena->cache);\n\tVALGRIND_MAKE_MEM_DEFINED(&arena->cache, sizeof(struct lf_lifo));\n\n\t\n\tarena->slab_size = small_round(MAX(slab_size, SLAB_MIN_SIZE));\n\n\tarena->quota = quota;\n\t\n\tprealloc = MIN(prealloc, quota_total(quota));\n\t\n\tprealloc = MIN(prealloc, SIZE_MAX - arena->slab_size);\n\t\n\tarena->prealloc = small_align(prealloc, arena->slab_size);\n\n\tarena->used = 0;\n\n\tslab_arena_flags_init(arena, flags);\n\n\tif (arena->prealloc) {\n\t\tarena->arena = mmap_checked(arena->prealloc,\n\t\t\t\t\t    arena->slab_size,\n\t\t\t\t\t    arena->flags);\n\t} else {\n\t\tarena->arena = NULL;\n\t}\n\n\tmadvise_checked(arena->arena, arena->prealloc, arena->flags);\n\n", "Selected Statement": "if (arena->arena)", "Function Input": {"flags": {"value": "4112"}}, "Variable Values Before Statement": {"arena->arena": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\nslab_arena_create(struct slab_arena *arena, struct quota *quota,\n\t\t  size_t prealloc, uint32_t slab_size, int flags)\n{\n\tlf_lifo_init(&arena->cache);\n\tVALGRIND_MAKE_MEM_DEFINED(&arena->cache, sizeof(struct lf_lifo));\n\n\t\n\tarena->slab_size = small_round(MAX(slab_size, SLAB_MIN_SIZE));\n\n\tarena->quota = quota;\n\t\n\tprealloc = MIN(prealloc, quota_total(quota));\n\t\n\tprealloc = MIN(prealloc, SIZE_MAX - arena->slab_size);\n\t\n\tarena->prealloc = small_align(prealloc, arena->slab_size);\n\n\tarena->used = 0;\n\n\tslab_arena_flags_init(arena, flags);\n\n\tif (arena->prealloc) {\n\t\tarena->arena = mmap_checked(arena->prealloc,\n\t\t\t\t\t    arena->slab_size,\n\t\t\t\t\t    arena->flags);\n\t} else {\n\t\tarena->arena = NULL;\n\t}\n\n\tmadvise_checked(arena->arena, arena->prealloc, arena->flags);\n\n", "Selected Statement": "if (ptr == NULL)", "Function Input": {"flags": {"value": "4112"}}, "Variable Values Before Statement": {"ptr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic inline void\nlf_lifo_init(struct lf_lifo *head)\n{\n\thead->next = NULL;\n", "Selected Statement": "if (pm_atomic_compare_exchange_weak(&head->next, &tail, newhead))", "Function Input": {}, "Variable Values Before Statement": {"pm_atomic_compare_exchange_weak": "NULL", "head->next": "NULL", "tail": "NULL", "newhead": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic inline void\nlf_lifo_init(struct lf_lifo *head)\n{\n\thead->next = NULL;\n", "Selected Statement": "if (elem == NULL)", "Function Input": {}, "Variable Values Before Statement": {"elem": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic inline size_t\nsmall_round(size_t size)\n{\n\tif (size < 2)\n\t\treturn size;\n\tassert(size <= SIZE_MAX / 2 + 1);\n\tassert(size - 1 <= ULONG_MAX);\n\tsize_t r = 1;\n\treturn r << (sizeof(unsigned long) * CHAR_BIT -\n\t\t     __builtin_clzl((unsigned long) (size - 1)));\n", "Selected Statement": "if (size < 2)", "Function Input": {}, "Variable Values Before Statement": {"size": "4194304"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic inline size_t\nsmall_round(size_t size)\n{\n\tif (size < 2)\n\t\treturn size;\n\tassert(size <= SIZE_MAX / 2 + 1);\n\tassert(size - 1 <= ULONG_MAX);\n\tsize_t r = 1;\n\treturn r << (sizeof(unsigned long) * CHAR_BIT -\n\t\t     __builtin_clzl((unsigned long) (size - 1)));\n", "Selected Statement": "if (small_unlikely(page_size < 1))", "Function Input": {}, "Variable Values Before Statement": {"small_unlikely": "NULL", "page_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nfiber_init(int (*invoke)(fiber_func f, va_list ap))\n{\n\tpage_size = small_getpagesize();\n\tstack_direction = check_stack_direction(__builtin_frame_address(0));\n\tfiber_invoke = invoke;\n\tmain_thread_id = pthread_self();\n\tmain_cord.loop = ev_default_loop(EVFLAG_AUTO | EVFLAG_ALLOCFD);\n\tif (main_cord.loop == NULL)\n\t\tpanic(\"can't init event loop\");\n\tcord_create(&main_cord, \"main\");\n", "Selected Statement": "if (yesno)", "Function Input": {}, "Variable Values Before Statement": {"yesno": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nfiber_init(int (*invoke)(fiber_func f, va_list ap))\n{\n\tpage_size = small_getpagesize();\n\tstack_direction = check_stack_direction(__builtin_frame_address(0));\n\tfiber_invoke = invoke;\n\tmain_thread_id = pthread_self();\n\tmain_cord.loop = ev_default_loop(EVFLAG_AUTO | EVFLAG_ALLOCFD);\n\tif (main_cord.loop == NULL)\n\t\tpanic(\"can't init event loop\");\n\tcord_create(&main_cord, \"main\");\n", "Selected Statement": "if (res == NULL)", "Function Input": {}, "Variable Values Before Statement": {"res": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nstatic inline void\nslab_cache_set_thread(struct slab_cache *cache)\n{\n\t(void) cache;\n#ifndef NDEBUG\n\tcache->thread_id = pthread_self();\n#endif\n", "Selected Statement": "if (size > cache->arena->slab_size)", "Function Input": {}, "Variable Values Before Statement": {"size": "NULL", "cache->arena->slab_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nstatic inline void\nslab_cache_set_thread(struct slab_cache *cache)\n{\n\t(void) cache;\n#ifndef NDEBUG\n\tcache->thread_id = pthread_self();\n#endif\n", "Selected Statement": "if (size <= cache->order0_size)", "Function Input": {}, "Variable Values Before Statement": {"size": "NULL", "cache->order0_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static inline void\nmempool_create(struct mempool *pool, struct slab_cache *cache,\n\t       uint32_t objsize)\n", "Selected Statement": "if (slab_size > cache->arena->slab_size)", "Function Input": {}, "Variable Values Before Statement": {"slab_size": "140737488346592", "cache->arena->slab_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void\nmempool_create_with_order(struct mempool *pool, struct slab_cache *cache,\n\t\t\t  uint32_t objsize, uint8_t order)\n{\n\tassert(order <= cache->order_max);\n\tpool->cache = cache;\n\tslab_list_create(&pool->slabs);\n\tmslab_tree_new(&pool->hot_slabs);\n\tpool->first_hot_slab = NULL;\n\trlist_create(&pool->cold_slabs);\n\tpool->spare = NULL;\n\tpool->objsize = objsize;\n\tpool->slab_order = order;\n\t\n\tuint32_t slab_size = slab_order_size(pool->cache, pool->slab_order);\n\t\n\tpool->objcount = (slab_size - mslab_sizeof()) / objsize;\n\tassert(pool->objcount);\n\tpool->offset = slab_size - pool->objcount * pool->objsize;\n\tpool->slab_ptr_mask = ~(slab_order_size(cache, order) - 1);\n\tpool->small_mempool = NULL;\n", "Selected Statement": "if (slab == pool->first_hot_slab)", "Function Input": {}, "Variable Values Before Statement": {"slab": "NULL", "pool->first_hot_slab": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct _mh(t) *\n_mh(new)()\n", "Selected Statement": "if (exist)", "Function Input": {}, "Variable Values Before Statement": {"exist": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct _mh(t) *\n_mh(new)()\n", "Selected Statement": "if (mh_mayeq(h, i, hk) && !mh_cmp(node, mh_node(h, i), arg))", "Function Input": {}, "Variable Values Before Statement": {"mh_mayeq": "NULL", "h": "NULL", "i": "NULL", "hk": "NULL", "mh_cmp": "NULL", "node": "NULL", "mh_node": "NULL", "arg": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nstatic inline void\ndiag_create(struct diag *diag)\n{\n\tdiag->last = NULL;\n", "Selected Statement": "if (diag->last == NULL)", "Function Input": {}, "Variable Values Before Statement": {"diag->last": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nstatic inline void\ndiag_create(struct diag *diag)\n{\n\tdiag->last = NULL;\n", "Selected Statement": "if (from->last == NULL)", "Function Input": {}, "Variable Values Before Statement": {"from->last": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nstatic inline void\nfiber_set_name(struct fiber *fiber, const char *name)\n{\n\tfiber_set_name_n(fiber, name, strlen(name));\n", "Selected Statement": "if (f == NULL)", "Function Input": {"name": {"value": "0xe04d08 <main_cord+400> \" K\\340\""}}, "Variable Values Before Statement": {"f": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nstatic inline void\nfiber_set_name(struct fiber *fiber, const char *name)\n{\n\tfiber_set_name_n(fiber, name, strlen(name));\n", "Selected Statement": "if (fiber() == fib)", "Function Input": {"name": {"value": "0xe04d08 <main_cord+400> \" K\\340\""}}, "Variable Values Before Statement": {"fiber": "NULL", "fib": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\ntrigger_init_in_thread(void)\n{\n\tmempool_create(&run_link_pool, &cord()->slabc, sizeof(struct run_link));\n", "Selected Statement": "if (run_link == NULL)", "Function Input": {}, "Variable Values Before Statement": {"run_link": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\ntrigger_init_in_thread(void)\n{\n\tmempool_create(&run_link_pool, &cord()->slabc, sizeof(struct run_link));\n", "Selected Statement": "if (trigger->run(trigger, event) != 0)", "Function Input": {}, "Variable Values Before Statement": {"trigger->run": "NULL", "trigger": "NULL", "event": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nclock_lowres_signal_init(void)\n{\n#ifndef NDEBUG\n\towner = pthread_self();\n#endif\n\tclock_lowres_monotonic_clock_value = clock_monotonic();\n\tstruct sigaction sa;\n\tmemset(&sa, 0, sizeof(sa));\n\tsa.sa_handler = clock_lowres_tick;\n\tsa.sa_flags = SA_RESTART;\n\tif (tt_sigaction(SIGALRM, &sa, NULL) == -1)\n\t\tpanic_syserror(\"cannot set low resolution clock timer signal\");\n\n\tstruct itimerval timer;\n\ttimer.it_interval = resolution;\n\ttimer.it_value = resolution;\n\tif (setitimer(ITIMER_REAL, &timer, NULL) == -1)\n\t\tpanic_syserror(\"cannot set low resolution clock timer\");\n", "Selected Statement": "if (tt_sigaction(SIGALRM, &sa, NULL) == -1)", "Function Input": {}, "Variable Values Before Statement": {"tt_sigaction": "NULL", "SIGALRM": "NULL", "sa": {"__sigaction_handler": null, "sa_mask": null, "sa_flags": "268435456", "sa_restorer": null}}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nclock_lowres_signal_init(void)\n{\n#ifndef NDEBUG\n\towner = pthread_self();\n#endif\n\tclock_lowres_monotonic_clock_value = clock_monotonic();\n\tstruct sigaction sa;\n\tmemset(&sa, 0, sizeof(sa));\n\tsa.sa_handler = clock_lowres_tick;\n\tsa.sa_flags = SA_RESTART;\n\tif (tt_sigaction(SIGALRM, &sa, NULL) == -1)\n\t\tpanic_syserror(\"cannot set low resolution clock timer signal\");\n\n\tstruct itimerval timer;\n\ttimer.it_interval = resolution;\n\ttimer.it_value = resolution;\n\tif (setitimer(ITIMER_REAL, &timer, NULL) == -1)\n\t\tpanic_syserror(\"cannot set low resolution clock timer\");\n", "Selected Statement": "if (setitimer(ITIMER_REAL, &timer, NULL) == -1)", "Function Input": {}, "Variable Values Before Statement": {"setitimer": "NULL", "ITIMER_REAL": "NULL", "timer": {"it_interval": null, "it_value": null}}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\ndouble\nclock_monotonic(void)\n{\n\tstruct timespec ts;\n\tint rc = clock_gettime(CLOCK_MONOTONIC, &ts);\n\tif (rc != 0)\n\t\tpanic_syserror(\"clock_gettime failed\");\n", "Selected Statement": "if (rc != 0)", "Function Input": {}, "Variable Values Before Statement": {"rc": "int"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\ndouble\nclock_monotonic(void)\n{\n\tstruct timespec ts;\n\tint rc = clock_gettime(CLOCK_MONOTONIC, &ts);\n\tif (rc != 0)\n\t\tpanic_syserror(\"clock_gettime failed\");\n", "Selected Statement": "if (rc != 0)", "Function Input": {}, "Variable Values Before Statement": {"rc": "int"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\ntt_sigaction(int signum, struct sigaction *sa, struct sigaction *osa)\n{\n\tassert(signum < SIGMAX);\n\tassert(sa != NULL);\n\n\t\n\tif (!main_thread_initialized) {\n\t\tmain_thread_id = pthread_self();\n\t\tmain_thread_initialized = true;\n\t}\n\n\tvoid (*old_handler)(int) = sighandlers[signum];\n\tif (sa->sa_handler == SIG_DFL || sa->sa_handler == SIG_IGN) {\n\t\tsighandlers[signum] = NULL;\n\t} else {\n\t\tsighandlers[signum] = sa->sa_handler;\n\t\tsa->sa_handler = sighandler_dispatcher;\n\t}\n\tint rc = sigaction(signum, sa, osa);\n\tif (osa != NULL && old_handler != NULL)\n\t\tosa->sa_handler = old_handler;\n", "Selected Statement": "if (sa->sa_handler == SIG_DFL || sa->sa_handler == SIG_IGN)", "Function Input": {"signum": {"value": "0"}}, "Variable Values Before Statement": {"sa->sa_handler": "NULL", "SIG_DFL": "NULL", "SIG_IGN": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\ntt_sigaction(int signum, struct sigaction *sa, struct sigaction *osa)\n{\n\tassert(signum < SIGMAX);\n\tassert(sa != NULL);\n\n\t\n\tif (!main_thread_initialized) {\n\t\tmain_thread_id = pthread_self();\n\t\tmain_thread_initialized = true;\n\t}\n\n\tvoid (*old_handler)(int) = sighandlers[signum];\n\tif (sa->sa_handler == SIG_DFL || sa->sa_handler == SIG_IGN) {\n\t\tsighandlers[signum] = NULL;\n\t} else {\n\t\tsighandlers[signum] = sa->sa_handler;\n\t\tsa->sa_handler = sighandler_dispatcher;\n\t}\n\tint rc = sigaction(signum, sa, osa);\n\tif (osa != NULL && old_handler != NULL)\n\t\tosa->sa_handler = old_handler;\n", "Selected Statement": "if (!main_thread_initialized)", "Function Input": {"signum": {"value": "0"}}, "Variable Values Before Statement": {"main_thread_initialized": "_Bool"}, "Value After Statement Execution": "Yes", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\ntt_sigaction(int signum, struct sigaction *sa, struct sigaction *osa)\n{\n\tassert(signum < SIGMAX);\n\tassert(sa != NULL);\n\n\t\n\tif (!main_thread_initialized) {\n\t\tmain_thread_id = pthread_self();\n\t\tmain_thread_initialized = true;\n\t}\n\n\tvoid (*old_handler)(int) = sighandlers[signum];\n\tif (sa->sa_handler == SIG_DFL || sa->sa_handler == SIG_IGN) {\n\t\tsighandlers[signum] = NULL;\n\t} else {\n\t\tsighandlers[signum] = sa->sa_handler;\n\t\tsa->sa_handler = sighandler_dispatcher;\n\t}\n\tint rc = sigaction(signum, sa, osa);\n\tif (osa != NULL && old_handler != NULL)\n\t\tosa->sa_handler = old_handler;\n", "Selected Statement": "if (osa != NULL && old_handler != NULL)", "Function Input": {"signum": {"value": "0"}}, "Variable Values Before Statement": {"osa": "NULL", "old_handler": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\ncsv_create(struct csv *csv)\n{\n\tmemset(csv, 0, sizeof(struct csv));\n\tcsv->delimiter= ',';\n\tcsv->quote_char = '\\\"';\n\tcsv->realloc = realloc;\n\tcsv->emit_field = csv_emit_field_empty;\n\tcsv->emit_row = csv_emit_row_empty;\n", "Selected Statement": "if (it->csv->state == CSV_END_OF_LAST_LINE)", "Function Input": {}, "Variable Values Before Statement": {"it->csv->state": "NULL", "CSV_END_OF_LAST_LINE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\ndecimal_t *\ndecimal_from_string(decimal_t *dec, const char *str)\n{\n\tconst char *end = decNumberFromString(dec, str, &decimal_context);\n\tif (*end != '\\0') {\n\t\tdecContextZeroStatus(&decimal_context);\n\t\treturn NULL;\n\t}\n\treturn decimal_check_status(dec, &decimal_context);\n", "Selected Statement": "if (decimal_check_status(res, &decimal_context) == NULL)", "Function Input": {"dec": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"digits": {"type_category": "unknown", "concrete_type": "int32_t", "value": "-8560"}, "exponent": {"type_category": "unknown", "concrete_type": "int32_t", "value": "32767"}, "bits": {"type_category": "unknown", "concrete_type": "uint8_t", "value": "180 '\\264'"}, "lsu": {"type_category": "array", "concrete_type": "uint16_t", "value": [{"type_category": "unknown", "concrete_type": "uint16_t", "value": "41"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "57280"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65535"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "32767"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "24912"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "221"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "47936"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "216"}]}}}}}, "Variable Values Before Statement": {"decimal_check_status": "NULL", "res": "NULL", "decimal_context": {"digits": "38", "emax": "37", "emin": "-1", "round": "DEC_ROUND_HALF_UP", "traps": "0", "status": "0", "clamp": "0 '\\000'"}}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\ndecimal_t *\ndecimal_from_string(decimal_t *dec, const char *str)\n{\n\tconst char *end = decNumberFromString(dec, str, &decimal_context);\n\tif (*end != '\\0') {\n\t\tdecContextZeroStatus(&decimal_context);\n\t\treturn NULL;\n\t}\n\treturn decimal_check_status(dec, &decimal_context);\n", "Selected Statement": "if (*end != '\\0')", "Function Input": {"dec": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"digits": {"type_category": "unknown", "concrete_type": "int32_t", "value": "-8560"}, "exponent": {"type_category": "unknown", "concrete_type": "int32_t", "value": "32767"}, "bits": {"type_category": "unknown", "concrete_type": "uint8_t", "value": "180 '\\264'"}, "lsu": {"type_category": "array", "concrete_type": "uint16_t", "value": [{"type_category": "unknown", "concrete_type": "uint16_t", "value": "41"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "57280"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65535"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "32767"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "24912"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "221"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "47936"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "216"}]}}}}}, "Variable Values Before Statement": {"end": "0xd980a1 \"\\375\""}, "Value After Statement Execution": "Yes", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nconst char * decNumberFromString(decNumber *dn, const char chars[],\n                                 decContext *set) {\n  Int   exponent=0;                \n  uByte bits=0;                    \n  Unit  *res;                      \n  Unit  resbuff[SD2U(DECBUFFER+9)];\n                                   \n  Unit  *allocres=NULL;            \n  Int   d=0;                       \n  const char *dotchar=NULL;        \n  const char *cfirst=chars;        \n  const char *last=NULL;           \n  const char *end=chars;\n  const char *c;                   \n  Unit  *up;                       \n  #if DECDPUN>1\n  Int   cut, out;                  \n  #endif\n  Int   residue;                   \n  uInt  status=0;                  \n\n  #if DECCHECK\n  if (decCheckOperands(DECUNRESU, DECUNUSED, DECUNUSED, set))\n    return decNumberZero(dn);\n  #endif\n\n  do {                             \n    for (c=chars;; c++) {          \n      if (*c>='0' && *c<='9') {    \n        last=c;\n        d++;                       \n        continue;                  \n        }\n      if (*c=='.' && dotchar==NULL) { \n        dotchar=c;                 \n        if (c==cfirst) cfirst++;   \n        continue;}\n      if (c==chars) {              \n        if (*c=='-') {             \n          cfirst++;\n          bits=DECNEG;\n          continue;}\n        if (*c=='+') {             \n          cfirst++;\n          continue;}\n        }\n      \n      break;\n      } \n\n    if (last==NULL) {              \n      status=DEC_Conversion_syntax;\n      if (*c=='\\0') break;         \n      #if DECSUBSET\n      \n      if (!set->extended) break;   \n      #endif\n      \n      if (dotchar!=NULL) break;    \n      decNumberZero(dn);           \n      if (decBiStr(c, \"infinity\", \"INFINITY\")\n       || decBiStr(c, \"inf\", \"INF\")) {\n        dn->bits=bits | DECINF;\n        status=0;                  \n        break; \n        }\n      \n      \n      dn->bits=bits | DECNAN;      \n      if (*c=='s' || *c=='S') {    \n        c++;\n        dn->bits=bits | DECSNAN;\n        }\n      if (*c!='n' && *c!='N') break;    \n      c++;\n      if (*c!='a' && *c!='A') break;    \n      c++;\n      if (*c!='n' && *c!='N') break;    \n      c++;\n      \n      \n      for (cfirst=c; *cfirst=='0';) cfirst++;\n      if (*cfirst=='\\0') {         \n        status=0;                  \n        break;                     \n        }\n      \n      for (c=cfirst;; c++, d++) {\n        if (*c<'0' || *c>'9') break; \n        last=c;\n        }\n      if (*c!='\\0') break;         \n      if (d>set->digits-1) {\n        \n        \n        if (set->clamp) break;\n        if (d>set->digits) break;\n        } \n      \n      status=0;                    \n      bits=dn->bits;               \n      } \n\n     else if (*c!='\\0') {          \n      \n      status=0;                    \n      end=c;                       \n      Flag nege;                   \n      const char *firstexp;        \n      if (*c!='e' && *c!='E') goto finalize;\n      \n      \n      nege=0;\n      c++;                         \n      if (*c=='-') {nege=1; c++;}\n       else if (*c=='+') c++;\n      if (*c<'0' || *c>'9') goto finalize;\n\n      for (; *c=='0' && *(c+1)!='\\0';) c++;  \n      firstexp=c;                            \n      for (; ;c++) {\n        if (*c<'0' || *c>'9') break;         \n        exponent=X10(exponent)+(Int)*c-(Int)'0';\n        } \n\n      end=c;\n\n      \n      \n      \n      if (c>=firstexp+9+1) {\n        if (c>firstexp+9+1 || *firstexp>'1') exponent=DECNUMMAXE*2;\n        \n        }\n      if (nege) exponent=-exponent;     \n      } \n\n      else end=c;\nfinalize:\n    \n    \n\n    \n    if (*cfirst=='0') {                 \n      for (c=cfirst; c<last; c++, cfirst++) {\n        if (*c=='.') continue;          \n        if (*c!='0') break;             \n        d--;                            \n        } \n      #if DECSUBSET\n      \n      if (*cfirst=='0' && !set->extended) {\n        decNumberZero(dn);              \n        break;                          \n        }\n      #endif\n      } \n\n    \n    if (dotchar!=NULL && dotchar<last)  \n      exponent-=(last-dotchar);         \n    \n\n    \n    \n    if (d<=set->digits) res=dn->lsu;    \n     else {                             \n      Int needbytes=D2U(d)*sizeof(Unit);\n      res=resbuff;                      \n      if (needbytes>(Int)sizeof(resbuff)) { \n        allocres=(Unit *)malloc(needbytes);\n        if (allocres==NULL) {status|=DEC_Insufficient_storage; break;}\n        res=allocres;\n        }\n      }\n    \n\n    \n    \n    #if DECDPUN>1\n    out=0;                         \n    up=res+D2U(d)-1;               \n    cut=d-(up-res)*DECDPUN;        \n    for (c=cfirst;; c++) {         \n      if (*c=='.') continue;       \n      out=X10(out)+(Int)*c-(Int)'0';\n      if (c==last) break;          \n      cut--;\n      if (cut>0) continue;         \n      *up=(Unit)out;               \n      up--;                        \n      cut=DECDPUN;                 \n      out=0;                       \n      } \n    *up=(Unit)out;                 \n\n    #else\n    \n    up=res;                        \n    for (c=last; c>=cfirst; c--) { \n      if (*c=='.') continue;       \n      *up=(Unit)((Int)*c-(Int)'0');\n      up++;\n      } \n    #endif\n\n    dn->bits=bits;\n    dn->exponent=exponent;\n    dn->digits=d;\n\n    \n    if (d>set->digits) {\n      residue=0;\n      decSetCoeff(dn, set, res, d, &residue, &status);\n      \n      decFinalize(dn, set, &residue, &status);\n      }\n     else { \n      \n      if ((dn->exponent-1<set->emin-dn->digits)\n       || (dn->exponent-1>set->emax-set->digits)) {\n        residue=0;\n        decFinalize(dn, set, &residue, &status);\n        }\n      }\n    \n    } while(0);                         \n\n  if (allocres!=NULL) free(allocres);   \n  if (status!=0) decStatus(dn, status, set);\n", "Selected Statement": "if (*c=='.')", "Function Input": {"dn": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x6d80\n", "message": "Cannot access memory at address 0x6d80"}}, "set": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xb1f70292cecd0000\n", "message": "Cannot access memory at address 0xb1f70292cecd0000"}}}, "Variable Values Before Statement": {"c": "0xd980a0 \"1\\375\""}, "Value After Statement Execution": "Yes", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nconst char * decNumberFromString(decNumber *dn, const char chars[],\n                                 decContext *set) {\n  Int   exponent=0;                \n  uByte bits=0;                    \n  Unit  *res;                      \n  Unit  resbuff[SD2U(DECBUFFER+9)];\n                                   \n  Unit  *allocres=NULL;            \n  Int   d=0;                       \n  const char *dotchar=NULL;        \n  const char *cfirst=chars;        \n  const char *last=NULL;           \n  const char *end=chars;\n  const char *c;                   \n  Unit  *up;                       \n  #if DECDPUN>1\n  Int   cut, out;                  \n  #endif\n  Int   residue;                   \n  uInt  status=0;                  \n\n  #if DECCHECK\n  if (decCheckOperands(DECUNRESU, DECUNUSED, DECUNUSED, set))\n    return decNumberZero(dn);\n  #endif\n\n  do {                             \n    for (c=chars;; c++) {          \n      if (*c>='0' && *c<='9') {    \n        last=c;\n        d++;                       \n        continue;                  \n        }\n      if (*c=='.' && dotchar==NULL) { \n        dotchar=c;                 \n        if (c==cfirst) cfirst++;   \n        continue;}\n      if (c==chars) {              \n        if (*c=='-') {             \n          cfirst++;\n          bits=DECNEG;\n          continue;}\n        if (*c=='+') {             \n          cfirst++;\n          continue;}\n        }\n      \n      break;\n      } \n\n    if (last==NULL) {              \n      status=DEC_Conversion_syntax;\n      if (*c=='\\0') break;         \n      #if DECSUBSET\n      \n      if (!set->extended) break;   \n      #endif\n      \n      if (dotchar!=NULL) break;    \n      decNumberZero(dn);           \n      if (decBiStr(c, \"infinity\", \"INFINITY\")\n       || decBiStr(c, \"inf\", \"INF\")) {\n        dn->bits=bits | DECINF;\n        status=0;                  \n        break; \n        }\n      \n      \n      dn->bits=bits | DECNAN;      \n      if (*c=='s' || *c=='S') {    \n        c++;\n        dn->bits=bits | DECSNAN;\n        }\n      if (*c!='n' && *c!='N') break;    \n      c++;\n      if (*c!='a' && *c!='A') break;    \n      c++;\n      if (*c!='n' && *c!='N') break;    \n      c++;\n      \n      \n      for (cfirst=c; *cfirst=='0';) cfirst++;\n      if (*cfirst=='\\0') {         \n        status=0;                  \n        break;                     \n        }\n      \n      for (c=cfirst;; c++, d++) {\n        if (*c<'0' || *c>'9') break; \n        last=c;\n        }\n      if (*c!='\\0') break;         \n      if (d>set->digits-1) {\n        \n        \n        if (set->clamp) break;\n        if (d>set->digits) break;\n        } \n      \n      status=0;                    \n      bits=dn->bits;               \n      } \n\n     else if (*c!='\\0') {          \n      \n      status=0;                    \n      end=c;                       \n      Flag nege;                   \n      const char *firstexp;        \n      if (*c!='e' && *c!='E') goto finalize;\n      \n      \n      nege=0;\n      c++;                         \n      if (*c=='-') {nege=1; c++;}\n       else if (*c=='+') c++;\n      if (*c<'0' || *c>'9') goto finalize;\n\n      for (; *c=='0' && *(c+1)!='\\0';) c++;  \n      firstexp=c;                            \n      for (; ;c++) {\n        if (*c<'0' || *c>'9') break;         \n        exponent=X10(exponent)+(Int)*c-(Int)'0';\n        } \n\n      end=c;\n\n      \n      \n      \n      if (c>=firstexp+9+1) {\n        if (c>firstexp+9+1 || *firstexp>'1') exponent=DECNUMMAXE*2;\n        \n        }\n      if (nege) exponent=-exponent;     \n      } \n\n      else end=c;\nfinalize:\n    \n    \n\n    \n    if (*cfirst=='0') {                 \n      for (c=cfirst; c<last; c++, cfirst++) {\n        if (*c=='.') continue;          \n        if (*c!='0') break;             \n        d--;                            \n        } \n      #if DECSUBSET\n      \n      if (*cfirst=='0' && !set->extended) {\n        decNumberZero(dn);              \n        break;                          \n        }\n      #endif\n      } \n\n    \n    if (dotchar!=NULL && dotchar<last)  \n      exponent-=(last-dotchar);         \n    \n\n    \n    \n    if (d<=set->digits) res=dn->lsu;    \n     else {                             \n      Int needbytes=D2U(d)*sizeof(Unit);\n      res=resbuff;                      \n      if (needbytes>(Int)sizeof(resbuff)) { \n        allocres=(Unit *)malloc(needbytes);\n        if (allocres==NULL) {status|=DEC_Insufficient_storage; break;}\n        res=allocres;\n        }\n      }\n    \n\n    \n    \n    #if DECDPUN>1\n    out=0;                         \n    up=res+D2U(d)-1;               \n    cut=d-(up-res)*DECDPUN;        \n    for (c=cfirst;; c++) {         \n      if (*c=='.') continue;       \n      out=X10(out)+(Int)*c-(Int)'0';\n      if (c==last) break;          \n      cut--;\n      if (cut>0) continue;         \n      *up=(Unit)out;               \n      up--;                        \n      cut=DECDPUN;                 \n      out=0;                       \n      } \n    *up=(Unit)out;                 \n\n    #else\n    \n    up=res;                        \n    for (c=last; c>=cfirst; c--) { \n      if (*c=='.') continue;       \n      *up=(Unit)((Int)*c-(Int)'0');\n      up++;\n      } \n    #endif\n\n    dn->bits=bits;\n    dn->exponent=exponent;\n    dn->digits=d;\n\n    \n    if (d>set->digits) {\n      residue=0;\n      decSetCoeff(dn, set, res, d, &residue, &status);\n      \n      decFinalize(dn, set, &residue, &status);\n      }\n     else { \n      \n      if ((dn->exponent-1<set->emin-dn->digits)\n       || (dn->exponent-1>set->emax-set->digits)) {\n        residue=0;\n        decFinalize(dn, set, &residue, &status);\n        }\n      }\n    \n    } while(0);                         \n\n  if (allocres!=NULL) free(allocres);   \n  if (status!=0) decStatus(dn, status, set);\n", "Selected Statement": "if (allocbufa!=NULL)", "Function Input": {"dn": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x6d80\n", "message": "Cannot access memory at address 0x6d80"}}, "set": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xb1f70292cecd0000\n", "message": "Cannot access memory at address 0xb1f70292cecd0000"}}}, "Variable Values Before Statement": {"allocbufa": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nconst char * decNumberFromString(decNumber *dn, const char chars[],\n                                 decContext *set) {\n  Int   exponent=0;                \n  uByte bits=0;                    \n  Unit  *res;                      \n  Unit  resbuff[SD2U(DECBUFFER+9)];\n                                   \n  Unit  *allocres=NULL;            \n  Int   d=0;                       \n  const char *dotchar=NULL;        \n  const char *cfirst=chars;        \n  const char *last=NULL;           \n  const char *end=chars;\n  const char *c;                   \n  Unit  *up;                       \n  #if DECDPUN>1\n  Int   cut, out;                  \n  #endif\n  Int   residue;                   \n  uInt  status=0;                  \n\n  #if DECCHECK\n  if (decCheckOperands(DECUNRESU, DECUNUSED, DECUNUSED, set))\n    return decNumberZero(dn);\n  #endif\n\n  do {                             \n    for (c=chars;; c++) {          \n      if (*c>='0' && *c<='9') {    \n        last=c;\n        d++;                       \n        continue;                  \n        }\n      if (*c=='.' && dotchar==NULL) { \n        dotchar=c;                 \n        if (c==cfirst) cfirst++;   \n        continue;}\n      if (c==chars) {              \n        if (*c=='-') {             \n          cfirst++;\n          bits=DECNEG;\n          continue;}\n        if (*c=='+') {             \n          cfirst++;\n          continue;}\n        }\n      \n      break;\n      } \n\n    if (last==NULL) {              \n      status=DEC_Conversion_syntax;\n      if (*c=='\\0') break;         \n      #if DECSUBSET\n      \n      if (!set->extended) break;   \n      #endif\n      \n      if (dotchar!=NULL) break;    \n      decNumberZero(dn);           \n      if (decBiStr(c, \"infinity\", \"INFINITY\")\n       || decBiStr(c, \"inf\", \"INF\")) {\n        dn->bits=bits | DECINF;\n        status=0;                  \n        break; \n        }\n      \n      \n      dn->bits=bits | DECNAN;      \n      if (*c=='s' || *c=='S') {    \n        c++;\n        dn->bits=bits | DECSNAN;\n        }\n      if (*c!='n' && *c!='N') break;    \n      c++;\n      if (*c!='a' && *c!='A') break;    \n      c++;\n      if (*c!='n' && *c!='N') break;    \n      c++;\n      \n      \n      for (cfirst=c; *cfirst=='0';) cfirst++;\n      if (*cfirst=='\\0') {         \n        status=0;                  \n        break;                     \n        }\n      \n      for (c=cfirst;; c++, d++) {\n        if (*c<'0' || *c>'9') break; \n        last=c;\n        }\n      if (*c!='\\0') break;         \n      if (d>set->digits-1) {\n        \n        \n        if (set->clamp) break;\n        if (d>set->digits) break;\n        } \n      \n      status=0;                    \n      bits=dn->bits;               \n      } \n\n     else if (*c!='\\0') {          \n      \n      status=0;                    \n      end=c;                       \n      Flag nege;                   \n      const char *firstexp;        \n      if (*c!='e' && *c!='E') goto finalize;\n      \n      \n      nege=0;\n      c++;                         \n      if (*c=='-') {nege=1; c++;}\n       else if (*c=='+') c++;\n      if (*c<'0' || *c>'9') goto finalize;\n\n      for (; *c=='0' && *(c+1)!='\\0';) c++;  \n      firstexp=c;                            \n      for (; ;c++) {\n        if (*c<'0' || *c>'9') break;         \n        exponent=X10(exponent)+(Int)*c-(Int)'0';\n        } \n\n      end=c;\n\n      \n      \n      \n      if (c>=firstexp+9+1) {\n        if (c>firstexp+9+1 || *firstexp>'1') exponent=DECNUMMAXE*2;\n        \n        }\n      if (nege) exponent=-exponent;     \n      } \n\n      else end=c;\nfinalize:\n    \n    \n\n    \n    if (*cfirst=='0') {                 \n      for (c=cfirst; c<last; c++, cfirst++) {\n        if (*c=='.') continue;          \n        if (*c!='0') break;             \n        d--;                            \n        } \n      #if DECSUBSET\n      \n      if (*cfirst=='0' && !set->extended) {\n        decNumberZero(dn);              \n        break;                          \n        }\n      #endif\n      } \n\n    \n    if (dotchar!=NULL && dotchar<last)  \n      exponent-=(last-dotchar);         \n    \n\n    \n    \n    if (d<=set->digits) res=dn->lsu;    \n     else {                             \n      Int needbytes=D2U(d)*sizeof(Unit);\n      res=resbuff;                      \n      if (needbytes>(Int)sizeof(resbuff)) { \n        allocres=(Unit *)malloc(needbytes);\n        if (allocres==NULL) {status|=DEC_Insufficient_storage; break;}\n        res=allocres;\n        }\n      }\n    \n\n    \n    \n    #if DECDPUN>1\n    out=0;                         \n    up=res+D2U(d)-1;               \n    cut=d-(up-res)*DECDPUN;        \n    for (c=cfirst;; c++) {         \n      if (*c=='.') continue;       \n      out=X10(out)+(Int)*c-(Int)'0';\n      if (c==last) break;          \n      cut--;\n      if (cut>0) continue;         \n      *up=(Unit)out;               \n      up--;                        \n      cut=DECDPUN;                 \n      out=0;                       \n      } \n    *up=(Unit)out;                 \n\n    #else\n    \n    up=res;                        \n    for (c=last; c>=cfirst; c--) { \n      if (*c=='.') continue;       \n      *up=(Unit)((Int)*c-(Int)'0');\n      up++;\n      } \n    #endif\n\n    dn->bits=bits;\n    dn->exponent=exponent;\n    dn->digits=d;\n\n    \n    if (d>set->digits) {\n      residue=0;\n      decSetCoeff(dn, set, res, d, &residue, &status);\n      \n      decFinalize(dn, set, &residue, &status);\n      }\n     else { \n      \n      if ((dn->exponent-1<set->emin-dn->digits)\n       || (dn->exponent-1>set->emax-set->digits)) {\n        residue=0;\n        decFinalize(dn, set, &residue, &status);\n        }\n      }\n    \n    } while(0);                         \n\n  if (allocres!=NULL) free(allocres);   \n  if (status!=0) decStatus(dn, status, set);\n", "Selected Statement": "if (*up<10)", "Function Input": {"dn": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x6d80\n", "message": "Cannot access memory at address 0x6d80"}}, "set": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xb1f70292cecd0000\n", "message": "Cannot access memory at address 0xb1f70292cecd0000"}}}, "Variable Values Before Statement": {"up": "1"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nconst char * decNumberFromString(decNumber *dn, const char chars[],\n                                 decContext *set) {\n  Int   exponent=0;                \n  uByte bits=0;                    \n  Unit  *res;                      \n  Unit  resbuff[SD2U(DECBUFFER+9)];\n                                   \n  Unit  *allocres=NULL;            \n  Int   d=0;                       \n  const char *dotchar=NULL;        \n  const char *cfirst=chars;        \n  const char *last=NULL;           \n  const char *end=chars;\n  const char *c;                   \n  Unit  *up;                       \n  #if DECDPUN>1\n  Int   cut, out;                  \n  #endif\n  Int   residue;                   \n  uInt  status=0;                  \n\n  #if DECCHECK\n  if (decCheckOperands(DECUNRESU, DECUNUSED, DECUNUSED, set))\n    return decNumberZero(dn);\n  #endif\n\n  do {                             \n    for (c=chars;; c++) {          \n      if (*c>='0' && *c<='9') {    \n        last=c;\n        d++;                       \n        continue;                  \n        }\n      if (*c=='.' && dotchar==NULL) { \n        dotchar=c;                 \n        if (c==cfirst) cfirst++;   \n        continue;}\n      if (c==chars) {              \n        if (*c=='-') {             \n          cfirst++;\n          bits=DECNEG;\n          continue;}\n        if (*c=='+') {             \n          cfirst++;\n          continue;}\n        }\n      \n      break;\n      } \n\n    if (last==NULL) {              \n      status=DEC_Conversion_syntax;\n      if (*c=='\\0') break;         \n      #if DECSUBSET\n      \n      if (!set->extended) break;   \n      #endif\n      \n      if (dotchar!=NULL) break;    \n      decNumberZero(dn);           \n      if (decBiStr(c, \"infinity\", \"INFINITY\")\n       || decBiStr(c, \"inf\", \"INF\")) {\n        dn->bits=bits | DECINF;\n        status=0;                  \n        break; \n        }\n      \n      \n      dn->bits=bits | DECNAN;      \n      if (*c=='s' || *c=='S') {    \n        c++;\n        dn->bits=bits | DECSNAN;\n        }\n      if (*c!='n' && *c!='N') break;    \n      c++;\n      if (*c!='a' && *c!='A') break;    \n      c++;\n      if (*c!='n' && *c!='N') break;    \n      c++;\n      \n      \n      for (cfirst=c; *cfirst=='0';) cfirst++;\n      if (*cfirst=='\\0') {         \n        status=0;                  \n        break;                     \n        }\n      \n      for (c=cfirst;; c++, d++) {\n        if (*c<'0' || *c>'9') break; \n        last=c;\n        }\n      if (*c!='\\0') break;         \n      if (d>set->digits-1) {\n        \n        \n        if (set->clamp) break;\n        if (d>set->digits) break;\n        } \n      \n      status=0;                    \n      bits=dn->bits;               \n      } \n\n     else if (*c!='\\0') {          \n      \n      status=0;                    \n      end=c;                       \n      Flag nege;                   \n      const char *firstexp;        \n      if (*c!='e' && *c!='E') goto finalize;\n      \n      \n      nege=0;\n      c++;                         \n      if (*c=='-') {nege=1; c++;}\n       else if (*c=='+') c++;\n      if (*c<'0' || *c>'9') goto finalize;\n\n      for (; *c=='0' && *(c+1)!='\\0';) c++;  \n      firstexp=c;                            \n      for (; ;c++) {\n        if (*c<'0' || *c>'9') break;         \n        exponent=X10(exponent)+(Int)*c-(Int)'0';\n        } \n\n      end=c;\n\n      \n      \n      \n      if (c>=firstexp+9+1) {\n        if (c>firstexp+9+1 || *firstexp>'1') exponent=DECNUMMAXE*2;\n        \n        }\n      if (nege) exponent=-exponent;     \n      } \n\n      else end=c;\nfinalize:\n    \n    \n\n    \n    if (*cfirst=='0') {                 \n      for (c=cfirst; c<last; c++, cfirst++) {\n        if (*c=='.') continue;          \n        if (*c!='0') break;             \n        d--;                            \n        } \n      #if DECSUBSET\n      \n      if (*cfirst=='0' && !set->extended) {\n        decNumberZero(dn);              \n        break;                          \n        }\n      #endif\n      } \n\n    \n    if (dotchar!=NULL && dotchar<last)  \n      exponent-=(last-dotchar);         \n    \n\n    \n    \n    if (d<=set->digits) res=dn->lsu;    \n     else {                             \n      Int needbytes=D2U(d)*sizeof(Unit);\n      res=resbuff;                      \n      if (needbytes>(Int)sizeof(resbuff)) { \n        allocres=(Unit *)malloc(needbytes);\n        if (allocres==NULL) {status|=DEC_Insufficient_storage; break;}\n        res=allocres;\n        }\n      }\n    \n\n    \n    \n    #if DECDPUN>1\n    out=0;                         \n    up=res+D2U(d)-1;               \n    cut=d-(up-res)*DECDPUN;        \n    for (c=cfirst;; c++) {         \n      if (*c=='.') continue;       \n      out=X10(out)+(Int)*c-(Int)'0';\n      if (c==last) break;          \n      cut--;\n      if (cut>0) continue;         \n      *up=(Unit)out;               \n      up--;                        \n      cut=DECDPUN;                 \n      out=0;                       \n      } \n    *up=(Unit)out;                 \n\n    #else\n    \n    up=res;                        \n    for (c=last; c>=cfirst; c--) { \n      if (*c=='.') continue;       \n      *up=(Unit)((Int)*c-(Int)'0');\n      up++;\n      } \n    #endif\n\n    dn->bits=bits;\n    dn->exponent=exponent;\n    dn->digits=d;\n\n    \n    if (d>set->digits) {\n      residue=0;\n      decSetCoeff(dn, set, res, d, &residue, &status);\n      \n      decFinalize(dn, set, &residue, &status);\n      }\n     else { \n      \n      if ((dn->exponent-1<set->emin-dn->digits)\n       || (dn->exponent-1>set->emax-set->digits)) {\n        residue=0;\n        decFinalize(dn, set, &residue, &status);\n        }\n      }\n    \n    } while(0);                         \n\n  if (allocres!=NULL) free(allocres);   \n  if (status!=0) decStatus(dn, status, set);\n", "Selected Statement": "if (allocres!=NULL)", "Function Input": {"dn": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x6d80\n", "message": "Cannot access memory at address 0x6d80"}}, "set": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xb1f70292cecd0000\n", "message": "Cannot access memory at address 0xb1f70292cecd0000"}}}, "Variable Values Before Statement": {"allocres": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\n\ndecContext *decContextZeroStatus(decContext *context) {\n  context->status=0;\n", "Selected Statement": "if (status==DEC_Clamped              )", "Function Input": {"context": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"digits": {"type_category": "unknown", "concrete_type": "int32_t", "value": "1"}, "emax": {"type_category": "unknown", "concrete_type": "int32_t", "value": "0"}, "emin": {"type_category": "unknown", "concrete_type": "int32_t", "value": "97536"}, "round": {"type_category": "unknown", "concrete_type": "rounding", "value": "DEC_ROUND_CEILING"}, "traps": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "14203712"}, "status": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}, "clamp": {"type_category": "unknown", "concrete_type": "uint8_t", "value": "0 '\\000'"}}}}}, "Variable Values Before Statement": {"status": "NULL", "DEC_Clamped": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\n\ndecContext *decContextZeroStatus(decContext *context) {\n  context->status=0;\n", "Selected Statement": "if (status==DEC_Rounded              )", "Function Input": {"context": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"digits": {"type_category": "unknown", "concrete_type": "int32_t", "value": "1"}, "emax": {"type_category": "unknown", "concrete_type": "int32_t", "value": "0"}, "emin": {"type_category": "unknown", "concrete_type": "int32_t", "value": "97536"}, "round": {"type_category": "unknown", "concrete_type": "rounding", "value": "DEC_ROUND_CEILING"}, "traps": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "14203712"}, "status": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}, "clamp": {"type_category": "unknown", "concrete_type": "uint8_t", "value": "0 '\\000'"}}}}}, "Variable Values Before Statement": {"status": "NULL", "DEC_Rounded": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\n\nvoid http_parser_create(struct http_parser *parser)\n{\n parser->hdr_value_start = NULL;\n parser->hdr_value_end = NULL;\n parser->http_major = -1;\n parser->http_minor = -1;\n parser->hdr_name = NULL;\n parser->hdr_name_idx = 0;\n", "Selected Statement": "if (rc == HTTP_PARSE_INVALID)", "Function Input": {"parser": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"hdr_value_start": {"type_category": "string", "concrete_type": "string", "value": "0x8c48348707e8b49 <error: Cannot access memory at address 0x8c48348707e8b49>"}, "hdr_value_end": {"type_category": "string", "concrete_type": "string", "value": "0x634c1e95e415b <error: Cannot access memory at address 0x634c1e95e415b>"}, "http_major": {"type_category": "int", "concrete_type": "int", "value": "1398161868"}, "http_minor": {"type_category": "int", "concrete_type": "int", "value": "-24557232"}, "hdr_name": {"type_category": "string", "concrete_type": "string", "value": "0x48000664c2058d48 <error: Cannot access memory at address 0x48000664c2058d48>"}, "hdr_name_idx": {"type_category": "int", "concrete_type": "int", "value": "-1958213751"}}}}}, "Variable Values Before Statement": {"rc": "NULL", "HTTP_PARSE_INVALID": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\n\nvoid http_parser_create(struct http_parser *parser)\n{\n parser->hdr_value_start = NULL;\n parser->hdr_value_end = NULL;\n parser->http_major = -1;\n parser->http_minor = -1;\n parser->hdr_name = NULL;\n parser->hdr_name_idx = 0;\n", "Selected Statement": "if (ch < '0' || ch > '9')", "Function Input": {"parser": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"hdr_value_start": {"type_category": "string", "concrete_type": "string", "value": "0x8c48348707e8b49 <error: Cannot access memory at address 0x8c48348707e8b49>"}, "hdr_value_end": {"type_category": "string", "concrete_type": "string", "value": "0x634c1e95e415b <error: Cannot access memory at address 0x634c1e95e415b>"}, "http_major": {"type_category": "int", "concrete_type": "int", "value": "1398161868"}, "http_minor": {"type_category": "int", "concrete_type": "int", "value": "-24557232"}, "hdr_name": {"type_category": "string", "concrete_type": "string", "value": "0x48000664c2058d48 <error: Cannot access memory at address 0x48000664c2058d48>"}, "hdr_name_idx": {"type_category": "int", "concrete_type": "int", "value": "-1958213751"}}}}}, "Variable Values Before Statement": {"ch": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "ssize_t\ndatetime_parse_full(struct datetime *date, const char *str, size_t len,\n\t\t    const char *tzsuffix, int32_t offset)\n{\n\tsize_t n;\n\tdt_t dt;\n\tconst char *svp = str;\n\tchar c;\n\tint sec_of_day = 0, nanosecond = 0;\n\tint16_t tzindex = 0;\n\n\tn = dt_parse_iso_date(str, len, &dt);\n\tif (n == 0)\n\t\treturn 0;\n\n\tstr += n;\n\tlen -= n;\n\tif (len <= 0)\n\t\tgoto exit;\n\n\tc = *str++;\n\tif (c != 'T' && c != 't' && c != ' ')\n\t\treturn 0;\n\tlen--;\n\tif (len <= 0)\n\t\tgoto exit;\n\n\tn = dt_parse_iso_time(str, len, &sec_of_day, &nanosecond);\n\tif (n == 0)\n\t\treturn 0;\n\n\tstr += n;\n\tlen -= n;\n\tif (len <= 0)\n\t\tgoto exit;\n\n\t\n\ttime_t base = dt_epoch(dt) + sec_of_day - offset * 60;\n\tssize_t l;\n\tif (tzsuffix != NULL) {\n\t\tl = parse_tz_suffix(tzsuffix, strlen(tzsuffix), base,\n\t\t\t\t    &tzindex, &offset);\n\t\tif (l < 0)\n\t\t\treturn l;\n\t\tgoto exit;\n\t}\n\n\tif (*str == ' ') {\n\t\tstr++;\n\t\tlen--;\n\t}\n\tif (len <= 0)\n\t\tgoto exit;\n\n\tl = parse_tz_suffix(str, len, base, &tzindex, &offset);\n\tif (l < 0)\n\t\treturn l;\n\tstr += l;\n\nexit:\n\tdate->epoch = dt_epoch(dt) + sec_of_day - offset * 60;\n\tdate->nsec = nanosecond;\n\tdate->tzoffset = offset;\n\tdate->tzindex = tzindex;\n\n\treturn str - svp;\n", "Selected Statement": "if (!timezone_tzindex_lookup(tzindex, &tm))", "Function Input": {}, "Variable Values Before Statement": {"timezone_tzindex_lookup": "NULL", "tzindex": "NULL", "tm": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "ssize_t\ndatetime_parse_full(struct datetime *date, const char *str, size_t len,\n\t\t    const char *tzsuffix, int32_t offset)\n{\n\tsize_t n;\n\tdt_t dt;\n\tconst char *svp = str;\n\tchar c;\n\tint sec_of_day = 0, nanosecond = 0;\n\tint16_t tzindex = 0;\n\n\tn = dt_parse_iso_date(str, len, &dt);\n\tif (n == 0)\n\t\treturn 0;\n\n\tstr += n;\n\tlen -= n;\n\tif (len <= 0)\n\t\tgoto exit;\n\n\tc = *str++;\n\tif (c != 'T' && c != 't' && c != ' ')\n\t\treturn 0;\n\tlen--;\n\tif (len <= 0)\n\t\tgoto exit;\n\n\tn = dt_parse_iso_time(str, len, &sec_of_day, &nanosecond);\n\tif (n == 0)\n\t\treturn 0;\n\n\tstr += n;\n\tlen -= n;\n\tif (len <= 0)\n\t\tgoto exit;\n\n\t\n\ttime_t base = dt_epoch(dt) + sec_of_day - offset * 60;\n\tssize_t l;\n\tif (tzsuffix != NULL) {\n\t\tl = parse_tz_suffix(tzsuffix, strlen(tzsuffix), base,\n\t\t\t\t    &tzindex, &offset);\n\t\tif (l < 0)\n\t\t\treturn l;\n\t\tgoto exit;\n\t}\n\n\tif (*str == ' ') {\n\t\tstr++;\n\t\tlen--;\n\t}\n\tif (len <= 0)\n\t\tgoto exit;\n\n\tl = parse_tz_suffix(str, len, base, &tzindex, &offset);\n\tif (l < 0)\n\t\treturn l;\n\tstr += l;\n\nexit:\n\tdate->epoch = dt_epoch(dt) + sec_of_day - offset * 60;\n\tdate->nsec = nanosecond;\n\tdate->tzoffset = offset;\n\tdate->tzindex = tzindex;\n\n\treturn str - svp;\n", "Selected Statement": "if (ival->hour != 0)", "Function Input": {}, "Variable Values Before Statement": {"ival->hour": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "ssize_t\ndatetime_parse_full(struct datetime *date, const char *str, size_t len,\n\t\t    const char *tzsuffix, int32_t offset)\n{\n\tsize_t n;\n\tdt_t dt;\n\tconst char *svp = str;\n\tchar c;\n\tint sec_of_day = 0, nanosecond = 0;\n\tint16_t tzindex = 0;\n\n\tn = dt_parse_iso_date(str, len, &dt);\n\tif (n == 0)\n\t\treturn 0;\n\n\tstr += n;\n\tlen -= n;\n\tif (len <= 0)\n\t\tgoto exit;\n\n\tc = *str++;\n\tif (c != 'T' && c != 't' && c != ' ')\n\t\treturn 0;\n\tlen--;\n\tif (len <= 0)\n\t\tgoto exit;\n\n\tn = dt_parse_iso_time(str, len, &sec_of_day, &nanosecond);\n\tif (n == 0)\n\t\treturn 0;\n\n\tstr += n;\n\tlen -= n;\n\tif (len <= 0)\n\t\tgoto exit;\n\n\t\n\ttime_t base = dt_epoch(dt) + sec_of_day - offset * 60;\n\tssize_t l;\n\tif (tzsuffix != NULL) {\n\t\tl = parse_tz_suffix(tzsuffix, strlen(tzsuffix), base,\n\t\t\t\t    &tzindex, &offset);\n\t\tif (l < 0)\n\t\t\treturn l;\n\t\tgoto exit;\n\t}\n\n\tif (*str == ' ') {\n\t\tstr++;\n\t\tlen--;\n\t}\n\tif (len <= 0)\n\t\tgoto exit;\n\n\tl = parse_tz_suffix(str, len, base, &tzindex, &offset);\n\tif (l < 0)\n\t\treturn l;\n\tstr += l;\n\nexit:\n\tdate->epoch = dt_epoch(dt) + sec_of_day - offset * 60;\n\tdate->nsec = nanosecond;\n\tdate->tzoffset = offset;\n\tdate->tzindex = tzindex;\n\n\treturn str - svp;\n", "Selected Statement": "if (n == 0)", "Function Input": {}, "Variable Values Before Statement": {"n": "0"}, "Value After Statement Execution": "Yes", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct datetime *\ndatetime_unpack(const char **data, uint32_t len, struct datetime *date)\n{\n\tif (len < sizeof(int64_t))\n\t\treturn NULL;\n\n\tconst char *const svp = *data;\n\tmemset(date, 0, sizeof(*date));\n\n\tint64_t i_epoch = load_u64(*data);\n\tdate->epoch = i_epoch;\n\t*data += sizeof(i_epoch);\n\tlen -= sizeof(i_epoch);\n\n\tif (len == 0)\n\t\tgoto return_validated;\n\n\tif (len != SZ_TAIL) {\n\t\t*data = svp;\n\t\treturn NULL;\n\t}\n\tmemcpy(&date->nsec, *data, SZ_TAIL);\n\t*data += SZ_TAIL;\n\nreturn_validated:\n\tif (!datetime_validate(date)) {\n\t\t*data = svp;\n\t\treturn NULL;\n\t}\n\n\treturn date;\n", "Selected Statement": "if (len == 0)", "Function Input": {"date": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"epoch": {"type_category": "float", "concrete_type": "double", "value": "1.494611925315272e+171"}, "nsec": {"type_category": "unknown", "concrete_type": "int32_t", "value": "139103049"}, "tzoffset": {"type_category": "unknown", "concrete_type": "int16_t", "value": "-29879"}, "tzindex": {"type_category": "unknown", "concrete_type": "int16_t", "value": "10307"}}}}}, "Variable Values Before Statement": {"len": "0"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct datetime *\ndatetime_unpack(const char **data, uint32_t len, struct datetime *date)\n{\n\tif (len < sizeof(int64_t))\n\t\treturn NULL;\n\n\tconst char *const svp = *data;\n\tmemset(date, 0, sizeof(*date));\n\n\tint64_t i_epoch = load_u64(*data);\n\tdate->epoch = i_epoch;\n\t*data += sizeof(i_epoch);\n\tlen -= sizeof(i_epoch);\n\n\tif (len == 0)\n\t\tgoto return_validated;\n\n\tif (len != SZ_TAIL) {\n\t\t*data = svp;\n\t\treturn NULL;\n\t}\n\tmemcpy(&date->nsec, *data, SZ_TAIL);\n\t*data += SZ_TAIL;\n\nreturn_validated:\n\tif (!datetime_validate(date)) {\n\t\t*data = svp;\n\t\treturn NULL;\n\t}\n\n\treturn date;\n", "Selected Statement": "if (len < sizeof(int64_t))", "Function Input": {"date": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"epoch": {"type_category": "float", "concrete_type": "double", "value": "1.494611925315272e+171"}, "nsec": {"type_category": "unknown", "concrete_type": "int32_t", "value": "139103049"}, "tzoffset": {"type_category": "unknown", "concrete_type": "int16_t", "value": "-29879"}, "tzindex": {"type_category": "unknown", "concrete_type": "int16_t", "value": "10307"}}}}}, "Variable Values Before Statement": {"len": "0"}, "Value After Statement Execution": "Yes", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\ninline uint64_t\nload_u64(const void *p)\n{\n\tuint64_t res;\n\tmemcpy(&res, p, sizeof(res));\n", "Selected Statement": "if (bit_unlikely(size == 0))", "Function Input": {"p": {"value": null}}, "Variable Values Before Statement": {"bit_unlikely": "NULL", "size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\ninline uint64_t\nload_u64(const void *p)\n{\n\tuint64_t res;\n\tmemcpy(&res, p, sizeof(res));\n", "Selected Statement": "if (x == 0)", "Function Input": {"p": {"value": null}}, "Variable Values Before Statement": {"x": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic inline bool\ndatetime_validate(const struct datetime *date)\n{\n\tif (unlikely(date->epoch < MIN_EPOCH_SECS_VALUE) ||\n\t    unlikely(date->epoch > MAX_EPOCH_SECS_VALUE))\n\t\treturn false;\n\tif (unlikely(date->nsec < 0) ||\n\t    unlikely(date->nsec >= MAX_NANOS_PER_SEC))\n\t\treturn false;\n\tif (unlikely(date->tzoffset < MIN_TZOFFSET) ||\n\t    unlikely(date->tzoffset > MAX_TZOFFSET))\n\t\treturn false;\n\tif (unlikely(date->tzindex < 0) ||\n\t    unlikely(date->tzindex > MAX_TZINDEX))\n\t\treturn false;\n\treturn true;\n", "Selected Statement": "if (year > 0)", "Function Input": {"date": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xb6a\n", "message": "Cannot access memory at address 0xb6a"}}}, "Variable Values Before Statement": {"year": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic inline bool\ndatetime_validate(const struct datetime *date)\n{\n\tif (unlikely(date->epoch < MIN_EPOCH_SECS_VALUE) ||\n\t    unlikely(date->epoch > MAX_EPOCH_SECS_VALUE))\n\t\treturn false;\n\tif (unlikely(date->nsec < 0) ||\n\t    unlikely(date->nsec >= MAX_NANOS_PER_SEC))\n\t\treturn false;\n\tif (unlikely(date->tzoffset < MIN_TZOFFSET) ||\n\t    unlikely(date->tzoffset > MAX_TZOFFSET))\n\t\treturn false;\n\tif (unlikely(date->tzindex < 0) ||\n\t    unlikely(date->tzindex > MAX_TZINDEX))\n\t\treturn false;\n\treturn true;\n", "Selected Statement": "if (year > 0)", "Function Input": {"date": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xb6a\n", "message": "Cannot access memory at address 0xb6a"}}}, "Variable Values Before Statement": {"year": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic void\nmp_check_on_error_default(const struct mp_check_error *err)\n{\n\t(void)err;\n", "Selected Statement": "if (result <= data_size)", "Function Input": {}, "Variable Values Before Statement": {"result": "NULL", "data_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic void\nmp_check_on_error_default(const struct mp_check_error *err)\n{\n\t(void)err;\n", "Selected Statement": "if (level == 1)", "Function Input": {}, "Variable Values Before Statement": {"level": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\nuri_create(struct uri *uri, const char *str)\n{\n\tmemset(uri, 0, sizeof(struct uri));\n\tif (str == NULL)\n\t\treturn 0;\n\tstruct uri_raw uri_raw;\n\tif (uri_raw_parse(&uri_raw, str) != 0)\n\t\treturn -1;\n\turi->scheme = XSTRNDUP(uri_raw.scheme, uri_raw.scheme_len);\n\turi->login = XSTRNDUP(uri_raw.login, uri_raw.login_len);\n\turi->password = XSTRNDUP(uri_raw.password, uri_raw.password_len);\n\turi->host = XSTRNDUP(uri_raw.host, uri_raw.host_len);\n\turi->service = XSTRNDUP(uri_raw.service, uri_raw.service_len);\n\turi->path = XSTRNDUP(uri_raw.path, uri_raw.path_len);\n\turi->query = XSTRNDUP(uri_raw.query, uri_raw.query_len);\n\turi->fragment = XSTRNDUP(uri_raw.fragment, uri_raw.fragment_len);\n\turi->host_hint = uri_raw.host_hint;\n\tif (uri->query != NULL)\n\t\turi_create_params(uri, uri->query);\n\treturn 0;\n", "Selected Statement": "if (param == NULL || idx >= param->value_count)", "Function Input": {}, "Variable Values Before Statement": {"param": "NULL", "idx": "NULL", "param->value_count": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\nuri_create(struct uri *uri, const char *str)\n{\n\tmemset(uri, 0, sizeof(struct uri));\n\tif (str == NULL)\n\t\treturn 0;\n\tstruct uri_raw uri_raw;\n\tif (uri_raw_parse(&uri_raw, str) != 0)\n\t\treturn -1;\n\turi->scheme = XSTRNDUP(uri_raw.scheme, uri_raw.scheme_len);\n\turi->login = XSTRNDUP(uri_raw.login, uri_raw.login_len);\n\turi->password = XSTRNDUP(uri_raw.password, uri_raw.password_len);\n\turi->host = XSTRNDUP(uri_raw.host, uri_raw.host_len);\n\turi->service = XSTRNDUP(uri_raw.service, uri_raw.service_len);\n\turi->path = XSTRNDUP(uri_raw.path, uri_raw.path_len);\n\turi->query = XSTRNDUP(uri_raw.query, uri_raw.query_len);\n\turi->fragment = XSTRNDUP(uri_raw.fragment, uri_raw.fragment_len);\n\turi->host_hint = uri_raw.host_hint;\n\tif (uri->query != NULL)\n\t\turi_create_params(uri, uri->query);\n\treturn 0;\n", "Selected Statement": "if (*name == 0)", "Function Input": {}, "Variable Values Before Statement": {"name": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tarantool"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic int\nLLVMFuzzerTestOneInput_RESPONSE(const uint8_t *data, size_t size)\n{\n\tif (call_count == 0) {\n", "Selected Statement": "if (call_count == 0)", "Function Input": {}, "Variable Values Before Statement": {"call_count": "0"}, "Value After Statement Execution": "Yes", "Project Information": "civetweb"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic int\nLLVMFuzzerTestOneInput_RESPONSE(const uint8_t *data, size_t size)\n{\n\tif (call_count == 0) {\n", "Selected Statement": "if (client)", "Function Input": {}, "Variable Values Before Statement": {"client": "NULL"}, "Value After Statement Execution": "No", "Project Information": "civetweb"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic int\nLLVMFuzzerTestOneInput_RESPONSE(const uint8_t *data, size_t size)\n{\n\tif (call_count == 0) {\n", "Selected Statement": "if (!client)", "Function Input": {}, "Variable Values Before Statement": {"client": "NULL"}, "Value After Statement Execution": "No", "Project Information": "civetweb"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                  int port,\n                  int use_ssl,\n                  char *error_buffer,\n                  size_t error_buffer_size)\n{\n\tstruct mg_client_options opts;\n\tstruct mg_init_data init;\n\tstruct mg_error_data error;\n\n\tmemset(&init, 0, sizeof(init));\n\n\tmemset(&error, 0, sizeof(error));\n\terror.text_buffer_size = error_buffer_size;\n\terror.text = error_buffer;\n\n\tmemset(&opts, 0, sizeof(opts));\n\topts.host = host;\n\topts.port = port;\n\tif (use_ssl) {\n\t\topts.host_name = host;\n\t}\n", "Selected Statement": "if (is_in_script_path(conn, path))", "Function Input": {}, "Variable Values Before Statement": {"is_in_script_path": "NULL", "conn": "NULL", "path": "NULL"}, "Value After Statement Execution": "No", "Project Information": "civetweb"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nPgQueryParseResult pg_query_parse(const char* input)\n{\n", "Selected Statement": "if (pipe(stderr_pipe) != 0)", "Function Input": {"input": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"pipe": "NULL", "stderr_pipe": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nPgQueryParseResult pg_query_parse(const char* input)\n{\n", "Selected Statement": "if ((parser_options & PG_QUERY_DISABLE_BACKSLASH_QUOTE) == PG_QUERY_DISABLE_BACKSLASH_QUOTE)", "Function Input": {"input": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"parser_options": "NULL", "PG_QUERY_DISABLE_BACKSLASH_QUOTE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nMemoryContext pg_query_enter_memory_context()\n{\n\tMemoryContext ctx = NULL;\n\n", "Selected Statement": "if (error->context)", "Function Input": {}, "Variable Values Before Statement": {"error->context": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nMemoryContext pg_query_enter_memory_context()\n{\n\tMemoryContext ctx = NULL;\n\n", "Selected Statement": "if (pg_query_initialized != 0)", "Function Input": {}, "Variable Values Before Statement": {"pg_query_initialized": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nvoid\nMemoryContextInit(void)\n{\n\tAssert(TopMemoryContext == NULL);\n\n\t\n\tTopMemoryContext = AllocSetContextCreate((MemoryContext) NULL,\n\t\t\t\t\t\t\t\t\t\t\t \"TopMemoryContext\",\n\t\t\t\t\t\t\t\t\t\t\t ALLOCSET_DEFAULT_SIZES);\n\n\t\n\tCurrentMemoryContext = TopMemoryContext;\n\n\t\n\tErrorContext = AllocSetContextCreate(TopMemoryContext,\n\t\t\t\t\t\t\t\t\t\t \"ErrorContext\",\n\t\t\t\t\t\t\t\t\t\t 8 * 1024,\n\t\t\t\t\t\t\t\t\t\t 8 * 1024,\n\t\t\t\t\t\t\t\t\t\t 8 * 1024);\n\tMemoryContextAllowInCriticalSection(ErrorContext, true);\n", "Selected Statement": "if (print_to_stderr)", "Function Input": {}, "Variable Values Before Statement": {"print_to_stderr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nvoid\nMemoryContextInit(void)\n{\n\tAssert(TopMemoryContext == NULL);\n\n\t\n\tTopMemoryContext = AllocSetContextCreate((MemoryContext) NULL,\n\t\t\t\t\t\t\t\t\t\t\t \"TopMemoryContext\",\n\t\t\t\t\t\t\t\t\t\t\t ALLOCSET_DEFAULT_SIZES);\n\n\t\n\tCurrentMemoryContext = TopMemoryContext;\n\n\t\n\tErrorContext = AllocSetContextCreate(TopMemoryContext,\n\t\t\t\t\t\t\t\t\t\t \"ErrorContext\",\n\t\t\t\t\t\t\t\t\t\t 8 * 1024,\n\t\t\t\t\t\t\t\t\t\t 8 * 1024,\n\t\t\t\t\t\t\t\t\t\t 8 * 1024);\n\tMemoryContextAllowInCriticalSection(ErrorContext, true);\n", "Selected Statement": "if (parent->firstchild != NULL)", "Function Input": {}, "Variable Values Before Statement": {"parent->firstchild": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\t\t\t\t\t\t\t  Size minContextSize,\n\t\t\t\t\t\t\t  Size initBlockSize,\n\t\t\t\t\t\t\t  Size maxBlockSize)\n{\n\tint\t\t\tfreeListIndex;\n\tSize\t\tfirstBlockSize;\n\tAllocSet\tset;\n\tAllocBlock\tblock;\n\n\t\n\tStaticAssertDecl(ALLOC_CHUNKHDRSZ == MAXALIGN(ALLOC_CHUNKHDRSZ),\n\t\t\t\t\t \"sizeof(MemoryChunk) is not maxaligned\");\n\t\n\tStaticAssertDecl(sizeof(AllocFreeListLink) <= (1 << ALLOC_MINBITS),\n\t\t\t\t\t \"sizeof(AllocFreeListLink) larger than minimum allocation size\");\n\n\t\n\tAssert(initBlockSize == MAXALIGN(initBlockSize) &&\n\t\t   initBlockSize >= 1024);\n\tAssert(maxBlockSize == MAXALIGN(maxBlockSize) &&\n\t\t   maxBlockSize >= initBlockSize &&\n\t\t   AllocHugeSizeIsValid(maxBlockSize)); \n\tAssert(minContextSize == 0 ||\n\t\t   (minContextSize == MAXALIGN(minContextSize) &&\n\t\t\tminContextSize >= 1024 &&\n\t\t\tminContextSize <= maxBlockSize));\n\tAssert(maxBlockSize <= MEMORYCHUNK_MAX_BLOCKOFFSET);\n\n\t\n\tif (minContextSize == ALLOCSET_DEFAULT_MINSIZE &&\n\t\tinitBlockSize == ALLOCSET_DEFAULT_INITSIZE)\n\t\tfreeListIndex = 0;\n\telse if (minContextSize == ALLOCSET_SMALL_MINSIZE &&\n\t\t\t initBlockSize == ALLOCSET_SMALL_INITSIZE)\n\t\tfreeListIndex = 1;\n\telse\n\t\tfreeListIndex = -1;\n\n\t\n\tif (freeListIndex >= 0)\n\t{\n\t\tAllocSetFreeList *freelist = &context_freelists[freeListIndex];\n\n\t\tif (freelist->first_free != NULL)\n\t\t{\n\t\t\t\n\t\t\tset = freelist->first_free;\n\t\t\tfreelist->first_free = (AllocSet) set->header.nextchild;\n\t\t\tfreelist->num_free--;\n\n\t\t\t\n\t\t\tset->maxBlockSize = maxBlockSize;\n\n\t\t\t\n\t\t\tMemoryContextCreate((MemoryContext) set,\n\t\t\t\t\t\t\t\tT_AllocSetContext,\n\t\t\t\t\t\t\t\tMCTX_ASET_ID,\n\t\t\t\t\t\t\t\tparent,\n\t\t\t\t\t\t\t\tname);\n\n\t\t\t((MemoryContext) set)->mem_allocated =\n\t\t\t\tset->keeper->endptr - ((char *) set);\n\n\t\t\treturn (MemoryContext) set;\n\t\t}\n\t}\n\n\t\n\tfirstBlockSize = MAXALIGN(sizeof(AllocSetContext)) +\n\t\tALLOC_BLOCKHDRSZ + ALLOC_CHUNKHDRSZ;\n\tif (minContextSize != 0)\n\t\tfirstBlockSize = Max(firstBlockSize, minContextSize);\n\telse\n\t\tfirstBlockSize = Max(firstBlockSize, initBlockSize);\n\n\t\n\tset = (AllocSet) malloc(firstBlockSize);\n\tif (set == NULL)\n\t{\n\t\tif (TopMemoryContext)\n\t\t\tMemoryContextStats(TopMemoryContext);\n\t\tereport(ERROR,\n\t\t\t\t(errcode(ERRCODE_OUT_OF_MEMORY),\n\t\t\t\t errmsg(\"out of memory\"),\n\t\t\t\t errdetail(\"Failed while creating memory context \\\"%s\\\".\",\n\t\t\t\t\t\t   name)));\n\t}\n\n\t\n\n\t\n\tblock = (AllocBlock) (((char *) set) + MAXALIGN(sizeof(AllocSetContext)));\n\tblock->aset = set;\n\tblock->freeptr = ((char *) block) + ALLOC_BLOCKHDRSZ;\n\tblock->endptr = ((char *) set) + firstBlockSize;\n\tblock->prev = NULL;\n\tblock->next = NULL;\n\n\t\n\tVALGRIND_MAKE_MEM_NOACCESS(block->freeptr, block->endptr - block->freeptr);\n\n\t\n\tset->blocks = block;\n\t\n\tset->keeper = block;\n\n\t\n\tMemSetAligned(set->freelist, 0, sizeof(set->freelist));\n\n\tset->initBlockSize = initBlockSize;\n\tset->maxBlockSize = maxBlockSize;\n\tset->nextBlockSize = initBlockSize;\n\tset->freeListIndex = freeListIndex;\n\n\t\n\tStaticAssertStmt(ALLOC_CHUNK_LIMIT == ALLOCSET_SEPARATE_THRESHOLD,\n\t\t\t\t\t \"ALLOC_CHUNK_LIMIT != ALLOCSET_SEPARATE_THRESHOLD\");\n\n\t\n\tset->allocChunkLimit = ALLOC_CHUNK_LIMIT;\n\twhile ((Size) (set->allocChunkLimit + ALLOC_CHUNKHDRSZ) >\n\t\t   (Size) ((maxBlockSize - ALLOC_BLOCKHDRSZ) / ALLOC_CHUNK_FRACTION))\n\t\tset->allocChunkLimit >>= 1;\n\n\t\n\tMemoryContextCreate((MemoryContext) set,\n\t\t\t\t\t\tT_AllocSetContext,\n\t\t\t\t\t\tMCTX_ASET_ID,\n\t\t\t\t\t\tparent,\n\t\t\t\t\t\tname);\n\n\t((MemoryContext) set)->mem_allocated = firstBlockSize;\n\n\treturn (MemoryContext) set;\n", "Selected Statement": "if (block == NULL)", "Function Input": {}, "Variable Values Before Statement": {"block": "AllocBlock"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\t\t\t\t\t\t\t  Size minContextSize,\n\t\t\t\t\t\t\t  Size initBlockSize,\n\t\t\t\t\t\t\t  Size maxBlockSize)\n{\n\tint\t\t\tfreeListIndex;\n\tSize\t\tfirstBlockSize;\n\tAllocSet\tset;\n\tAllocBlock\tblock;\n\n\t\n\tStaticAssertDecl(ALLOC_CHUNKHDRSZ == MAXALIGN(ALLOC_CHUNKHDRSZ),\n\t\t\t\t\t \"sizeof(MemoryChunk) is not maxaligned\");\n\t\n\tStaticAssertDecl(sizeof(AllocFreeListLink) <= (1 << ALLOC_MINBITS),\n\t\t\t\t\t \"sizeof(AllocFreeListLink) larger than minimum allocation size\");\n\n\t\n\tAssert(initBlockSize == MAXALIGN(initBlockSize) &&\n\t\t   initBlockSize >= 1024);\n\tAssert(maxBlockSize == MAXALIGN(maxBlockSize) &&\n\t\t   maxBlockSize >= initBlockSize &&\n\t\t   AllocHugeSizeIsValid(maxBlockSize)); \n\tAssert(minContextSize == 0 ||\n\t\t   (minContextSize == MAXALIGN(minContextSize) &&\n\t\t\tminContextSize >= 1024 &&\n\t\t\tminContextSize <= maxBlockSize));\n\tAssert(maxBlockSize <= MEMORYCHUNK_MAX_BLOCKOFFSET);\n\n\t\n\tif (minContextSize == ALLOCSET_DEFAULT_MINSIZE &&\n\t\tinitBlockSize == ALLOCSET_DEFAULT_INITSIZE)\n\t\tfreeListIndex = 0;\n\telse if (minContextSize == ALLOCSET_SMALL_MINSIZE &&\n\t\t\t initBlockSize == ALLOCSET_SMALL_INITSIZE)\n\t\tfreeListIndex = 1;\n\telse\n\t\tfreeListIndex = -1;\n\n\t\n\tif (freeListIndex >= 0)\n\t{\n\t\tAllocSetFreeList *freelist = &context_freelists[freeListIndex];\n\n\t\tif (freelist->first_free != NULL)\n\t\t{\n\t\t\t\n\t\t\tset = freelist->first_free;\n\t\t\tfreelist->first_free = (AllocSet) set->header.nextchild;\n\t\t\tfreelist->num_free--;\n\n\t\t\t\n\t\t\tset->maxBlockSize = maxBlockSize;\n\n\t\t\t\n\t\t\tMemoryContextCreate((MemoryContext) set,\n\t\t\t\t\t\t\t\tT_AllocSetContext,\n\t\t\t\t\t\t\t\tMCTX_ASET_ID,\n\t\t\t\t\t\t\t\tparent,\n\t\t\t\t\t\t\t\tname);\n\n\t\t\t((MemoryContext) set)->mem_allocated =\n\t\t\t\tset->keeper->endptr - ((char *) set);\n\n\t\t\treturn (MemoryContext) set;\n\t\t}\n\t}\n\n\t\n\tfirstBlockSize = MAXALIGN(sizeof(AllocSetContext)) +\n\t\tALLOC_BLOCKHDRSZ + ALLOC_CHUNKHDRSZ;\n\tif (minContextSize != 0)\n\t\tfirstBlockSize = Max(firstBlockSize, minContextSize);\n\telse\n\t\tfirstBlockSize = Max(firstBlockSize, initBlockSize);\n\n\t\n\tset = (AllocSet) malloc(firstBlockSize);\n\tif (set == NULL)\n\t{\n\t\tif (TopMemoryContext)\n\t\t\tMemoryContextStats(TopMemoryContext);\n\t\tereport(ERROR,\n\t\t\t\t(errcode(ERRCODE_OUT_OF_MEMORY),\n\t\t\t\t errmsg(\"out of memory\"),\n\t\t\t\t errdetail(\"Failed while creating memory context \\\"%s\\\".\",\n\t\t\t\t\t\t   name)));\n\t}\n\n\t\n\n\t\n\tblock = (AllocBlock) (((char *) set) + MAXALIGN(sizeof(AllocSetContext)));\n\tblock->aset = set;\n\tblock->freeptr = ((char *) block) + ALLOC_BLOCKHDRSZ;\n\tblock->endptr = ((char *) set) + firstBlockSize;\n\tblock->prev = NULL;\n\tblock->next = NULL;\n\n\t\n\tVALGRIND_MAKE_MEM_NOACCESS(block->freeptr, block->endptr - block->freeptr);\n\n\t\n\tset->blocks = block;\n\t\n\tset->keeper = block;\n\n\t\n\tMemSetAligned(set->freelist, 0, sizeof(set->freelist));\n\n\tset->initBlockSize = initBlockSize;\n\tset->maxBlockSize = maxBlockSize;\n\tset->nextBlockSize = initBlockSize;\n\tset->freeListIndex = freeListIndex;\n\n\t\n\tStaticAssertStmt(ALLOC_CHUNK_LIMIT == ALLOCSET_SEPARATE_THRESHOLD,\n\t\t\t\t\t \"ALLOC_CHUNK_LIMIT != ALLOCSET_SEPARATE_THRESHOLD\");\n\n\t\n\tset->allocChunkLimit = ALLOC_CHUNK_LIMIT;\n\twhile ((Size) (set->allocChunkLimit + ALLOC_CHUNKHDRSZ) >\n\t\t   (Size) ((maxBlockSize - ALLOC_BLOCKHDRSZ) / ALLOC_CHUNK_FRACTION))\n\t\tset->allocChunkLimit >>= 1;\n\n\t\n\tMemoryContextCreate((MemoryContext) set,\n\t\t\t\t\t\tT_AllocSetContext,\n\t\t\t\t\t\tMCTX_ASET_ID,\n\t\t\t\t\t\tparent,\n\t\t\t\t\t\tname);\n\n\t((MemoryContext) set)->mem_allocated = firstBlockSize;\n\n\treturn (MemoryContext) set;\n", "Selected Statement": "if (set->blocks != NULL)", "Function Input": {}, "Variable Values Before Statement": {"set->blocks": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nSetDatabaseEncoding(int encoding)\n{\n\tif (!PG_VALID_BE_ENCODING(encoding))\n\t\telog(ERROR, \"invalid database encoding: %d\", encoding);\n\n\tDatabaseEncoding = &pg_enc2name_tbl[encoding];\n\tAssert(DatabaseEncoding->encoding == encoding);\n", "Selected Statement": "if (!raw_pg_bind_textdomain_codeset(domainname, new_msgenc))", "Function Input": {}, "Variable Values Before Statement": {"raw_pg_bind_textdomain_codeset": "NULL", "domainname": "NULL", "new_msgenc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nSetDatabaseEncoding(int encoding)\n{\n\tif (!PG_VALID_BE_ENCODING(encoding))\n\t\telog(ERROR, \"invalid database encoding: %d\", encoding);\n\n\tDatabaseEncoding = &pg_enc2name_tbl[encoding];\n\tAssert(DatabaseEncoding->encoding == encoding);\n", "Selected Statement": "if (elog_ok)", "Function Input": {}, "Variable Values Before Statement": {"elog_ok": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nList *\nraw_parser(const char *str, RawParseMode mode)\n{\n\tcore_yyscan_t yyscanner;\n\tbase_yy_extra_type yyextra;\n\tint\t\t\tyyresult;\n\n\t\n", "Selected Statement": "if (is_utf16_surrogate_first(unicode))", "Function Input": {"yyscanner": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"is_utf16_surrogate_first": "NULL", "unicode": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nList *\nraw_parser(const char *str, RawParseMode mode)\n{\n\tcore_yyscan_t yyscanner;\n\tbase_yy_extra_type yyextra;\n\tint\t\t\tyyresult;\n\n\t\n", "Selected Statement": "if (!is_valid_unicode_codepoint(c))", "Function Input": {"yyscanner": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"is_valid_unicode_codepoint": "NULL", "c": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nchar *\npg_query_nodes_to_json(const void *obj)\n{\n\tStringInfoData out;\n\tconst ListCell *lc;\n\n\tinitStringInfo(&out);\n\n\tif (obj == NULL) \n\t{\n\t\tappendStringInfo(&out, \"{\\\"version\\\":%d,\\\"stmts\\\":[]}\", PG_VERSION_NUM);\n\t}\n\telse\n\t{\n\t\tappendStringInfoString(&out, \"{\");\n\t\tappendStringInfo(&out, \"\\\"version\\\":%d,\", PG_VERSION_NUM);\n\t\tappendStringInfoString(&out, \"\\\"stmts\\\":\");\n\t\tappendStringInfoChar(&out, '[');\n\n", "Selected Statement": "if (node->fldname)", "Function Input": {"out": {"value": {"data": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffde98 \"\""}, "len": {"type_category": "int", "concrete_type": "int", "value": "-8552"}, "maxlen": {"type_category": "int", "concrete_type": "int", "value": "32767"}, "cursor": {"type_category": "int", "concrete_type": "int", "value": "0"}}}}, "Variable Values Before Statement": {"node->fldname": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nchar *\npg_query_nodes_to_json(const void *obj)\n{\n\tStringInfoData out;\n\tconst ListCell *lc;\n\n\tinitStringInfo(&out);\n\n\tif (obj == NULL) \n\t{\n\t\tappendStringInfo(&out, \"{\\\"version\\\":%d,\\\"stmts\\\":[]}\", PG_VERSION_NUM);\n\t}\n\telse\n\t{\n\t\tappendStringInfoString(&out, \"{\");\n\t\tappendStringInfo(&out, \"\\\"version\\\":%d,\", PG_VERSION_NUM);\n\t\tappendStringInfoString(&out, \"\\\"stmts\\\":\");\n\t\tappendStringInfoChar(&out, '[');\n\n", "Selected Statement": "if (node->fldname != 0)", "Function Input": {"out": {"value": {"data": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffde98 \"\""}, "len": {"type_category": "int", "concrete_type": "int", "value": "-8552"}, "maxlen": {"type_category": "int", "concrete_type": "int", "value": "32767"}, "cursor": {"type_category": "int", "concrete_type": "int", "value": "0"}}}}, "Variable Values Before Statement": {"node->fldname": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nvoid\ninitStringInfo(StringInfo str)\n{\n\tint\t\t\tsize = 1024;\t\n\n\tstr->data = (char *) palloc(size);\n\tstr->maxlen = size;\n\tresetStringInfo(str);\n", "Selected Statement": "if (needed <= str->maxlen)", "Function Input": {"str": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"needed": "NULL", "str->maxlen": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nvoid\ninitStringInfo(StringInfo str)\n{\n\tint\t\t\tsize = 1024;\t\n\n\tstr->data = (char *) palloc(size);\n\tstr->maxlen = size;\n\tresetStringInfo(str);\n", "Selected Statement": "if (nprinted < (size_t) avail)", "Function Input": {"str": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"nprinted": "NULL", "avail": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nsize_t\npvsnprintf(char *buf, size_t len, const char *fmt, va_list args)\n{\n\tint\t\t\tnprinted;\n\n\tnprinted = vsnprintf(buf, len, fmt, args);\n\n\t\n\tif (unlikely(nprinted < 0))\n\t{\n#ifndef FRONTEND\n\t\telog(ERROR, \"vsnprintf failed: %m with format string \\\"%s\\\"\", fmt);\n#else\n\t\tfprintf(stderr, \"vsnprintf failed: %s with format string \\\"%s\\\"\\n\",\n\t\t\t\tstrerror(errno), fmt);\n\t\texit(EXIT_FAILURE);\n#endif\n\t}\n\n\tif ((size_t) nprinted < len)\n\t{\n\t\t\n\t\treturn (size_t) nprinted;\n\t}\n\n\t\n\tif (unlikely((size_t) nprinted > MaxAllocSize - 1))\n\t{\n#ifndef FRONTEND\n\t\tereport(ERROR,\n\t\t\t\t(errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED),\n\t\t\t\t errmsg(\"out of memory\")));\n#else\n\t\tfprintf(stderr, _(\"out of memory\\n\"));\n\t\texit(EXIT_FAILURE);\n#endif\n\t}\n\n\treturn nprinted + 1;\n", "Selected Statement": "if (unlikely(nprinted < 0))", "Function Input": {"buf": {"value": "<optimized out>"}, "fmt": {"value": "<optimized out>"}, "len": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"unlikely": "NULL", "nprinted": "int"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nsize_t\npvsnprintf(char *buf, size_t len, const char *fmt, va_list args)\n{\n\tint\t\t\tnprinted;\n\n\tnprinted = vsnprintf(buf, len, fmt, args);\n\n\t\n\tif (unlikely(nprinted < 0))\n\t{\n#ifndef FRONTEND\n\t\telog(ERROR, \"vsnprintf failed: %m with format string \\\"%s\\\"\", fmt);\n#else\n\t\tfprintf(stderr, \"vsnprintf failed: %s with format string \\\"%s\\\"\\n\",\n\t\t\t\tstrerror(errno), fmt);\n\t\texit(EXIT_FAILURE);\n#endif\n\t}\n\n\tif ((size_t) nprinted < len)\n\t{\n\t\t\n\t\treturn (size_t) nprinted;\n\t}\n\n\t\n\tif (unlikely((size_t) nprinted > MaxAllocSize - 1))\n\t{\n#ifndef FRONTEND\n\t\tereport(ERROR,\n\t\t\t\t(errcode(ERRCODE_PROGRAM_LIMIT_EXCEEDED),\n\t\t\t\t errmsg(\"out of memory\")));\n#else\n\t\tfprintf(stderr, _(\"out of memory\\n\"));\n\t\texit(EXIT_FAILURE);\n#endif\n\t}\n\n\treturn nprinted + 1;\n", "Selected Statement": "if ((size_t) nprinted < len)", "Function Input": {"buf": {"value": "<optimized out>"}, "fmt": {"value": "<optimized out>"}, "len": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"nprinted": "int", "len": "1024"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\npg_vsnprintf(char *str, size_t count, const char *fmt, va_list args)\n{\n\tPrintfTarget target;\n\tchar\t\tonebyte[1];\n\n\t\n\tif (count == 0)\n\t{\n\t\tstr = onebyte;\n\t\tcount = 1;\n\t}\n\ttarget.bufstart = target.bufptr = str;\n\ttarget.bufend = str + count - 1;\n\ttarget.stream = NULL;\n\ttarget.nchars = 0;\n\ttarget.failed = false;\n\tdopr(&target, fmt, args);\n\t*(target.bufptr) = '\\0';\n", "Selected Statement": "if (fmtpos)", "Function Input": {"count": {"value": "<optimized out>"}, "fmt": {"value": "<optimized out>"}, "str": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"fmtpos": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\npg_vsnprintf(char *str, size_t count, const char *fmt, va_list args)\n{\n\tPrintfTarget target;\n\tchar\t\tonebyte[1];\n\n\t\n\tif (count == 0)\n\t{\n\t\tstr = onebyte;\n\t\tcount = 1;\n\t}\n\ttarget.bufstart = target.bufptr = str;\n\ttarget.bufend = str + count - 1;\n\ttarget.stream = NULL;\n\ttarget.nchars = 0;\n\ttarget.failed = false;\n\tdopr(&target, fmt, args);\n\t*(target.bufptr) = '\\0';\n", "Selected Statement": "if (base == 10)", "Function Input": {"count": {"value": "<optimized out>"}, "fmt": {"value": "<optimized out>"}, "str": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"base": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libpg_query"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"pathnames.h\"\n\nint mkstemp_cloexec(char *template)\n{\n#ifdef HAVE_MKOSTEMP\n", "Selected Statement": "if (fd == -1)", "Function Input": {"template": {"value": "0x7ffff7e215c0 <_IO_2_1_stderr_> \"\\207(\\255\\373\""}}, "Variable Values Before Statement": {"fd": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"pathnames.h\"\n\nint mkstemp_cloexec(char *template)\n{\n#ifdef HAVE_MKOSTEMP\n", "Selected Statement": "if (fd < first || last < fd)", "Function Input": {"template": {"value": "0x7ffff7e215c0 <_IO_2_1_stderr_> \"\\207(\\255\\373\""}}, "Variable Values Before Statement": {"fd": "NULL", "first": "NULL", "last": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic void process_wtmp_file(const struct last_control *ctl,\n\t\t\t      const char *filename)\n{\n\tFILE *fp;\t\t\n\n\tstruct utmpx ut;\t\n\tstruct utmplist *ulist = NULL;\t\n\tstruct utmplist *p;\t\n\tstruct utmplist *next;\t\n\n\ttime_t lastboot = 0;\t\n\ttime_t lastrch = 0;\t\n\ttime_t lastdown;\t\n\ttime_t begintime;\t\n\tint whydown = 0;\t\n\n\tint c, x;\t\t\n\tstruct stat st;\t\t\n\tint quit = 0;\t\t\n\tint down = 0;\t\t\n\n#ifndef FUZZ_TARGET\n\ttime(&lastdown);\n#else\n\tlastdown = 1596001948;\n#endif\n\t\n\tlastdate = currentdate = lastrch = lastdown;\n\n#ifndef FUZZ_TARGET\n\t\n\tsignal(SIGINT, int_handler);\n\tsignal(SIGQUIT, quit_handler);\n#endif\n\n\t\n\tif ((fp = fopen(filename, \"r\")) == NULL)\n\t\terr(EXIT_FAILURE, _(\"cannot open %s\"), filename);\n\n\t\n\tsetvbuf(fp, NULL, _IOFBF, UCHUNKSIZE);\n\n\t\n\tif (uread(fp, &ut, NULL, filename) == 1)\n\t\tbegintime = ut.ut_tv.tv_sec;\n\telse {\n\t\tif (fstat(fileno(fp), &st) != 0)\n\t\t\terr(EXIT_FAILURE, _(\"stat of %s failed\"), filename);\n\t\tbegintime = st.st_ctime;\n\t\tquit = 1;\n\t}\n\n\t\n\turead(fp, NULL, NULL, filename);\n\n\t\n\twhile (!quit) {\n\n\t\tif (uread(fp, &ut, &quit, filename) != 1)\n\t\t\tbreak;\n\n\t\tif (ctl->since && ut.ut_tv.tv_sec < ctl->since)\n\t\t\tcontinue;\n\n\t\tif (ctl->until && ctl->until < ut.ut_tv.tv_sec)\n\t\t\tcontinue;\n\n\t\tlastdate = ut.ut_tv.tv_sec;\n\n\t\tif (ctl->lastb) {\n\t\t\tquit = list(ctl, &ut, ut.ut_tv.tv_sec, R_NORMAL);\n\t\t\tcontinue;\n\t\t}\n\n\t\t\n\t\tif (strncmp(ut.ut_line, \"~\", 1) == 0) {\n\t\t\tif (strncmp(ut.ut_user, \"shutdown\", 8) == 0)\n\t\t\t\tut.ut_type = SHUTDOWN_TIME;\n\t\t\telse if (strncmp(ut.ut_user, \"reboot\", 6) == 0)\n\t\t\t\tut.ut_type = BOOT_TIME;\n\t\t\telse if (strncmp(ut.ut_user, \"runlevel\", 8) == 0)\n\t\t\t\tut.ut_type = RUN_LVL;\n\t\t}\n#if 1 \n\t\t\n\t\telse {\n\t\t\tif (ut.ut_type != DEAD_PROCESS &&\n\t\t\t    ut.ut_user[0] && ut.ut_line[0] &&\n\t\t\t    strncmp(ut.ut_user, \"LOGIN\", 5) != 0)\n\t\t\t\tut.ut_type = USER_PROCESS;\n\t\t\t\n\t\t\tif (ut.ut_user[0] == 0)\n\t\t\t\tut.ut_type = DEAD_PROCESS;\n\n\t\t\t\n\t\t\tif (strncmp(ut.ut_user, \"date\", 4) == 0) {\n\t\t\t\tif (ut.ut_line[0] == '|')\n\t\t\t\t\tut.ut_type = OLD_TIME;\n\t\t\t\tif (ut.ut_line[0] == '{')\n\t\t\t\t\tut.ut_type = NEW_TIME;\n\t\t\t}\n\t\t}\n#endif\n\t\tswitch (ut.ut_type) {\n\t\tcase SHUTDOWN_TIME:\n\t\t\tif (ctl->extended) {\n\t\t\t\tstrcpy(ut.ut_line, \"system down\");\n\t\t\t\tquit = list(ctl, &ut, lastboot, R_NORMAL);\n\t\t\t}\n\t\t\tlastdown = lastrch = ut.ut_tv.tv_sec;\n\t\t\tdown = 1;\n\t\t\tbreak;\n\t\tcase OLD_TIME:\n\t\tcase NEW_TIME:\n\t\t\tif (ctl->extended) {\n\t\t\t\tstrcpy(ut.ut_line,\n\t\t\t\tut.ut_type == NEW_TIME ? \"new time\" :\n\t\t\t\t\t\"old time\");\n\t\t\t\tquit = list(ctl, &ut, lastdown, R_TIMECHANGE);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase BOOT_TIME:\n\t\t\tstrcpy(ut.ut_line, \"system boot\");\n\t\t\tif (lastdown > lastboot && lastdown != currentdate)\n\t\t\t\tquit = list(ctl, &ut, lastboot, R_REBOOT_CRASH);\n\t\t\telse\n\t\t\t\tquit = list(ctl, &ut, lastdown, R_REBOOT);\n\t\t\tlastboot = ut.ut_tv.tv_sec;\n\t\t\tdown = 1;\n\t\t\tbreak;\n\t\tcase RUN_LVL:\n\t\t\tx = ut.ut_pid & 255;\n\t\t\tif (ctl->extended) {\n\t\t\t\tsnprintf(ut.ut_line, sizeof(ut.ut_line), \"(to lvl %c)\", x);\n\t\t\t\tquit = list(ctl, &ut, lastrch, R_NORMAL);\n\t\t\t}\n\t\t\tif (x == '0' || x == '6') {\n\t\t\t\tlastdown = ut.ut_tv.tv_sec;\n\t\t\t\tdown = 1;\n\t\t\t\tut.ut_type = SHUTDOWN_TIME;\n\t\t\t}\n\t\t\tlastrch = ut.ut_tv.tv_sec;\n\t\t\tbreak;\n\n\t\tcase USER_PROCESS:\n\t\t\t\n\t\t\tc = 0;\n\t\t\tfor (p = ulist; p; p = next) {\n\t\t\t\tnext = p->next;\n\t\t\t\tif (strncmp(p->ut.ut_line, ut.ut_line,\n\t\t\t\t    sizeof(ut.ut_line)) == 0) {\n\t\t\t\t\t\n\t\t\t\t\tif (c == 0) {\n\t\t\t\t\t\tquit = list(ctl, &ut, p->ut.ut_tv.tv_sec, R_NORMAL);\n\t\t\t\t\t\tc = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (p->next)\n\t\t\t\t\t\tp->next->prev = p->prev;\n\t\t\t\t\tif (p->prev)\n\t\t\t\t\t\tp->prev->next = p->next;\n\t\t\t\t\telse\n\t\t\t\t\t\tulist = p->next;\n\t\t\t\t\tfree(p);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (c == 0) {\n\t\t\t\tif (!lastboot) {\n\t\t\t\t\tc = R_NOW;\n\t\t\t\t\t\n\t\t\t\t\tif (is_phantom(ctl, &ut))\n\t\t\t\t\t\tc = R_PHANTOM;\n\t\t\t\t} else\n\t\t\t\t\tc = whydown;\n\t\t\t\tquit = list(ctl, &ut, lastboot, c);\n\t\t\t}\n\t\t\t\n\n\t\tcase DEAD_PROCESS:\n\t\t\t\n\t\t\tif (ut.ut_line[0] == 0)\n\t\t\t\tbreak;\n\t\t\tp = xmalloc(sizeof(struct utmplist));\n\t\t\tmemcpy(&p->ut, &ut, sizeof(struct utmpx));\n\t\t\tp->next  = ulist;\n\t\t\tp->prev  = NULL;\n\t\t\tif (ulist)\n\t\t\t\tulist->prev = p;\n\t\t\tulist = p;\n\t\t\tbreak;\n\n\t\tcase EMPTY:\n\t\tcase INIT_PROCESS:\n\t\tcase LOGIN_PROCESS:\n#ifdef ACCOUNTING\n\t\tcase ACCOUNTING:\n#endif\n\t\t\t\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\twarnx(\"unrecognized ut_type: %d\", ut.ut_type);\n\t\t}\n\n\t\t\n\t\tif (down) {\n\t\t\tlastboot = ut.ut_tv.tv_sec;\n\t\t\twhydown = (ut.ut_type == SHUTDOWN_TIME) ? R_DOWN : R_CRASH;\n\t\t\tfor (p = ulist; p; p = next) {\n\t\t\t\tnext = p->next;\n\t\t\t\tfree(p);\n\t\t\t}\n\t\t\tulist = NULL;\n\t\t\tdown = 0;\n\t\t}\n\t}\n\n\tif (ctl->time_fmt != LAST_TIMEFTM_NONE) {\n\t\tstruct last_timefmt *fmt;\n\t\tchar timestr[LAST_TIMESTAMP_LEN];\n\t\tchar *tmp = xstrdup(filename);\n\n\t\tfmt = &timefmts[ctl->time_fmt];\n\t\tif (time_formatter(fmt->in_fmt, timestr,\n\t\t\t\t   sizeof(timestr), &begintime) < 0)\n\t\t\terrx(EXIT_FAILURE, _(\"preallocation size exceeded\"));\n\t\tprintf(_(\"\\n%s begins %s\\n\"), basename(tmp), timestr);\n\t\tfree(tmp);\n\t}\n\n\tfclose(fp);\n\n\tfor (p = ulist; p; p = next) {\n\t\tnext = p->next;\n\t\tfree(p);\n\t}\n}\n\n#ifdef FUZZ_TARGET\n# include \"all-io.h\"\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\tstruct last_control ctl = {\n\t\t.showhost = TRUE,\n\t\t.name_len = LAST_LOGIN_LEN,\n\t\t.time_fmt = LAST_TIMEFTM_SHORT,\n\t\t.domain_len = LAST_DOMAIN_LEN,\n\t\t.boot_time = {\n\t\t\t.tv_sec = 1595978419,\n\t\t\t.tv_usec = 816074\n\t\t}\n\t};\n\tchar name[] = \"/tmp/test-last-fuzz.XXXXXX\";\n\tint fd;\n\n\tfd = mkstemp_cloexec(name);\n\tif (fd < 0)\n\t\terr(EXIT_FAILURE, \"mkstemp() failed\");\n\tif (write_all(fd, data, size) != 0)\n\t\terr(EXIT_FAILURE, \"write() failed\");\n\n\tprocess_wtmp_file(&ctl, name);\n\n", "Selected Statement": "if (!snprintf(dst, dlen, \"%02d:%02d\", tm.tm_hour, tm.tm_min))", "Function Input": {}, "Variable Values Before Statement": {"snprintf": "NULL", "dst": "NULL", "dlen": "NULL", "tm.tm_hour": "NULL", "tm.tm_min": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic void process_wtmp_file(const struct last_control *ctl,\n\t\t\t      const char *filename)\n{\n\tFILE *fp;\t\t\n\n\tstruct utmpx ut;\t\n\tstruct utmplist *ulist = NULL;\t\n\tstruct utmplist *p;\t\n\tstruct utmplist *next;\t\n\n\ttime_t lastboot = 0;\t\n\ttime_t lastrch = 0;\t\n\ttime_t lastdown;\t\n\ttime_t begintime;\t\n\tint whydown = 0;\t\n\n\tint c, x;\t\t\n\tstruct stat st;\t\t\n\tint quit = 0;\t\t\n\tint down = 0;\t\t\n\n#ifndef FUZZ_TARGET\n\ttime(&lastdown);\n#else\n\tlastdown = 1596001948;\n#endif\n\t\n\tlastdate = currentdate = lastrch = lastdown;\n\n#ifndef FUZZ_TARGET\n\t\n\tsignal(SIGINT, int_handler);\n\tsignal(SIGQUIT, quit_handler);\n#endif\n\n\t\n\tif ((fp = fopen(filename, \"r\")) == NULL)\n\t\terr(EXIT_FAILURE, _(\"cannot open %s\"), filename);\n\n\t\n\tsetvbuf(fp, NULL, _IOFBF, UCHUNKSIZE);\n\n\t\n\tif (uread(fp, &ut, NULL, filename) == 1)\n\t\tbegintime = ut.ut_tv.tv_sec;\n\telse {\n\t\tif (fstat(fileno(fp), &st) != 0)\n\t\t\terr(EXIT_FAILURE, _(\"stat of %s failed\"), filename);\n\t\tbegintime = st.st_ctime;\n\t\tquit = 1;\n\t}\n\n\t\n\turead(fp, NULL, NULL, filename);\n\n\t\n\twhile (!quit) {\n\n\t\tif (uread(fp, &ut, &quit, filename) != 1)\n\t\t\tbreak;\n\n\t\tif (ctl->since && ut.ut_tv.tv_sec < ctl->since)\n\t\t\tcontinue;\n\n\t\tif (ctl->until && ctl->until < ut.ut_tv.tv_sec)\n\t\t\tcontinue;\n\n\t\tlastdate = ut.ut_tv.tv_sec;\n\n\t\tif (ctl->lastb) {\n\t\t\tquit = list(ctl, &ut, ut.ut_tv.tv_sec, R_NORMAL);\n\t\t\tcontinue;\n\t\t}\n\n\t\t\n\t\tif (strncmp(ut.ut_line, \"~\", 1) == 0) {\n\t\t\tif (strncmp(ut.ut_user, \"shutdown\", 8) == 0)\n\t\t\t\tut.ut_type = SHUTDOWN_TIME;\n\t\t\telse if (strncmp(ut.ut_user, \"reboot\", 6) == 0)\n\t\t\t\tut.ut_type = BOOT_TIME;\n\t\t\telse if (strncmp(ut.ut_user, \"runlevel\", 8) == 0)\n\t\t\t\tut.ut_type = RUN_LVL;\n\t\t}\n#if 1 \n\t\t\n\t\telse {\n\t\t\tif (ut.ut_type != DEAD_PROCESS &&\n\t\t\t    ut.ut_user[0] && ut.ut_line[0] &&\n\t\t\t    strncmp(ut.ut_user, \"LOGIN\", 5) != 0)\n\t\t\t\tut.ut_type = USER_PROCESS;\n\t\t\t\n\t\t\tif (ut.ut_user[0] == 0)\n\t\t\t\tut.ut_type = DEAD_PROCESS;\n\n\t\t\t\n\t\t\tif (strncmp(ut.ut_user, \"date\", 4) == 0) {\n\t\t\t\tif (ut.ut_line[0] == '|')\n\t\t\t\t\tut.ut_type = OLD_TIME;\n\t\t\t\tif (ut.ut_line[0] == '{')\n\t\t\t\t\tut.ut_type = NEW_TIME;\n\t\t\t}\n\t\t}\n#endif\n\t\tswitch (ut.ut_type) {\n\t\tcase SHUTDOWN_TIME:\n\t\t\tif (ctl->extended) {\n\t\t\t\tstrcpy(ut.ut_line, \"system down\");\n\t\t\t\tquit = list(ctl, &ut, lastboot, R_NORMAL);\n\t\t\t}\n\t\t\tlastdown = lastrch = ut.ut_tv.tv_sec;\n\t\t\tdown = 1;\n\t\t\tbreak;\n\t\tcase OLD_TIME:\n\t\tcase NEW_TIME:\n\t\t\tif (ctl->extended) {\n\t\t\t\tstrcpy(ut.ut_line,\n\t\t\t\tut.ut_type == NEW_TIME ? \"new time\" :\n\t\t\t\t\t\"old time\");\n\t\t\t\tquit = list(ctl, &ut, lastdown, R_TIMECHANGE);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase BOOT_TIME:\n\t\t\tstrcpy(ut.ut_line, \"system boot\");\n\t\t\tif (lastdown > lastboot && lastdown != currentdate)\n\t\t\t\tquit = list(ctl, &ut, lastboot, R_REBOOT_CRASH);\n\t\t\telse\n\t\t\t\tquit = list(ctl, &ut, lastdown, R_REBOOT);\n\t\t\tlastboot = ut.ut_tv.tv_sec;\n\t\t\tdown = 1;\n\t\t\tbreak;\n\t\tcase RUN_LVL:\n\t\t\tx = ut.ut_pid & 255;\n\t\t\tif (ctl->extended) {\n\t\t\t\tsnprintf(ut.ut_line, sizeof(ut.ut_line), \"(to lvl %c)\", x);\n\t\t\t\tquit = list(ctl, &ut, lastrch, R_NORMAL);\n\t\t\t}\n\t\t\tif (x == '0' || x == '6') {\n\t\t\t\tlastdown = ut.ut_tv.tv_sec;\n\t\t\t\tdown = 1;\n\t\t\t\tut.ut_type = SHUTDOWN_TIME;\n\t\t\t}\n\t\t\tlastrch = ut.ut_tv.tv_sec;\n\t\t\tbreak;\n\n\t\tcase USER_PROCESS:\n\t\t\t\n\t\t\tc = 0;\n\t\t\tfor (p = ulist; p; p = next) {\n\t\t\t\tnext = p->next;\n\t\t\t\tif (strncmp(p->ut.ut_line, ut.ut_line,\n\t\t\t\t    sizeof(ut.ut_line)) == 0) {\n\t\t\t\t\t\n\t\t\t\t\tif (c == 0) {\n\t\t\t\t\t\tquit = list(ctl, &ut, p->ut.ut_tv.tv_sec, R_NORMAL);\n\t\t\t\t\t\tc = 1;\n\t\t\t\t\t}\n\t\t\t\t\tif (p->next)\n\t\t\t\t\t\tp->next->prev = p->prev;\n\t\t\t\t\tif (p->prev)\n\t\t\t\t\t\tp->prev->next = p->next;\n\t\t\t\t\telse\n\t\t\t\t\t\tulist = p->next;\n\t\t\t\t\tfree(p);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tif (c == 0) {\n\t\t\t\tif (!lastboot) {\n\t\t\t\t\tc = R_NOW;\n\t\t\t\t\t\n\t\t\t\t\tif (is_phantom(ctl, &ut))\n\t\t\t\t\t\tc = R_PHANTOM;\n\t\t\t\t} else\n\t\t\t\t\tc = whydown;\n\t\t\t\tquit = list(ctl, &ut, lastboot, c);\n\t\t\t}\n\t\t\t\n\n\t\tcase DEAD_PROCESS:\n\t\t\t\n\t\t\tif (ut.ut_line[0] == 0)\n\t\t\t\tbreak;\n\t\t\tp = xmalloc(sizeof(struct utmplist));\n\t\t\tmemcpy(&p->ut, &ut, sizeof(struct utmpx));\n\t\t\tp->next  = ulist;\n\t\t\tp->prev  = NULL;\n\t\t\tif (ulist)\n\t\t\t\tulist->prev = p;\n\t\t\tulist = p;\n\t\t\tbreak;\n\n\t\tcase EMPTY:\n\t\tcase INIT_PROCESS:\n\t\tcase LOGIN_PROCESS:\n#ifdef ACCOUNTING\n\t\tcase ACCOUNTING:\n#endif\n\t\t\t\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\twarnx(\"unrecognized ut_type: %d\", ut.ut_type);\n\t\t}\n\n\t\t\n\t\tif (down) {\n\t\t\tlastboot = ut.ut_tv.tv_sec;\n\t\t\twhydown = (ut.ut_type == SHUTDOWN_TIME) ? R_DOWN : R_CRASH;\n\t\t\tfor (p = ulist; p; p = next) {\n\t\t\t\tnext = p->next;\n\t\t\t\tfree(p);\n\t\t\t}\n\t\t\tulist = NULL;\n\t\t\tdown = 0;\n\t\t}\n\t}\n\n\tif (ctl->time_fmt != LAST_TIMEFTM_NONE) {\n\t\tstruct last_timefmt *fmt;\n\t\tchar timestr[LAST_TIMESTAMP_LEN];\n\t\tchar *tmp = xstrdup(filename);\n\n\t\tfmt = &timefmts[ctl->time_fmt];\n\t\tif (time_formatter(fmt->in_fmt, timestr,\n\t\t\t\t   sizeof(timestr), &begintime) < 0)\n\t\t\terrx(EXIT_FAILURE, _(\"preallocation size exceeded\"));\n\t\tprintf(_(\"\\n%s begins %s\\n\"), basename(tmp), timestr);\n\t\tfree(tmp);\n\t}\n\n\tfclose(fp);\n\n\tfor (p = ulist; p; p = next) {\n\t\tnext = p->next;\n\t\tfree(p);\n\t}\n}\n\n#ifdef FUZZ_TARGET\n# include \"all-io.h\"\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\tstruct last_control ctl = {\n\t\t.showhost = TRUE,\n\t\t.name_len = LAST_LOGIN_LEN,\n\t\t.time_fmt = LAST_TIMEFTM_SHORT,\n\t\t.domain_len = LAST_DOMAIN_LEN,\n\t\t.boot_time = {\n\t\t\t.tv_sec = 1595978419,\n\t\t\t.tv_usec = 816074\n\t\t}\n\t};\n\tchar name[] = \"/tmp/test-last-fuzz.XXXXXX\";\n\tint fd;\n\n\tfd = mkstemp_cloexec(name);\n\tif (fd < 0)\n\t\terr(EXIT_FAILURE, \"mkstemp() failed\");\n\tif (write_all(fd, data, size) != 0)\n\t\terr(EXIT_FAILURE, \"write() failed\");\n\n\tprocess_wtmp_file(&ctl, name);\n\n", "Selected Statement": "if (fread(buf, UCHUNKSIZE, 1, fp) != 1)", "Function Input": {}, "Variable Values Before Statement": {"fread": "NULL", "buf": "NULL", "UCHUNKSIZE": "NULL", "fp": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include <unistd.h>\n\nstatic int process_file(const char *name)\n{\n    int rc = -1;\n    blkid_probe pr = blkid_new_probe_from_filename(name);\n    if (pr != NULL) {\n        blkid_probe_enable_partitions(pr, TRUE);\n        blkid_probe_set_partitions_flags(pr, FALSE);\n        blkid_probe_enable_superblocks(pr, TRUE);\n        blkid_probe_set_superblocks_flags(pr, BLKID_SUBLKS_DEFAULT | BLKID_SUBLKS_FSINFO | BLKID_SUBLKS_MAGIC | BLKID_SUBLKS_VERSION | BLKID_SUBLKS_BADCSUM);\n        rc = blkid_do_safeprobe(pr) == -1 ? -1 : 0;\n    }\n    blkid_free_probe(pr);\n    return rc;\n}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n    int fd;\n    char name[] = \"/tmp/test-script-fuzz.XXXXXX\";\n\n    fd = mkostemp(name, O_RDWR|O_CREAT|O_EXCL|O_CLOEXEC);\n    if (fd == -1)\n        err(EXIT_FAILURE, \"mkostemp() failed\");\n\n    if (write(fd, data, size) != (ssize_t)size)\n        goto out;\n\n    process_file(name);\nout:\n", "Selected Statement": "if (fd == -1)", "Function Input": {"name": {"value": null}}, "Variable Values Before Statement": {"fd": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include <unistd.h>\n\nstatic int process_file(const char *name)\n{\n    int rc = -1;\n    blkid_probe pr = blkid_new_probe_from_filename(name);\n    if (pr != NULL) {\n        blkid_probe_enable_partitions(pr, TRUE);\n        blkid_probe_set_partitions_flags(pr, FALSE);\n        blkid_probe_enable_superblocks(pr, TRUE);\n        blkid_probe_set_superblocks_flags(pr, BLKID_SUBLKS_DEFAULT | BLKID_SUBLKS_FSINFO | BLKID_SUBLKS_MAGIC | BLKID_SUBLKS_VERSION | BLKID_SUBLKS_BADCSUM);\n        rc = blkid_do_safeprobe(pr) == -1 ? -1 : 0;\n    }\n    blkid_free_probe(pr);\n    return rc;\n}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n    int fd;\n    char name[] = \"/tmp/test-script-fuzz.XXXXXX\";\n\n    fd = mkostemp(name, O_RDWR|O_CREAT|O_EXCL|O_CLOEXEC);\n    if (fd == -1)\n        err(EXIT_FAILURE, \"mkostemp() failed\");\n\n    if (write(fd, data, size) != (ssize_t)size)\n        goto out;\n\n    process_file(name);\nout:\n", "Selected Statement": "if (write(fd, data, size) != (ssize_t)size)", "Function Input": {"name": {"value": null}}, "Variable Values Before Statement": {"write": "NULL", "fd": "NULL", "data": "NULL", "size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include <unistd.h>\n\nstatic int process_file(const char *name)\n{\n    int rc = -1;\n    blkid_probe pr = blkid_new_probe_from_filename(name);\n    if (pr != NULL) {\n        blkid_probe_enable_partitions(pr, TRUE);\n        blkid_probe_set_partitions_flags(pr, FALSE);\n        blkid_probe_enable_superblocks(pr, TRUE);\n        blkid_probe_set_superblocks_flags(pr, BLKID_SUBLKS_DEFAULT | BLKID_SUBLKS_FSINFO | BLKID_SUBLKS_MAGIC | BLKID_SUBLKS_VERSION | BLKID_SUBLKS_BADCSUM);\n        rc = blkid_do_safeprobe(pr) == -1 ? -1 : 0;\n    }\n    blkid_free_probe(pr);\n    return rc;\n}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n    int fd;\n    char name[] = \"/tmp/test-script-fuzz.XXXXXX\";\n\n    fd = mkostemp(name, O_RDWR|O_CREAT|O_EXCL|O_CLOEXEC);\n    if (fd == -1)\n        err(EXIT_FAILURE, \"mkostemp() failed\");\n\n    if (write(fd, data, size) != (ssize_t)size)\n        goto out;\n\n    process_file(name);\nout:\n", "Selected Statement": "if (pr != NULL)", "Function Input": {"name": {"value": null}}, "Variable Values Before Statement": {"pr": "blkid_probe"}, "Value After Statement Execution": "Yes", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * error.\n */\nblkid_probe blkid_new_probe_from_filename(const char *filename)\n{\n\tint fd;\n\tblkid_probe pr = NULL;\n\n\tfd = open(filename, O_RDONLY|O_CLOEXEC|O_NONBLOCK);\n\tif (fd < 0)\n\t\treturn NULL;\n\n\tpr = blkid_new_probe();\n\tif (!pr)\n\t\tgoto err;\n\n\tif (blkid_probe_set_device(pr, fd, 0, 0))\n\t\tgoto err;\n\n\tpr->flags |= BLKID_FL_PRIVATE_FD;\n\treturn pr;\nerr:\n\tclose(fd);\n\tblkid_free_probe(pr);\n\treturn NULL;\n", "Selected Statement": "if (!(pr->flags & BLKID_FL_OPAL_CHECKED))", "Function Input": {}, "Variable Values Before Statement": {"pr->flags": "NULL", "BLKID_FL_OPAL_CHECKED": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * error.\n */\nblkid_probe blkid_new_probe_from_filename(const char *filename)\n{\n\tint fd;\n\tblkid_probe pr = NULL;\n\n\tfd = open(filename, O_RDONLY|O_CLOEXEC|O_NONBLOCK);\n\tif (fd < 0)\n\t\treturn NULL;\n\n\tpr = blkid_new_probe();\n\tif (!pr)\n\t\tgoto err;\n\n\tif (blkid_probe_set_device(pr, fd, 0, 0))\n\t\tgoto err;\n\n\tpr->flags |= BLKID_FL_PRIVATE_FD;\n\treturn pr;\nerr:\n\tclose(fd);\n\tblkid_free_probe(pr);\n\treturn NULL;\n", "Selected Statement": "if (!strcmp(id->name, *n))", "Function Input": {}, "Variable Values Before Statement": {"strcmp": "NULL", "id->name": "NULL", "n": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: 0 on success, or -1 in case of error.\n */\nint blkid_probe_enable_partitions(blkid_probe pr, int enable)\n{\n\tpr->chains[BLKID_CHAIN_PARTS].enabled = enable;\n", "Selected Statement": "if (!v)", "Function Input": {"enable": {"value": "32767"}, "pr": {"value": "0xff0320"}}, "Variable Values Before Statement": {"v": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: 0 on success, or -1 in case of error.\n */\nint blkid_probe_enable_partitions(blkid_probe pr, int enable)\n{\n\tpr->chains[BLKID_CHAIN_PARTS].enabled = enable;\n", "Selected Statement": "if (rc == BLKID_PROBE_OK && mag && chn && !chn->binary)", "Function Input": {"enable": {"value": "32767"}, "pr": {"value": "0xff0320"}}, "Variable Values Before Statement": {"rc": "NULL", "BLKID_PROBE_OK": "NULL", "mag": "NULL", "chn": "NULL", "chn->binary": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: 0 on success, or -1 in case of error.\n */\nint blkid_probe_enable_superblocks(blkid_probe pr, int enable)\n{\n\tpr->chains[BLKID_CHAIN_SUBLKS].enabled = enable;\n", "Selected Statement": "if (flag & BLKID_FLTR_NOTIN)", "Function Input": {"enable": {"value": "0"}, "pr": {"value": "0xff0320"}}, "Variable Values Before Statement": {"flag": "NULL", "BLKID_FLTR_NOTIN": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: 0 on success, or -1 in case of error.\n */\nint blkid_probe_enable_superblocks(blkid_probe pr, int enable)\n{\n\tpr->chains[BLKID_CHAIN_SUBLKS].enabled = enable;\n", "Selected Statement": "if (id->minsz && (unsigned)id->minsz > pr->size)", "Function Input": {"enable": {"value": "0"}, "pr": {"value": "0xff0320"}}, "Variable Values Before Statement": {"id->minsz": "NULL", "pr->size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic void topology_free(blkid_probe pr __attribute__((__unused__)),\n\t\t\t  void *data)\n{\n\tfree(data);\n", "Selected Statement": "if (!chn)", "Function Input": {"pr": {"value": "0xff0400"}}, "Variable Values Before Statement": {"chn": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic void topology_free(blkid_probe pr __attribute__((__unused__)),\n\t\t\t  void *data)\n{\n\tfree(data);\n", "Selected Statement": "if (chn->binary)", "Function Input": {"pr": {"value": "0xff0400"}}, "Variable Values Before Statement": {"chn->binary": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * allocates BSD label driver\n */\nstruct fdisk_label *fdisk_new_bsd_label(struct fdisk_context *cxt __attribute__ ((__unused__)))\n{\n\tstruct fdisk_label *lb;\n\tstruct fdisk_bsd_label *bsd;\n\n\tbsd = calloc(1, sizeof(*bsd));\n\tif (!bsd)\n\t\treturn NULL;\n\n\t\n\tlb = (struct fdisk_label *) bsd;\n\tlb->name = \"bsd\";\n\tlb->id = FDISK_DISKLABEL_BSD;\n\tlb->op = &bsd_operations;\n\tlb->parttypes = bsd_fstypes;\n\tlb->nparttypes = ARRAY_SIZE(bsd_fstypes) - 1;\n\n\tlb->fields = bsd_fields;\n\tlb->nfields = ARRAY_SIZE(bsd_fields);\n\n\tlb->flags |= FDISK_LABEL_FL_INCHARS_PARTNO;\n\tlb->flags |= FDISK_LABEL_FL_REQUIRE_GEOMETRY;\n\n\t\n\treturn (struct fdisk_label *) bsd;\n", "Selected Statement": "if (!rc)", "Function Input": {}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * allocates BSD label driver\n */\nstruct fdisk_label *fdisk_new_bsd_label(struct fdisk_context *cxt __attribute__ ((__unused__)))\n{\n\tstruct fdisk_label *lb;\n\tstruct fdisk_bsd_label *bsd;\n\n\tbsd = calloc(1, sizeof(*bsd));\n\tif (!bsd)\n\t\treturn NULL;\n\n\t\n\tlb = (struct fdisk_label *) bsd;\n\tlb->name = \"bsd\";\n\tlb->id = FDISK_DISKLABEL_BSD;\n\tlb->op = &bsd_operations;\n\tlb->parttypes = bsd_fstypes;\n\tlb->nparttypes = ARRAY_SIZE(bsd_fstypes) - 1;\n\n\tlb->fields = bsd_fields;\n\tlb->nfields = ARRAY_SIZE(bsd_fields);\n\n\tlb->flags |= FDISK_LABEL_FL_INCHARS_PARTNO;\n\tlb->flags |= FDISK_LABEL_FL_REQUIRE_GEOMETRY;\n\n\t\n\treturn (struct fdisk_label *) bsd;\n", "Selected Statement": "if (rc)", "Function Input": {}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: newly allocated tab struct.\n */\nstruct libmnt_table *mnt_new_table(void)\n{\n\tstruct libmnt_table *tb = NULL;\n\n\ttb = calloc(1, sizeof(*tb));\n\tif (!tb)\n\t\treturn NULL;\n\n\tDBG(TAB, ul_debugobj(tb, \"alloc\"));\n\ttb->refcount = 1;\n\tINIT_LIST_HEAD(&tb->ents);\n\treturn tb;\n", "Selected Statement": "if (default_id == UINT64_MAX)", "Function Input": {"tb": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"fmt": {"type_category": "int", "concrete_type": "int", "value": "1220708680"}, "nents": {"type_category": "int", "concrete_type": "int", "value": "1668857989"}, "refcount": {"type_category": "int", "concrete_type": "int", "value": "139103049"}, "comms": {"type_category": "int", "concrete_type": "int", "value": "675515209"}, "comm_intro": {"type_category": "string", "concrete_type": "string", "value": "0x76ca394818728b41 <error: Cannot access memory at address 0x76ca394818728b41>"}, "comm_tail": {"type_category": "string", "concrete_type": "string", "value": "0xd6af0f48ca29480a <error: Cannot access memory at address 0xd6af0f48ca29480a>"}, "cache": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7fcd82a", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x491c4a8b41d00148\n", "message": "Cannot access memory at address 0x491c4a8b41d00148"}}, "errcb": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7fcd832", "value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3941128b4120738b\n", "message": "Cannot access memory at address 0x3941128b4120738b"}}, "fltrcb": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7fcd83a", "value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3d48e8d348b775d5\n", "message": "Cannot access memory at address 0x3d48e8d348b775d5"}}, "fltrcb_data": {"type_category": "pointer", "concrete_type": "VOID"}, "noautofs": {"type_category": "int", "concrete_type": "int", "value": "-905958072"}, "ents": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"next": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7fcd852", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x773b9ac9ff3d4801\n", "message": "Cannot access memory at address 0x773b9ac9ff3d4801"}}, "prev": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7fcd85a", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x24348949d60148ef\n", "message": "Cannot access memory at address 0x24348949d60148ef"}}}}, "userdata": {"type_category": "pointer", "concrete_type": "VOID"}}}}}, "Variable Values Before Statement": {"default_id": "NULL", "UINT64_MAX": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: newly allocated tab struct.\n */\nstruct libmnt_table *mnt_new_table(void)\n{\n\tstruct libmnt_table *tb = NULL;\n\n\ttb = calloc(1, sizeof(*tb));\n\tif (!tb)\n\t\treturn NULL;\n\n\tDBG(TAB, ul_debugobj(tb, \"alloc\"));\n\ttb->refcount = 1;\n\tINIT_LIST_HEAD(&tb->ents);\n\treturn tb;\n", "Selected Statement": "if (p && strcmp(cn, p) == 0)", "Function Input": {"tb": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"fmt": {"type_category": "int", "concrete_type": "int", "value": "1220708680"}, "nents": {"type_category": "int", "concrete_type": "int", "value": "1668857989"}, "refcount": {"type_category": "int", "concrete_type": "int", "value": "139103049"}, "comms": {"type_category": "int", "concrete_type": "int", "value": "675515209"}, "comm_intro": {"type_category": "string", "concrete_type": "string", "value": "0x76ca394818728b41 <error: Cannot access memory at address 0x76ca394818728b41>"}, "comm_tail": {"type_category": "string", "concrete_type": "string", "value": "0xd6af0f48ca29480a <error: Cannot access memory at address 0xd6af0f48ca29480a>"}, "cache": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7fcd82a", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x491c4a8b41d00148\n", "message": "Cannot access memory at address 0x491c4a8b41d00148"}}, "errcb": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7fcd832", "value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3941128b4120738b\n", "message": "Cannot access memory at address 0x3941128b4120738b"}}, "fltrcb": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7fcd83a", "value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3d48e8d348b775d5\n", "message": "Cannot access memory at address 0x3d48e8d348b775d5"}}, "fltrcb_data": {"type_category": "pointer", "concrete_type": "VOID"}, "noautofs": {"type_category": "int", "concrete_type": "int", "value": "-905958072"}, "ents": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"next": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7fcd852", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x773b9ac9ff3d4801\n", "message": "Cannot access memory at address 0x773b9ac9ff3d4801"}}, "prev": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7fcd85a", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x24348949d60148ef\n", "message": "Cannot access memory at address 0x24348949d60148ef"}}}}, "userdata": {"type_category": "pointer", "concrete_type": "VOID"}}}}}, "Variable Values Before Statement": {"p": "NULL", "strcmp": "NULL", "cn": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: 0 on success, negative number in case of error.\n */\nint mnt_table_parse_stream(struct libmnt_table *tb, FILE *f, const char *filename)\n{\n\tint rc = -1;\n\tint flags = 0;\n\tpid_t tid = -1;\n\tstruct libmnt_parser pa = { .line = 0 };\n\n\tassert(tb);\n\tassert(f);\n\tassert(filename);\n\n\tDBG(TAB, ul_debugobj(tb, \"%s: start parsing [entries=%d, filter=%s]\",\n\t\t\t\tfilename, mnt_table_get_nents(tb),\n\t\t\t\ttb->fltrcb ? \"yes\" : \"not\"));\n\n\tpa.filename = filename;\n\tpa.f = f;\n\n\t\n\tif (tb->fmt == MNT_FMT_SWAPS)\n\t\tflags = MNT_FS_SWAP;\n\telse if (filename && strcmp(filename, _PATH_PROC_MOUNTS) == 0)\n\t\tflags = MNT_FS_KERNEL;\n\n\tdo {\n\t\tstruct libmnt_fs *fs;\n\n\t\tif (feof(f)) {\n\t\t\tDBG(TAB, ul_debugobj(tb, \"end-of-file\"));\n\t\t\tbreak;\n\t\t}\n\t\tfs = mnt_new_fs();\n\t\tif (!fs)\n\t\t\tgoto err;\n\n\t\t\n\t\trc = mnt_table_parse_next(&pa, tb, fs);\n\n\t\tif (rc == 0 && tb->fltrcb && tb->fltrcb(fs, tb->fltrcb_data))\n\t\t\trc = 1;\t\n\n\t\tif (rc == 0 && mnt_table_is_noautofs(tb)) {\n\t\t\tconst char *fstype = mnt_fs_get_fstype(fs);\n\n\t\t\tif (fstype && strcmp(fstype, \"autofs\") == 0 &&\n\t\t\t    mnt_fs_get_option(fs, \"ignore\", NULL, NULL) == 0)\n\t\t\t\trc = 1; \n\t\t}\n\n\t\t\n\t\tif (rc == 0) {\n\t\t\trc = mnt_table_add_fs(tb, fs);\n\t\t\tfs->flags |= flags;\n\n\t\t\tif (rc == 0 && tb->fmt == MNT_FMT_MOUNTINFO) {\n\t\t\t\trc = kernel_fs_postparse(&pa, tb, fs, &tid);\n\t\t\t\tif (rc)\n\t\t\t\t\tmnt_table_remove_fs(tb, fs);\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tmnt_unref_fs(fs);\n\n\t\t\n\t\tif (rc > 0) {\n\t\t\tDBG(TAB, ul_debugobj(tb, \"recoverable error (continue)\"));\n\t\t\tcontinue;\n\t\t}\n\n\t\t\n\t\tif (rc < 0 && !feof(f)) {\n\t\t\tDBG(TAB, ul_debugobj(tb, \"fatal error\"));\n\t\t\tgoto err;\n\t\t}\n\t} while (1);\n\n\tDBG(TAB, ul_debugobj(tb, \"%s: stop parsing (%d entries)\",\n\t\t\t\tfilename, mnt_table_get_nents(tb)));\n\tparser_cleanup(&pa);\n\treturn 0;\nerr:\n\tDBG(TAB, ul_debugobj(tb, \"%s: parse error (rc=%d)\", filename, rc));\n\tparser_cleanup(&pa);\n\treturn rc;\n", "Selected Statement": "if (rc > 0)", "Function Input": {}, "Variable Values Before Statement": {"rc": "int"}, "Value After Statement Execution": "Yes", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: 0 on success, negative number in case of error.\n */\nint mnt_table_parse_stream(struct libmnt_table *tb, FILE *f, const char *filename)\n{\n\tint rc = -1;\n\tint flags = 0;\n\tpid_t tid = -1;\n\tstruct libmnt_parser pa = { .line = 0 };\n\n\tassert(tb);\n\tassert(f);\n\tassert(filename);\n\n\tDBG(TAB, ul_debugobj(tb, \"%s: start parsing [entries=%d, filter=%s]\",\n\t\t\t\tfilename, mnt_table_get_nents(tb),\n\t\t\t\ttb->fltrcb ? \"yes\" : \"not\"));\n\n\tpa.filename = filename;\n\tpa.f = f;\n\n\t\n\tif (tb->fmt == MNT_FMT_SWAPS)\n\t\tflags = MNT_FS_SWAP;\n\telse if (filename && strcmp(filename, _PATH_PROC_MOUNTS) == 0)\n\t\tflags = MNT_FS_KERNEL;\n\n\tdo {\n\t\tstruct libmnt_fs *fs;\n\n\t\tif (feof(f)) {\n\t\t\tDBG(TAB, ul_debugobj(tb, \"end-of-file\"));\n\t\t\tbreak;\n\t\t}\n\t\tfs = mnt_new_fs();\n\t\tif (!fs)\n\t\t\tgoto err;\n\n\t\t\n\t\trc = mnt_table_parse_next(&pa, tb, fs);\n\n\t\tif (rc == 0 && tb->fltrcb && tb->fltrcb(fs, tb->fltrcb_data))\n\t\t\trc = 1;\t\n\n\t\tif (rc == 0 && mnt_table_is_noautofs(tb)) {\n\t\t\tconst char *fstype = mnt_fs_get_fstype(fs);\n\n\t\t\tif (fstype && strcmp(fstype, \"autofs\") == 0 &&\n\t\t\t    mnt_fs_get_option(fs, \"ignore\", NULL, NULL) == 0)\n\t\t\t\trc = 1; \n\t\t}\n\n\t\t\n\t\tif (rc == 0) {\n\t\t\trc = mnt_table_add_fs(tb, fs);\n\t\t\tfs->flags |= flags;\n\n\t\t\tif (rc == 0 && tb->fmt == MNT_FMT_MOUNTINFO) {\n\t\t\t\trc = kernel_fs_postparse(&pa, tb, fs, &tid);\n\t\t\t\tif (rc)\n\t\t\t\t\tmnt_table_remove_fs(tb, fs);\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tmnt_unref_fs(fs);\n\n\t\t\n\t\tif (rc > 0) {\n\t\t\tDBG(TAB, ul_debugobj(tb, \"recoverable error (continue)\"));\n\t\t\tcontinue;\n\t\t}\n\n\t\t\n\t\tif (rc < 0 && !feof(f)) {\n\t\t\tDBG(TAB, ul_debugobj(tb, \"fatal error\"));\n\t\t\tgoto err;\n\t\t}\n\t} while (1);\n\n\tDBG(TAB, ul_debugobj(tb, \"%s: stop parsing (%d entries)\",\n\t\t\t\tfilename, mnt_table_get_nents(tb)));\n\tparser_cleanup(&pa);\n\treturn 0;\nerr:\n\tDBG(TAB, ul_debugobj(tb, \"%s: parse error (rc=%d)\", filename, rc));\n\tparser_cleanup(&pa);\n\treturn rc;\n", "Selected Statement": "if (feof(f))", "Function Input": {}, "Variable Values Before Statement": {"feof": "NULL", "f": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: 0 on success, negative number in case of error.\n */\nint mnt_table_parse_stream(struct libmnt_table *tb, FILE *f, const char *filename)\n{\n\tint rc = -1;\n\tint flags = 0;\n\tpid_t tid = -1;\n\tstruct libmnt_parser pa = { .line = 0 };\n\n\tassert(tb);\n\tassert(f);\n\tassert(filename);\n\n\tDBG(TAB, ul_debugobj(tb, \"%s: start parsing [entries=%d, filter=%s]\",\n\t\t\t\tfilename, mnt_table_get_nents(tb),\n\t\t\t\ttb->fltrcb ? \"yes\" : \"not\"));\n\n\tpa.filename = filename;\n\tpa.f = f;\n\n\t\n\tif (tb->fmt == MNT_FMT_SWAPS)\n\t\tflags = MNT_FS_SWAP;\n\telse if (filename && strcmp(filename, _PATH_PROC_MOUNTS) == 0)\n\t\tflags = MNT_FS_KERNEL;\n\n\tdo {\n\t\tstruct libmnt_fs *fs;\n\n\t\tif (feof(f)) {\n\t\t\tDBG(TAB, ul_debugobj(tb, \"end-of-file\"));\n\t\t\tbreak;\n\t\t}\n\t\tfs = mnt_new_fs();\n\t\tif (!fs)\n\t\t\tgoto err;\n\n\t\t\n\t\trc = mnt_table_parse_next(&pa, tb, fs);\n\n\t\tif (rc == 0 && tb->fltrcb && tb->fltrcb(fs, tb->fltrcb_data))\n\t\t\trc = 1;\t\n\n\t\tif (rc == 0 && mnt_table_is_noautofs(tb)) {\n\t\t\tconst char *fstype = mnt_fs_get_fstype(fs);\n\n\t\t\tif (fstype && strcmp(fstype, \"autofs\") == 0 &&\n\t\t\t    mnt_fs_get_option(fs, \"ignore\", NULL, NULL) == 0)\n\t\t\t\trc = 1; \n\t\t}\n\n\t\t\n\t\tif (rc == 0) {\n\t\t\trc = mnt_table_add_fs(tb, fs);\n\t\t\tfs->flags |= flags;\n\n\t\t\tif (rc == 0 && tb->fmt == MNT_FMT_MOUNTINFO) {\n\t\t\t\trc = kernel_fs_postparse(&pa, tb, fs, &tid);\n\t\t\t\tif (rc)\n\t\t\t\t\tmnt_table_remove_fs(tb, fs);\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tmnt_unref_fs(fs);\n\n\t\t\n\t\tif (rc > 0) {\n\t\t\tDBG(TAB, ul_debugobj(tb, \"recoverable error (continue)\"));\n\t\t\tcontinue;\n\t\t}\n\n\t\t\n\t\tif (rc < 0 && !feof(f)) {\n\t\t\tDBG(TAB, ul_debugobj(tb, \"fatal error\"));\n\t\t\tgoto err;\n\t\t}\n\t} while (1);\n\n\tDBG(TAB, ul_debugobj(tb, \"%s: stop parsing (%d entries)\",\n\t\t\t\tfilename, mnt_table_get_nents(tb)));\n\tparser_cleanup(&pa);\n\treturn 0;\nerr:\n\tDBG(TAB, ul_debugobj(tb, \"%s: parse error (rc=%d)\", filename, rc));\n\tparser_cleanup(&pa);\n\treturn rc;\n", "Selected Statement": "if (!*p)", "Function Input": {}, "Variable Values Before Statement": {"p": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: 0 on success, negative number in case of error.\n */\nint mnt_table_parse_stream(struct libmnt_table *tb, FILE *f, const char *filename)\n{\n\tint rc = -1;\n\tint flags = 0;\n\tpid_t tid = -1;\n\tstruct libmnt_parser pa = { .line = 0 };\n\n\tassert(tb);\n\tassert(f);\n\tassert(filename);\n\n\tDBG(TAB, ul_debugobj(tb, \"%s: start parsing [entries=%d, filter=%s]\",\n\t\t\t\tfilename, mnt_table_get_nents(tb),\n\t\t\t\ttb->fltrcb ? \"yes\" : \"not\"));\n\n\tpa.filename = filename;\n\tpa.f = f;\n\n\t\n\tif (tb->fmt == MNT_FMT_SWAPS)\n\t\tflags = MNT_FS_SWAP;\n\telse if (filename && strcmp(filename, _PATH_PROC_MOUNTS) == 0)\n\t\tflags = MNT_FS_KERNEL;\n\n\tdo {\n\t\tstruct libmnt_fs *fs;\n\n\t\tif (feof(f)) {\n\t\t\tDBG(TAB, ul_debugobj(tb, \"end-of-file\"));\n\t\t\tbreak;\n\t\t}\n\t\tfs = mnt_new_fs();\n\t\tif (!fs)\n\t\t\tgoto err;\n\n\t\t\n\t\trc = mnt_table_parse_next(&pa, tb, fs);\n\n\t\tif (rc == 0 && tb->fltrcb && tb->fltrcb(fs, tb->fltrcb_data))\n\t\t\trc = 1;\t\n\n\t\tif (rc == 0 && mnt_table_is_noautofs(tb)) {\n\t\t\tconst char *fstype = mnt_fs_get_fstype(fs);\n\n\t\t\tif (fstype && strcmp(fstype, \"autofs\") == 0 &&\n\t\t\t    mnt_fs_get_option(fs, \"ignore\", NULL, NULL) == 0)\n\t\t\t\trc = 1; \n\t\t}\n\n\t\t\n\t\tif (rc == 0) {\n\t\t\trc = mnt_table_add_fs(tb, fs);\n\t\t\tfs->flags |= flags;\n\n\t\t\tif (rc == 0 && tb->fmt == MNT_FMT_MOUNTINFO) {\n\t\t\t\trc = kernel_fs_postparse(&pa, tb, fs, &tid);\n\t\t\t\tif (rc)\n\t\t\t\t\tmnt_table_remove_fs(tb, fs);\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tmnt_unref_fs(fs);\n\n\t\t\n\t\tif (rc > 0) {\n\t\t\tDBG(TAB, ul_debugobj(tb, \"recoverable error (continue)\"));\n\t\t\tcontinue;\n\t\t}\n\n\t\t\n\t\tif (rc < 0 && !feof(f)) {\n\t\t\tDBG(TAB, ul_debugobj(tb, \"fatal error\"));\n\t\t\tgoto err;\n\t\t}\n\t} while (1);\n\n\tDBG(TAB, ul_debugobj(tb, \"%s: stop parsing (%d entries)\",\n\t\t\t\tfilename, mnt_table_get_nents(tb)));\n\tparser_cleanup(&pa);\n\treturn 0;\nerr:\n\tDBG(TAB, ul_debugobj(tb, \"%s: parse error (rc=%d)\", filename, rc));\n\tparser_cleanup(&pa);\n\treturn rc;\n", "Selected Statement": "if (!fs->vfs_optstr)", "Function Input": {}, "Variable Values Before Statement": {"fs->vfs_optstr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: newly allocated struct libmnt_fs.\n */\nstruct libmnt_fs *mnt_new_fs(void)\n{\n\tstruct libmnt_fs *fs = calloc(1, sizeof(*fs));\n\n\tif (!fs)\n\t\treturn NULL;\n\n\tfs->refcount = 1;\n\tINIT_LIST_HEAD(&fs->ents);\n\tDBG(FS, ul_debugobj(fs, \"alloc\"));\n\treturn fs;\n", "Selected Statement": "if (value)", "Function Input": {"fs": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"ents": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"next": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x1055460", "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"next": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x1050a5e", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3339326363303330\n", "message": "Cannot access memory at address 0x3339326363303330"}}, "prev": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x1050a66", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3938383033306136\n", "message": "Cannot access memory at address 0x3938383033306136"}}}}}, "prev": {"type_category": "pointer", "concrete_type": "NULL"}}}, "tab": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x1055470", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x20\n", "message": "Cannot access memory at address 0x20"}}, "refcount": {"type_category": "int", "concrete_type": "int", "value": "401"}, "opts_age": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "optlist": {"type_category": "pointer", "concrete_type": "NULL"}, "id": {"type_category": "int", "concrete_type": "int", "value": "17088528"}, "parent": {"type_category": "int", "concrete_type": "int", "value": "0"}, "devno": {"type_category": "unknown", "concrete_type": "dev_t", "value": "0"}, "bindsrc": {"type_category": "string", "concrete_type": "NULL"}, "source": {"type_category": "string", "concrete_type": "NULL"}, "tagname": {"type_category": "string", "concrete_type": "NULL"}, "tagval": {"type_category": "string", "concrete_type": "NULL"}, "root": {"type_category": "string", "concrete_type": "NULL"}, "target": {"type_category": "string", "concrete_type": "NULL"}, "fstype": {"type_category": "string", "concrete_type": "NULL"}, "optstr": {"type_category": "string", "concrete_type": "NULL"}, "vfs_optstr": {"type_category": "string", "concrete_type": "NULL"}, "opt_fields": {"type_category": "string", "concrete_type": "NULL"}, "fs_optstr": {"type_category": "string", "concrete_type": "NULL"}, "user_optstr": {"type_category": "string", "concrete_type": "NULL"}, "attrs": {"type_category": "string", "concrete_type": "NULL"}, "freq": {"type_category": "int", "concrete_type": "int", "value": "0"}, "passno": {"type_category": "int", "concrete_type": "int", "value": "0"}, "swaptype": {"type_category": "string", "concrete_type": "NULL"}, "size": {"type_category": "unknown", "concrete_type": "off_t", "value": "0"}, "usedsize": {"type_category": "unknown", "concrete_type": "off_t", "value": "0"}, "priority": {"type_category": "int", "concrete_type": "int", "value": "0"}, "flags": {"type_category": "int", "concrete_type": "int", "value": "0"}, "tid": {"type_category": "unknown", "concrete_type": "pid_t", "value": "0"}, "comment": {"type_category": "string", "concrete_type": "NULL"}, "userdata": {"type_category": "pointer", "concrete_type": "NULL"}}}}}, "Variable Values Before Statement": {"value": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: newly allocated struct libmnt_fs.\n */\nstruct libmnt_fs *mnt_new_fs(void)\n{\n\tstruct libmnt_fs *fs = calloc(1, sizeof(*fs));\n\n\tif (!fs)\n\t\treturn NULL;\n\n\tfs->refcount = 1;\n\tINIT_LIST_HEAD(&fs->ents);\n\tDBG(FS, ul_debugobj(fs, \"alloc\"));\n\treturn fs;\n", "Selected Statement": "if (fs->optstr)", "Function Input": {"fs": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"ents": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"next": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x1055460", "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"next": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x1050a5e", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3339326363303330\n", "message": "Cannot access memory at address 0x3339326363303330"}}, "prev": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x1050a66", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3938383033306136\n", "message": "Cannot access memory at address 0x3938383033306136"}}}}}, "prev": {"type_category": "pointer", "concrete_type": "NULL"}}}, "tab": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x1055470", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x20\n", "message": "Cannot access memory at address 0x20"}}, "refcount": {"type_category": "int", "concrete_type": "int", "value": "401"}, "opts_age": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "optlist": {"type_category": "pointer", "concrete_type": "NULL"}, "id": {"type_category": "int", "concrete_type": "int", "value": "17088528"}, "parent": {"type_category": "int", "concrete_type": "int", "value": "0"}, "devno": {"type_category": "unknown", "concrete_type": "dev_t", "value": "0"}, "bindsrc": {"type_category": "string", "concrete_type": "NULL"}, "source": {"type_category": "string", "concrete_type": "NULL"}, "tagname": {"type_category": "string", "concrete_type": "NULL"}, "tagval": {"type_category": "string", "concrete_type": "NULL"}, "root": {"type_category": "string", "concrete_type": "NULL"}, "target": {"type_category": "string", "concrete_type": "NULL"}, "fstype": {"type_category": "string", "concrete_type": "NULL"}, "optstr": {"type_category": "string", "concrete_type": "NULL"}, "vfs_optstr": {"type_category": "string", "concrete_type": "NULL"}, "opt_fields": {"type_category": "string", "concrete_type": "NULL"}, "fs_optstr": {"type_category": "string", "concrete_type": "NULL"}, "user_optstr": {"type_category": "string", "concrete_type": "NULL"}, "attrs": {"type_category": "string", "concrete_type": "NULL"}, "freq": {"type_category": "int", "concrete_type": "int", "value": "0"}, "passno": {"type_category": "int", "concrete_type": "int", "value": "0"}, "swaptype": {"type_category": "string", "concrete_type": "NULL"}, "size": {"type_category": "unknown", "concrete_type": "off_t", "value": "0"}, "usedsize": {"type_category": "unknown", "concrete_type": "off_t", "value": "0"}, "priority": {"type_category": "int", "concrete_type": "int", "value": "0"}, "flags": {"type_category": "int", "concrete_type": "int", "value": "0"}, "tid": {"type_category": "unknown", "concrete_type": "pid_t", "value": "0"}, "comment": {"type_category": "string", "concrete_type": "NULL"}, "userdata": {"type_category": "pointer", "concrete_type": "NULL"}}}}}, "Variable Values Before Statement": {"fs->optstr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns mallocated buffer or NULL in case of error.\n */\nchar *unmangle(const char *s, const char **end)\n{\n\tchar *buf;\n\tconst char *e;\n\tsize_t sz;\n\n\tif (!s)\n\t\treturn NULL;\n\n\te = skip_nonspaces(s);\n\tsz = e - s + 1;\n\n\tif (end)\n\t\t*end = e;\n\tif (e == s)\n\t\treturn NULL;\t\n\n\tbuf = malloc(sz);\n\tif (!buf)\n\t\treturn NULL;\n\n\tunmangle_to_buffer(s, buf, sz);\n\treturn buf;\n", "Selected Statement": "if (!strcmp(argv[1], \"--mangle\"))", "Function Input": {"buf": {"value": "0x655800 <fuzzer::TPC> \"\""}, "s": {"value": "0x1055340 \"\\210$\\255\\373\""}}, "Variable Values Before Statement": {"strcmp": "NULL", "argv": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns mallocated buffer or NULL in case of error.\n */\nchar *unmangle(const char *s, const char **end)\n{\n\tchar *buf;\n\tconst char *e;\n\tsize_t sz;\n\n\tif (!s)\n\t\treturn NULL;\n\n\te = skip_nonspaces(s);\n\tsz = e - s + 1;\n\n\tif (end)\n\t\t*end = e;\n\tif (e == s)\n\t\treturn NULL;\t\n\n\tbuf = malloc(sz);\n\tif (!buf)\n\t\treturn NULL;\n\n\tunmangle_to_buffer(s, buf, sz);\n\treturn buf;\n", "Selected Statement": "if (!s)", "Function Input": {"buf": {"value": "0x655800 <fuzzer::TPC> \"\""}, "s": {"value": "0x1055340 \"\\210$\\255\\373\""}}, "Variable Values Before Statement": {"s": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns mallocated buffer or NULL in case of error.\n */\nchar *unmangle(const char *s, const char **end)\n{\n\tchar *buf;\n\tconst char *e;\n\tsize_t sz;\n\n\tif (!s)\n\t\treturn NULL;\n\n\te = skip_nonspaces(s);\n\tsz = e - s + 1;\n\n\tif (end)\n\t\t*end = e;\n\tif (e == s)\n\t\treturn NULL;\t\n\n\tbuf = malloc(sz);\n\tif (!buf)\n\t\treturn NULL;\n\n\tunmangle_to_buffer(s, buf, sz);\n\treturn buf;\n", "Selected Statement": "if (end)", "Function Input": {"buf": {"value": "0x655800 <fuzzer::TPC> \"\""}, "s": {"value": "0x1055340 \"\\210$\\255\\373\""}}, "Variable Values Before Statement": {"end": "0x1056ca0 \"^\""}, "Value After Statement Execution": "Yes", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns 0 on success, and -1 on failure.\n */\nint blkid_parse_tag_string(const char *token, char **ret_type, char **ret_val)\n{\n\tchar *name, *value, *cp;\n\n\tDBG(TAG, ul_debug(\"trying to parse '%s' as a tag\", token));\n\n\tif (!token || !(cp = strchr(token, '=')))\n\t\treturn -1;\n\n\tname = strdup(token);\n\tif (!name)\n\t\treturn -1;\n\tvalue = name + (cp - token);\n\t*value++ = '\\0';\n\tif (*value == '\"' || *value == '\\'') {\n\t\tchar c = *value++;\n\t\tif (!(cp = strrchr(value, c)))\n\t\t\tgoto errout; \n\t\t*cp = '\\0';\n\t}\n\n\tif (ret_val) {\n\t\tvalue = *value ? strdup(value) : NULL;\n\t\tif (!value)\n\t\t\tgoto errout;\n\t\t*ret_val = value;\n\t}\n\n\tif (ret_type)\n\t\t*ret_type = name;\n\telse\n\t\tfree(name);\n\n\treturn 0;\n\nerrout:\n\tDBG(TAG, ul_debug(\"parse error: '%s'\", token));\n\tfree(name);\n\treturn -1;\n", "Selected Statement": "if (!token || !(cp = strchr(token, '=')))", "Function Input": {}, "Variable Values Before Statement": {"token": "0x105b490 \"^\"", "cp": "NULL", "strchr": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns 0 on success, and -1 on failure.\n */\nint blkid_parse_tag_string(const char *token, char **ret_type, char **ret_val)\n{\n\tchar *name, *value, *cp;\n\n\tDBG(TAG, ul_debug(\"trying to parse '%s' as a tag\", token));\n\n\tif (!token || !(cp = strchr(token, '=')))\n\t\treturn -1;\n\n\tname = strdup(token);\n\tif (!name)\n\t\treturn -1;\n\tvalue = name + (cp - token);\n\t*value++ = '\\0';\n\tif (*value == '\"' || *value == '\\'') {\n\t\tchar c = *value++;\n\t\tif (!(cp = strrchr(value, c)))\n\t\t\tgoto errout; \n\t\t*cp = '\\0';\n\t}\n\n\tif (ret_val) {\n\t\tvalue = *value ? strdup(value) : NULL;\n\t\tif (!value)\n\t\t\tgoto errout;\n\t\t*ret_val = value;\n\t}\n\n\tif (ret_type)\n\t\t*ret_type = name;\n\telse\n\t\tfree(name);\n\n\treturn 0;\n\nerrout:\n\tDBG(TAG, ul_debug(\"parse error: '%s'\", token));\n\tfree(name);\n\treturn -1;\n", "Selected Statement": "if (!head)", "Function Input": {}, "Variable Values Before Statement": {"head": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns 0 on success, and -1 on failure.\n */\nint blkid_parse_tag_string(const char *token, char **ret_type, char **ret_val)\n{\n\tchar *name, *value, *cp;\n\n\tDBG(TAG, ul_debug(\"trying to parse '%s' as a tag\", token));\n\n\tif (!token || !(cp = strchr(token, '=')))\n\t\treturn -1;\n\n\tname = strdup(token);\n\tif (!name)\n\t\treturn -1;\n\tvalue = name + (cp - token);\n\t*value++ = '\\0';\n\tif (*value == '\"' || *value == '\\'') {\n\t\tchar c = *value++;\n\t\tif (!(cp = strrchr(value, c)))\n\t\t\tgoto errout; \n\t\t*cp = '\\0';\n\t}\n\n\tif (ret_val) {\n\t\tvalue = *value ? strdup(value) : NULL;\n\t\tif (!value)\n\t\t\tgoto errout;\n\t\t*ret_val = value;\n\t}\n\n\tif (ret_type)\n\t\t*ret_type = name;\n\telse\n\t\tfree(name);\n\n\treturn 0;\n\nerrout:\n\tDBG(TAG, ul_debug(\"parse error: '%s'\", token));\n\tfree(name);\n\treturn -1;\n", "Selected Statement": "if (ret_val)", "Function Input": {}, "Variable Values Before Statement": {"ret_val": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * deallocated by mnt_free_cache().\n */\nvoid mnt_unref_cache(struct libmnt_cache *cache)\n{\n\tif (cache) {\n\t\tcache->refcount--;\n\t\t\n\t\tif (cache->refcount <= 0) {\n\t\t\tmnt_unref_table(cache->mountinfo);\n\n\t\t\tmnt_free_cache(cache);\n\t\t}\n\t}\n", "Selected Statement": "if (!cache || !cache->mountinfo)", "Function Input": {"cache": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xf7cc13a0\n", "message": "Cannot access memory at address 0xf7cc13a0"}}}, "Variable Values Before Statement": {"cache": "NULL", "cache->mountinfo": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint strappend(char **a, const char *b)\n{\n\tsize_t al, bl;\n\tchar *tmp;\n\n\tif (!a)\n\t\treturn -EINVAL;\n\tif (!b || !*b)\n\t\treturn 0;\n\tif (!*a) {\n\t\t*a = strdup(b);\n\t\treturn !*a ? -ENOMEM : 0;\n\t}\n\n\tal = strlen(*a);\n\tbl = strlen(b);\n\n\ttmp = realloc(*a, al + bl + 1);\n\tif (!tmp)\n\t\treturn -ENOMEM;\n\t*a = tmp;\n\tmemcpy((*a) + al, b, bl + 1);\n\treturn 0;\n", "Selected Statement": "if (end <= begin)", "Function Input": {}, "Variable Values Before Statement": {"end": "NULL", "begin": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint strappend(char **a, const char *b)\n{\n\tsize_t al, bl;\n\tchar *tmp;\n\n\tif (!a)\n\t\treturn -EINVAL;\n\tif (!b || !*b)\n\t\treturn 0;\n\tif (!*a) {\n\t\t*a = strdup(b);\n\t\treturn !*a ? -ENOMEM : 0;\n\t}\n\n\tal = strlen(*a);\n\tbl = strlen(b);\n\n\ttmp = realloc(*a, al + bl + 1);\n\tif (!tmp)\n\t\treturn -ENOMEM;\n\t*a = tmp;\n\tmemcpy((*a) + al, b, bl + 1);\n\treturn 0;\n", "Selected Statement": "if (!*a)", "Function Input": {}, "Variable Values Before Statement": {"a": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint strappend(char **a, const char *b)\n{\n\tsize_t al, bl;\n\tchar *tmp;\n\n\tif (!a)\n\t\treturn -EINVAL;\n\tif (!b || !*b)\n\t\treturn 0;\n\tif (!*a) {\n\t\t*a = strdup(b);\n\t\treturn !*a ? -ENOMEM : 0;\n\t}\n\n\tal = strlen(*a);\n\tbl = strlen(b);\n\n\ttmp = realloc(*a, al + bl + 1);\n\tif (!tmp)\n\t\treturn -ENOMEM;\n\t*a = tmp;\n\tmemcpy((*a) + al, b, bl + 1);\n\treturn 0;\n", "Selected Statement": "if (!s && !suffix)", "Function Input": {}, "Variable Values Before Statement": {"s": "NULL", "suffix": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint mnt_valid_tagname(const char *tagname)\n{\n\tif (tagname && *tagname && (\n\t    strcmp(\"ID\", tagname) == 0 ||\n\t    strcmp(\"UUID\", tagname) == 0 ||\n\t    strcmp(\"LABEL\", tagname) == 0 ||\n\t    strcmp(\"PARTUUID\", tagname) == 0 ||\n\t    strcmp(\"PARTLABEL\", tagname) == 0))\n\t\treturn 1;\n\n\treturn 0;\n", "Selected Statement": "if (!filesystems)", "Function Input": {}, "Variable Values Before Statement": {"filesystems": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint mnt_valid_tagname(const char *tagname)\n{\n\tif (tagname && *tagname && (\n\t    strcmp(\"ID\", tagname) == 0 ||\n\t    strcmp(\"UUID\", tagname) == 0 ||\n\t    strcmp(\"LABEL\", tagname) == 0 ||\n\t    strcmp(\"PARTUUID\", tagname) == 0 ||\n\t    strcmp(\"PARTLABEL\", tagname) == 0))\n\t\treturn 1;\n\n\treturn 0;\n", "Selected Statement": "if (utab && !*utab)", "Function Input": {}, "Variable Values Before Statement": {"utab": "NULL"}, "Value After Statement Execution": "No", "Project Information": "util-linux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\n\nAPR_DECLARE(apr_status_t) apr_pool_initialize(void)\n{\n    apr_status_t rv;\n#if (APR_POOL_DEBUG & APR_POOL_DEBUG_VERBOSE_ALL)\n    char *logpath;\n    apr_file_t *debug_log = NULL;\n#endif\n\n    if (apr_pools_initialized++)\n        return APR_SUCCESS;\n\n#if defined(_SC_PAGESIZE)\n    boundary_size = sysconf(_SC_PAGESIZE);\n#elif defined(WIN32)\n    {\n        SYSTEM_INFO si;\n        GetSystemInfo(&si);\n        boundary_size = si.dwPageSize;\n    }\n#endif\n    boundary_index = 12;\n    while ( (1 << boundary_index) < boundary_size)\n        boundary_index++;\n    boundary_size = (1 << boundary_index);\n\n    \n    if ((rv = apr_pool_create_ex(&global_pool, NULL, NULL,\n                                 NULL)) != APR_SUCCESS) {\n        return rv;\n    }\n\n    apr_pool_tag(global_pool, \"APR global pool\");\n\n    apr_pools_initialized = 1;\n\n    \n    if ((rv = apr_atomic_init(global_pool)) != APR_SUCCESS) {\n        return rv;\n    }\n\n#if (APR_POOL_DEBUG & APR_POOL_DEBUG_VERBOSE_ALL)\n    rv = apr_env_get(&logpath, \"APR_POOL_DEBUG_LOG\", global_pool);\n\n    \n    if (rv == APR_SUCCESS) {\n        apr_file_open(&debug_log, logpath,\n                      APR_FOPEN_APPEND|APR_FOPEN_WRITE|APR_FOPEN_CREATE,\n                      APR_FPROT_OS_DEFAULT, global_pool);\n    }\n    else {\n        apr_file_open_stderr(&debug_log, global_pool);\n    }\n\n    \n    file_stderr = debug_log;\n\n    if (file_stderr) {\n        apr_file_printf(file_stderr,\n            \"POOL DEBUG: [PID\"\n#if APR_HAS_THREADS\n            \"/TID\"\n#endif \n            \"] ACTION  (SIZE      /POOL SIZE /TOTAL SIZE) \"\n            \"POOL       \\\"TAG\\\" <__FILE__:__LINE__> PARENT     (ALLOCS/TOTAL ALLOCS/CLEARS)\\n\");\n\n        apr_pool_log_event(global_pool, \"GLOBAL\", __FILE__ \":apr_pool_initialize\", 0);\n\n        \n        apr_pool_cleanup_register(global_pool, NULL,\n                                  apr_pool_cleanup_file_stderr,\n                                  apr_pool_cleanup_null);\n    }\n#endif \n\n    return APR_SUCCESS;\n", "Selected Statement": "if (size < in_size)", "Function Input": {}, "Variable Values Before Statement": {"size": "NULL", "in_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\n\nAPR_DECLARE(apr_status_t) apr_pool_initialize(void)\n{\n    apr_status_t rv;\n#if (APR_POOL_DEBUG & APR_POOL_DEBUG_VERBOSE_ALL)\n    char *logpath;\n    apr_file_t *debug_log = NULL;\n#endif\n\n    if (apr_pools_initialized++)\n        return APR_SUCCESS;\n\n#if defined(_SC_PAGESIZE)\n    boundary_size = sysconf(_SC_PAGESIZE);\n#elif defined(WIN32)\n    {\n        SYSTEM_INFO si;\n        GetSystemInfo(&si);\n        boundary_size = si.dwPageSize;\n    }\n#endif\n    boundary_index = 12;\n    while ( (1 << boundary_index) < boundary_size)\n        boundary_index++;\n    boundary_size = (1 << boundary_index);\n\n    \n    if ((rv = apr_pool_create_ex(&global_pool, NULL, NULL,\n                                 NULL)) != APR_SUCCESS) {\n        return rv;\n    }\n\n    apr_pool_tag(global_pool, \"APR global pool\");\n\n    apr_pools_initialized = 1;\n\n    \n    if ((rv = apr_atomic_init(global_pool)) != APR_SUCCESS) {\n        return rv;\n    }\n\n#if (APR_POOL_DEBUG & APR_POOL_DEBUG_VERBOSE_ALL)\n    rv = apr_env_get(&logpath, \"APR_POOL_DEBUG_LOG\", global_pool);\n\n    \n    if (rv == APR_SUCCESS) {\n        apr_file_open(&debug_log, logpath,\n                      APR_FOPEN_APPEND|APR_FOPEN_WRITE|APR_FOPEN_CREATE,\n                      APR_FPROT_OS_DEFAULT, global_pool);\n    }\n    else {\n        apr_file_open_stderr(&debug_log, global_pool);\n    }\n\n    \n    file_stderr = debug_log;\n\n    if (file_stderr) {\n        apr_file_printf(file_stderr,\n            \"POOL DEBUG: [PID\"\n#if APR_HAS_THREADS\n            \"/TID\"\n#endif \n            \"] ACTION  (SIZE      /POOL SIZE /TOTAL SIZE) \"\n            \"POOL       \\\"TAG\\\" <__FILE__:__LINE__> PARENT     (ALLOCS/TOTAL ALLOCS/CLEARS)\\n\");\n\n        apr_pool_log_event(global_pool, \"GLOBAL\", __FILE__ \":apr_pool_initialize\", 0);\n\n        \n        apr_pool_cleanup_register(global_pool, NULL,\n                                  apr_pool_cleanup_file_stderr,\n                                  apr_pool_cleanup_null);\n    }\n#endif \n\n    return APR_SUCCESS;\n", "Selected Statement": "if (size < APR_PSPRINTF_MIN_STRINGSIZE)", "Function Input": {}, "Variable Values Before Statement": {"size": "NULL", "APR_PSPRINTF_MIN_STRINGSIZE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "APR_DECLARE(apr_status_t) apr_thread_mutex_create(apr_thread_mutex_t **mutex,\n                                                  unsigned int flags,\n                                                  apr_pool_t *pool)\n{\n    apr_thread_mutex_t *new_mutex;\n    apr_status_t rv;\n\n#ifndef HAVE_PTHREAD_MUTEX_RECURSIVE\n    if (flags & APR_THREAD_MUTEX_NESTED) {\n        return APR_ENOTIMPL;\n    }\n#endif\n\n    new_mutex = apr_pcalloc(pool, sizeof(apr_thread_mutex_t));\n    new_mutex->pool = pool;\n\n#ifdef HAVE_PTHREAD_MUTEX_RECURSIVE\n    if (flags & APR_THREAD_MUTEX_NESTED) {\n        pthread_mutexattr_t mattr;\n\n        rv = pthread_mutexattr_init(&mattr);\n        if (rv) return rv;\n\n        rv = pthread_mutexattr_settype(&mattr, PTHREAD_MUTEX_RECURSIVE);\n        if (rv) {\n            pthread_mutexattr_destroy(&mattr);\n            return rv;\n        }\n\n        rv = pthread_mutex_init(&new_mutex->mutex, &mattr);\n\n        pthread_mutexattr_destroy(&mattr);\n    } else\n#endif\n    {\n#if defined(APR_THREAD_DEBUG)\n        pthread_mutexattr_t mattr;\n\n        rv = pthread_mutexattr_init(&mattr);\n        if (rv) return rv;\n\n        rv = pthread_mutexattr_settype(&mattr, PTHREAD_MUTEX_ERRORCHECK);\n        if (rv) {\n            pthread_mutexattr_destroy(&mattr);\n            return rv;\n        }\n\n        rv = pthread_mutex_init(&new_mutex->mutex, &mattr);\n\n        pthread_mutexattr_destroy(&mattr);\n#else\n        rv = pthread_mutex_init(&new_mutex->mutex, NULL);\n#endif\n    }\n\n    if (rv) {\n#ifdef HAVE_ZOS_PTHREADS\n        rv = errno;\n#endif\n        return rv;\n    }\n\n#ifndef HAVE_PTHREAD_MUTEX_TIMEDLOCK\n    if (flags & APR_THREAD_MUTEX_TIMED) {\n        rv = apr_thread_cond_create(&new_mutex->cond, pool);\n        if (rv) {\n#ifdef HAVE_ZOS_PTHREADS\n            rv = errno;\n#endif\n            pthread_mutex_destroy(&new_mutex->mutex);\n            return rv;\n        }\n    }\n#endif\n\n    apr_pool_cleanup_register(new_mutex->pool,\n                              new_mutex, thread_mutex_cleanup,\n                              apr_pool_cleanup_null);\n\n    *mutex = new_mutex;\n    return APR_SUCCESS;\n", "Selected Statement": "if (timeout <= 0)", "Function Input": {}, "Variable Values Before Statement": {"timeout": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "APR_DECLARE(apr_status_t) apr_thread_mutex_create(apr_thread_mutex_t **mutex,\n                                                  unsigned int flags,\n                                                  apr_pool_t *pool)\n{\n    apr_thread_mutex_t *new_mutex;\n    apr_status_t rv;\n\n#ifndef HAVE_PTHREAD_MUTEX_RECURSIVE\n    if (flags & APR_THREAD_MUTEX_NESTED) {\n        return APR_ENOTIMPL;\n    }\n#endif\n\n    new_mutex = apr_pcalloc(pool, sizeof(apr_thread_mutex_t));\n    new_mutex->pool = pool;\n\n#ifdef HAVE_PTHREAD_MUTEX_RECURSIVE\n    if (flags & APR_THREAD_MUTEX_NESTED) {\n        pthread_mutexattr_t mattr;\n\n        rv = pthread_mutexattr_init(&mattr);\n        if (rv) return rv;\n\n        rv = pthread_mutexattr_settype(&mattr, PTHREAD_MUTEX_RECURSIVE);\n        if (rv) {\n            pthread_mutexattr_destroy(&mattr);\n            return rv;\n        }\n\n        rv = pthread_mutex_init(&new_mutex->mutex, &mattr);\n\n        pthread_mutexattr_destroy(&mattr);\n    } else\n#endif\n    {\n#if defined(APR_THREAD_DEBUG)\n        pthread_mutexattr_t mattr;\n\n        rv = pthread_mutexattr_init(&mattr);\n        if (rv) return rv;\n\n        rv = pthread_mutexattr_settype(&mattr, PTHREAD_MUTEX_ERRORCHECK);\n        if (rv) {\n            pthread_mutexattr_destroy(&mattr);\n            return rv;\n        }\n\n        rv = pthread_mutex_init(&new_mutex->mutex, &mattr);\n\n        pthread_mutexattr_destroy(&mattr);\n#else\n        rv = pthread_mutex_init(&new_mutex->mutex, NULL);\n#endif\n    }\n\n    if (rv) {\n#ifdef HAVE_ZOS_PTHREADS\n        rv = errno;\n#endif\n        return rv;\n    }\n\n#ifndef HAVE_PTHREAD_MUTEX_TIMEDLOCK\n    if (flags & APR_THREAD_MUTEX_TIMED) {\n        rv = apr_thread_cond_create(&new_mutex->cond, pool);\n        if (rv) {\n#ifdef HAVE_ZOS_PTHREADS\n            rv = errno;\n#endif\n            pthread_mutex_destroy(&new_mutex->mutex);\n            return rv;\n        }\n    }\n#endif\n\n    apr_pool_cleanup_register(new_mutex->pool,\n                              new_mutex, thread_mutex_cleanup,\n                              apr_pool_cleanup_null);\n\n    *mutex = new_mutex;\n    return APR_SUCCESS;\n", "Selected Statement": "if (rv)", "Function Input": {}, "Variable Values Before Statement": {"rv": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nAPR_DECLARE(apr_os_thread_t) apr_os_thread_current(void)\n{\n", "Selected Statement": "if (thread)", "Function Input": {}, "Variable Values Before Statement": {"thread": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nAPR_DECLARE(apr_os_thread_t) apr_os_thread_current(void)\n{\n", "Selected Statement": "if ((*new) == NULL)", "Function Input": {}, "Variable Values Before Statement": {"new": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint ap_expr_yylex_init(yyscan_t* ptr_yy_globals)\n\n{\n    if (ptr_yy_globals == NULL){\n        errno = EINVAL;\n        return 1;\n    }\n\n    *ptr_yy_globals = (yyscan_t) ap_expr_yyalloc ( sizeof( struct yyguts_t ), NULL );\n\n    if (*ptr_yy_globals == NULL){\n        errno = ENOMEM;\n        return 1;\n    }\n\n    \n    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));\n\n    return yy_init_globals ( *ptr_yy_globals );\n", "Selected Statement": "if (apr_isalnum(yytext[0]))", "Function Input": {}, "Variable Values Before Statement": {"apr_isalnum": "NULL", "yytext": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint ap_expr_yylex_init(yyscan_t* ptr_yy_globals)\n\n{\n    if (ptr_yy_globals == NULL){\n        errno = EINVAL;\n        return 1;\n    }\n\n    *ptr_yy_globals = (yyscan_t) ap_expr_yyalloc ( sizeof( struct yyguts_t ), NULL );\n\n    if (*ptr_yy_globals == NULL){\n        errno = ENOMEM;\n        return 1;\n    }\n\n    \n    memset(*ptr_yy_globals,0x00,sizeof(struct yyguts_t));\n\n    return yy_init_globals ( *ptr_yy_globals );\n", "Selected Statement": "if ( yy_accept[yy_current_state] )", "Function Input": {}, "Variable Values Before Statement": {"yy_accept": "NULL", "yy_current_state": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "%%\n\nvoid yyerror(ap_expr_parse_ctx_t *ctx, const char *s)\n{\n    \n    ctx->error = apr_pstrdup(ctx->ptemp, s);\n", "Selected Statement": "if (!e)", "Function Input": {}, "Variable Values Before Statement": {"e": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "%%\n\nvoid yyerror(ap_expr_parse_ctx_t *ctx, const char *s)\n{\n    \n    ctx->error = apr_pstrdup(ctx->ptemp, s);\n", "Selected Statement": "if (!e)", "Function Input": {}, "Variable Values Before Statement": {"e": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void *pointer_arr[GB_SIZE];\nstatic int pointer_idx = 0;\n\n\n\nvoid af_gb_init() {\n  pointer_idx = 0;\n\n   for (int i = 0; i < GB_SIZE; i++) {\n", "Selected Statement": "if (filename2 != NULL)", "Function Input": {}, "Variable Values Before Statement": {"filename2": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void *pointer_arr[GB_SIZE];\nstatic int pointer_idx = 0;\n\n\n\nvoid af_gb_init() {\n  pointer_idx = 0;\n\n   for (int i = 0; i < GB_SIZE; i++) {\n", "Selected Statement": "if (*size < STR_SIZE || (int)*size < 0)", "Function Input": {}, "Variable Values Before Statement": {"size": "NULL", "STR_SIZE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "APR_DECLARE(apr_status_t) apr_tokenize_to_argv(const char *arg_str,\n                                            char ***argv_out,\n                                            apr_pool_t *token_context)\n{\n    const char *cp;\n    const char *ct;\n    char *cleaned, *dirty;\n    int escaped;\n    int isquoted, numargs = 0, argnum;\n\n#define SKIP_WHITESPACE(cp) \\\n    for ( ; *cp == ' ' || *cp == '\\t'; ) { \\\n        cp++; \\\n    };\n\n#define CHECK_QUOTATION(cp,isquoted) \\\n    isquoted = 0; \\\n    if (*cp == '\"') { \\\n        isquoted = 1; \\\n        cp++; \\\n    } \\\n    else if (*cp == '\\'') { \\\n        isquoted = 2; \\\n        cp++; \\\n    }\n\n\n#define DETERMINE_NEXTSTRING(cp,isquoted) \\\n    for ( ; *cp != '\\0'; cp++) { \\\n        if (   (*cp == '\\\\' && (*(cp+1) == ' ' || *(cp+1) == '\\t' || \\\n                                *(cp+1) == '\"' || *(cp+1) == '\\''))) { \\\n            cp++; \\\n            continue; \\\n        } \\\n        if (   (!isquoted && (*cp == ' ' || *cp == '\\t')) \\\n            || (isquoted == 1 && *cp == '\"') \\\n            || (isquoted == 2 && *cp == '\\'')                 ) { \\\n            break; \\\n        } \\\n    }\n\n\n#define REMOVE_ESCAPE_CHARS(cleaned, dirty, escaped) \\\n    escaped = 0; \\\n    while(*dirty) { \\\n        if (!escaped && *dirty == '\\\\') { \\\n            escaped = 1; \\\n        } \\\n        else { \\\n            escaped = 0; \\\n            *cleaned++ = *dirty; \\\n        } \\\n        ++dirty; \\\n    } \\\n    *cleaned = 0;        \n\n    cp = arg_str;\n    SKIP_WHITESPACE(cp);\n    ct = cp;\n\n    \n    numargs = 1;\n    while (*ct != '\\0') {\n        CHECK_QUOTATION(ct, isquoted);\n        DETERMINE_NEXTSTRING(ct, isquoted);\n        if (*ct != '\\0') {\n            ct++;\n        }\n        numargs++;\n        SKIP_WHITESPACE(ct);\n    }\n    *argv_out = apr_palloc(token_context, numargs * sizeof(char*));\n\n    \n    for (argnum = 0; argnum < (numargs-1); argnum++) {\n        SKIP_WHITESPACE(cp);\n        CHECK_QUOTATION(cp, isquoted);\n        ct = cp;\n        DETERMINE_NEXTSTRING(cp, isquoted);\n        cp++;\n        (*argv_out)[argnum] = apr_palloc(token_context, cp - ct);\n        apr_cpystrn((*argv_out)[argnum], ct, cp - ct);\n        cleaned = dirty = (*argv_out)[argnum];\n        REMOVE_ESCAPE_CHARS(cleaned, dirty, escaped);\n    }\n    (*argv_out)[argnum] = NULL;\n\n", "Selected Statement": "if (s2 > s)", "Function Input": {}, "Variable Values Before Statement": {"s2": "NULL", "s": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "APR_DECLARE(apr_status_t) apr_tokenize_to_argv(const char *arg_str,\n                                            char ***argv_out,\n                                            apr_pool_t *token_context)\n{\n    const char *cp;\n    const char *ct;\n    char *cleaned, *dirty;\n    int escaped;\n    int isquoted, numargs = 0, argnum;\n\n#define SKIP_WHITESPACE(cp) \\\n    for ( ; *cp == ' ' || *cp == '\\t'; ) { \\\n        cp++; \\\n    };\n\n#define CHECK_QUOTATION(cp,isquoted) \\\n    isquoted = 0; \\\n    if (*cp == '\"') { \\\n        isquoted = 1; \\\n        cp++; \\\n    } \\\n    else if (*cp == '\\'') { \\\n        isquoted = 2; \\\n        cp++; \\\n    }\n\n\n#define DETERMINE_NEXTSTRING(cp,isquoted) \\\n    for ( ; *cp != '\\0'; cp++) { \\\n        if (   (*cp == '\\\\' && (*(cp+1) == ' ' || *(cp+1) == '\\t' || \\\n                                *(cp+1) == '\"' || *(cp+1) == '\\''))) { \\\n            cp++; \\\n            continue; \\\n        } \\\n        if (   (!isquoted && (*cp == ' ' || *cp == '\\t')) \\\n            || (isquoted == 1 && *cp == '\"') \\\n            || (isquoted == 2 && *cp == '\\'')                 ) { \\\n            break; \\\n        } \\\n    }\n\n\n#define REMOVE_ESCAPE_CHARS(cleaned, dirty, escaped) \\\n    escaped = 0; \\\n    while(*dirty) { \\\n        if (!escaped && *dirty == '\\\\') { \\\n            escaped = 1; \\\n        } \\\n        else { \\\n            escaped = 0; \\\n            *cleaned++ = *dirty; \\\n        } \\\n        ++dirty; \\\n    } \\\n    *cleaned = 0;        \n\n    cp = arg_str;\n    SKIP_WHITESPACE(cp);\n    ct = cp;\n\n    \n    numargs = 1;\n    while (*ct != '\\0') {\n        CHECK_QUOTATION(ct, isquoted);\n        DETERMINE_NEXTSTRING(ct, isquoted);\n        if (*ct != '\\0') {\n            ct++;\n        }\n        numargs++;\n        SKIP_WHITESPACE(ct);\n    }\n    *argv_out = apr_palloc(token_context, numargs * sizeof(char*));\n\n    \n    for (argnum = 0; argnum < (numargs-1); argnum++) {\n        SKIP_WHITESPACE(cp);\n        CHECK_QUOTATION(cp, isquoted);\n        ct = cp;\n        DETERMINE_NEXTSTRING(cp, isquoted);\n        cp++;\n        (*argv_out)[argnum] = apr_palloc(token_context, cp - ct);\n        apr_cpystrn((*argv_out)[argnum], ct, cp - ct);\n        cleaned = dirty = (*argv_out)[argnum];\n        REMOVE_ESCAPE_CHARS(cleaned, dirty, escaped);\n    }\n    (*argv_out)[argnum] = NULL;\n\n", "Selected Statement": "if (!apr_isspace(*src))", "Function Input": {}, "Variable Values Before Statement": {"apr_isspace": "NULL", "src": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                                              apr_port_t *port,\n                                              const char *str,\n                                              apr_pool_t *p)\n{\n    const char *ch, *lastchar;\n    int big_port;\n    apr_size_t addrlen;\n\n    *addr = NULL;         \n    *scope_id = NULL;     \n    *port = 0;            \n\n    \n    ch = lastchar = str + strlen(str) - 1;\n    while (ch >= str && apr_isdigit(*ch)) {\n        --ch;\n    }\n\n    if (ch < str) {       \n        big_port = atoi(str);\n        if (big_port < 1 || big_port > 65535) {\n            return APR_EINVAL;\n        }\n        *port = big_port;\n        return APR_SUCCESS;\n    }\n\n    if (*ch == ':' && ch < lastchar) { \n        if (ch == str) {               \n            return APR_EINVAL;\n        }\n        big_port = atoi(ch + 1);\n        if (big_port < 1 || big_port > 65535) {\n            return APR_EINVAL;\n        }\n        *port = big_port;\n        lastchar = ch - 1;\n    }\n\n    \n    addrlen = lastchar - str + 1;\n\n\n#if APR_HAVE_IPV6\n    if (*str == '[') {\n        const char *end_bracket = memchr(str, ']', addrlen);\n        struct in6_addr ipaddr;\n        const char *scope_delim;\n\n        if (!end_bracket || end_bracket != lastchar) {\n            *port = 0;\n            return APR_EINVAL;\n        }\n\n        \n        scope_delim = memchr(str, '%', addrlen);\n        if (scope_delim) {\n            if (scope_delim == end_bracket - 1) { \n                *port = 0;\n                return APR_EINVAL;\n            }\n            addrlen = scope_delim - str - 1;\n            *scope_id = apr_pstrmemdup(p, scope_delim + 1, end_bracket - scope_delim - 1);\n        }\n        else {\n            addrlen = addrlen - 2; \n        }\n\n        *addr = apr_pstrmemdup(p, str + 1, addrlen);\n        if (apr_inet_pton(AF_INET6, *addr, &ipaddr) != 1) {\n            *addr = NULL;\n            *scope_id = NULL;\n            *port = 0;\n            return APR_EINVAL;\n        }\n    }\n    else\n#endif\n    {\n        \n        *addr = apr_pstrmemdup(p, str, addrlen);\n    }\n    return APR_SUCCESS;\n", "Selected Statement": "if (ch < str)", "Function Input": {}, "Variable Values Before Statement": {"ch": "0x11a169f \"\"", "str": "0x11a16a0 \"\""}, "Value After Statement Execution": "Yes", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                                              apr_port_t *port,\n                                              const char *str,\n                                              apr_pool_t *p)\n{\n    const char *ch, *lastchar;\n    int big_port;\n    apr_size_t addrlen;\n\n    *addr = NULL;         \n    *scope_id = NULL;     \n    *port = 0;            \n\n    \n    ch = lastchar = str + strlen(str) - 1;\n    while (ch >= str && apr_isdigit(*ch)) {\n        --ch;\n    }\n\n    if (ch < str) {       \n        big_port = atoi(str);\n        if (big_port < 1 || big_port > 65535) {\n            return APR_EINVAL;\n        }\n        *port = big_port;\n        return APR_SUCCESS;\n    }\n\n    if (*ch == ':' && ch < lastchar) { \n        if (ch == str) {               \n            return APR_EINVAL;\n        }\n        big_port = atoi(ch + 1);\n        if (big_port < 1 || big_port > 65535) {\n            return APR_EINVAL;\n        }\n        *port = big_port;\n        lastchar = ch - 1;\n    }\n\n    \n    addrlen = lastchar - str + 1;\n\n\n#if APR_HAVE_IPV6\n    if (*str == '[') {\n        const char *end_bracket = memchr(str, ']', addrlen);\n        struct in6_addr ipaddr;\n        const char *scope_delim;\n\n        if (!end_bracket || end_bracket != lastchar) {\n            *port = 0;\n            return APR_EINVAL;\n        }\n\n        \n        scope_delim = memchr(str, '%', addrlen);\n        if (scope_delim) {\n            if (scope_delim == end_bracket - 1) { \n                *port = 0;\n                return APR_EINVAL;\n            }\n            addrlen = scope_delim - str - 1;\n            *scope_id = apr_pstrmemdup(p, scope_delim + 1, end_bracket - scope_delim - 1);\n        }\n        else {\n            addrlen = addrlen - 2; \n        }\n\n        *addr = apr_pstrmemdup(p, str + 1, addrlen);\n        if (apr_inet_pton(AF_INET6, *addr, &ipaddr) != 1) {\n            *addr = NULL;\n            *scope_id = NULL;\n            *port = 0;\n            return APR_EINVAL;\n        }\n    }\n    else\n#endif\n    {\n        \n        *addr = apr_pstrmemdup(p, str, addrlen);\n    }\n    return APR_SUCCESS;\n", "Selected Statement": "if (big_port < 1 || big_port > 65535)", "Function Input": {}, "Variable Values Before Statement": {"big_port": "int"}, "Value After Statement Execution": "Yes", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                                              apr_port_t *port,\n                                              const char *str,\n                                              apr_pool_t *p)\n{\n    const char *ch, *lastchar;\n    int big_port;\n    apr_size_t addrlen;\n\n    *addr = NULL;         \n    *scope_id = NULL;     \n    *port = 0;            \n\n    \n    ch = lastchar = str + strlen(str) - 1;\n    while (ch >= str && apr_isdigit(*ch)) {\n        --ch;\n    }\n\n    if (ch < str) {       \n        big_port = atoi(str);\n        if (big_port < 1 || big_port > 65535) {\n            return APR_EINVAL;\n        }\n        *port = big_port;\n        return APR_SUCCESS;\n    }\n\n    if (*ch == ':' && ch < lastchar) { \n        if (ch == str) {               \n            return APR_EINVAL;\n        }\n        big_port = atoi(ch + 1);\n        if (big_port < 1 || big_port > 65535) {\n            return APR_EINVAL;\n        }\n        *port = big_port;\n        lastchar = ch - 1;\n    }\n\n    \n    addrlen = lastchar - str + 1;\n\n\n#if APR_HAVE_IPV6\n    if (*str == '[') {\n        const char *end_bracket = memchr(str, ']', addrlen);\n        struct in6_addr ipaddr;\n        const char *scope_delim;\n\n        if (!end_bracket || end_bracket != lastchar) {\n            *port = 0;\n            return APR_EINVAL;\n        }\n\n        \n        scope_delim = memchr(str, '%', addrlen);\n        if (scope_delim) {\n            if (scope_delim == end_bracket - 1) { \n                *port = 0;\n                return APR_EINVAL;\n            }\n            addrlen = scope_delim - str - 1;\n            *scope_id = apr_pstrmemdup(p, scope_delim + 1, end_bracket - scope_delim - 1);\n        }\n        else {\n            addrlen = addrlen - 2; \n        }\n\n        *addr = apr_pstrmemdup(p, str + 1, addrlen);\n        if (apr_inet_pton(AF_INET6, *addr, &ipaddr) != 1) {\n            *addr = NULL;\n            *scope_id = NULL;\n            *port = 0;\n            return APR_EINVAL;\n        }\n    }\n    else\n#endif\n    {\n        \n        *addr = apr_pstrmemdup(p, str, addrlen);\n    }\n    return APR_SUCCESS;\n", "Selected Statement": "if (mask_or_numbits)", "Function Input": {}, "Variable Values Before Statement": {"mask_or_numbits": "NULL"}, "Value After Statement Execution": "No", "Project Information": "apache-httpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "nxt_mp_t *\nnxt_mp_create(size_t cluster_size, size_t page_alignment, size_t page_size,\n    size_t min_chunk_size)\n{\n    nxt_mp_t     *mp;\n    uint32_t     pages, chunk_size_shift, page_size_shift;\n    nxt_queue_t  *chunk_pages;\n\n    chunk_size_shift = nxt_lg2(min_chunk_size);\n    page_size_shift = nxt_lg2(page_size);\n\n    pages = page_size_shift - chunk_size_shift;\n\n    mp = nxt_zalloc(sizeof(nxt_mp_t) + pages * sizeof(nxt_queue_t));\n\n    if (nxt_fast_path(mp != NULL)) {\n        mp->retain = 1;\n        mp->chunk_size_shift = chunk_size_shift;\n        mp->page_size_shift = page_size_shift;\n        mp->page_size = page_size;\n        mp->page_alignment = nxt_max(page_alignment, NXT_MAX_ALIGNMENT);\n        mp->cluster_size = cluster_size;\n\n        chunk_pages = mp->chunk_pages;\n\n        while (pages != 0) {\n            nxt_queue_init(chunk_pages);\n            chunk_pages++;\n            pages--;\n        }\n\n        nxt_queue_init(&mp->free_pages);\n        nxt_queue_init(&mp->nget_pages);\n        nxt_queue_init(&mp->get_pages);\n\n        nxt_rbtree_init(&mp->blocks, nxt_mp_rbtree_compare);\n    }\n\n    nxt_debug_alloc(\"mp %p create(%uz, %uz, %uz, %uz)\", mp, cluster_size,\n                    page_alignment, page_size, min_chunk_size);\n\n", "Selected Statement": "if (nxt_slow_path(size >= 0xFFFFFFFF))", "Function Input": {}, "Variable Values Before Statement": {"nxt_slow_path": "NULL", "size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "nxt_mp_t *\nnxt_mp_create(size_t cluster_size, size_t page_alignment, size_t page_size,\n    size_t min_chunk_size)\n{\n    nxt_mp_t     *mp;\n    uint32_t     pages, chunk_size_shift, page_size_shift;\n    nxt_queue_t  *chunk_pages;\n\n    chunk_size_shift = nxt_lg2(min_chunk_size);\n    page_size_shift = nxt_lg2(page_size);\n\n    pages = page_size_shift - chunk_size_shift;\n\n    mp = nxt_zalloc(sizeof(nxt_mp_t) + pages * sizeof(nxt_queue_t));\n\n    if (nxt_fast_path(mp != NULL)) {\n        mp->retain = 1;\n        mp->chunk_size_shift = chunk_size_shift;\n        mp->page_size_shift = page_size_shift;\n        mp->page_size = page_size;\n        mp->page_alignment = nxt_max(page_alignment, NXT_MAX_ALIGNMENT);\n        mp->cluster_size = cluster_size;\n\n        chunk_pages = mp->chunk_pages;\n\n        while (pages != 0) {\n            nxt_queue_init(chunk_pages);\n            chunk_pages++;\n            pages--;\n        }\n\n        nxt_queue_init(&mp->free_pages);\n        nxt_queue_init(&mp->nget_pages);\n        nxt_queue_init(&mp->get_pages);\n\n        nxt_rbtree_init(&mp->blocks, nxt_mp_rbtree_compare);\n    }\n\n    nxt_debug_alloc(\"mp %p create(%uz, %uz, %uz, %uz)\", mp, cluster_size,\n                    page_alignment, page_size, min_chunk_size);\n\n", "Selected Statement": "if (nxt_slow_path(cluster == NULL))", "Function Input": {}, "Variable Values Before Statement": {"nxt_slow_path": "NULL", "cluster": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "nxt_mp_t *\nnxt_mp_create(size_t cluster_size, size_t page_alignment, size_t page_size,\n    size_t min_chunk_size)\n{\n    nxt_mp_t     *mp;\n    uint32_t     pages, chunk_size_shift, page_size_shift;\n    nxt_queue_t  *chunk_pages;\n\n    chunk_size_shift = nxt_lg2(min_chunk_size);\n    page_size_shift = nxt_lg2(page_size);\n\n    pages = page_size_shift - chunk_size_shift;\n\n    mp = nxt_zalloc(sizeof(nxt_mp_t) + pages * sizeof(nxt_queue_t));\n\n    if (nxt_fast_path(mp != NULL)) {\n        mp->retain = 1;\n        mp->chunk_size_shift = chunk_size_shift;\n        mp->page_size_shift = page_size_shift;\n        mp->page_size = page_size;\n        mp->page_alignment = nxt_max(page_alignment, NXT_MAX_ALIGNMENT);\n        mp->cluster_size = cluster_size;\n\n        chunk_pages = mp->chunk_pages;\n\n        while (pages != 0) {\n            nxt_queue_init(chunk_pages);\n            chunk_pages++;\n            pages--;\n        }\n\n        nxt_queue_init(&mp->free_pages);\n        nxt_queue_init(&mp->nget_pages);\n        nxt_queue_init(&mp->get_pages);\n\n        nxt_rbtree_init(&mp->blocks, nxt_mp_rbtree_compare);\n    }\n\n    nxt_debug_alloc(\"mp %p create(%uz, %uz, %uz, %uz)\", mp, cluster_size,\n                    page_alignment, page_size, min_chunk_size);\n\n", "Selected Statement": "if (nxt_fast_path(mp != NULL))", "Function Input": {}, "Variable Values Before Statement": {"nxt_fast_path": "NULL", "mp": {"blocks": null, "chunk_size_shift": "0 '\\000'", "page_size_shift": "0 '\\000'", "page_size": "0", "page_alignment": "0", "cluster_size": "0", "retain": "0", "pid": "0", "tid": "0", "cleanup": null, "free_pages": null, "nget_pages": null, "get_pages": null, "chunk_pages": [{"type_category": "struct", "concrete_type": "STRUCT", "value": {"head": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"prev": {"type_category": "pointer", "concrete_type": "NULL"}, "next": {"type_category": "pointer", "concrete_type": "NULL"}}}}}]}}, "Value After Statement Execution": "Yes", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid *\nnxt_zalloc(size_t size)\n{\n    void  *p;\n\n    p = nxt_malloc(size);\n\n    if (nxt_fast_path(p != NULL)) {\n        nxt_memzero(p, size);\n    }\n\n", "Selected Statement": "if (nxt_fast_path(p != NULL))", "Function Input": {"p": {"value": null}}, "Variable Values Before Statement": {"nxt_fast_path": "NULL", "p": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid *\nnxt_zalloc(size_t size)\n{\n    void  *p;\n\n    p = nxt_malloc(size);\n\n    if (nxt_fast_path(p != NULL)) {\n        nxt_memzero(p, size);\n    }\n\n", "Selected Statement": "if (nxt_slow_path((alignment - 1) & alignment) != 0)", "Function Input": {"p": {"value": null}}, "Variable Values Before Statement": {"nxt_slow_path": "NULL", "alignment": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid *\nnxt_zalloc(size_t size)\n{\n    void  *p;\n\n    p = nxt_malloc(size);\n\n    if (nxt_fast_path(p != NULL)) {\n        nxt_memzero(p, size);\n    }\n\n", "Selected Statement": "if (nxt_fast_path(p != NULL))", "Function Input": {"p": {"value": null}}, "Variable Values Before Statement": {"nxt_fast_path": "NULL", "p": "VOID"}, "Value After Statement Execution": "Yes", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid nxt_cdecl\nnxt_log_handler(nxt_uint_t level, nxt_log_t *log, const char *fmt, ...)\n{\n    u_char   *p, *end;\n#if 0\n    u_char   *syslogmsg;\n#endif\n    va_list  args;\n    u_char   msg[NXT_MAX_ERROR_STR];\n\n    p = msg;\n    end = msg + NXT_MAX_ERROR_STR;\n\n    if (nxt_log_prefix != NULL) {\n        p = nxt_cpystrn(p, nxt_log_prefix, end - p);\n        *p++ = ':';\n        *p++ = ' ';\n    }\n\n#if 0\n    syslogmsg = p;\n#endif\n\n    p = nxt_sprintf(p, end, (log->ident != 0) ? \"[%V] *%D \" : \"[%V] \",\n                    &nxt_log_levels[level], log->ident);\n\n    va_start(args, fmt);\n    p = nxt_vsprintf(p, end, fmt, args);\n    va_end(args);\n\n    if (level != NXT_LOG_DEBUG && log->ctx_handler != NULL) {\n        p = log->ctx_handler(log->ctx, p, end);\n    }\n\n    if (p > end - nxt_length(\"\\n\")) {\n        p = end - nxt_length(\"\\n\");\n    }\n\n    *p++ = '\\n';\n\n    (void) nxt_write_console(nxt_stderr, msg, p - msg);\n\n#if 0\n    if (level == NXT_LOG_ALERT) {\n        *(p - nxt_length(\"\\n\")) = '\\0';\n\n        \n        nxt_write_syslog(LOG_ALERT, syslogmsg);\n    }\n#endif\n", "Selected Statement": "if (prefix != NULL && *prefix != '\\0')", "Function Input": {}, "Variable Values Before Statement": {"prefix": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid nxt_cdecl\nnxt_log_handler(nxt_uint_t level, nxt_log_t *log, const char *fmt, ...)\n{\n    u_char   *p, *end;\n#if 0\n    u_char   *syslogmsg;\n#endif\n    va_list  args;\n    u_char   msg[NXT_MAX_ERROR_STR];\n\n    p = msg;\n    end = msg + NXT_MAX_ERROR_STR;\n\n    if (nxt_log_prefix != NULL) {\n        p = nxt_cpystrn(p, nxt_log_prefix, end - p);\n        *p++ = ':';\n        *p++ = ' ';\n    }\n\n#if 0\n    syslogmsg = p;\n#endif\n\n    p = nxt_sprintf(p, end, (log->ident != 0) ? \"[%V] *%D \" : \"[%V] \",\n                    &nxt_log_levels[level], log->ident);\n\n    va_start(args, fmt);\n    p = nxt_vsprintf(p, end, fmt, args);\n    va_end(args);\n\n    if (level != NXT_LOG_DEBUG && log->ctx_handler != NULL) {\n        p = log->ctx_handler(log->ctx, p, end);\n    }\n\n    if (p > end - nxt_length(\"\\n\")) {\n        p = end - nxt_length(\"\\n\");\n    }\n\n    *p++ = '\\n';\n\n    (void) nxt_write_console(nxt_stderr, msg, p - msg);\n\n#if 0\n    if (level == NXT_LOG_ALERT) {\n        *(p - nxt_length(\"\\n\")) = '\\0';\n\n        \n        nxt_write_syslog(LOG_ALERT, syslogmsg);\n    }\n#endif\n", "Selected Statement": "if (level != NXT_LOG_DEBUG && log->ctx_handler != NULL)", "Function Input": {}, "Variable Values Before Statement": {"level": "nxt_uint_t", "NXT_LOG_DEBUG": "NULL", "log->ctx_handler": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid nxt_cdecl\nnxt_log_handler(nxt_uint_t level, nxt_log_t *log, const char *fmt, ...)\n{\n    u_char   *p, *end;\n#if 0\n    u_char   *syslogmsg;\n#endif\n    va_list  args;\n    u_char   msg[NXT_MAX_ERROR_STR];\n\n    p = msg;\n    end = msg + NXT_MAX_ERROR_STR;\n\n    if (nxt_log_prefix != NULL) {\n        p = nxt_cpystrn(p, nxt_log_prefix, end - p);\n        *p++ = ':';\n        *p++ = ' ';\n    }\n\n#if 0\n    syslogmsg = p;\n#endif\n\n    p = nxt_sprintf(p, end, (log->ident != 0) ? \"[%V] *%D \" : \"[%V] \",\n                    &nxt_log_levels[level], log->ident);\n\n    va_start(args, fmt);\n    p = nxt_vsprintf(p, end, fmt, args);\n    va_end(args);\n\n    if (level != NXT_LOG_DEBUG && log->ctx_handler != NULL) {\n        p = log->ctx_handler(log->ctx, p, end);\n    }\n\n    if (p > end - nxt_length(\"\\n\")) {\n        p = end - nxt_length(\"\\n\");\n    }\n\n    *p++ = '\\n';\n\n    (void) nxt_write_console(nxt_stderr, msg, p - msg);\n\n#if 0\n    if (level == NXT_LOG_ALERT) {\n        *(p - nxt_length(\"\\n\")) = '\\0';\n\n        \n        nxt_write_syslog(LOG_ALERT, syslogmsg);\n    }\n#endif\n", "Selected Statement": "if (nxt_log_prefix != NULL)", "Function Input": {}, "Variable Values Before Statement": {"nxt_log_prefix": "0x5e195d \"tests\""}, "Value After Statement Execution": "Yes", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nu_char *\nnxt_cpystrn(u_char *dst, const u_char *src, size_t length)\n{\n    if (length == 0) {\n        return dst;\n    }\n\n    while (--length != 0) {\n        *dst = *src;\n\n        if (*dst == '\\0') {\n            return dst;\n        }\n\n        dst++;\n        src++;\n    }\n\n    *dst = '\\0';\n\n    return dst;\n", "Selected Statement": "if (*dst == '\\0')", "Function Input": {"dst": {"value": "0x78 <error: Cannot access memory at address 0x78>"}, "length": {"value": "140737488345920"}, "src": {"value": "0x7fffffffda30 \"\""}}, "Variable Values Before Statement": {"dst": "0x7fffffffd445 \"\""}, "Value After Statement Execution": "Yes", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nu_char *\nnxt_cpystrn(u_char *dst, const u_char *src, size_t length)\n{\n    if (length == 0) {\n        return dst;\n    }\n\n    while (--length != 0) {\n        *dst = *src;\n\n        if (*dst == '\\0') {\n            return dst;\n        }\n\n        dst++;\n        src++;\n    }\n\n    *dst = '\\0';\n\n    return dst;\n", "Selected Statement": "if (*dst == '\\0')", "Function Input": {"dst": {"value": "0x78 <error: Cannot access memory at address 0x78>"}, "length": {"value": "140737488345920"}, "src": {"value": "0x7fffffffda30 \"\""}}, "Variable Values Before Statement": {"dst": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nu_char *\nnxt_cpystrn(u_char *dst, const u_char *src, size_t length)\n{\n    if (length == 0) {\n        return dst;\n    }\n\n    while (--length != 0) {\n        *dst = *src;\n\n        if (*dst == '\\0') {\n            return dst;\n        }\n\n        dst++;\n        src++;\n    }\n\n    *dst = '\\0';\n\n    return dst;\n", "Selected Statement": "if (nxt_fast_path(s != NULL))", "Function Input": {"dst": {"value": "0x78 <error: Cannot access memory at address 0x78>"}, "length": {"value": "140737488345920"}, "src": {"value": "0x7fffffffda30 \"\""}}, "Variable Values Before Statement": {"nxt_fast_path": "NULL", "s": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nu_char * nxt_cdecl\nnxt_sprintf(u_char *buf, u_char *end, const char *fmt, ...)\n{\n    u_char   *p;\n    va_list  args;\n\n    va_start(args, fmt);\n    p = nxt_vsprintf(buf, end, fmt, args);\n    va_end(args);\n\n", "Selected Statement": "if (ui64 <= 0xFFFFFFFF)", "Function Input": {}, "Variable Values Before Statement": {"ui64": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nu_char * nxt_cdecl\nnxt_sprintf(u_char *buf, u_char *end, const char *fmt, ...)\n{\n    u_char   *p;\n    va_list  args;\n\n    va_start(args, fmt);\n    p = nxt_vsprintf(buf, end, fmt, args);\n    va_end(args);\n\n", "Selected Statement": "if (nxt_slow_path(p == NULL))", "Function Input": {}, "Variable Values Before Statement": {"nxt_slow_path": "NULL", "p": "0x7fffffffd44f \"\""}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nnxt_rbtree_init(nxt_rbtree_t *tree, nxt_rbtree_compare_t compare)\n{\n    \n\n    \n    tree->sentinel.left = &tree->sentinel;\n\n    \n    tree->sentinel.right = (void *) compare;\n\n    \n    tree->sentinel.color = NXT_RBTREE_BLACK;\n", "Selected Statement": "if (uncle->color == NXT_RBTREE_BLACK)", "Function Input": {"compare": {"value": "0x1074ed0"}, "tree": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xa8\n", "message": "Cannot access memory at address 0xa8"}}}, "Variable Values Before Statement": {"uncle->color": "NULL", "NXT_RBTREE_BLACK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nnxt_rbtree_init(nxt_rbtree_t *tree, nxt_rbtree_compare_t compare)\n{\n    \n\n    \n    tree->sentinel.left = &tree->sentinel;\n\n    \n    tree->sentinel.right = (void *) compare;\n\n    \n    tree->sentinel.color = NXT_RBTREE_BLACK;\n", "Selected Statement": "if (node == parent->right)", "Function Input": {"compare": {"value": "0x1074ed0"}, "tree": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xa8\n", "message": "Cannot access memory at address 0xa8"}}}, "Variable Values Before Statement": {"node": "NULL", "parent->right": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "nxt_conf_value_t *\nnxt_conf_json_parse(nxt_mp_t *mp, u_char *start, u_char *end,\n    nxt_conf_json_error_t *error)\n{\n    u_char            *p;\n    nxt_conf_value_t  *value;\n\n", "Selected Statement": "if (*p != ',')", "Function Input": {"value": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x8ffffde38\n", "message": "Cannot access memory at address 0x8ffffde38"}}}, "Variable Values Before Statement": {"p": "0x5 <error: Cannot access memory at address 0x5>"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "nxt_conf_value_t *\nnxt_conf_json_parse(nxt_mp_t *mp, u_char *start, u_char *end,\n    nxt_conf_json_error_t *error)\n{\n    u_char            *p;\n    nxt_conf_value_t  *value;\n\n", "Selected Statement": "if (pretty != NULL)", "Function Input": {"value": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x8ffffde38\n", "message": "Cannot access memory at address 0x8ffffde38"}}}, "Variable Values Before Statement": {"pretty": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_tid_t\nnxt_thread_tid(nxt_thread_t *thr)\n{\n#if (NXT_HAVE_THREAD_STORAGE_CLASS)\n\n    if (nxt_slow_path(thr->tid == 0)) {\n        thr->tid = nxt_thread_get_tid();\n    }\n\n", "Selected Statement": "if (nxt_slow_path(thr->tid == 0))", "Function Input": {}, "Variable Values Before Statement": {"nxt_slow_path": "NULL", "thr->tid": "61"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_tid_t\nnxt_thread_tid(nxt_thread_t *thr)\n{\n#if (NXT_HAVE_THREAD_STORAGE_CLASS)\n\n    if (nxt_slow_path(thr->tid == 0)) {\n        thr->tid = nxt_thread_get_tid();\n    }\n\n", "Selected Statement": "if (nxt_fast_path(thr != NULL))", "Function Input": {}, "Variable Values Before Statement": {"nxt_fast_path": "NULL", "thr": {"log": null, "main_log": null, "task": null, "tid": "61", "handle": "140737348164032", "link": null, "thread_pool": null, "time": null, "runtime": null, "engine": null, "data": null, "random": null}}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_int_t\nnxt_lib_start(const char *app, char **argv, char ***envp)\n{\n    int           n;\n    nxt_int_t     flags;\n    nxt_bool_t    update;\n    nxt_thread_t  *thread;\n\n    flags = nxt_stderr_start();\n\n    nxt_log_start(app);\n\n    nxt_pid = getpid();\n    nxt_ppid = getppid();\n    nxt_euid = geteuid();\n    nxt_egid = getegid();\n\n#if (NXT_DEBUG)\n\n    nxt_main_log.level = NXT_LOG_DEBUG;\n\n#if (NXT_HAVE_MALLOPT)\n    \n    mallopt(M_PERTURB, 0x55);\n#endif\n\n#if (NXT_MACOSX)\n    \n    setenv(\"MallocScribble\", \"1\", 0);\n#endif\n\n#endif \n\n    \n\n    nxt_thread_init_data(nxt_thread_context);\n    thread = nxt_thread();\n    thread->log = &nxt_main_log;\n\n    thread->handle = nxt_thread_handle();\n    thread->time.signal = -1;\n    nxt_thread_time_update(thread);\n\n    nxt_main_task.thread = thread;\n    nxt_main_task.log = thread->log;\n    nxt_main_task.ident = nxt_task_next_ident();\n\n    if (nxt_strerror_start() != NXT_OK) {\n        return NXT_ERROR;\n    }\n\n    if (flags != -1) {\n        nxt_debug(&nxt_main_task, \"stderr flags: 0x%04Xd\", flags);\n    }\n\n#ifdef _SC_NPROCESSORS_ONLN\n    \n    n = sysconf(_SC_NPROCESSORS_ONLN);\n\n#elif (NXT_HPUX)\n    n = mpctl(MPC_GETNUMSPUS, NULL, NULL);\n\n#else\n    n = 0;\n\n#endif\n\n    nxt_debug(&nxt_main_task, \"ncpu: %d\", n);\n\n    if (n > 1) {\n        nxt_ncpu = n;\n    }\n\n    nxt_thread_spin_init(nxt_ncpu, 0);\n\n    nxt_random_init(&thread->random);\n\n    nxt_pagesize = getpagesize();\n\n    nxt_debug(&nxt_main_task, \"pagesize: %ui\", nxt_pagesize);\n\n    if (argv != NULL) {\n        update = (argv[0] == app);\n\n        nxt_process_arguments(&nxt_main_task, argv, envp);\n\n        if (update) {\n            nxt_log_start(nxt_process_argv[0]);\n        }\n    }\n\n    return NXT_OK;\n", "Selected Statement": "if (nxt_strerror_start() != NXT_OK)", "Function Input": {"app": {"value": "0x622e00 <vtable for std::__Fuzzer::ios_base::failure+8> \"\\260.b\""}, "argv": {"value": {"type_category": "string", "concrete_type": "string", "value": "0x8c48348707e8b49 <error: Cannot access memory at address 0x8c48348707e8b49>"}}, "envp": {"value": null}}, "Variable Values Before Statement": {"nxt_strerror_start": "NULL", "NXT_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_int_t\nnxt_lib_start(const char *app, char **argv, char ***envp)\n{\n    int           n;\n    nxt_int_t     flags;\n    nxt_bool_t    update;\n    nxt_thread_t  *thread;\n\n    flags = nxt_stderr_start();\n\n    nxt_log_start(app);\n\n    nxt_pid = getpid();\n    nxt_ppid = getppid();\n    nxt_euid = geteuid();\n    nxt_egid = getegid();\n\n#if (NXT_DEBUG)\n\n    nxt_main_log.level = NXT_LOG_DEBUG;\n\n#if (NXT_HAVE_MALLOPT)\n    \n    mallopt(M_PERTURB, 0x55);\n#endif\n\n#if (NXT_MACOSX)\n    \n    setenv(\"MallocScribble\", \"1\", 0);\n#endif\n\n#endif \n\n    \n\n    nxt_thread_init_data(nxt_thread_context);\n    thread = nxt_thread();\n    thread->log = &nxt_main_log;\n\n    thread->handle = nxt_thread_handle();\n    thread->time.signal = -1;\n    nxt_thread_time_update(thread);\n\n    nxt_main_task.thread = thread;\n    nxt_main_task.log = thread->log;\n    nxt_main_task.ident = nxt_task_next_ident();\n\n    if (nxt_strerror_start() != NXT_OK) {\n        return NXT_ERROR;\n    }\n\n    if (flags != -1) {\n        nxt_debug(&nxt_main_task, \"stderr flags: 0x%04Xd\", flags);\n    }\n\n#ifdef _SC_NPROCESSORS_ONLN\n    \n    n = sysconf(_SC_NPROCESSORS_ONLN);\n\n#elif (NXT_HPUX)\n    n = mpctl(MPC_GETNUMSPUS, NULL, NULL);\n\n#else\n    n = 0;\n\n#endif\n\n    nxt_debug(&nxt_main_task, \"ncpu: %d\", n);\n\n    if (n > 1) {\n        nxt_ncpu = n;\n    }\n\n    nxt_thread_spin_init(nxt_ncpu, 0);\n\n    nxt_random_init(&thread->random);\n\n    nxt_pagesize = getpagesize();\n\n    nxt_debug(&nxt_main_task, \"pagesize: %ui\", nxt_pagesize);\n\n    if (argv != NULL) {\n        update = (argv[0] == app);\n\n        nxt_process_arguments(&nxt_main_task, argv, envp);\n\n        if (update) {\n            nxt_log_start(nxt_process_argv[0]);\n        }\n    }\n\n    return NXT_OK;\n", "Selected Statement": "if (flags != -1)", "Function Input": {"app": {"value": "0x622e00 <vtable for std::__Fuzzer::ios_base::failure+8> \"\\260.b\""}, "argv": {"value": {"type_category": "string", "concrete_type": "string", "value": "0x8c48348707e8b49 <error: Cannot access memory at address 0x8c48348707e8b49>"}}, "envp": {"value": null}}, "Variable Values Before Statement": {"flags": "nxt_int_t"}, "Value After Statement Execution": "Yes", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_int_t\nnxt_lib_start(const char *app, char **argv, char ***envp)\n{\n    int           n;\n    nxt_int_t     flags;\n    nxt_bool_t    update;\n    nxt_thread_t  *thread;\n\n    flags = nxt_stderr_start();\n\n    nxt_log_start(app);\n\n    nxt_pid = getpid();\n    nxt_ppid = getppid();\n    nxt_euid = geteuid();\n    nxt_egid = getegid();\n\n#if (NXT_DEBUG)\n\n    nxt_main_log.level = NXT_LOG_DEBUG;\n\n#if (NXT_HAVE_MALLOPT)\n    \n    mallopt(M_PERTURB, 0x55);\n#endif\n\n#if (NXT_MACOSX)\n    \n    setenv(\"MallocScribble\", \"1\", 0);\n#endif\n\n#endif \n\n    \n\n    nxt_thread_init_data(nxt_thread_context);\n    thread = nxt_thread();\n    thread->log = &nxt_main_log;\n\n    thread->handle = nxt_thread_handle();\n    thread->time.signal = -1;\n    nxt_thread_time_update(thread);\n\n    nxt_main_task.thread = thread;\n    nxt_main_task.log = thread->log;\n    nxt_main_task.ident = nxt_task_next_ident();\n\n    if (nxt_strerror_start() != NXT_OK) {\n        return NXT_ERROR;\n    }\n\n    if (flags != -1) {\n        nxt_debug(&nxt_main_task, \"stderr flags: 0x%04Xd\", flags);\n    }\n\n#ifdef _SC_NPROCESSORS_ONLN\n    \n    n = sysconf(_SC_NPROCESSORS_ONLN);\n\n#elif (NXT_HPUX)\n    n = mpctl(MPC_GETNUMSPUS, NULL, NULL);\n\n#else\n    n = 0;\n\n#endif\n\n    nxt_debug(&nxt_main_task, \"ncpu: %d\", n);\n\n    if (n > 1) {\n        nxt_ncpu = n;\n    }\n\n    nxt_thread_spin_init(nxt_ncpu, 0);\n\n    nxt_random_init(&thread->random);\n\n    nxt_pagesize = getpagesize();\n\n    nxt_debug(&nxt_main_task, \"pagesize: %ui\", nxt_pagesize);\n\n    if (argv != NULL) {\n        update = (argv[0] == app);\n\n        nxt_process_arguments(&nxt_main_task, argv, envp);\n\n        if (update) {\n            nxt_log_start(nxt_process_argv[0]);\n        }\n    }\n\n    return NXT_OK;\n", "Selected Statement": "if (n > 1)", "Function Input": {"app": {"value": "0x622e00 <vtable for std::__Fuzzer::ios_base::failure+8> \"\\260.b\""}, "argv": {"value": {"type_category": "string", "concrete_type": "string", "value": "0x8c48348707e8b49 <error: Cannot access memory at address 0x8c48348707e8b49>"}}, "envp": {"value": null}}, "Variable Values Before Statement": {"n": "int"}, "Value After Statement Execution": "Yes", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_int_t\nnxt_lib_start(const char *app, char **argv, char ***envp)\n{\n    int           n;\n    nxt_int_t     flags;\n    nxt_bool_t    update;\n    nxt_thread_t  *thread;\n\n    flags = nxt_stderr_start();\n\n    nxt_log_start(app);\n\n    nxt_pid = getpid();\n    nxt_ppid = getppid();\n    nxt_euid = geteuid();\n    nxt_egid = getegid();\n\n#if (NXT_DEBUG)\n\n    nxt_main_log.level = NXT_LOG_DEBUG;\n\n#if (NXT_HAVE_MALLOPT)\n    \n    mallopt(M_PERTURB, 0x55);\n#endif\n\n#if (NXT_MACOSX)\n    \n    setenv(\"MallocScribble\", \"1\", 0);\n#endif\n\n#endif \n\n    \n\n    nxt_thread_init_data(nxt_thread_context);\n    thread = nxt_thread();\n    thread->log = &nxt_main_log;\n\n    thread->handle = nxt_thread_handle();\n    thread->time.signal = -1;\n    nxt_thread_time_update(thread);\n\n    nxt_main_task.thread = thread;\n    nxt_main_task.log = thread->log;\n    nxt_main_task.ident = nxt_task_next_ident();\n\n    if (nxt_strerror_start() != NXT_OK) {\n        return NXT_ERROR;\n    }\n\n    if (flags != -1) {\n        nxt_debug(&nxt_main_task, \"stderr flags: 0x%04Xd\", flags);\n    }\n\n#ifdef _SC_NPROCESSORS_ONLN\n    \n    n = sysconf(_SC_NPROCESSORS_ONLN);\n\n#elif (NXT_HPUX)\n    n = mpctl(MPC_GETNUMSPUS, NULL, NULL);\n\n#else\n    n = 0;\n\n#endif\n\n    nxt_debug(&nxt_main_task, \"ncpu: %d\", n);\n\n    if (n > 1) {\n        nxt_ncpu = n;\n    }\n\n    nxt_thread_spin_init(nxt_ncpu, 0);\n\n    nxt_random_init(&thread->random);\n\n    nxt_pagesize = getpagesize();\n\n    nxt_debug(&nxt_main_task, \"pagesize: %ui\", nxt_pagesize);\n\n    if (argv != NULL) {\n        update = (argv[0] == app);\n\n        nxt_process_arguments(&nxt_main_task, argv, envp);\n\n        if (update) {\n            nxt_log_start(nxt_process_argv[0]);\n        }\n    }\n\n    return NXT_OK;\n", "Selected Statement": "if (update)", "Function Input": {"app": {"value": "0x622e00 <vtable for std::__Fuzzer::ios_base::failure+8> \"\\260.b\""}, "argv": {"value": {"type_category": "string", "concrete_type": "string", "value": "0x8c48348707e8b49 <error: Cannot access memory at address 0x8c48348707e8b49>"}}, "envp": {"value": null}}, "Variable Values Before Statement": {"update": "nxt_bool_t"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_int_t\nnxt_stderr_start(void)\n{\n    int  flags, fd;\n\n    flags = fcntl(nxt_stderr, F_GETFL);\n\n    if (flags != -1) {\n        \n        (void) fcntl(nxt_stderr, F_SETFL, flags | O_APPEND);\n\n    } else {\n        \n        fd = open(\"/dev/null\", O_WRONLY | O_APPEND);\n\n        if (fd != -1) {\n            (void) dup2(fd, nxt_stderr);\n\n            if (fd != nxt_stderr) {\n                (void) close(fd);\n            }\n        }\n    }\n\n", "Selected Statement": "if (err == NXT_EAGAIN)", "Function Input": {}, "Variable Values Before Statement": {"err": "NULL", "NXT_EAGAIN": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_int_t\nnxt_stderr_start(void)\n{\n    int  flags, fd;\n\n    flags = fcntl(nxt_stderr, F_GETFL);\n\n    if (flags != -1) {\n        \n        (void) fcntl(nxt_stderr, F_SETFL, flags | O_APPEND);\n\n    } else {\n        \n        fd = open(\"/dev/null\", O_WRONLY | O_APPEND);\n\n        if (fd != -1) {\n            (void) dup2(fd, nxt_stderr);\n\n            if (fd != nxt_stderr) {\n                (void) close(fd);\n            }\n        }\n    }\n\n", "Selected Statement": "if (nxt_fast_path(n >= 0))", "Function Input": {}, "Variable Values Before Statement": {"nxt_fast_path": "NULL", "n": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nnxt_monotonic_time(nxt_monotonic_time_t *now)\n{\n    struct timespec  ts;\n\n    (void) clock_gettime(CLOCK_MONOTONIC_COARSE, &ts);\n\n    now->monotonic = (nxt_nsec_t) ts.tv_sec * 1000000000 + ts.tv_nsec;\n", "Selected Statement": "if (getenv(\"TZ\") != NULL)", "Function Input": {"now": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"realtime": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"sec": {"type_category": "unknown", "concrete_type": "nxt_time_t", "value": "17259380"}, "nsec": {"type_category": "unknown", "concrete_type": "nxt_uint_t", "value": "0"}}}, "monotonic": {"type_category": "unknown", "concrete_type": "nxt_nsec_t", "value": "0"}, "update": {"type_category": "unknown", "concrete_type": "nxt_nsec_t", "value": "33"}}}}}, "Variable Values Before Statement": {"getenv": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nnxt_monotonic_time(nxt_monotonic_time_t *now)\n{\n    struct timespec  ts;\n\n    (void) clock_gettime(CLOCK_MONOTONIC_COARSE, &ts);\n\n    now->monotonic = (nxt_nsec_t) ts.tv_sec * 1000000000 + ts.tv_nsec;\n", "Selected Statement": "if (delta > 0)", "Function Input": {"now": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"realtime": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"sec": {"type_category": "unknown", "concrete_type": "nxt_time_t", "value": "17259380"}, "nsec": {"type_category": "unknown", "concrete_type": "nxt_uint_t", "value": "0"}}}, "monotonic": {"type_category": "unknown", "concrete_type": "nxt_nsec_t", "value": "0"}, "update": {"type_category": "unknown", "concrete_type": "nxt_nsec_t", "value": "33"}}}}}, "Variable Values Before Statement": {"delta": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_int_t\nnxt_strerror_start(void)\n{\n    char        *msg;\n    u_char      *p;\n    size_t      size, length, n;\n    nxt_uint_t  err, invalid;\n\n    \n    size = nxt_length(\"Unknown error\");\n\n    \n\n    for (invalid = 0; invalid < 100 && nxt_sys_nerr < 65536; nxt_sys_nerr++) {\n\n        nxt_set_errno(0);\n        msg = strerror((int) nxt_sys_nerr);\n\n        \n\n        if (msg == NULL) {\n            invalid++;\n            continue;\n        }\n\n        length = nxt_strlen(msg);\n        size += length;\n\n        if (length == 0  \n            || nxt_errno == NXT_EINVAL\n            || memcmp(msg, \"Unknown error\", 13) == 0)\n        {\n            invalid++;\n            continue;\n        }\n\n#if (NXT_AIX)\n\n        if (memcmp(msg, \"Error \", 6) == 0\n            && memcmp(msg + length - 10, \" occurred.\", 9) == 0)\n        {\n            invalid++;\n            continue;\n        }\n\n#endif\n    }\n\n    nxt_sys_nerr -= invalid;\n\n    nxt_main_log_debug(\"sys_nerr: %d\", nxt_sys_nerr);\n\n    n = (nxt_sys_nerr + 1) * sizeof(nxt_str_t);\n\n    nxt_sys_errlist = nxt_malloc(n + size);\n    if (nxt_sys_errlist == NULL) {\n        return NXT_ERROR;\n    }\n\n    p = nxt_pointer_to(nxt_sys_errlist, n);\n\n    for (err = 0; err < nxt_sys_nerr; err++) {\n        msg = strerror((int) err);\n        length = nxt_strlen(msg);\n\n        nxt_sys_errlist[err].length = length;\n        nxt_sys_errlist[err].start = p;\n\n        p = nxt_cpymem(p, msg, length);\n    }\n\n    nxt_sys_errlist[err].length = 13;\n    nxt_sys_errlist[err].start = p;\n    nxt_memcpy(p, \"Unknown error\", 13);\n\n    nxt_strerror = nxt_runtime_strerror;\n\n    return NXT_OK;\n", "Selected Statement": "if (nxt_sys_errlist == NULL)", "Function Input": {}, "Variable Values Before Statement": {"nxt_sys_errlist": {"length": "12297829382473034410", "start": "0xaaaaaaaaaaaaaaaa <error: Cannot access memory at address 0xaaaaaaaaaaaaaaaa>"}}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nnxt_thread_spin_init(nxt_uint_t ncpu, nxt_uint_t count)\n{\n    switch (ncpu) {\n\n    case 0:\n        \n        nxt_spinlock_count = count;\n        break;\n\n    case 1:\n        \n        nxt_spinlock_count = 0;\n        break;\n\n    default:\n        \n        nxt_spinlock_count = 1000;\n        break;\n    }\n", "Selected Statement": "if (nxt_fast_path(nxt_atomic_try_lock(lock)))", "Function Input": {"count": {"value": "17255408"}, "ncpu": {"value": "5"}}, "Variable Values Before Statement": {"nxt_fast_path": "NULL", "nxt_atomic_try_lock": "NULL", "lock": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nnxt_thread_spin_init(nxt_uint_t ncpu, nxt_uint_t count)\n{\n    switch (ncpu) {\n\n    case 0:\n        \n        nxt_spinlock_count = count;\n        break;\n\n    case 1:\n        \n        nxt_spinlock_count = 0;\n        break;\n\n    default:\n        \n        nxt_spinlock_count = 1000;\n        break;\n    }\n", "Selected Statement": "if (nxt_fast_path(nxt_atomic_try_lock(lock)))", "Function Input": {"count": {"value": "17255408"}, "ncpu": {"value": "5"}}, "Variable Values Before Statement": {"nxt_fast_path": "NULL", "nxt_atomic_try_lock": "NULL", "lock": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nnxt_random_init(nxt_random_t *r)\n{\n    nxt_random_start_schedule(r);\n\n    nxt_random_stir(r);\n", "Selected Statement": "if (getentropy(&key, NXT_RANDOM_KEY_SIZE) == 0)", "Function Input": {"r": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x14005e1979\n", "message": "Cannot access memory at address 0x14005e1979"}}}, "Variable Values Before Statement": {"getentropy": "NULL", "key": "NULL", "NXT_RANDOM_KEY_SIZE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nnxt_random_init(nxt_random_t *r)\n{\n    nxt_random_start_schedule(r);\n\n    nxt_random_stir(r);\n", "Selected Statement": "if (nxt_random(&r) == 0xD6270B27)", "Function Input": {"r": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x14005e1979\n", "message": "Cannot access memory at address 0x14005e1979"}}}, "Variable Values Before Statement": {"nxt_random": "NULL", "r": {"i": "255 '\\377'", "j": "207 '\\317'", "s": "\"\\233\\371\\325|vw%\\306\\b#(\\323\\2671\\362\\211J\\r\\265d\\0254\\210T\\230Wx\\226\\333\\224\\354'6@t\\004\\220\\366\\347\\243o\\201U\\005\\370\\352\\026e\\017k\\356*jn\\264\\311\\332!\\256[\\301\\000D7\\324\\240A\\271\\242\\330.O\\276\\241\\031\\023\\321\\227\\327<\\221\\237\\277c\\030\\216Vm\\231\\257\\372\\331\\334f\\212\\217\\225\\361\\020i\\2143r\\234\\322\\374l>\\314^\\251=\\016\\261?\\204\\375$]\\302\\037\\376\\273-G\\343EP\\\"p\\312\\365\\351\\247,SZ`BI\\307\\223\\t\\vR\\337\\\\\\006+z\\022\\27559\\313\\nY\\373\\200}F\\001_\\320\\202\\310\\033\\305\\f\\244\\336\\3468q\\232\\253\\345\\315&\\032\\270\\272\\2050\\316\\274\\260\\213\\266\\034\\021u\\304\\3602LX\\027\\341\\036\\357\\350\\300\\235h/\\254\\377~\\353\\002y;\\203C\\246\\003\\262\\340\\363\\252 \\303H\\326\\a\\344)\\342\\263\\250\\245\\255:\\215\\335\\024gN\\236\\367sM\\355b\\207\\035\\364K\\222a\\317\\177\\206{Q\"", "count": "400000"}}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_list_t *\nnxt_list_create(nxt_mp_t *mp, nxt_uint_t n, size_t size)\n{\n    nxt_list_t  *list;\n\n", "Selected Statement": "if (next->part != NULL)", "Function Input": {}, "Variable Values Before Statement": {"next->part": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_list_t *\nnxt_list_create(nxt_mp_t *mp, nxt_uint_t n, size_t size)\n{\n    nxt_list_t  *list;\n\n", "Selected Statement": "if (next->part->nelts != 0)", "Function Input": {}, "Variable Values Before Statement": {"next->part->nelts": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    return nxt_http_parse_fuzz(&nxt_http_request, &hash);\n}\n\nnxt_int_t nxt_http_parse_fuzz(nxt_str_t *request, nxt_lvlhsh_t *hash){\n\n    nxt_mp_t                  *mp;\n    nxt_buf_mem_t             buf;\n    nxt_http_request_parse_t  rp;\n\n    buf.start = request->start;\n    buf.end = request->start + request->length;\n\n    nxt_memzero(&rp, sizeof(nxt_http_request_parse_t));\n\n    mp = nxt_mp_create(1024, 128, 256, 32);\n\n", "Selected Statement": "if (nxt_slow_path(nxt_http_parse_request(&rp, &buf) == NXT_DONE))", "Function Input": {}, "Variable Values Before Statement": {"nxt_slow_path": "NULL", "nxt_http_parse_request": "NULL", "rp": {"handler": null, "method": null, "target_start": null, "target_end": null, "request_line_end": null, "path": null, "args": null, "version": null, "fields": null, "mem_pool": null, "field_name": null, "field_value": null, "field_hash": "0", "skip_field": "0 '\\000'", "discard_unsafe_fields": "0 '\\000'", "complex_target": "0 '\\000'", "quoted_target": "0 '\\000'", "encoded_slashes": "0 '\\000'"}, "buf": {"pos": "0x7fffffffde38 \"\\023\"", "free": "0x107d110 \"\"", "start": "0x107db60 \"GET /\\r HTTP/1.0\\r\\n\\r\\n\\252\\252\\252\\252\\252Q\"", "end": "0x107db73 \"\\252\\252\\252\\252\\252Q\""}, "NXT_DONE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    return nxt_http_parse_fuzz(&nxt_http_request, &hash);\n}\n\nnxt_int_t nxt_http_parse_fuzz(nxt_str_t *request, nxt_lvlhsh_t *hash){\n\n    nxt_mp_t                  *mp;\n    nxt_buf_mem_t             buf;\n    nxt_http_request_parse_t  rp;\n\n    buf.start = request->start;\n    buf.end = request->start + request->length;\n\n    nxt_memzero(&rp, sizeof(nxt_http_request_parse_t));\n\n    mp = nxt_mp_create(1024, 128, 256, 32);\n\n", "Selected Statement": "if (Size < kMinInputLength || Size > kMaxInputLength)", "Function Input": {}, "Variable Values Before Statement": {"Size": "NULL", "kMinInputLength": "NULL", "kMaxInputLength": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_int_t\nnxt_http_parse_request_init(nxt_http_request_parse_t *rp, nxt_mp_t *mp)\n{\n    rp->mem_pool = mp;\n\n", "Selected Statement": "if (nxt_slow_path(after_slash == p))", "Function Input": {}, "Variable Values Before Statement": {"nxt_slow_path": "NULL", "after_slash": "NULL", "p": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_int_t\nnxt_http_parse_request_init(nxt_http_request_parse_t *rp, nxt_mp_t *mp)\n{\n    rp->mem_pool = mp;\n\n", "Selected Statement": "if (nxt_slow_path(len > NXT_HTTP_MAX_FIELD_NAME))", "Function Input": {}, "Variable Values Before Statement": {"nxt_slow_path": "NULL", "len": "NULL", "NXT_HTTP_MAX_FIELD_NAME": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_int_t\nnxt_lvlhsh_insert(nxt_lvlhsh_t *lh, nxt_lvlhsh_query_t *lhq)\n{\n    uint32_t  key;\n\n    if (nxt_fast_path(lh->slot != NULL)) {\n\n        key = lhq->key_hash;\n\n        if (nxt_lvlhsh_is_bucket(lh->slot)) {\n            return nxt_lvlhsh_bucket_insert(lhq, &lh->slot, key, -1);\n        }\n\n        return nxt_lvlhsh_level_insert(lhq, &lh->slot, key, 0);\n    }\n\n    return nxt_lvlhsh_new_bucket(lhq, &lh->slot);\n", "Selected Statement": "if (nxt_lvlhsh_valid_entry(e))", "Function Input": {"lh": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x100000000001000\n", "message": "Cannot access memory at address 0x100000000001000"}}, "lhq": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1\n", "message": "Cannot access memory at address 0x1"}}}, "Variable Values Before Statement": {"nxt_lvlhsh_valid_entry": "NULL", "e": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nnxt_int_t\nnxt_lvlhsh_insert(nxt_lvlhsh_t *lh, nxt_lvlhsh_query_t *lhq)\n{\n    uint32_t  key;\n\n    if (nxt_fast_path(lh->slot != NULL)) {\n\n        key = lhq->key_hash;\n\n        if (nxt_lvlhsh_is_bucket(lh->slot)) {\n            return nxt_lvlhsh_bucket_insert(lhq, &lh->slot, key, -1);\n        }\n\n        return nxt_lvlhsh_level_insert(lhq, &lh->slot, key, 0);\n    }\n\n    return nxt_lvlhsh_new_bucket(lhq, &lh->slot);\n", "Selected Statement": "if (nxt_slow_path(lvl == NULL))", "Function Input": {"lh": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x100000000001000\n", "message": "Cannot access memory at address 0x100000000001000"}}, "lhq": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1\n", "message": "Cannot access memory at address 0x1"}}}, "Variable Values Before Statement": {"nxt_slow_path": "NULL", "lvl": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    \n", "Selected Statement": "if (!(roaring.high_low_container.flags & ROARING_FLAG_FROZEN))", "Function Input": {}, "Variable Values Before Statement": {"roaring.high_low_container.flags": "NULL", "ROARING_FLAG_FROZEN": "NULL"}, "Value After Statement Execution": "No", "Project Information": "croaring"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    \n", "Selected Statement": "if (portable)", "Function Input": {}, "Variable Values Before Statement": {"portable": "NULL"}, "Value After Statement Execution": "No", "Project Information": "croaring"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * The bitmap will be in a \"clear\" state, with no auxiliary allocations.\n * Since this performs no allocations, the function will not fail.\n */\n", "Selected Statement": "if (max <= min)", "Function Input": {}, "Variable Values Before Statement": {"max": "NULL", "min": "NULL"}, "Value After Statement Execution": "No", "Project Information": "croaring"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * The bitmap will be in a \"clear\" state, with no auxiliary allocations.\n * Since this performs no allocations, the function will not fail.\n */\n", "Selected Statement": "if (max <= min)", "Function Input": {}, "Variable Values Before Statement": {"max": "NULL", "min": "NULL"}, "Value After Statement Execution": "No", "Project Information": "croaring"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    return true;\n}\n\nbool ra_init_with_capacity(roaring_array_t *new_ra, uint32_t cap) {\n    if (!new_ra) return false;\n    ra_init(new_ra);\n\n    \n    \n    if (cap > 0x10000) {\n        cap = 0x10000;\n    }\n\n    if (cap > 0) {\n        void *bigalloc = roaring_malloc(\n            cap * (sizeof(uint16_t) + sizeof(container_t *) + sizeof(uint8_t)));\n        if (bigalloc == NULL) return false;\n        new_ra->containers = (container_t **)bigalloc;\n        new_ra->keys = (uint16_t *)(new_ra->containers + cap);\n        new_ra->typecodes = (uint8_t *)(new_ra->keys + cap);\n        \n        new_ra->allocation_size = (int32_t)cap;\n    }\n    return true;\n", "Selected Statement": "if (!new_ra)", "Function Input": {}, "Variable Values Before Statement": {"new_ra": {"size": "0", "allocation_size": "0", "containers": null, "keys": null, "typecodes": null, "flags": "0 '\\000'"}}, "Value After Statement Execution": "Yes", "Project Information": "croaring"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    return true;\n}\n\nbool ra_init_with_capacity(roaring_array_t *new_ra, uint32_t cap) {\n    if (!new_ra) return false;\n    ra_init(new_ra);\n\n    \n    \n    if (cap > 0x10000) {\n        cap = 0x10000;\n    }\n\n    if (cap > 0) {\n        void *bigalloc = roaring_malloc(\n            cap * (sizeof(uint16_t) + sizeof(container_t *) + sizeof(uint8_t)));\n        if (bigalloc == NULL) return false;\n        new_ra->containers = (container_t **)bigalloc;\n        new_ra->keys = (uint16_t *)(new_ra->containers + cap);\n        new_ra->typecodes = (uint8_t *)(new_ra->keys + cap);\n        \n        new_ra->allocation_size = (int32_t)cap;\n    }\n    return true;\n", "Selected Statement": "if (copy_on_write)", "Function Input": {}, "Variable Values Before Statement": {"copy_on_write": "NULL"}, "Value After Statement Execution": "No", "Project Information": "croaring"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid roaring_bitmap_add_many(roaring_bitmap_t *r, size_t n_args,\n                             const uint32_t *vals) {\n    uint32_t val;\n    const uint32_t *start = vals;\n    const uint32_t *end = vals + n_args;\n    const uint32_t *current_val = start;\n\n    if (n_args == 0) {\n        return;\n    }\n\n    uint8_t typecode;\n    int idx;\n    container_t *container;\n    val = *current_val;\n    container = containerptr_roaring_bitmap_add(r, val, &typecode, &idx);\n", "Selected Statement": "if (0 == length2)", "Function Input": {}, "Variable Values Before Statement": {"length2": "NULL"}, "Value After Statement Execution": "No", "Project Information": "croaring"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid roaring_bitmap_add_many(roaring_bitmap_t *r, size_t n_args,\n                             const uint32_t *vals) {\n    uint32_t val;\n    const uint32_t *start = vals;\n    const uint32_t *end = vals + n_args;\n    const uint32_t *current_val = start;\n\n    if (n_args == 0) {\n        return;\n    }\n\n    uint8_t typecode;\n    int idx;\n    container_t *container;\n    val = *current_val;\n    container = containerptr_roaring_bitmap_add(r, val, &typecode, &idx);\n", "Selected Statement": "if (min > max)", "Function Input": {}, "Variable Values Before Statement": {"min": "NULL", "max": "NULL"}, "Value After Statement Execution": "No", "Project Information": "croaring"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n\n", "Selected Statement": "if (v->cardinality == 0)", "Function Input": {}, "Variable Values Before Statement": {"v->cardinality": "NULL"}, "Value After Statement Execution": "No", "Project Information": "croaring"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n\n", "Selected Statement": "if (newcontainer == NULL)", "Function Input": {}, "Variable Values Before Statement": {"newcontainer": "NULL"}, "Value After Statement Execution": "No", "Project Information": "croaring"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    global_memory_hook = memory_hook;\n}\n\n", "Selected Statement": "if (posix_memalign(&p, alignment, size) != 0)", "Function Input": {}, "Variable Values Before Statement": {"posix_memalign": "NULL", "p": "NULL", "alignment": "NULL", "size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "croaring"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct window *\nwindow_create(u_int sx, u_int sy, u_int xpixel, u_int ypixel)\n{\n\tstruct window\t*w;\n\n\tif (xpixel == 0)\n\t\txpixel = DEFAULT_XPIXEL;\n\tif (ypixel == 0)\n\t\typixel = DEFAULT_YPIXEL;\n\n\tw = xcalloc(1, sizeof *w);\n\tw->name = xstrdup(\"\");\n\tw->flags = 0;\n\n\tTAILQ_INIT(&w->panes);\n\tTAILQ_INIT(&w->last_panes);\n\tw->active = NULL;\n\n\tw->lastlayout = -1;\n\tw->layout_root = NULL;\n\n\tw->sx = sx;\n\tw->sy = sy;\n\tw->manual_sx = sx;\n\tw->manual_sy = sy;\n\tw->xpixel = xpixel;\n\tw->ypixel = ypixel;\n\n\tw->options = options_create(global_w_options);\n\n\tw->references = 0;\n\tTAILQ_INIT(&w->winlinks);\n\n\tw->id = next_window_id++;\n\tRB_INSERT(windows, &windows, w);\n\n\twindow_set_fill_character(w);\n", "Selected Statement": "if (ypixel == 0)", "Function Input": {}, "Variable Values Before Statement": {"ypixel": "u_int"}, "Value After Statement Execution": "Yes", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct window *\nwindow_create(u_int sx, u_int sy, u_int xpixel, u_int ypixel)\n{\n\tstruct window\t*w;\n\n\tif (xpixel == 0)\n\t\txpixel = DEFAULT_XPIXEL;\n\tif (ypixel == 0)\n\t\typixel = DEFAULT_YPIXEL;\n\n\tw = xcalloc(1, sizeof *w);\n\tw->name = xstrdup(\"\");\n\tw->flags = 0;\n\n\tTAILQ_INIT(&w->panes);\n\tTAILQ_INIT(&w->last_panes);\n\tw->active = NULL;\n\n\tw->lastlayout = -1;\n\tw->layout_root = NULL;\n\n\tw->sx = sx;\n\tw->sy = sy;\n\tw->manual_sx = sx;\n\tw->manual_sy = sy;\n\tw->xpixel = xpixel;\n\tw->ypixel = ypixel;\n\n\tw->options = options_create(global_w_options);\n\n\tw->references = 0;\n\tTAILQ_INIT(&w->winlinks);\n\n\tw->id = next_window_id++;\n\tRB_INSERT(windows, &windows, w);\n\n\twindow_set_fill_character(w);\n", "Selected Statement": "if (xpixel == 0)", "Function Input": {}, "Variable Values Before Statement": {"xpixel": "u_int"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct window *\nwindow_create(u_int sx, u_int sy, u_int xpixel, u_int ypixel)\n{\n\tstruct window\t*w;\n\n\tif (xpixel == 0)\n\t\txpixel = DEFAULT_XPIXEL;\n\tif (ypixel == 0)\n\t\typixel = DEFAULT_YPIXEL;\n\n\tw = xcalloc(1, sizeof *w);\n\tw->name = xstrdup(\"\");\n\tw->flags = 0;\n\n\tTAILQ_INIT(&w->panes);\n\tTAILQ_INIT(&w->last_panes);\n\tw->active = NULL;\n\n\tw->lastlayout = -1;\n\tw->layout_root = NULL;\n\n\tw->sx = sx;\n\tw->sy = sy;\n\tw->manual_sx = sx;\n\tw->manual_sy = sy;\n\tw->xpixel = xpixel;\n\tw->ypixel = ypixel;\n\n\tw->options = options_create(global_w_options);\n\n\tw->references = 0;\n\tTAILQ_INIT(&w->winlinks);\n\n\tw->id = next_window_id++;\n\tRB_INSERT(windows, &windows, w);\n\n\twindow_set_fill_character(w);\n", "Selected Statement": "if (xpixel == 0)", "Function Input": {}, "Variable Values Before Statement": {"xpixel": "u_int"}, "Value After Statement Execution": "Yes", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct window *\nwindow_create(u_int sx, u_int sy, u_int xpixel, u_int ypixel)\n{\n\tstruct window\t*w;\n\n\tif (xpixel == 0)\n\t\txpixel = DEFAULT_XPIXEL;\n\tif (ypixel == 0)\n\t\typixel = DEFAULT_YPIXEL;\n\n\tw = xcalloc(1, sizeof *w);\n\tw->name = xstrdup(\"\");\n\tw->flags = 0;\n\n\tTAILQ_INIT(&w->panes);\n\tTAILQ_INIT(&w->last_panes);\n\tw->active = NULL;\n\n\tw->lastlayout = -1;\n\tw->layout_root = NULL;\n\n\tw->sx = sx;\n\tw->sy = sy;\n\tw->manual_sx = sx;\n\tw->manual_sy = sy;\n\tw->xpixel = xpixel;\n\tw->ypixel = ypixel;\n\n\tw->options = options_create(global_w_options);\n\n\tw->references = 0;\n\tTAILQ_INIT(&w->winlinks);\n\n\tw->id = next_window_id++;\n\tRB_INSERT(windows, &windows, w);\n\n\twindow_set_fill_character(w);\n", "Selected Statement": "if (w->flags & WINDOW_ZOOMED)", "Function Input": {}, "Variable Values Before Statement": {"w->flags": "0", "WINDOW_ZOOMED": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid *\nxcalloc(size_t nmemb, size_t size)\n{\n\tvoid *ptr;\n\n\tif (size == 0 || nmemb == 0)\n\t\tfatalx(\"xcalloc: zero size\");\n\tptr = calloc(nmemb, size);\n\tif (ptr == NULL)\n\t\tfatalx(\"xcalloc: allocating %zu * %zu bytes: %s\",\n\t\t    nmemb, size, strerror(errno));\n", "Selected Statement": "if (i == -1)", "Function Input": {}, "Variable Values Before Statement": {"i": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid *\nxcalloc(size_t nmemb, size_t size)\n{\n\tvoid *ptr;\n\n\tif (size == 0 || nmemb == 0)\n\t\tfatalx(\"xcalloc: zero size\");\n\tptr = calloc(nmemb, size);\n\tif (ptr == NULL)\n\t\tfatalx(\"xcalloc: allocating %zu * %zu bytes: %s\",\n\t\t    nmemb, size, strerror(errno));\n", "Selected Statement": "if (ptr == NULL)", "Function Input": {}, "Variable Values Before Statement": {"ptr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct options *\noptions_create(struct options *parent)\n{\n\tstruct options\t*oo;\n\n\too = xcalloc(1, sizeof *oo);\n\tRB_INIT(&oo->tree);\n\too->parent = parent;\n", "Selected Statement": "if (value == NULL || *value == '\\0')", "Function Input": {}, "Variable Values Before Statement": {"value": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct options *\noptions_create(struct options *parent)\n{\n\tstruct options\t*oo;\n\n\too = xcalloc(1, sizeof *oo);\n\tRB_INIT(&oo->tree);\n\too->parent = parent;\n", "Selected Statement": "if (oe->pattern != NULL && fnmatch(oe->pattern, value, 0) != 0)", "Function Input": {}, "Variable Values Before Statement": {"oe->pattern": "NULL", "fnmatch": "NULL", "value": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nalerts_queue(struct window *w, int flags)\n{\n", "Selected Statement": "if (s->curw != wl || s->attached == 0)", "Function Input": {}, "Variable Values Before Statement": {"s->curw": "NULL", "wl": "NULL", "s->attached": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nalerts_queue(struct window *w, int flags)\n{\n", "Selected Statement": "if (alerts_enabled(w, flags))", "Function Input": {}, "Variable Values Before Statement": {"alerts_enabled": "NULL", "w": {"id": "0", "latest": null, "name": "0x1139e70 \"\"", "name_event": null, "name_time": null, "alerts_timer": null, "offset_timer": null, "activity_time": null, "active": null, "last_panes": null, "panes": null, "lastlayout": "-1", "layout_root": null, "saved_layout_root": null, "old_layout": null, "sx": "80", "sy": "25", "manual_sx": "80", "manual_sy": "25", "xpixel": "16", "ypixel": "32", "new_sx": "0", "new_sy": "0", "new_xpixel": "0", "new_ypixel": "0", "fill_character": null, "flags": "0", "alerts_queued": "0", "alerts_entry": null, "options": null, "references": "0", "winlinks": null, "entry": null}, "flags": "int"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\tif (!(ev->ev_flags & EVLIST_INIT))\n\t\treturn 0;\n\n", "Selected Statement": "if (base->evbase == NULL)", "Function Input": {}, "Variable Values Before Statement": {"base->evbase": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\tif (!(ev->ev_flags & EVLIST_INIT))\n\t\treturn 0;\n\n", "Selected Statement": "if (base->nactivequeues)", "Function Input": {}, "Variable Values Before Statement": {"base->nactivequeues": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\ncolour_palette_init(struct colour_palette *p)\n{\n\tp->fg = 8;\n\tp->bg = 8;\n\tp->palette = NULL;\n\tp->default_palette = NULL;\n", "Selected Statement": "if (errstr != NULL)", "Function Input": {}, "Variable Values Before Statement": {"errstr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\ncolour_palette_init(struct colour_palette *p)\n{\n\tp->fg = 8;\n\tp->bg = 8;\n\tp->palette = NULL;\n\tp->default_palette = NULL;\n", "Selected Statement": "if (strcasecmp(s, \"default\") == 0)", "Function Input": {}, "Variable Values Before Statement": {"strcasecmp": "NULL", "s": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nscreen_init(struct screen *s, u_int sx, u_int sy, u_int hlimit)\n{\n\ts->grid = grid_create(sx, sy, hlimit);\n\ts->saved_grid = NULL;\n\n\ts->title = xstrdup(\"\");\n\ts->titles = NULL;\n\ts->path = NULL;\n\n\ts->cstyle = SCREEN_CURSOR_DEFAULT;\n\ts->default_cstyle = SCREEN_CURSOR_DEFAULT;\n\ts->mode = MODE_CURSOR;\n\ts->default_mode = 0;\n\ts->ccolour = -1;\n\ts->default_ccolour = -1;\n\ts->tabs = NULL;\n\ts->sel = NULL;\n\n#ifdef ENABLE_SIXEL\n\tTAILQ_INIT(&s->images);\n#endif\n\n\ts->write_list = NULL;\n\ts->hyperlinks = NULL;\n\n\tscreen_reinit(s);\n", "Selected Statement": "if (mode & MODE_KKEYPAD)", "Function Input": {"s": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"title": {"type_category": "string", "concrete_type": "string", "value": "0x800000008 <error: Cannot access memory at address 0x800000008>"}, "path": {"type_category": "string", "concrete_type": "NULL"}, "titles": {"type_category": "pointer", "concrete_type": "NULL"}, "grid": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x26ebb10", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xffffffff\n", "message": "Cannot access memory at address 0xffffffff"}}, "cx": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}, "cy": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}, "cstyle": {"type_category": "unknown", "concrete_type": "screen_cursor_style", "value": "SCREEN_CURSOR_DEFAULT"}, "default_cstyle": {"type_category": "unknown", "concrete_type": "screen_cursor_style", "value": "SCREEN_CURSOR_DEFAULT"}, "ccolour": {"type_category": "int", "concrete_type": "int", "value": "0"}, "default_ccolour": {"type_category": "int", "concrete_type": "int", "value": "0"}, "rupper": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}, "rlower": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}, "mode": {"type_category": "int", "concrete_type": "int", "value": "0"}, "default_mode": {"type_category": "int", "concrete_type": "int", "value": "0"}, "saved_cx": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}, "saved_cy": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}, "saved_grid": {"type_category": "pointer", "concrete_type": "NULL"}, "saved_cell": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"data": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"data": {"type_category": "string", "concrete_type": "string", "value": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\""}, "have": {"type_category": "unknown", "concrete_type": "u_char", "value": "0 '\\000'"}, "size": {"type_category": "unknown", "concrete_type": "u_char", "value": "0 '\\000'"}, "width": {"type_category": "unknown", "concrete_type": "u_char", "value": "0 '\\000'"}}}, "attr": {"type_category": "unknown", "concrete_type": "u_short", "value": "0"}, "flags": {"type_category": "unknown", "concrete_type": "u_char", "value": "0 '\\000'"}, "fg": {"type_category": "int", "concrete_type": "int", "value": "0"}, "bg": {"type_category": "int", "concrete_type": "int", "value": "0"}, "us": {"type_category": "int", "concrete_type": "int", "value": "0"}, "link": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}}}, "saved_flags": {"type_category": "int", "concrete_type": "int", "value": "0"}, "tabs": {"type_category": "string", "concrete_type": "NULL"}, "sel": {"type_category": "pointer", "concrete_type": "NULL"}, "write_list": {"type_category": "pointer", "concrete_type": "NULL"}, "hyperlinks": {"type_category": "pointer", "concrete_type": "NULL"}}}}}, "Variable Values Before Statement": {"mode": "NULL", "MODE_KKEYPAD": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nscreen_init(struct screen *s, u_int sx, u_int sy, u_int hlimit)\n{\n\ts->grid = grid_create(sx, sy, hlimit);\n\ts->saved_grid = NULL;\n\n\ts->title = xstrdup(\"\");\n\ts->titles = NULL;\n\ts->path = NULL;\n\n\ts->cstyle = SCREEN_CURSOR_DEFAULT;\n\ts->default_cstyle = SCREEN_CURSOR_DEFAULT;\n\ts->mode = MODE_CURSOR;\n\ts->default_mode = 0;\n\ts->ccolour = -1;\n\ts->default_ccolour = -1;\n\ts->tabs = NULL;\n\ts->sel = NULL;\n\n#ifdef ENABLE_SIXEL\n\tTAILQ_INIT(&s->images);\n#endif\n\n\ts->write_list = NULL;\n\ts->hyperlinks = NULL;\n\n\tscreen_reinit(s);\n", "Selected Statement": "if (py > sel->sy || py < sel->ey)", "Function Input": {"s": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"title": {"type_category": "string", "concrete_type": "string", "value": "0x800000008 <error: Cannot access memory at address 0x800000008>"}, "path": {"type_category": "string", "concrete_type": "NULL"}, "titles": {"type_category": "pointer", "concrete_type": "NULL"}, "grid": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x26ebb10", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xffffffff\n", "message": "Cannot access memory at address 0xffffffff"}}, "cx": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}, "cy": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}, "cstyle": {"type_category": "unknown", "concrete_type": "screen_cursor_style", "value": "SCREEN_CURSOR_DEFAULT"}, "default_cstyle": {"type_category": "unknown", "concrete_type": "screen_cursor_style", "value": "SCREEN_CURSOR_DEFAULT"}, "ccolour": {"type_category": "int", "concrete_type": "int", "value": "0"}, "default_ccolour": {"type_category": "int", "concrete_type": "int", "value": "0"}, "rupper": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}, "rlower": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}, "mode": {"type_category": "int", "concrete_type": "int", "value": "0"}, "default_mode": {"type_category": "int", "concrete_type": "int", "value": "0"}, "saved_cx": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}, "saved_cy": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}, "saved_grid": {"type_category": "pointer", "concrete_type": "NULL"}, "saved_cell": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"data": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"data": {"type_category": "string", "concrete_type": "string", "value": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\""}, "have": {"type_category": "unknown", "concrete_type": "u_char", "value": "0 '\\000'"}, "size": {"type_category": "unknown", "concrete_type": "u_char", "value": "0 '\\000'"}, "width": {"type_category": "unknown", "concrete_type": "u_char", "value": "0 '\\000'"}}}, "attr": {"type_category": "unknown", "concrete_type": "u_short", "value": "0"}, "flags": {"type_category": "unknown", "concrete_type": "u_char", "value": "0 '\\000'"}, "fg": {"type_category": "int", "concrete_type": "int", "value": "0"}, "bg": {"type_category": "int", "concrete_type": "int", "value": "0"}, "us": {"type_category": "int", "concrete_type": "int", "value": "0"}, "link": {"type_category": "unknown", "concrete_type": "u_int", "value": "0"}}}, "saved_flags": {"type_category": "int", "concrete_type": "int", "value": "0"}, "tabs": {"type_category": "string", "concrete_type": "NULL"}, "sel": {"type_category": "pointer", "concrete_type": "NULL"}, "write_list": {"type_category": "pointer", "concrete_type": "NULL"}, "hyperlinks": {"type_category": "pointer", "concrete_type": "NULL"}}}}}, "Variable Values Before Statement": {"py": "NULL", "sel->sy": "NULL", "sel->ey": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct grid *\ngrid_create(u_int sx, u_int sy, u_int hlimit)\n{\n\tstruct grid\t*gd;\n\n\tgd = xmalloc(sizeof *gd);\n\tgd->sx = sx;\n\tgd->sy = sy;\n\n\tif (hlimit != 0)\n\t\tgd->flags = GRID_HISTORY;\n\telse\n\t\tgd->flags = 0;\n\n\tgd->hscrolled = 0;\n\tgd->hsize = 0;\n\tgd->hlimit = hlimit;\n\n\tif (gd->sy != 0)\n\t\tgd->linedata = xcalloc(gd->sy, sizeof *gd->linedata);\n\telse\n\t\tgd->linedata = NULL;\n\n", "Selected Statement": "if (gd->sy != 0)", "Function Input": {}, "Variable Values Before Statement": {"gd->sy": "25"}, "Value After Statement Execution": "Yes", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct grid *\ngrid_create(u_int sx, u_int sy, u_int hlimit)\n{\n\tstruct grid\t*gd;\n\n\tgd = xmalloc(sizeof *gd);\n\tgd->sx = sx;\n\tgd->sy = sy;\n\n\tif (hlimit != 0)\n\t\tgd->flags = GRID_HISTORY;\n\telse\n\t\tgd->flags = 0;\n\n\tgd->hscrolled = 0;\n\tgd->hsize = 0;\n\tgd->hlimit = hlimit;\n\n\tif (gd->sy != 0)\n\t\tgd->linedata = xcalloc(gd->sy, sizeof *gd->linedata);\n\telse\n\t\tgd->linedata = NULL;\n\n", "Selected Statement": "if (gd->hsize == 0 || gd->hsize < gd->hlimit)", "Function Input": {}, "Variable Values Before Statement": {"gd->hsize": "0", "gd->hlimit": "0"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct grid *\ngrid_create(u_int sx, u_int sy, u_int hlimit)\n{\n\tstruct grid\t*gd;\n\n\tgd = xmalloc(sizeof *gd);\n\tgd->sx = sx;\n\tgd->sy = sy;\n\n\tif (hlimit != 0)\n\t\tgd->flags = GRID_HISTORY;\n\telse\n\t\tgd->flags = 0;\n\n\tgd->hscrolled = 0;\n\tgd->hsize = 0;\n\tgd->hlimit = hlimit;\n\n\tif (gd->sy != 0)\n\t\tgd->linedata = xcalloc(gd->sy, sizeof *gd->linedata);\n\telse\n\t\tgd->linedata = NULL;\n\n", "Selected Statement": "if (px + 1 > gl->cellused)", "Function Input": {}, "Variable Values Before Statement": {"px": "NULL", "gl->cellused": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct hyperlinks *\nhyperlinks_init(void)\n{\n\tstruct hyperlinks\t*hl;\n\n\thl = xcalloc(1, sizeof *hl);\n\thl->next_inner = 1;\n\tRB_INIT(&hl->by_uri);\n\tRB_INIT(&hl->by_inner);\n", "Selected Statement": "if (*right->internal_id != '\\0')", "Function Input": {}, "Variable Values Before Statement": {"right->internal_id": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct hyperlinks *\nhyperlinks_init(void)\n{\n\tstruct hyperlinks\t*hl;\n\n\thl = xcalloc(1, sizeof *hl);\n\thl->next_inner = 1;\n\tRB_INIT(&hl->by_uri);\n\tRB_INIT(&hl->by_inner);\n", "Selected Statement": "if (r != 0)", "Function Input": {}, "Variable Values Before Statement": {"r": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\nutf8_isvalid(const char *s)\n{\n\tstruct utf8_data ud;\n\tconst char\t*end;\n\tenum utf8_state\t more;\n\n\tend = s + strlen(s);\n\twhile (s < end) {\n\t\tif ((more = utf8_open(&ud, *s)) == UTF8_MORE) {\n\t\t\twhile (++s < end && more == UTF8_MORE)\n\t\t\t\tmore = utf8_append(&ud, *s);\n\t\t\tif (more == UTF8_DONE)\n\t\t\t\tcontinue;\n\t\t\treturn (0);\n\t\t}\n\t\tif (*s < 0x20 || *s > 0x7e)\n\t\t\treturn (0);\n\t\ts++;\n\t}\n\treturn (1);\n", "Selected Statement": "if (ud->have >= ud->size)", "Function Input": {}, "Variable Values Before Statement": {"ud->have": "NULL", "ud->size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\nutf8_isvalid(const char *s)\n{\n\tstruct utf8_data ud;\n\tconst char\t*end;\n\tenum utf8_state\t more;\n\n\tend = s + strlen(s);\n\twhile (s < end) {\n\t\tif ((more = utf8_open(&ud, *s)) == UTF8_MORE) {\n\t\t\twhile (++s < end && more == UTF8_MORE)\n\t\t\t\tmore = utf8_append(&ud, *s);\n\t\t\tif (more == UTF8_DONE)\n\t\t\t\tcontinue;\n\t\t\treturn (0);\n\t\t}\n\t\tif (*s < 0x20 || *s > 0x7e)\n\t\t\treturn (0);\n\t\ts++;\n\t}\n\treturn (1);\n", "Selected Statement": "if (src[0] == '$' && src < end - 1)", "Function Input": {}, "Variable Values Before Statement": {"src": "NULL", "end": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\tint tmp_options;\n\n\toptions |= BEV_OPT_DEFER_CALLBACKS;\n", "Selected Statement": "if (bev_p->unlinked_partner && bev_p->bev.own_lock)", "Function Input": {}, "Variable Values Before Statement": {"bev_p->unlinked_partner": "NULL", "bev_p->bev.own_lock": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\tint tmp_options;\n\n\toptions |= BEV_OPT_DEFER_CALLBACKS;\n", "Selected Statement": "if (mode == BEV_FINISHED)", "Function Input": {}, "Variable Values Before Statement": {"mode": "NULL", "BEV_FINISHED": "NULL"}, "Value After Statement Execution": "No", "Project Information": "tmux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\n\nint stun_is_command_message_str(const uint8_t *buf, size_t blen) {\n  if (buf && blen >= STUN_HEADER_LENGTH) {\n    if (!STUN_VALID_CHANNEL(nswap16(((const uint16_t *)buf)[0]))) {\n      if ((((uint8_t)buf[0]) & ((uint8_t)(0xC0))) == 0) {\n        if (nswap32(((const uint32_t *)(buf))[1]) == STUN_MAGIC_COOKIE) {\n          uint16_t len = nswap16(((const uint16_t *)(buf))[1]);\n          if ((len & 0x0003) == 0) {\n            if ((size_t)(len + STUN_HEADER_LENGTH) == blen) {\n              return 1;\n            }\n          }\n        }\n      }\n    }\n  }\n  return 0;\n", "Selected Statement": "if ((((uint8_t)buf[0]) & ((uint8_t)(0xC0))) == 0)", "Function Input": {}, "Variable Values Before Statement": {"buf": "0x7ffffffede64 \"\""}, "Value After Statement Execution": "Yes", "Project Information": "coturn"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\n\nint stun_is_command_message_str(const uint8_t *buf, size_t blen) {\n  if (buf && blen >= STUN_HEADER_LENGTH) {\n    if (!STUN_VALID_CHANNEL(nswap16(((const uint16_t *)buf)[0]))) {\n      if ((((uint8_t)buf[0]) & ((uint8_t)(0xC0))) == 0) {\n        if (nswap32(((const uint32_t *)(buf))[1]) == STUN_MAGIC_COOKIE) {\n          uint16_t len = nswap16(((const uint16_t *)(buf))[1]);\n          if ((len & 0x0003) == 0) {\n            if ((size_t)(len + STUN_HEADER_LENGTH) == blen) {\n              return 1;\n            }\n          }\n        }\n      }\n    }\n  }\n  return 0;\n", "Selected Statement": "if (nswap32(((const uint32_t *)(buf))[1]) == STUN_MAGIC_COOKIE)", "Function Input": {}, "Variable Values Before Statement": {"nswap32": "NULL", "buf": "0x7ffffffede64 \"\"", "STUN_MAGIC_COOKIE": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "coturn"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\n\nint stun_is_command_message_str(const uint8_t *buf, size_t blen) {\n  if (buf && blen >= STUN_HEADER_LENGTH) {\n    if (!STUN_VALID_CHANNEL(nswap16(((const uint16_t *)buf)[0]))) {\n      if ((((uint8_t)buf[0]) & ((uint8_t)(0xC0))) == 0) {\n        if (nswap32(((const uint32_t *)(buf))[1]) == STUN_MAGIC_COOKIE) {\n          uint16_t len = nswap16(((const uint16_t *)(buf))[1]);\n          if ((len & 0x0003) == 0) {\n            if ((size_t)(len + STUN_HEADER_LENGTH) == blen) {\n              return 1;\n            }\n          }\n        }\n      }\n    }\n  }\n  return 0;\n", "Selected Statement": "if (!HMAC(EVP_sha256(), key, (int)keylen, buf, len, hmac, hmac_len))", "Function Input": {}, "Variable Values Before Statement": {"HMAC": "NULL", "EVP_sha256": "NULL", "key": "NULL", "keylen": "NULL", "buf": "NULL", "len": "NULL", "hmac": "NULL", "hmac_len": "NULL"}, "Value After Statement Execution": "No", "Project Information": "coturn"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\n\nint stun_is_command_message_str(const uint8_t *buf, size_t blen) {\n  if (buf && blen >= STUN_HEADER_LENGTH) {\n    if (!STUN_VALID_CHANNEL(nswap16(((const uint16_t *)buf)[0]))) {\n      if ((((uint8_t)buf[0]) & ((uint8_t)(0xC0))) == 0) {\n        if (nswap32(((const uint32_t *)(buf))[1]) == STUN_MAGIC_COOKIE) {\n          uint16_t len = nswap16(((const uint16_t *)(buf))[1]);\n          if ((len & 0x0003) == 0) {\n            if ((size_t)(len + STUN_HEADER_LENGTH) == blen) {\n              return 1;\n            }\n          }\n        }\n      }\n    }\n  }\n  return 0;\n", "Selected Statement": "if (r & 1)", "Function Input": {}, "Variable Values Before Statement": {"r": "NULL"}, "Value After Statement Execution": "No", "Project Information": "coturn"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static int\nalloc_exec(OnigEncoding enc, OnigOptionType options, OnigSyntaxType* syntax,\n           int backward, int pattern_size, size_t rem_size, unsigned char *data)\n{\n  extern int onig_detect_can_be_slow_pattern(const UChar* pattern, const UChar* pattern_end, OnigOptionType option, OnigEncoding enc, OnigSyntaxType* syntax);\n\n  int r;\n  int sl;\n  int data_pattern_size;\n  unsigned char *pattern;\n  unsigned char *pattern_end;\n  unsigned char *data_pattern;\n  unsigned char *data_pattern_end;\n  unsigned char *str_null_end;\n\n#ifdef TEST_PATTERN\n  pattern = (unsigned char *)malloc(sizeof(TestPattern));\n  memcpy(pattern, TestPattern, sizeof(TestPattern));\n  pattern_end = pattern + sizeof(TestPattern);\n#else\n  pattern = (unsigned char *)malloc(pattern_size != 0 ? pattern_size : 1);\n  pattern_end = pattern + pattern_size;\n  memcpy(pattern, data, pattern_size);\n#endif\n\n  sl = onig_detect_can_be_slow_pattern(pattern, pattern_end, options, enc, syntax);\n#ifdef STANDALONE\n  fprintf(stdout, \"sl: %d\\n\", sl);\n#endif\n\n  data_pattern_size = fix_size(pattern_size, enc, sl, backward);\n\n  if (\n#ifdef TEST_PATTERN\n      1 ||\n#endif\n      data_pattern_size != pattern_size) {\n    data_pattern = (unsigned char *)malloc(data_pattern_size != 0\n                                           ? data_pattern_size : 1);\n    data_pattern_end = data_pattern + data_pattern_size;\n    memcpy(data_pattern, data, data_pattern_size);\n  }\n  else {\n    data_pattern     = pattern;\n    data_pattern_end = pattern_end;\n  }\n\n  data += pattern_size;\n  rem_size -= pattern_size;\n  rem_size = fix_size(rem_size, enc, sl, backward);\n#ifdef STANDALONE\n  fprintf(stdout, \"rem_size: %ld\\n\", rem_size);\n#endif\n\n  unsigned char *str = (unsigned char*)malloc(rem_size != 0 ? rem_size : 1);\n  memcpy(str, data, rem_size);\n  str_null_end = str + rem_size;\n\n  r = exec(enc, options, syntax,\n           (char* )pattern,      (char* )pattern_end,\n           (char* )data_pattern, (char* )data_pattern_end,\n           (char* )str, str_null_end, backward, sl);\n\n  if (data_pattern != pattern)\n    free(data_pattern);\n\n  free(pattern);\n  free(str);\n  return r;\n}\n\n#ifdef PREV_CONTROL\n#ifdef SYNTAX_TEST\n#define NUM_CONTROL_BYTES      7\n#else\n#define NUM_CONTROL_BYTES      6\n#endif\n#else\n#ifdef SYNTAX_TEST\n#define NUM_CONTROL_BYTES      8\n#else\n#define NUM_CONTROL_BYTES      7\n#endif\n#endif\n\nint LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)\n{\n#if !defined(UTF16_BE) && !defined(UTF16_LE)\n  static OnigEncoding encodings[] = {\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_ASCII,\n    ONIG_ENCODING_EUC_JP,\n    ONIG_ENCODING_EUC_TW,\n    ONIG_ENCODING_EUC_KR,\n    ONIG_ENCODING_EUC_CN,\n    ONIG_ENCODING_SJIS,\n    ONIG_ENCODING_KOI8_R,\n    ONIG_ENCODING_CP1251,\n    ONIG_ENCODING_BIG5,\n    ONIG_ENCODING_GB18030,\n    ONIG_ENCODING_UTF16_BE,\n    ONIG_ENCODING_UTF16_LE,\n    ONIG_ENCODING_UTF16_BE,\n    ONIG_ENCODING_UTF16_LE,\n    ONIG_ENCODING_UTF32_BE,\n    ONIG_ENCODING_UTF32_LE,\n    ONIG_ENCODING_UTF32_BE,\n    ONIG_ENCODING_UTF32_LE,\n    ONIG_ENCODING_ISO_8859_1,\n    ONIG_ENCODING_ISO_8859_2,\n    ONIG_ENCODING_ISO_8859_3,\n    ONIG_ENCODING_ISO_8859_4,\n    ONIG_ENCODING_ISO_8859_5,\n    ONIG_ENCODING_ISO_8859_6,\n    ONIG_ENCODING_ISO_8859_7,\n    ONIG_ENCODING_ISO_8859_8,\n    ONIG_ENCODING_ISO_8859_9,\n    ONIG_ENCODING_ISO_8859_10,\n    ONIG_ENCODING_ISO_8859_11,\n    ONIG_ENCODING_ISO_8859_13,\n    ONIG_ENCODING_ISO_8859_14,\n    ONIG_ENCODING_ISO_8859_15,\n    ONIG_ENCODING_ISO_8859_16\n  };\n  unsigned char encoding_choice;\n#endif\n\n#ifdef SYNTAX_TEST\n  static OnigSyntaxType* syntaxes[] = {\n    ONIG_SYNTAX_POSIX_EXTENDED,\n    ONIG_SYNTAX_EMACS,\n    ONIG_SYNTAX_GREP,\n    ONIG_SYNTAX_GNU_REGEX,\n    ONIG_SYNTAX_JAVA,\n    ONIG_SYNTAX_PERL_NG,\n    ONIG_SYNTAX_PYTHON,\n    ONIG_SYNTAX_ONIGURUMA\n  };\n\n#ifdef STANDALONE\n  static char* syntax_names[] = {\n    \"Posix Extended\",\n    \"Emacs\",\n    \"Grep\",\n    \"GNU Regex\",\n    \"Java\",\n    \"Perl+NG\",\n    \"Python\",\n    \"Oniguruma\"\n  };\n#endif\n\n  unsigned char syntax_choice;\n#endif\n\n  int r;\n  int backward;\n  int pattern_size;\n  size_t rem_size;\n  unsigned char *data;\n  unsigned char pattern_size_choice;\n  OnigOptionType  options;\n  OnigEncoding    enc;\n  OnigSyntaxType* syntax;\n\n#ifndef STANDALONE\n#ifdef EXEC_PRINT_INTERVAL\n  static FILE* STAT_FP;\n#endif\n#endif\n\n  INPUT_COUNT++;\n\n#ifdef DUMP_DATA_INTERVAL\n  if (INPUT_COUNT % DUMP_DATA_INTERVAL == 0) {\n    char path[20];\n    sprintf(path, \"dump-%ld\", INPUT_COUNT);\n    dump_file(path, (unsigned char* )Data, Size);\n  }\n#endif\n\n  if (Size < NUM_CONTROL_BYTES) return 0;\n\n  rem_size = Size;\n  data = (unsigned char* )(Data);\n\n#ifdef UTF16_BE\n  enc = ONIG_ENCODING_UTF16_BE;\n#else\n#ifdef UTF16_LE\n  enc = ONIG_ENCODING_UTF16_LE;\n#else\n  encoding_choice = data[0];\n  data++;\n  rem_size--;\n\n  int num_encodings = sizeof(encodings)/sizeof(encodings[0]);\n  enc = encodings[encoding_choice % num_encodings];\n#endif\n#endif\n\n#ifdef SYNTAX_TEST\n  syntax_choice = data[0];\n  data++;\n  rem_size--;\n\n  int num_syntaxes = sizeof(syntaxes)/sizeof(syntaxes[0]);\n  syntax = syntaxes[syntax_choice % num_syntaxes];\n#else\n  syntax = ONIG_SYNTAX_DEFAULT;\n#endif\n\n#ifdef PREV_CONTROL\n  if ((data[2] & 0xc0) == 0)\n    options = data[0] | (data[1] << 8) | (data[2] << 16);\n#else\n  if ((data[3] & 0xc0) == 0)\n    options = data[0] | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);\n#endif\n  else\n    options = data[0] & ONIG_OPTION_IGNORECASE;\n\n  data++; rem_size--;\n  data++; rem_size--;\n  data++; rem_size--;\n#ifndef PREV_CONTROL\n  data++; rem_size--;\n#endif\n\n  pattern_size_choice = data[0];\n  data++; rem_size--;\n\n  backward = (data[0] == 0xbb);\n  data++; rem_size--;\n\n  if (backward != 0) {\n    options = options & ~ONIG_OPTION_FIND_LONGEST;\n  }\n\n  if (rem_size == 0)\n    pattern_size = 0;\n  else {\n    pattern_size = (int )pattern_size_choice % rem_size;\n    ADJUST_LEN(enc, pattern_size);\n  }\n\n#ifdef STANDALONE\n  {\n    char soptions[33];\n\n    dump_data(stdout, data, pattern_size);\n    to_binary(options, soptions);\n#ifdef SYNTAX_TEST\n    fprintf(stdout,\n            \"enc: %s, syntax: %s, pattern_size: %d, back:%d\\noptions: %s\\n\",\n            ONIGENC_NAME(enc),\n            syntax_names[syntax_choice % num_syntaxes],\n            pattern_size, backward, soptions);\n#else\n    fprintf(stdout, \"enc: %s, pattern_size: %d, back:%d\\noptions: %s\\n\",\n            ONIGENC_NAME(enc), pattern_size, backward, soptions);\n#endif\n\n    print_options(stdout, options);\n    fprintf(stdout, \"\\n\");\n  }\n#endif\n\n#ifdef DUMP_INPUT\n  dump_input((unsigned char* )Data, Size);\n#endif\n\n", "Selected Statement": "if ((o & ONIG_OPTION_DONT_CAPTURE_GROUP) != 0)", "Function Input": {}, "Variable Values Before Statement": {"o": "NULL", "ONIG_OPTION_DONT_CAPTURE_GROUP": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static int\nalloc_exec(OnigEncoding enc, OnigOptionType options, OnigSyntaxType* syntax,\n           int backward, int pattern_size, size_t rem_size, unsigned char *data)\n{\n  extern int onig_detect_can_be_slow_pattern(const UChar* pattern, const UChar* pattern_end, OnigOptionType option, OnigEncoding enc, OnigSyntaxType* syntax);\n\n  int r;\n  int sl;\n  int data_pattern_size;\n  unsigned char *pattern;\n  unsigned char *pattern_end;\n  unsigned char *data_pattern;\n  unsigned char *data_pattern_end;\n  unsigned char *str_null_end;\n\n#ifdef TEST_PATTERN\n  pattern = (unsigned char *)malloc(sizeof(TestPattern));\n  memcpy(pattern, TestPattern, sizeof(TestPattern));\n  pattern_end = pattern + sizeof(TestPattern);\n#else\n  pattern = (unsigned char *)malloc(pattern_size != 0 ? pattern_size : 1);\n  pattern_end = pattern + pattern_size;\n  memcpy(pattern, data, pattern_size);\n#endif\n\n  sl = onig_detect_can_be_slow_pattern(pattern, pattern_end, options, enc, syntax);\n#ifdef STANDALONE\n  fprintf(stdout, \"sl: %d\\n\", sl);\n#endif\n\n  data_pattern_size = fix_size(pattern_size, enc, sl, backward);\n\n  if (\n#ifdef TEST_PATTERN\n      1 ||\n#endif\n      data_pattern_size != pattern_size) {\n    data_pattern = (unsigned char *)malloc(data_pattern_size != 0\n                                           ? data_pattern_size : 1);\n    data_pattern_end = data_pattern + data_pattern_size;\n    memcpy(data_pattern, data, data_pattern_size);\n  }\n  else {\n    data_pattern     = pattern;\n    data_pattern_end = pattern_end;\n  }\n\n  data += pattern_size;\n  rem_size -= pattern_size;\n  rem_size = fix_size(rem_size, enc, sl, backward);\n#ifdef STANDALONE\n  fprintf(stdout, \"rem_size: %ld\\n\", rem_size);\n#endif\n\n  unsigned char *str = (unsigned char*)malloc(rem_size != 0 ? rem_size : 1);\n  memcpy(str, data, rem_size);\n  str_null_end = str + rem_size;\n\n  r = exec(enc, options, syntax,\n           (char* )pattern,      (char* )pattern_end,\n           (char* )data_pattern, (char* )data_pattern_end,\n           (char* )str, str_null_end, backward, sl);\n\n  if (data_pattern != pattern)\n    free(data_pattern);\n\n  free(pattern);\n  free(str);\n  return r;\n}\n\n#ifdef PREV_CONTROL\n#ifdef SYNTAX_TEST\n#define NUM_CONTROL_BYTES      7\n#else\n#define NUM_CONTROL_BYTES      6\n#endif\n#else\n#ifdef SYNTAX_TEST\n#define NUM_CONTROL_BYTES      8\n#else\n#define NUM_CONTROL_BYTES      7\n#endif\n#endif\n\nint LLVMFuzzerTestOneInput(const uint8_t * Data, size_t Size)\n{\n#if !defined(UTF16_BE) && !defined(UTF16_LE)\n  static OnigEncoding encodings[] = {\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_UTF8,\n    ONIG_ENCODING_ASCII,\n    ONIG_ENCODING_EUC_JP,\n    ONIG_ENCODING_EUC_TW,\n    ONIG_ENCODING_EUC_KR,\n    ONIG_ENCODING_EUC_CN,\n    ONIG_ENCODING_SJIS,\n    ONIG_ENCODING_KOI8_R,\n    ONIG_ENCODING_CP1251,\n    ONIG_ENCODING_BIG5,\n    ONIG_ENCODING_GB18030,\n    ONIG_ENCODING_UTF16_BE,\n    ONIG_ENCODING_UTF16_LE,\n    ONIG_ENCODING_UTF16_BE,\n    ONIG_ENCODING_UTF16_LE,\n    ONIG_ENCODING_UTF32_BE,\n    ONIG_ENCODING_UTF32_LE,\n    ONIG_ENCODING_UTF32_BE,\n    ONIG_ENCODING_UTF32_LE,\n    ONIG_ENCODING_ISO_8859_1,\n    ONIG_ENCODING_ISO_8859_2,\n    ONIG_ENCODING_ISO_8859_3,\n    ONIG_ENCODING_ISO_8859_4,\n    ONIG_ENCODING_ISO_8859_5,\n    ONIG_ENCODING_ISO_8859_6,\n    ONIG_ENCODING_ISO_8859_7,\n    ONIG_ENCODING_ISO_8859_8,\n    ONIG_ENCODING_ISO_8859_9,\n    ONIG_ENCODING_ISO_8859_10,\n    ONIG_ENCODING_ISO_8859_11,\n    ONIG_ENCODING_ISO_8859_13,\n    ONIG_ENCODING_ISO_8859_14,\n    ONIG_ENCODING_ISO_8859_15,\n    ONIG_ENCODING_ISO_8859_16\n  };\n  unsigned char encoding_choice;\n#endif\n\n#ifdef SYNTAX_TEST\n  static OnigSyntaxType* syntaxes[] = {\n    ONIG_SYNTAX_POSIX_EXTENDED,\n    ONIG_SYNTAX_EMACS,\n    ONIG_SYNTAX_GREP,\n    ONIG_SYNTAX_GNU_REGEX,\n    ONIG_SYNTAX_JAVA,\n    ONIG_SYNTAX_PERL_NG,\n    ONIG_SYNTAX_PYTHON,\n    ONIG_SYNTAX_ONIGURUMA\n  };\n\n#ifdef STANDALONE\n  static char* syntax_names[] = {\n    \"Posix Extended\",\n    \"Emacs\",\n    \"Grep\",\n    \"GNU Regex\",\n    \"Java\",\n    \"Perl+NG\",\n    \"Python\",\n    \"Oniguruma\"\n  };\n#endif\n\n  unsigned char syntax_choice;\n#endif\n\n  int r;\n  int backward;\n  int pattern_size;\n  size_t rem_size;\n  unsigned char *data;\n  unsigned char pattern_size_choice;\n  OnigOptionType  options;\n  OnigEncoding    enc;\n  OnigSyntaxType* syntax;\n\n#ifndef STANDALONE\n#ifdef EXEC_PRINT_INTERVAL\n  static FILE* STAT_FP;\n#endif\n#endif\n\n  INPUT_COUNT++;\n\n#ifdef DUMP_DATA_INTERVAL\n  if (INPUT_COUNT % DUMP_DATA_INTERVAL == 0) {\n    char path[20];\n    sprintf(path, \"dump-%ld\", INPUT_COUNT);\n    dump_file(path, (unsigned char* )Data, Size);\n  }\n#endif\n\n  if (Size < NUM_CONTROL_BYTES) return 0;\n\n  rem_size = Size;\n  data = (unsigned char* )(Data);\n\n#ifdef UTF16_BE\n  enc = ONIG_ENCODING_UTF16_BE;\n#else\n#ifdef UTF16_LE\n  enc = ONIG_ENCODING_UTF16_LE;\n#else\n  encoding_choice = data[0];\n  data++;\n  rem_size--;\n\n  int num_encodings = sizeof(encodings)/sizeof(encodings[0]);\n  enc = encodings[encoding_choice % num_encodings];\n#endif\n#endif\n\n#ifdef SYNTAX_TEST\n  syntax_choice = data[0];\n  data++;\n  rem_size--;\n\n  int num_syntaxes = sizeof(syntaxes)/sizeof(syntaxes[0]);\n  syntax = syntaxes[syntax_choice % num_syntaxes];\n#else\n  syntax = ONIG_SYNTAX_DEFAULT;\n#endif\n\n#ifdef PREV_CONTROL\n  if ((data[2] & 0xc0) == 0)\n    options = data[0] | (data[1] << 8) | (data[2] << 16);\n#else\n  if ((data[3] & 0xc0) == 0)\n    options = data[0] | (data[1] << 8) | (data[2] << 16) | (data[3] << 24);\n#endif\n  else\n    options = data[0] & ONIG_OPTION_IGNORECASE;\n\n  data++; rem_size--;\n  data++; rem_size--;\n  data++; rem_size--;\n#ifndef PREV_CONTROL\n  data++; rem_size--;\n#endif\n\n  pattern_size_choice = data[0];\n  data++; rem_size--;\n\n  backward = (data[0] == 0xbb);\n  data++; rem_size--;\n\n  if (backward != 0) {\n    options = options & ~ONIG_OPTION_FIND_LONGEST;\n  }\n\n  if (rem_size == 0)\n    pattern_size = 0;\n  else {\n    pattern_size = (int )pattern_size_choice % rem_size;\n    ADJUST_LEN(enc, pattern_size);\n  }\n\n#ifdef STANDALONE\n  {\n    char soptions[33];\n\n    dump_data(stdout, data, pattern_size);\n    to_binary(options, soptions);\n#ifdef SYNTAX_TEST\n    fprintf(stdout,\n            \"enc: %s, syntax: %s, pattern_size: %d, back:%d\\noptions: %s\\n\",\n            ONIGENC_NAME(enc),\n            syntax_names[syntax_choice % num_syntaxes],\n            pattern_size, backward, soptions);\n#else\n    fprintf(stdout, \"enc: %s, pattern_size: %d, back:%d\\noptions: %s\\n\",\n            ONIGENC_NAME(enc), pattern_size, backward, soptions);\n#endif\n\n    print_options(stdout, options);\n    fprintf(stdout, \"\\n\");\n  }\n#endif\n\n#ifdef DUMP_INPUT\n  dump_input((unsigned char* )Data, Size);\n#endif\n\n", "Selected Statement": "if (upper <= 10)", "Function Input": {}, "Variable Values Before Statement": {"upper": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "onig_detect_can_be_slow_pattern(const UChar* pattern,\n  const UChar* pattern_end, OnigOptionType option, OnigEncoding enc,\n  OnigSyntaxType* syntax)\n{\n  int r;\n  regex_t* reg;\n  Node* root;\n  ParseEnv scan_env;\n  SlowElementCount count;\n  int calls[MAX_CALLS_IN_DETECT];\n#ifdef USE_CALL\n  UnsetAddrList  uslist = {0};\n#endif\n\n  reg = (regex_t* )xmalloc(sizeof(regex_t));\n  if (IS_NULL(reg)) return ONIGERR_MEMORY;\n\n  r = onig_reg_init(reg, option, ONIGENC_CASE_FOLD_DEFAULT, enc, syntax);\n  if (r != 0) {\n    xfree(reg);\n    return r;\n  }\n\n  r = parse_and_tune(reg, pattern, pattern_end, &scan_env, &root, NULL\n#ifdef USE_CALL\n                     , &uslist\n#endif\n                    );\n  if (r != 0) goto err;\n\n#ifdef USE_CALL\n  if (scan_env.num_call > 0) {\n    unset_addr_list_end(&uslist);\n  }\n#endif\n\n  count.prec_read          = 0;\n  count.look_behind        = 0;\n  count.backref            = 0;\n  count.backref_with_level = 0;\n  count.call               = 0;\n  count.is_keep            = FALSE;\n  count.anychar_reluctant_many     = 0;\n  count.empty_check_nest_level     = 0;\n  count.max_empty_check_nest_level = 0;\n  count.heavy_element = 0;\n\n  r = detect_can_be_slow(root, &count, 0, calls);\n  if (r == 0) {\n    int n;\n\n    n = count.prec_read + count.look_behind\n      + count.backref + count.backref_with_level + count.call\n      + count.anychar_reluctant_many;\n\n    if (count.is_keep) count.max_empty_check_nest_level++;\n\n    if (count.max_empty_check_nest_level > 2)\n      n += count.max_empty_check_nest_level - 2;\n    if (count.heavy_element != 0) {\n      if (count.heavy_element < 0x10000)\n        n += count.heavy_element << 8;\n      else\n        n += count.heavy_element;\n    }\n\n    r = n;\n\n#ifdef ONIG_DEBUG_PARSE\n    fprintf(DBGFP, \"-- detect can be slow --\\n\");\n    fprintf(DBGFP, \"  prec_read:          %d\\n\", count.prec_read);\n    fprintf(DBGFP, \"  look_behind:        %d\\n\", count.look_behind);\n    fprintf(DBGFP, \"  backref:            %d\\n\", count.backref);\n    fprintf(DBGFP, \"  backref_with_level: %d\\n\", count.backref_with_level);\n    fprintf(DBGFP, \"  call:               %d\\n\", count.call);\n    fprintf(DBGFP, \"  is_keep:            %d\\n\", count.is_keep);\n    fprintf(DBGFP, \"  any_reluctant_many: %d\\n\", count.anychar_reluctant_many);\n    fprintf(DBGFP, \"  max_empty_check_nest_level: %d\\n\", count.max_empty_check_nest_level);\n    fprintf(DBGFP, \"  heavy_element:      %d\\n\", count.heavy_element);\n    fprintf(DBGFP, \"  r:                  %d\\n\", r);\n    fprintf(DBGFP, \"\\n\");\n#endif\n  }\n\n  if (IS_NOT_NULL(scan_env.mem_env_dynamic))\n    xfree(scan_env.mem_env_dynamic);\n\n err:\n  onig_node_free(root);\n  onig_free(reg);\n  return r;\n", "Selected Statement": "if (r != 0)", "Function Input": {"reg": {"value": null}}, "Variable Values Before Statement": {"r": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "onig_detect_can_be_slow_pattern(const UChar* pattern,\n  const UChar* pattern_end, OnigOptionType option, OnigEncoding enc,\n  OnigSyntaxType* syntax)\n{\n  int r;\n  regex_t* reg;\n  Node* root;\n  ParseEnv scan_env;\n  SlowElementCount count;\n  int calls[MAX_CALLS_IN_DETECT];\n#ifdef USE_CALL\n  UnsetAddrList  uslist = {0};\n#endif\n\n  reg = (regex_t* )xmalloc(sizeof(regex_t));\n  if (IS_NULL(reg)) return ONIGERR_MEMORY;\n\n  r = onig_reg_init(reg, option, ONIGENC_CASE_FOLD_DEFAULT, enc, syntax);\n  if (r != 0) {\n    xfree(reg);\n    return r;\n  }\n\n  r = parse_and_tune(reg, pattern, pattern_end, &scan_env, &root, NULL\n#ifdef USE_CALL\n                     , &uslist\n#endif\n                    );\n  if (r != 0) goto err;\n\n#ifdef USE_CALL\n  if (scan_env.num_call > 0) {\n    unset_addr_list_end(&uslist);\n  }\n#endif\n\n  count.prec_read          = 0;\n  count.look_behind        = 0;\n  count.backref            = 0;\n  count.backref_with_level = 0;\n  count.call               = 0;\n  count.is_keep            = FALSE;\n  count.anychar_reluctant_many     = 0;\n  count.empty_check_nest_level     = 0;\n  count.max_empty_check_nest_level = 0;\n  count.heavy_element = 0;\n\n  r = detect_can_be_slow(root, &count, 0, calls);\n  if (r == 0) {\n    int n;\n\n    n = count.prec_read + count.look_behind\n      + count.backref + count.backref_with_level + count.call\n      + count.anychar_reluctant_many;\n\n    if (count.is_keep) count.max_empty_check_nest_level++;\n\n    if (count.max_empty_check_nest_level > 2)\n      n += count.max_empty_check_nest_level - 2;\n    if (count.heavy_element != 0) {\n      if (count.heavy_element < 0x10000)\n        n += count.heavy_element << 8;\n      else\n        n += count.heavy_element;\n    }\n\n    r = n;\n\n#ifdef ONIG_DEBUG_PARSE\n    fprintf(DBGFP, \"-- detect can be slow --\\n\");\n    fprintf(DBGFP, \"  prec_read:          %d\\n\", count.prec_read);\n    fprintf(DBGFP, \"  look_behind:        %d\\n\", count.look_behind);\n    fprintf(DBGFP, \"  backref:            %d\\n\", count.backref);\n    fprintf(DBGFP, \"  backref_with_level: %d\\n\", count.backref_with_level);\n    fprintf(DBGFP, \"  call:               %d\\n\", count.call);\n    fprintf(DBGFP, \"  is_keep:            %d\\n\", count.is_keep);\n    fprintf(DBGFP, \"  any_reluctant_many: %d\\n\", count.anychar_reluctant_many);\n    fprintf(DBGFP, \"  max_empty_check_nest_level: %d\\n\", count.max_empty_check_nest_level);\n    fprintf(DBGFP, \"  heavy_element:      %d\\n\", count.heavy_element);\n    fprintf(DBGFP, \"  r:                  %d\\n\", r);\n    fprintf(DBGFP, \"\\n\");\n#endif\n  }\n\n  if (IS_NOT_NULL(scan_env.mem_env_dynamic))\n    xfree(scan_env.mem_env_dynamic);\n\n err:\n  onig_node_free(root);\n  onig_free(reg);\n  return r;\n", "Selected Statement": "if (IS_NOT_NULL(ext->callout_list))", "Function Input": {"reg": {"value": null}}, "Variable Values Before Statement": {"IS_NOT_NULL": "NULL", "ext->callout_list": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nextern int\nonigenc_init(void)\n{\n  if (OnigEncInited != 0) return 0;\n\n  OnigEncInited = 1;\n  return 0;\n", "Selected Statement": "if (p >= end)", "Function Input": {}, "Variable Values Before Statement": {"p": "NULL", "end": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                         OnigCalloutFunc end_func,\n                         int arg_num, unsigned int arg_types[],\n                         int opt_arg_num, OnigValue opt_defaults[])\n{\n  int r;\n  int i;\n  int j;\n  int id;\n  int is_not_single;\n  CalloutNameEntry* e;\n  CalloutNameListEntry* fe;\n\n  if (callout_type != ONIG_CALLOUT_TYPE_SINGLE)\n    return ONIGERR_INVALID_ARGUMENT;\n\n  if (arg_num < 0 || arg_num > ONIG_CALLOUT_MAX_ARGS_NUM)\n    return ONIGERR_INVALID_CALLOUT_ARG;\n\n  if (opt_arg_num < 0 || opt_arg_num > arg_num)\n    return ONIGERR_INVALID_CALLOUT_ARG;\n\n  if (start_func == 0 && end_func == 0)\n    return ONIGERR_INVALID_CALLOUT_ARG;\n\n  if ((in & ONIG_CALLOUT_IN_PROGRESS) == 0 && (in & ONIG_CALLOUT_IN_RETRACTION) == 0)\n    return ONIGERR_INVALID_CALLOUT_ARG;\n\n  for (i = 0; i < arg_num; i++) {\n    unsigned int t = arg_types[i];\n    if (t == ONIG_TYPE_VOID)\n      return ONIGERR_INVALID_CALLOUT_ARG;\n    else {\n      if (i >= arg_num - opt_arg_num) {\n        if (t != ONIG_TYPE_LONG && t != ONIG_TYPE_CHAR && t != ONIG_TYPE_STRING &&\n            t != ONIG_TYPE_TAG)\n          return ONIGERR_INVALID_CALLOUT_ARG;\n      }\n      else {\n        if (t != ONIG_TYPE_LONG) {\n          t = t & ~ONIG_TYPE_LONG;\n          if (t != ONIG_TYPE_CHAR && t != ONIG_TYPE_STRING && t != ONIG_TYPE_TAG)\n            return ONIGERR_INVALID_CALLOUT_ARG;\n        }\n      }\n    }\n  }\n\n  if (! is_allowed_callout_name(enc, name, name_end)) {\n    return ONIGERR_INVALID_CALLOUT_NAME;\n  }\n\n  is_not_single = (callout_type != ONIG_CALLOUT_TYPE_SINGLE);\n  id = callout_name_entry(&e, enc, is_not_single, name, name_end);\n  if (id < 0) return id;\n\n  r = ONIG_NORMAL;\n  if (IS_NULL(GlobalCalloutNameList)) {\n    r = make_callout_func_list(&GlobalCalloutNameList, 10);\n    if (r != ONIG_NORMAL) return r;\n  }\n\n  while (id >= GlobalCalloutNameList->n) {\n    int rid;\n    r = callout_func_list_add(GlobalCalloutNameList, &rid);\n    if (r != ONIG_NORMAL) return r;\n  }\n\n  fe = GlobalCalloutNameList->v + id;\n  fe->type         = callout_type;\n  fe->in           = in;\n  fe->start_func   = start_func;\n  fe->end_func     = end_func;\n  fe->arg_num      = arg_num;\n  fe->opt_arg_num  = opt_arg_num;\n  fe->name         = e->name;\n\n  for (i = 0; i < arg_num; i++) {\n    fe->arg_types[i] = arg_types[i];\n  }\n  for (i = arg_num - opt_arg_num, j = 0; i < arg_num; i++, j++) {\n    if (IS_NULL(opt_defaults)) return ONIGERR_INVALID_ARGUMENT;\n    if (fe->arg_types[i] == ONIG_TYPE_STRING) {\n      OnigValue* val;\n      UChar* ds;\n\n      val = opt_defaults + j;\n      ds = onigenc_strdup(enc, val->s.start, val->s.end);\n      CHECK_NULL_RETURN_MEMERR(ds);\n\n      fe->opt_defaults[i].s.start = ds;\n      fe->opt_defaults[i].s.end   = ds + (val->s.end - val->s.start);\n    }\n    else {\n      fe->opt_defaults[i] = opt_defaults[j];\n    }\n  }\n\n  r = id;\n  return r;\n", "Selected Statement": "if (r != ONIG_NORMAL)", "Function Input": {}, "Variable Values Before Statement": {"r": "int", "ONIG_NORMAL": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                         OnigCalloutFunc end_func,\n                         int arg_num, unsigned int arg_types[],\n                         int opt_arg_num, OnigValue opt_defaults[])\n{\n  int r;\n  int i;\n  int j;\n  int id;\n  int is_not_single;\n  CalloutNameEntry* e;\n  CalloutNameListEntry* fe;\n\n  if (callout_type != ONIG_CALLOUT_TYPE_SINGLE)\n    return ONIGERR_INVALID_ARGUMENT;\n\n  if (arg_num < 0 || arg_num > ONIG_CALLOUT_MAX_ARGS_NUM)\n    return ONIGERR_INVALID_CALLOUT_ARG;\n\n  if (opt_arg_num < 0 || opt_arg_num > arg_num)\n    return ONIGERR_INVALID_CALLOUT_ARG;\n\n  if (start_func == 0 && end_func == 0)\n    return ONIGERR_INVALID_CALLOUT_ARG;\n\n  if ((in & ONIG_CALLOUT_IN_PROGRESS) == 0 && (in & ONIG_CALLOUT_IN_RETRACTION) == 0)\n    return ONIGERR_INVALID_CALLOUT_ARG;\n\n  for (i = 0; i < arg_num; i++) {\n    unsigned int t = arg_types[i];\n    if (t == ONIG_TYPE_VOID)\n      return ONIGERR_INVALID_CALLOUT_ARG;\n    else {\n      if (i >= arg_num - opt_arg_num) {\n        if (t != ONIG_TYPE_LONG && t != ONIG_TYPE_CHAR && t != ONIG_TYPE_STRING &&\n            t != ONIG_TYPE_TAG)\n          return ONIGERR_INVALID_CALLOUT_ARG;\n      }\n      else {\n        if (t != ONIG_TYPE_LONG) {\n          t = t & ~ONIG_TYPE_LONG;\n          if (t != ONIG_TYPE_CHAR && t != ONIG_TYPE_STRING && t != ONIG_TYPE_TAG)\n            return ONIGERR_INVALID_CALLOUT_ARG;\n        }\n      }\n    }\n  }\n\n  if (! is_allowed_callout_name(enc, name, name_end)) {\n    return ONIGERR_INVALID_CALLOUT_NAME;\n  }\n\n  is_not_single = (callout_type != ONIG_CALLOUT_TYPE_SINGLE);\n  id = callout_name_entry(&e, enc, is_not_single, name, name_end);\n  if (id < 0) return id;\n\n  r = ONIG_NORMAL;\n  if (IS_NULL(GlobalCalloutNameList)) {\n    r = make_callout_func_list(&GlobalCalloutNameList, 10);\n    if (r != ONIG_NORMAL) return r;\n  }\n\n  while (id >= GlobalCalloutNameList->n) {\n    int rid;\n    r = callout_func_list_add(GlobalCalloutNameList, &rid);\n    if (r != ONIG_NORMAL) return r;\n  }\n\n  fe = GlobalCalloutNameList->v + id;\n  fe->type         = callout_type;\n  fe->in           = in;\n  fe->start_func   = start_func;\n  fe->end_func     = end_func;\n  fe->arg_num      = arg_num;\n  fe->opt_arg_num  = opt_arg_num;\n  fe->name         = e->name;\n\n  for (i = 0; i < arg_num; i++) {\n    fe->arg_types[i] = arg_types[i];\n  }\n  for (i = arg_num - opt_arg_num, j = 0; i < arg_num; i++, j++) {\n    if (IS_NULL(opt_defaults)) return ONIGERR_INVALID_ARGUMENT;\n    if (fe->arg_types[i] == ONIG_TYPE_STRING) {\n      OnigValue* val;\n      UChar* ds;\n\n      val = opt_defaults + j;\n      ds = onigenc_strdup(enc, val->s.start, val->s.end);\n      CHECK_NULL_RETURN_MEMERR(ds);\n\n      fe->opt_defaults[i].s.start = ds;\n      fe->opt_defaults[i].s.end   = ds + (val->s.end - val->s.start);\n    }\n    else {\n      fe->opt_defaults[i] = opt_defaults[j];\n    }\n  }\n\n  r = id;\n  return r;\n", "Selected Statement": "if (r < 0)", "Function Input": {}, "Variable Values Before Statement": {"r": "int"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                         OnigCalloutFunc end_func,\n                         int arg_num, unsigned int arg_types[],\n                         int opt_arg_num, OnigValue opt_defaults[])\n{\n  int r;\n  int i;\n  int j;\n  int id;\n  int is_not_single;\n  CalloutNameEntry* e;\n  CalloutNameListEntry* fe;\n\n  if (callout_type != ONIG_CALLOUT_TYPE_SINGLE)\n    return ONIGERR_INVALID_ARGUMENT;\n\n  if (arg_num < 0 || arg_num > ONIG_CALLOUT_MAX_ARGS_NUM)\n    return ONIGERR_INVALID_CALLOUT_ARG;\n\n  if (opt_arg_num < 0 || opt_arg_num > arg_num)\n    return ONIGERR_INVALID_CALLOUT_ARG;\n\n  if (start_func == 0 && end_func == 0)\n    return ONIGERR_INVALID_CALLOUT_ARG;\n\n  if ((in & ONIG_CALLOUT_IN_PROGRESS) == 0 && (in & ONIG_CALLOUT_IN_RETRACTION) == 0)\n    return ONIGERR_INVALID_CALLOUT_ARG;\n\n  for (i = 0; i < arg_num; i++) {\n    unsigned int t = arg_types[i];\n    if (t == ONIG_TYPE_VOID)\n      return ONIGERR_INVALID_CALLOUT_ARG;\n    else {\n      if (i >= arg_num - opt_arg_num) {\n        if (t != ONIG_TYPE_LONG && t != ONIG_TYPE_CHAR && t != ONIG_TYPE_STRING &&\n            t != ONIG_TYPE_TAG)\n          return ONIGERR_INVALID_CALLOUT_ARG;\n      }\n      else {\n        if (t != ONIG_TYPE_LONG) {\n          t = t & ~ONIG_TYPE_LONG;\n          if (t != ONIG_TYPE_CHAR && t != ONIG_TYPE_STRING && t != ONIG_TYPE_TAG)\n            return ONIGERR_INVALID_CALLOUT_ARG;\n        }\n      }\n    }\n  }\n\n  if (! is_allowed_callout_name(enc, name, name_end)) {\n    return ONIGERR_INVALID_CALLOUT_NAME;\n  }\n\n  is_not_single = (callout_type != ONIG_CALLOUT_TYPE_SINGLE);\n  id = callout_name_entry(&e, enc, is_not_single, name, name_end);\n  if (id < 0) return id;\n\n  r = ONIG_NORMAL;\n  if (IS_NULL(GlobalCalloutNameList)) {\n    r = make_callout_func_list(&GlobalCalloutNameList, 10);\n    if (r != ONIG_NORMAL) return r;\n  }\n\n  while (id >= GlobalCalloutNameList->n) {\n    int rid;\n    r = callout_func_list_add(GlobalCalloutNameList, &rid);\n    if (r != ONIG_NORMAL) return r;\n  }\n\n  fe = GlobalCalloutNameList->v + id;\n  fe->type         = callout_type;\n  fe->in           = in;\n  fe->start_func   = start_func;\n  fe->end_func     = end_func;\n  fe->arg_num      = arg_num;\n  fe->opt_arg_num  = opt_arg_num;\n  fe->name         = e->name;\n\n  for (i = 0; i < arg_num; i++) {\n    fe->arg_types[i] = arg_types[i];\n  }\n  for (i = arg_num - opt_arg_num, j = 0; i < arg_num; i++, j++) {\n    if (IS_NULL(opt_defaults)) return ONIGERR_INVALID_ARGUMENT;\n    if (fe->arg_types[i] == ONIG_TYPE_STRING) {\n      OnigValue* val;\n      UChar* ds;\n\n      val = opt_defaults + j;\n      ds = onigenc_strdup(enc, val->s.start, val->s.end);\n      CHECK_NULL_RETURN_MEMERR(ds);\n\n      fe->opt_defaults[i].s.start = ds;\n      fe->opt_defaults[i].s.end   = ds + (val->s.end - val->s.start);\n    }\n    else {\n      fe->opt_defaults[i] = opt_defaults[j];\n    }\n  }\n\n  r = id;\n  return r;\n", "Selected Statement": "if (IS_NULL(GlobalCalloutNameList))", "Function Input": {}, "Variable Values Before Statement": {"IS_NULL": "NULL", "GlobalCalloutNameList": {"n": "0", "alloc": "10", "v": null}}, "Value After Statement Execution": "Yes", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nextern st_table*\nst_init_table_with_size(struct st_hash_type* type, int size)\n{\n  st_table *tbl;\n\n#ifdef HASH_LOG\n  if (init_st == 0) {\n    init_st = 1;\n    atexit(stat_col);\n  }\n#endif\n\n  size = new_size(size);\t\n  if (size <= 0) return 0;\n\n  tbl = alloc(st_table);\n  if (tbl == 0) return 0;\n\n  tbl->type = type;\n  tbl->num_entries = 0;\n  tbl->num_bins = size;\n  tbl->bins = (st_table_entry **)Calloc(size, sizeof(st_table_entry*));\n  if (tbl->bins == 0) {\n    free(tbl);\n    return 0;\n  }\n\n  return tbl;\n", "Selected Statement": "if (new_bins == 0)", "Function Input": {"size": {"value": "0"}}, "Variable Values Before Statement": {"new_bins": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nextern st_table*\nst_init_table_with_size(struct st_hash_type* type, int size)\n{\n  st_table *tbl;\n\n#ifdef HASH_LOG\n  if (init_st == 0) {\n    init_st = 1;\n    atexit(stat_col);\n  }\n#endif\n\n  size = new_size(size);\t\n  if (size <= 0) return 0;\n\n  tbl = alloc(st_table);\n  if (tbl == 0) return 0;\n\n  tbl->type = type;\n  tbl->num_entries = 0;\n  tbl->num_bins = size;\n  tbl->bins = (st_table_entry **)Calloc(size, sizeof(st_table_entry*));\n  if (tbl->bins == 0) {\n    free(tbl);\n    return 0;\n  }\n\n  return tbl;\n", "Selected Statement": "if (newsize > size)", "Function Input": {"size": {"value": "0"}}, "Variable Values Before Statement": {"newsize": "NULL", "size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic int\nis_valid_mbc_string(const UChar* p, const UChar* end)\n{\n  while (p < end) {\n    if (*p < 0x80) {\n      p++;\n    }\n    else if (*p > 0xa0) {\n      if (*p == 0xff) return FALSE;\n      p++;\n      if (p >= end) return FALSE;\n      if (*p < 0xa1 || *p == 0xff) return FALSE;\n      p++;\n    }\n    else if (*p == 0x8e) {\n      p++;\n      if (p >= end) return FALSE;\n      if (*p < 0xa1 || *p > 0xdf) return FALSE;\n      p++;\n    }\n    else if (*p == 0x8f) {\n      p++;\n      if (p >= end) return FALSE;\n      if (*p < 0xa1 || *p == 0xff) return FALSE;\n      p++;\n      if (p >= end) return FALSE;\n      if (*p < 0xa1 || *p == 0xff) return FALSE;\n      p++;\n    }\n    else\n      return FALSE;\n  }\n\n  return TRUE;\n", "Selected Statement": "if (pc != 0)", "Function Input": {"p": {"value": null}}, "Variable Values Before Statement": {"pc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic int\nis_valid_mbc_string(const UChar* p, const UChar* end)\n{\n  while (p < end) {\n    if (*p < 0x80) {\n      p++;\n    }\n    else if (*p > 0xa0) {\n      if (*p == 0xff) return FALSE;\n      p++;\n      if (p >= end) return FALSE;\n      if (*p < 0xa1 || *p == 0xff) return FALSE;\n      p++;\n    }\n    else if (*p == 0x8e) {\n      p++;\n      if (p >= end) return FALSE;\n      if (*p < 0xa1 || *p > 0xdf) return FALSE;\n      p++;\n    }\n    else if (*p == 0x8f) {\n      p++;\n      if (p >= end) return FALSE;\n      if (*p < 0xa1 || *p == 0xff) return FALSE;\n      p++;\n      if (p >= end) return FALSE;\n      if (*p < 0xa1 || *p == 0xff) return FALSE;\n      p++;\n    }\n    else\n      return FALSE;\n  }\n\n  return TRUE;\n", "Selected Statement": "if (ONIGENC_IS_CODE_ASCII(code))", "Function Input": {"p": {"value": null}}, "Variable Values Before Statement": {"ONIGENC_IS_CODE_ASCII": "NULL", "code": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nextern int\nonig_set_progress_callout(OnigCalloutFunc f)\n{\n  DefaultProgressCallout = f;\n", "Selected Statement": "if (t == target)", "Function Input": {}, "Variable Values Before Statement": {"t": "NULL", "target": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nextern int\nonig_set_progress_callout(OnigCalloutFunc f)\n{\n  DefaultProgressCallout = f;\n", "Selected Statement": "if (sr[i].state == SRS_LOW_HIGH && low > sr[i].low)", "Function Input": {}, "Variable Values Before Statement": {"sr[i].state": "NULL", "SRS_LOW_HIGH": "NULL", "low": "NULL", "sr[i].low": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic int\nis_valid_mbc_string(const UChar* s, const UChar* end)\n{\n", "Selected Statement": "if ((flag & ONIGENC_CASE_FOLD_TURKISH_AZERI) != 0)", "Function Input": {}, "Variable Values Before Statement": {"flag": "NULL", "ONIGENC_CASE_FOLD_TURKISH_AZERI": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic int\nis_valid_mbc_string(const UChar* s, const UChar* end)\n{\n", "Selected Statement": "if (*(p+3) == 0x49)", "Function Input": {}, "Variable Values Before Statement": {"p": "NULL"}, "Value After Statement Execution": "No", "Project Information": "oniguruma"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid ddsi_iid_init (void)\n{\n  union { uint64_t u64; uint32_t u32[2]; } tmp;\n  ddsrt_prng_seed_t seed;\n  DDSRT_STATIC_ASSERT (sizeof (seed.key) >= sizeof (ddsi_iid.key));\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  if (ddsrt_prng_makeseed (&seed))\n    memcpy (ddsi_iid.key, seed.key, sizeof (ddsi_iid.key));\n  else\n  {\n    for (size_t i = 0; i < sizeof (ddsi_iid.key) / sizeof (ddsi_iid.key[0]); i++)\n      ddsi_iid.key[i] = ddsrt_random ();\n  }\n  tmp.u64 = 0;\n  dds_tea_decrypt (tmp.u32, ddsi_iid.key);\n  ddsrt_atomic_st64 (&ddsi_iid.counter, tmp.u64);\n", "Selected Statement": "if (ddsrt_prng_makeseed (&seed))", "Function Input": {}, "Variable Values Before Statement": {"ddsrt_prng_makeseed": "NULL", "seed": {"key": [{"type_category": "unknown", "concrete_type": "uint32_t", "value": "984601977"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "990504798"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "583426175"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "3971126501"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "1725482797"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "4200436817"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "352851726"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "4168983137"}]}}, "Value After Statement Execution": "Yes", "Project Information": "cyclonedds"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"dds/ddsrt/random.h\"\n\nbool ddsrt_prng_makeseed (struct ddsrt_prng_seed *seed)\n{\n  FILE *rndfile;\n  memset (seed->key, 0, sizeof (seed->key));\n  if ((rndfile = fopen (\"/dev/urandom\", \"rb\")) == NULL)\n    return false;\n  else\n  {\n    size_t n = fread (seed->key, sizeof (seed->key), 1, rndfile);\n    fclose (rndfile);\n    return (n == 1);\n  }\n", "Selected Statement": "if ((rndfile = fopen (\"/dev/urandom\", \"rb\")) == NULL)", "Function Input": {}, "Variable Values Before Statement": {"rndfile": "NULL", "fopen": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cyclonedds"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid ddsi_thread_states_init (void)\n{\n  \n  if (ddsrt_atomic_ldvoidp (&thread_states.thread_states_head) == NULL)\n  {\n    struct ddsi_thread_states_list *tslist;\n", "Selected Statement": "if (!tprops->stack_size.isdefault)", "Function Input": {}, "Variable Values Before Statement": {"tprops->stack_size.isdefault": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cyclonedds"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid ddsi_thread_states_init (void)\n{\n  \n  if (ddsrt_atomic_ldvoidp (&thread_states.thread_states_head) == NULL)\n  {\n    struct ddsi_thread_states_list *tslist;\n", "Selected Statement": "if (gv)", "Function Input": {}, "Variable Values Before Statement": {"gv": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cyclonedds"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"dds/ddsrt/time.h\"\n\nvoid ddsrt_mutex_init (ddsrt_mutex_t *mutex)\n{\n  assert (mutex != NULL);\n", "Selected Statement": "if (pthread_cond_signal (&cond->cond) != 0)", "Function Input": {}, "Variable Values Before Statement": {"pthread_cond_signal": "NULL", "cond->cond": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cyclonedds"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"dds/ddsrt/time.h\"\n\nvoid ddsrt_mutex_init (ddsrt_mutex_t *mutex)\n{\n  assert (mutex != NULL);\n", "Selected Statement": "if (pthread_rwlock_init(&rwlock->rwlock, NULL) != 0)", "Function Input": {}, "Variable Values Before Statement": {"pthread_rwlock_init": "NULL", "rwlock->rwlock": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cyclonedds"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid dds_cdrstream_desc_init (struct dds_cdrstream_desc *desc, const struct dds_cdrstream_allocator * __restrict allocator,\n    uint32_t size, uint32_t align, uint32_t flagset, const uint32_t *ops, const dds_key_descriptor_t *keys, uint32_t nkeys)\n{\n  desc->size = size;\n  desc->align = align;\n\n  \n  desc->keys.nkeys = nkeys;\n  copy_desc_keys (&desc->keys.keys, allocator, keys, nkeys);\n  copy_desc_keys (&desc->keys.keys_definition_order, allocator, keys, nkeys);\n  if (desc->keys.nkeys > 0)\n    qsort (desc->keys.keys_definition_order, nkeys, sizeof (*desc->keys.keys_definition_order), key_cmp_idx);\n\n", "Selected Statement": "if (k->min_xcdrv == DDSI_RTPS_CDR_ENC_VERSION_1)", "Function Input": {"size": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"k->min_xcdrv": "NULL", "DDSI_RTPS_CDR_ENC_VERSION_1": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cyclonedds"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid dds_cdrstream_desc_init (struct dds_cdrstream_desc *desc, const struct dds_cdrstream_allocator * __restrict allocator,\n    uint32_t size, uint32_t align, uint32_t flagset, const uint32_t *ops, const dds_key_descriptor_t *keys, uint32_t nkeys)\n{\n  desc->size = size;\n  desc->align = align;\n\n  \n  desc->keys.nkeys = nkeys;\n  copy_desc_keys (&desc->keys.keys, allocator, keys, nkeys);\n  copy_desc_keys (&desc->keys.keys_definition_order, allocator, keys, nkeys);\n  if (desc->keys.nkeys > 0)\n    qsort (desc->keys.keys_definition_order, nkeys, sizeof (*desc->keys.keys_definition_order), key_cmp_idx);\n\n", "Selected Statement": "if (*sample_state != SAMPLE_DATA_INITIALIZED)", "Function Input": {"size": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"sample_state": "NULL", "SAMPLE_DATA_INITIALIZED": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cyclonedds"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid *\nddsrt_malloc(size_t size)\n{\n  void *ptr = ddsrt_malloc_s(size);\n\n  if (ptr == NULL) {\n    \n    abort();\n  }\n\n", "Selected Statement": "if (count == 0 || size == 0)", "Function Input": {}, "Variable Values Before Statement": {"count": "NULL", "size": "120"}, "Value After Statement Execution": "No", "Project Information": "cyclonedds"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid *\nddsrt_malloc(size_t size)\n{\n  void *ptr = ddsrt_malloc_s(size);\n\n  if (ptr == NULL) {\n    \n    abort();\n  }\n\n", "Selected Statement": "if (ptr)", "Function Input": {}, "Variable Values Before Statement": {"ptr": "VOID"}, "Value After Statement Execution": "No", "Project Information": "cyclonedds"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct ucl_parser*\nucl_parser_new (int flags)\n{\n\tstruct ucl_parser *parser;\n\n\tparser = UCL_ALLOC (sizeof (struct ucl_parser));\n\tif (parser == NULL) {\n\t\treturn NULL;\n\t}\n\n\tmemset (parser, 0, sizeof (struct ucl_parser));\n\n\tUPRM_SAFE(ucl_parser_register_macro, parser, \"include\", ucl_include_handler, e0);\n\tUPRM_SAFE(ucl_parser_register_macro, parser, \"try_include\", ucl_try_include_handler, e0);\n\tUPRM_SAFE(ucl_parser_register_macro, parser, \"includes\", ucl_includes_handler, e0);\n\tUPRM_SAFE(ucl_parser_register_macro, parser, \"priority\", ucl_priority_handler, e0);\n\tUPRM_SAFE(ucl_parser_register_macro, parser, \"load\", ucl_load_handler, e0);\n\tUPRM_SAFE(ucl_parser_register_context_macro, parser, \"inherit\", ucl_inherit_handler, e0);\n\n\tparser->flags = flags;\n\tparser->includepaths = NULL;\n\n\tif (flags & UCL_PARSER_SAVE_COMMENTS) {\n\t\tparser->comments = ucl_object_typed_new (UCL_OBJECT);\n\t}\n\n\tif (!(flags & UCL_PARSER_NO_FILEVARS)) {\n\t\t\n\t\tucl_parser_set_filevars (parser, NULL, false);\n\t}\n\n\treturn parser;\ne0:\n\tucl_parser_free(parser);\n\treturn NULL;\n", "Selected Statement": "if (parser == NULL)", "Function Input": {"parser": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1\n", "message": "Cannot access memory at address 0x1"}}}, "Variable Values Before Statement": {"parser": {"state": "UCL_STATE_INIT", "prev_state": "UCL_STATE_INIT", "recursion": "0", "flags": "0", "default_priority": "0", "err_code": "0", "top_obj": null, "cur_obj": null, "trash_objs": null, "includepaths": null, "cur_file": null, "macroes": null, "stack": null, "chunks": null, "keys": null, "special_handlers": null, "include_trace_func": null, "include_trace_ud": null, "variables": "0xf9f7e0 \"undef\"", "var_handler": null, "var_data": null, "comments": null, "last_comment": null, "err": null}}, "Value After Statement Execution": "No", "Project Information": "libucl"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct ucl_parser*\nucl_parser_new (int flags)\n{\n\tstruct ucl_parser *parser;\n\n\tparser = UCL_ALLOC (sizeof (struct ucl_parser));\n\tif (parser == NULL) {\n\t\treturn NULL;\n\t}\n\n\tmemset (parser, 0, sizeof (struct ucl_parser));\n\n\tUPRM_SAFE(ucl_parser_register_macro, parser, \"include\", ucl_include_handler, e0);\n\tUPRM_SAFE(ucl_parser_register_macro, parser, \"try_include\", ucl_try_include_handler, e0);\n\tUPRM_SAFE(ucl_parser_register_macro, parser, \"includes\", ucl_includes_handler, e0);\n\tUPRM_SAFE(ucl_parser_register_macro, parser, \"priority\", ucl_priority_handler, e0);\n\tUPRM_SAFE(ucl_parser_register_macro, parser, \"load\", ucl_load_handler, e0);\n\tUPRM_SAFE(ucl_parser_register_context_macro, parser, \"inherit\", ucl_inherit_handler, e0);\n\n\tparser->flags = flags;\n\tparser->includepaths = NULL;\n\n\tif (flags & UCL_PARSER_SAVE_COMMENTS) {\n\t\tparser->comments = ucl_object_typed_new (UCL_OBJECT);\n\t}\n\n\tif (!(flags & UCL_PARSER_NO_FILEVARS)) {\n\t\t\n\t\tucl_parser_set_filevars (parser, NULL, false);\n\t}\n\n\treturn parser;\ne0:\n\tucl_parser_free(parser);\n\treturn NULL;\n", "Selected Statement": "if (parser->stack->obj->type == UCL_OBJECT)", "Function Input": {"parser": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1\n", "message": "Cannot access memory at address 0x1"}}}, "Variable Values Before Statement": {"parser->stack->obj->type": "NULL", "UCL_OBJECT": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libucl"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nbool\nucl_parser_set_filevars (struct ucl_parser *parser, const char *filename, bool need_expand)\n{\n\tchar realbuf[PATH_MAX], *curdir;\n\n\tif (filename != NULL) {\n\t\tif (need_expand) {\n\t\t\tif (ucl_realpath (filename, realbuf) == NULL) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tucl_strlcpy (realbuf, filename, sizeof (realbuf));\n\t\t}\n\n\t\tif (parser->cur_file) {\n\t\t\tfree (parser->cur_file);\n\t\t}\n\n\t\tparser->cur_file = strdup (realbuf);\n\n\t\t\n\t\tucl_parser_register_variable (parser, \"FILENAME\", realbuf);\n\t\tcurdir = dirname (realbuf);\n\t\tucl_parser_register_variable (parser, \"CURDIR\", curdir);\n\t}\n\telse {\n\t\t\n\t\tcurdir = getcwd (realbuf, sizeof (realbuf));\n\t\tucl_parser_register_variable (parser, \"FILENAME\", \"undef\");\n\t\tucl_parser_register_variable (parser, \"CURDIR\", curdir);\n\t}\n\n\treturn true;\n", "Selected Statement": "if (top->type != UCL_OBJECT)", "Function Input": {}, "Variable Values Before Statement": {"top->type": "NULL", "UCL_OBJECT": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libucl"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nbool\nucl_parser_set_filevars (struct ucl_parser *parser, const char *filename, bool need_expand)\n{\n\tchar realbuf[PATH_MAX], *curdir;\n\n\tif (filename != NULL) {\n\t\tif (need_expand) {\n\t\t\tif (ucl_realpath (filename, realbuf) == NULL) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tucl_strlcpy (realbuf, filename, sizeof (realbuf));\n\t\t}\n\n\t\tif (parser->cur_file) {\n\t\t\tfree (parser->cur_file);\n\t\t}\n\n\t\tparser->cur_file = strdup (realbuf);\n\n\t\t\n\t\tucl_parser_register_variable (parser, \"FILENAME\", realbuf);\n\t\tcurdir = dirname (realbuf);\n\t\tucl_parser_register_variable (parser, \"CURDIR\", curdir);\n\t}\n\telse {\n\t\t\n\t\tcurdir = getcwd (realbuf, sizeof (realbuf));\n\t\tucl_parser_register_variable (parser, \"FILENAME\", \"undef\");\n\t\tucl_parser_register_variable (parser, \"CURDIR\", curdir);\n\t}\n\n\treturn true;\n", "Selected Statement": "if (kv_A (*vec, i) == elt)", "Function Input": {}, "Variable Values Before Statement": {"kv_A": "NULL", "vec": "NULL", "i": "NULL", "elt": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libucl"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nucl_hash_t*\nucl_hash_create (bool ignore_case)\n{\n\tucl_hash_t *new;\n\n\tnew = UCL_ALLOC (sizeof (ucl_hash_t));\n\tif (new != NULL) {\n\t\tvoid *h;\n\t\tnew->head = NULL;\n\t\tnew->caseless = ignore_case;\n\t\tif (ignore_case) {\n\t\t\th = (void *)kh_init (ucl_hash_caseless_node);\n\t\t}\n\t\telse {\n\t\t\th = (void *)kh_init (ucl_hash_node);\n\t\t}\n\t\tif (h == NULL) {\n\t\t\tUCL_FREE (sizeof (ucl_hash_t), new);\n\t\t\treturn NULL;\n\t\t}\n\t\tnew->hash = h;\n\t}\n\treturn new;\n", "Selected Statement": "if (cmp1.n != cmp2.n)", "Function Input": {}, "Variable Values Before Statement": {"cmp1.n": "NULL", "cmp2.n": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libucl"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nucl_hash_t*\nucl_hash_create (bool ignore_case)\n{\n\tucl_hash_t *new;\n\n\tnew = UCL_ALLOC (sizeof (ucl_hash_t));\n\tif (new != NULL) {\n\t\tvoid *h;\n\t\tnew->head = NULL;\n\t\tnew->caseless = ignore_case;\n\t\tif (ignore_case) {\n\t\t\th = (void *)kh_init (ucl_hash_caseless_node);\n\t\t}\n\t\telse {\n\t\t\th = (void *)kh_init (ucl_hash_node);\n\t\t}\n\t\tif (h == NULL) {\n\t\t\tUCL_FREE (sizeof (ucl_hash_t), new);\n\t\t\treturn NULL;\n\t\t}\n\t\tnew->hash = h;\n\t}\n\treturn new;\n", "Selected Statement": "if (ignore_case)", "Function Input": {}, "Variable Values Before Statement": {"ignore_case": "_Bool"}, "Value After Statement Execution": "No", "Project Information": "libucl"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nWS_Init(struct ws *ws, const char *id, void *space, unsigned len)\n{\n\tstruct ws_emu *we;\n\n\tDSLb(DBG_WORKSPACE,\n\t    \"WS_Init(%p, \\\"%s\\\", %p, %u)\", ws, id, space, len);\n\tassert(space != NULL);\n\tassert(PAOK(space));\n\tassert(len >= sizeof *we);\n\n\tlen = PRNDDN(len - 1);\n\tINIT_OBJ(ws, WS_MAGIC);\n\tws->s = space;\n\tws->e = ws->s + len;\n\n\tassert(id[0] & 0x20);\t\t\n\tbstrcpy(ws->id, id);\n\n\twe = space;\n\tINIT_OBJ(we, WS_EMU_MAGIC);\n\tVTAILQ_INIT(&we->head);\n\twe->len = len;\n\n\tWS_Assert(ws);\n", "Selected Statement": "if (where == 'f')", "Function Input": {"ws": {"value": null}}, "Variable Values Before Statement": {"where": "NULL"}, "Value After Statement Execution": "No", "Project Information": "varnish"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nWS_Init(struct ws *ws, const char *id, void *space, unsigned len)\n{\n\tstruct ws_emu *we;\n\n\tDSLb(DBG_WORKSPACE,\n\t    \"WS_Init(%p, \\\"%s\\\", %p, %u)\", ws, id, space, len);\n\tassert(space != NULL);\n\tassert(PAOK(space));\n\tassert(len >= sizeof *we);\n\n\tlen = PRNDDN(len - 1);\n\tINIT_OBJ(ws, WS_MAGIC);\n\tws->s = space;\n\tws->e = ws->s + len;\n\n\tassert(id[0] & 0x20);\t\t\n\tbstrcpy(ws->id, id);\n\n\twe = space;\n\tINIT_OBJ(we, WS_EMU_MAGIC);\n\tVTAILQ_INIT(&we->head);\n\twe->len = len;\n\n\tWS_Assert(ws);\n", "Selected Statement": "if (PAN_dump_struct(vsb, ws, WS_MAGIC, \"ws\"))", "Function Input": {"ws": {"value": null}}, "Variable Values Before Statement": {"PAN_dump_struct": "NULL", "vsb": "NULL", "ws": {"magic": "905626964", "id": "\"req\"", "s": "0x7fffffffd0e0 \"\\253\\266\\211\\034\\370\\003\"", "f": null, "r": null, "e": "0x7fffffffd4d8 \"\""}, "WS_MAGIC": "NULL"}, "Value After Statement Execution": "No", "Project Information": "varnish"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nWS_Rollback(struct ws *ws, uintptr_t pp)\n{\n\n\tWS_Assert(ws);\n\n\tif (pp == 0)\n\t\tpp = (uintptr_t)ws->s;\n\tws_ClearOverflow(ws);\n\tWS_Reset(ws, pp);\n", "Selected Statement": "if (WS_Overflowed(ws) || u < 2)", "Function Input": {"ws": {"value": null}}, "Variable Values Before Statement": {"WS_Overflowed": "NULL", "ws": {"magic": "905626964", "id": "\"req\"", "s": "0x7fffffffd0e0 \"\\253\\266\\211\\034\\370\\003\"", "f": null, "r": null, "e": "0x7fffffffd4d8 \"\""}, "u": "NULL"}, "Value After Statement Execution": "No", "Project Information": "varnish"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nWS_Rollback(struct ws *ws, uintptr_t pp)\n{\n\n\tWS_Assert(ws);\n\n\tif (pp == 0)\n\t\tpp = (uintptr_t)ws->s;\n\tws_ClearOverflow(ws);\n\tWS_Reset(ws, pp);\n", "Selected Statement": "if (pp == 0)", "Function Input": {"ws": {"value": null}}, "Variable Values Before Statement": {"pp": "0"}, "Value After Statement Execution": "Yes", "Project Information": "varnish"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nWS_Rollback(struct ws *ws, uintptr_t pp)\n{\n\n\tWS_Assert(ws);\n\n\tif (pp == 0)\n\t\tpp = (uintptr_t)ws->s;\n\tws_ClearOverflow(ws);\n\tWS_Reset(ws, pp);\n", "Selected Statement": "if (p == ws->f)", "Function Input": {"ws": {"value": null}}, "Variable Values Before Statement": {"p": "NULL", "ws->f": "NULL"}, "Value After Statement Execution": "No", "Project Information": "varnish"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#ifdef FUZZING\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n    if (size < FuzzingData::MinDataSize || size % 2 == 1) {\n        return 0;\n    }\n    FuzzData = new FuzzingData(data, size);\n    if (!FuzzData->Initialize()) {\n        return 0;\n    }\n\n    SpinSettings.RunServer = true;\n    SpinSettings.RunClient = true;\n    \n    SpinSettings.RunTimeMs = 10000; \n    SpinSettings.ServerName = \"127.0.0.1\";\n    SpinSettings.Ports = std::vector<uint16_t>({9998, 9999});\n    SpinSettings.AlpnPrefix = \"spin\";\n    SpinSettings.MaxOperationCount = UINT64_MAX;\n    SpinSettings.MaxFuzzIterationCount = 2;\n    SpinSettings.LossPercent = 1;\n    SpinSettings.AllocFailDenominator = 0;\n    SpinSettings.RepeatCount = 1;\n\n    start();\n    delete FuzzData;\n    return 0;\n", "Selected Statement": "if (!FuzzData || ThreadID == UINT16_MAX)", "Function Input": {}, "Variable Values Before Statement": {"FuzzData": "NULL", "ThreadID": "NULL", "UINT16_MAX": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#ifdef FUZZING\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n    if (size < FuzzingData::MinDataSize || size % 2 == 1) {\n        return 0;\n    }\n    FuzzData = new FuzzingData(data, size);\n    if (!FuzzData->Initialize()) {\n        return 0;\n    }\n\n    SpinSettings.RunServer = true;\n    SpinSettings.RunClient = true;\n    \n    SpinSettings.RunTimeMs = 10000; \n    SpinSettings.ServerName = \"127.0.0.1\";\n    SpinSettings.Ports = std::vector<uint16_t>({9998, 9999});\n    SpinSettings.AlpnPrefix = \"spin\";\n    SpinSettings.MaxOperationCount = UINT64_MAX;\n    SpinSettings.MaxFuzzIterationCount = 2;\n    SpinSettings.LossPercent = 1;\n    SpinSettings.AllocFailDenominator = 0;\n    SpinSettings.RepeatCount = 1;\n\n    start();\n    delete FuzzData;\n    return 0;\n", "Selected Statement": "if (SpinSettings.RunClient)", "Function Input": {}, "Variable Values Before Statement": {"SpinSettings.RunClient": "false"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#ifdef FUZZING\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n    if (size < FuzzingData::MinDataSize || size % 2 == 1) {\n        return 0;\n    }\n    FuzzData = new FuzzingData(data, size);\n    if (!FuzzData->Initialize()) {\n        return 0;\n    }\n\n    SpinSettings.RunServer = true;\n    SpinSettings.RunClient = true;\n    \n    SpinSettings.RunTimeMs = 10000; \n    SpinSettings.ServerName = \"127.0.0.1\";\n    SpinSettings.Ports = std::vector<uint16_t>({9998, 9999});\n    SpinSettings.AlpnPrefix = \"spin\";\n    SpinSettings.MaxOperationCount = UINT64_MAX;\n    SpinSettings.MaxFuzzIterationCount = 2;\n    SpinSettings.LossPercent = 1;\n    SpinSettings.AllocFailDenominator = 0;\n    SpinSettings.RepeatCount = 1;\n\n    start();\n    delete FuzzData;\n    return 0;\n", "Selected Statement": "if (size < FuzzingData::MinDataSize || size % 2 == 1)", "Function Input": {}, "Variable Values Before Statement": {"size": "0", "FuzzingData": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "CxPlatSystemLoad(\n    void\n    )\n{\n#if defined(CX_PLATFORM_DARWIN)\n    \n    \n    \n    \n    CxPlatProcessorCount = 1;\n#else\n    CxPlatProcessorCount = (uint32_t)sysconf(_SC_NPROCESSORS_ONLN);\n#endif\n\n#ifdef CXPLAT_NUMA_AWARE\n    if (numa_available() >= 0) {\n        CxPlatNumaNodeCount = (uint32_t)numa_num_configured_nodes();\n        CxPlatNumaNodeMasks =\n            CXPLAT_ALLOC_NONPAGED(sizeof(cpu_set_t) * CxPlatNumaNodeCount, QUIC_POOL_PLATFORM_PROC);\n        CXPLAT_FRE_ASSERT(CxPlatNumaNodeMasks);\n        for (uint32_t n = 0; n < CxPlatNumaNodeCount; ++n) {\n            CPU_ZERO(&CxPlatNumaNodeMasks[n]);\n            CXPLAT_FRE_ASSERT(numa_node_to_cpus_compat((int)n, CxPlatNumaNodeMasks[n].__bits, sizeof(cpu_set_t)) >= 0);\n        }\n    } else {\n        CxPlatNumaNodeCount = 0;\n    }\n#endif \n\n#ifdef DEBUG\n    CxPlatform.AllocFailDenominator = 0;\n    CxPlatform.AllocCounter = 0;\n#endif\n\n    \n    \n    \n    \n\n    \n    \n    \n    \n\n    long ShouldLoad = 1;\n\n    \n    \n    \n    char *DisableValue = getenv(\"QUIC_LTTng\");\n    if (DisableValue != NULL) {\n        ShouldLoad = strtol(DisableValue, NULL, 10);\n    }\n\n    if (!ShouldLoad) {\n        goto Exit;\n    }\n\n    \n    \n    \n    Dl_info Info;\n    int Succeeded = dladdr((void *)CxPlatSystemLoad, &Info);\n    if (!Succeeded) {\n        goto Exit;\n    }\n\n    size_t PathLen = strlen(Info.dli_fname);\n\n    \n    \n    \n    int LastTrailingSlashLen = -1;\n    for (int i = PathLen; i >= 0; i--) {\n        if (Info.dli_fname[i] == '/') {\n            LastTrailingSlashLen = i + 1;\n            break;\n        }\n    }\n\n    if (LastTrailingSlashLen == -1) {\n        goto Exit;\n    }\n\n    size_t TpLibNameLen = strlen(TpLibName);\n    size_t ProviderFullPathLength = TpLibNameLen + LastTrailingSlashLen + 1;\n\n    char* ProviderFullPath = CXPLAT_ALLOC_PAGED(ProviderFullPathLength, QUIC_POOL_PLATFORM_TMP_ALLOC);\n    if (ProviderFullPath == NULL) {\n        goto Exit;\n    }\n\n    CxPlatCopyMemory(ProviderFullPath, Info.dli_fname, LastTrailingSlashLen);\n    CxPlatCopyMemory(ProviderFullPath + LastTrailingSlashLen, TpLibName, TpLibNameLen);\n    ProviderFullPath[LastTrailingSlashLen + TpLibNameLen] = '\\0';\n\n    \n    \n    \n    \n    dlopen(ProviderFullPath, RTLD_NOW | RTLD_GLOBAL);\n\n    CXPLAT_FREE(ProviderFullPath, QUIC_POOL_PLATFORM_TMP_ALLOC);\n\nExit:\n\n    QuicTraceLogInfo(\n        PosixLoaded,\n        \"[ dso] Loaded\");\n", "Selected Statement": "if (Info.dli_fname[i] == '/')", "Function Input": {}, "Variable Values Before Statement": {"Info.dli_fname": "0x7fffffffe984 \"/out/spinquic_exe\"", "i": "int"}, "Value After Statement Execution": "Yes", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "CxPlatSystemLoad(\n    void\n    )\n{\n#if defined(CX_PLATFORM_DARWIN)\n    \n    \n    \n    \n    CxPlatProcessorCount = 1;\n#else\n    CxPlatProcessorCount = (uint32_t)sysconf(_SC_NPROCESSORS_ONLN);\n#endif\n\n#ifdef CXPLAT_NUMA_AWARE\n    if (numa_available() >= 0) {\n        CxPlatNumaNodeCount = (uint32_t)numa_num_configured_nodes();\n        CxPlatNumaNodeMasks =\n            CXPLAT_ALLOC_NONPAGED(sizeof(cpu_set_t) * CxPlatNumaNodeCount, QUIC_POOL_PLATFORM_PROC);\n        CXPLAT_FRE_ASSERT(CxPlatNumaNodeMasks);\n        for (uint32_t n = 0; n < CxPlatNumaNodeCount; ++n) {\n            CPU_ZERO(&CxPlatNumaNodeMasks[n]);\n            CXPLAT_FRE_ASSERT(numa_node_to_cpus_compat((int)n, CxPlatNumaNodeMasks[n].__bits, sizeof(cpu_set_t)) >= 0);\n        }\n    } else {\n        CxPlatNumaNodeCount = 0;\n    }\n#endif \n\n#ifdef DEBUG\n    CxPlatform.AllocFailDenominator = 0;\n    CxPlatform.AllocCounter = 0;\n#endif\n\n    \n    \n    \n    \n\n    \n    \n    \n    \n\n    long ShouldLoad = 1;\n\n    \n    \n    \n    char *DisableValue = getenv(\"QUIC_LTTng\");\n    if (DisableValue != NULL) {\n        ShouldLoad = strtol(DisableValue, NULL, 10);\n    }\n\n    if (!ShouldLoad) {\n        goto Exit;\n    }\n\n    \n    \n    \n    Dl_info Info;\n    int Succeeded = dladdr((void *)CxPlatSystemLoad, &Info);\n    if (!Succeeded) {\n        goto Exit;\n    }\n\n    size_t PathLen = strlen(Info.dli_fname);\n\n    \n    \n    \n    int LastTrailingSlashLen = -1;\n    for (int i = PathLen; i >= 0; i--) {\n        if (Info.dli_fname[i] == '/') {\n            LastTrailingSlashLen = i + 1;\n            break;\n        }\n    }\n\n    if (LastTrailingSlashLen == -1) {\n        goto Exit;\n    }\n\n    size_t TpLibNameLen = strlen(TpLibName);\n    size_t ProviderFullPathLength = TpLibNameLen + LastTrailingSlashLen + 1;\n\n    char* ProviderFullPath = CXPLAT_ALLOC_PAGED(ProviderFullPathLength, QUIC_POOL_PLATFORM_TMP_ALLOC);\n    if (ProviderFullPath == NULL) {\n        goto Exit;\n    }\n\n    CxPlatCopyMemory(ProviderFullPath, Info.dli_fname, LastTrailingSlashLen);\n    CxPlatCopyMemory(ProviderFullPath + LastTrailingSlashLen, TpLibName, TpLibNameLen);\n    ProviderFullPath[LastTrailingSlashLen + TpLibNameLen] = '\\0';\n\n    \n    \n    \n    \n    dlopen(ProviderFullPath, RTLD_NOW | RTLD_GLOBAL);\n\n    CXPLAT_FREE(ProviderFullPath, QUIC_POOL_PLATFORM_TMP_ALLOC);\n\nExit:\n\n    QuicTraceLogInfo(\n        PosixLoaded,\n        \"[ dso] Loaded\");\n", "Selected Statement": "if (QUIC_FAILED(Status))", "Function Input": {}, "Variable Values Before Statement": {"QUIC_FAILED": "NULL", "Status": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "CxPlatSystemLoad(\n    void\n    )\n{\n#if defined(CX_PLATFORM_DARWIN)\n    \n    \n    \n    \n    CxPlatProcessorCount = 1;\n#else\n    CxPlatProcessorCount = (uint32_t)sysconf(_SC_NPROCESSORS_ONLN);\n#endif\n\n#ifdef CXPLAT_NUMA_AWARE\n    if (numa_available() >= 0) {\n        CxPlatNumaNodeCount = (uint32_t)numa_num_configured_nodes();\n        CxPlatNumaNodeMasks =\n            CXPLAT_ALLOC_NONPAGED(sizeof(cpu_set_t) * CxPlatNumaNodeCount, QUIC_POOL_PLATFORM_PROC);\n        CXPLAT_FRE_ASSERT(CxPlatNumaNodeMasks);\n        for (uint32_t n = 0; n < CxPlatNumaNodeCount; ++n) {\n            CPU_ZERO(&CxPlatNumaNodeMasks[n]);\n            CXPLAT_FRE_ASSERT(numa_node_to_cpus_compat((int)n, CxPlatNumaNodeMasks[n].__bits, sizeof(cpu_set_t)) >= 0);\n        }\n    } else {\n        CxPlatNumaNodeCount = 0;\n    }\n#endif \n\n#ifdef DEBUG\n    CxPlatform.AllocFailDenominator = 0;\n    CxPlatform.AllocCounter = 0;\n#endif\n\n    \n    \n    \n    \n\n    \n    \n    \n    \n\n    long ShouldLoad = 1;\n\n    \n    \n    \n    char *DisableValue = getenv(\"QUIC_LTTng\");\n    if (DisableValue != NULL) {\n        ShouldLoad = strtol(DisableValue, NULL, 10);\n    }\n\n    if (!ShouldLoad) {\n        goto Exit;\n    }\n\n    \n    \n    \n    Dl_info Info;\n    int Succeeded = dladdr((void *)CxPlatSystemLoad, &Info);\n    if (!Succeeded) {\n        goto Exit;\n    }\n\n    size_t PathLen = strlen(Info.dli_fname);\n\n    \n    \n    \n    int LastTrailingSlashLen = -1;\n    for (int i = PathLen; i >= 0; i--) {\n        if (Info.dli_fname[i] == '/') {\n            LastTrailingSlashLen = i + 1;\n            break;\n        }\n    }\n\n    if (LastTrailingSlashLen == -1) {\n        goto Exit;\n    }\n\n    size_t TpLibNameLen = strlen(TpLibName);\n    size_t ProviderFullPathLength = TpLibNameLen + LastTrailingSlashLen + 1;\n\n    char* ProviderFullPath = CXPLAT_ALLOC_PAGED(ProviderFullPathLength, QUIC_POOL_PLATFORM_TMP_ALLOC);\n    if (ProviderFullPath == NULL) {\n        goto Exit;\n    }\n\n    CxPlatCopyMemory(ProviderFullPath, Info.dli_fname, LastTrailingSlashLen);\n    CxPlatCopyMemory(ProviderFullPath + LastTrailingSlashLen, TpLibName, TpLibNameLen);\n    ProviderFullPath[LastTrailingSlashLen + TpLibNameLen] = '\\0';\n\n    \n    \n    \n    \n    dlopen(ProviderFullPath, RTLD_NOW | RTLD_GLOBAL);\n\n    CXPLAT_FREE(ProviderFullPath, QUIC_POOL_PLATFORM_TMP_ALLOC);\n\nExit:\n\n    QuicTraceLogInfo(\n        PosixLoaded,\n        \"[ dso] Loaded\");\n", "Selected Statement": "if (pthread_create(Thread, &Attr, CxPlatThreadCustomStart, CustomContext))", "Function Input": {}, "Variable Values Before Statement": {"pthread_create": "NULL", "Thread": "NULL", "Attr": "NULL", "CxPlatThreadCustomStart": "NULL", "CustomContext": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "CxPlatCryptInitialize(\n    void\n    )\n{\n#ifdef IS_OPENSSL_3\n    EVP_MAC *mac = NULL;\n#endif\n\n    if (OPENSSL_init_ssl(OPENSSL_INIT_LOAD_CONFIG, NULL) == 0) {\n        QuicTraceEvent(\n            LibraryError,\n            \"[ lib] ERROR, %s.\",\n            \"OPENSSL_init_ssl failed\");\n        return QUIC_STATUS_TLS_ERROR;\n    }\n\n#ifdef IS_OPENSSL_3\n    \n    \n    \n    if (!CxPlatLoadCipher(\"AES-128-GCM\", &CXPLAT_AES_128_GCM_ALG_HANDLE) ||\n        !CxPlatLoadCipher(\"AES-256-GCM\", &CXPLAT_AES_256_GCM_ALG_HANDLE) ||\n        !CxPlatLoadCipher(\"AES-256-CBC\", &CXPLAT_AES_256_CBC_ALG_HANDLE) ||\n        !CxPlatLoadCipher(\"AES-128-ECB\", &CXPLAT_AES_128_ECB_ALG_HANDLE) ||\n        !CxPlatLoadCipher(\"AES-256-ECB\", &CXPLAT_AES_256_ECB_ALG_HANDLE)) {\n        goto Error;\n    }\n\n    \n    \n    \n    CxPlatLoadCipher(\"ChaCha20\", &CXPLAT_CHACHA20_ALG_HANDLE);\n    CxPlatLoadCipher(\"ChaCha20-Poly1305\", &CXPLAT_CHACHA20_POLY1305_ALG_HANDLE);\n\n    \n    \n    \n    if (!CxPlatLoadMAC(\"HMAC\", &mac)) {\n        goto Error;\n    }\n\n    \n    \n    \n    if (!CxPlatLoadHMACCTX(mac, \"sha256\", &CXPLAT_HMAC_SHA256_CTX_HANDLE) ||\n        !CxPlatLoadHMACCTX(mac, \"sha384\", &CXPLAT_HMAC_SHA384_CTX_HANDLE) ||\n        !CxPlatLoadHMACCTX(mac, \"sha512\", &CXPLAT_HMAC_SHA512_CTX_HANDLE)) {\n        goto Error;\n    }\n    EVP_MAC_free(mac);\n\n    return QUIC_STATUS_SUCCESS;\n\nError:\n    EVP_MAC_free(mac);\n    CxPlatCryptUninitialize();\n    return QUIC_STATUS_OUT_OF_MEMORY;\n#else \n    CXPLAT_AES_128_GCM_ALG_HANDLE = (EVP_CIPHER *)EVP_aes_128_gcm();\n    CXPLAT_AES_256_GCM_ALG_HANDLE = (EVP_CIPHER *)EVP_aes_256_gcm();\n    CXPLAT_AES_256_CBC_ALG_HANDLE = (EVP_CIPHER *)EVP_aes_256_cbc();\n    CXPLAT_AES_128_ECB_ALG_HANDLE = (EVP_CIPHER *)EVP_aes_128_ecb();\n    CXPLAT_AES_256_ECB_ALG_HANDLE = (EVP_CIPHER *)EVP_aes_256_ecb();\n#if defined _WIN32 || !defined CXPLAT_SYSTEM_CRYPTO\n    CXPLAT_CHACHA20_ALG_HANDLE = (EVP_CIPHER *)EVP_chacha20();\n    CXPLAT_CHACHA20_POLY1305_ALG_HANDLE = (EVP_CIPHER *)EVP_chacha20_poly1305();\n#else\n    CXPLAT_CHACHA20_ALG_HANDLE = NULL;\n    CXPLAT_CHACHA20_POLY1305_ALG_HANDLE = NULL;\n\n    \n    \n    \n    void* handle = dlopen(\"libcrypto.so.1.1\", RTLD_LAZY | RTLD_GLOBAL);\n    EVP_CIPHER* (*func)(void) = NULL;\n    if (handle != NULL) {\n        func = dlsym(handle, \"EVP_chacha20\");\n        if (func != NULL) {\n            CXPLAT_CHACHA20_ALG_HANDLE = (*func)();\n\n            func = dlsym(handle, \"EVP_chacha20_poly1305\");\n            if (func != NULL) {\n                CXPLAT_CHACHA20_POLY1305_ALG_HANDLE = (*func)();\n                EVP_add_cipher(CXPLAT_CHACHA20_POLY1305_ALG_HANDLE);\n            }\n        } else {\n            dlclose(handle);\n        }\n    }\n#endif\n    return QUIC_STATUS_SUCCESS;\n#endif\n", "Selected Statement": "if (OPENSSL_init_ssl(OPENSSL_INIT_LOAD_CONFIG, NULL) == 0)", "Function Input": {}, "Variable Values Before Statement": {"OPENSSL_init_ssl": "NULL", "OPENSSL_INIT_LOAD_CONFIG": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "CxPlatCryptInitialize(\n    void\n    )\n{\n#ifdef IS_OPENSSL_3\n    EVP_MAC *mac = NULL;\n#endif\n\n    if (OPENSSL_init_ssl(OPENSSL_INIT_LOAD_CONFIG, NULL) == 0) {\n        QuicTraceEvent(\n            LibraryError,\n            \"[ lib] ERROR, %s.\",\n            \"OPENSSL_init_ssl failed\");\n        return QUIC_STATUS_TLS_ERROR;\n    }\n\n#ifdef IS_OPENSSL_3\n    \n    \n    \n    if (!CxPlatLoadCipher(\"AES-128-GCM\", &CXPLAT_AES_128_GCM_ALG_HANDLE) ||\n        !CxPlatLoadCipher(\"AES-256-GCM\", &CXPLAT_AES_256_GCM_ALG_HANDLE) ||\n        !CxPlatLoadCipher(\"AES-256-CBC\", &CXPLAT_AES_256_CBC_ALG_HANDLE) ||\n        !CxPlatLoadCipher(\"AES-128-ECB\", &CXPLAT_AES_128_ECB_ALG_HANDLE) ||\n        !CxPlatLoadCipher(\"AES-256-ECB\", &CXPLAT_AES_256_ECB_ALG_HANDLE)) {\n        goto Error;\n    }\n\n    \n    \n    \n    CxPlatLoadCipher(\"ChaCha20\", &CXPLAT_CHACHA20_ALG_HANDLE);\n    CxPlatLoadCipher(\"ChaCha20-Poly1305\", &CXPLAT_CHACHA20_POLY1305_ALG_HANDLE);\n\n    \n    \n    \n    if (!CxPlatLoadMAC(\"HMAC\", &mac)) {\n        goto Error;\n    }\n\n    \n    \n    \n    if (!CxPlatLoadHMACCTX(mac, \"sha256\", &CXPLAT_HMAC_SHA256_CTX_HANDLE) ||\n        !CxPlatLoadHMACCTX(mac, \"sha384\", &CXPLAT_HMAC_SHA384_CTX_HANDLE) ||\n        !CxPlatLoadHMACCTX(mac, \"sha512\", &CXPLAT_HMAC_SHA512_CTX_HANDLE)) {\n        goto Error;\n    }\n    EVP_MAC_free(mac);\n\n    return QUIC_STATUS_SUCCESS;\n\nError:\n    EVP_MAC_free(mac);\n    CxPlatCryptUninitialize();\n    return QUIC_STATUS_OUT_OF_MEMORY;\n#else \n    CXPLAT_AES_128_GCM_ALG_HANDLE = (EVP_CIPHER *)EVP_aes_128_gcm();\n    CXPLAT_AES_256_GCM_ALG_HANDLE = (EVP_CIPHER *)EVP_aes_256_gcm();\n    CXPLAT_AES_256_CBC_ALG_HANDLE = (EVP_CIPHER *)EVP_aes_256_cbc();\n    CXPLAT_AES_128_ECB_ALG_HANDLE = (EVP_CIPHER *)EVP_aes_128_ecb();\n    CXPLAT_AES_256_ECB_ALG_HANDLE = (EVP_CIPHER *)EVP_aes_256_ecb();\n#if defined _WIN32 || !defined CXPLAT_SYSTEM_CRYPTO\n    CXPLAT_CHACHA20_ALG_HANDLE = (EVP_CIPHER *)EVP_chacha20();\n    CXPLAT_CHACHA20_POLY1305_ALG_HANDLE = (EVP_CIPHER *)EVP_chacha20_poly1305();\n#else\n    CXPLAT_CHACHA20_ALG_HANDLE = NULL;\n    CXPLAT_CHACHA20_POLY1305_ALG_HANDLE = NULL;\n\n    \n    \n    \n    void* handle = dlopen(\"libcrypto.so.1.1\", RTLD_LAZY | RTLD_GLOBAL);\n    EVP_CIPHER* (*func)(void) = NULL;\n    if (handle != NULL) {\n        func = dlsym(handle, \"EVP_chacha20\");\n        if (func != NULL) {\n            CXPLAT_CHACHA20_ALG_HANDLE = (*func)();\n\n            func = dlsym(handle, \"EVP_chacha20_poly1305\");\n            if (func != NULL) {\n                CXPLAT_CHACHA20_POLY1305_ALG_HANDLE = (*func)();\n                EVP_add_cipher(CXPLAT_CHACHA20_POLY1305_ALG_HANDLE);\n            }\n        } else {\n            dlclose(handle);\n        }\n    }\n#endif\n    return QUIC_STATUS_SUCCESS;\n#endif\n", "Selected Statement": "if (!EVP_MAC_final(Hash->Ctx, Output, &ActualOutputSize, OutputLength))", "Function Input": {}, "Variable Values Before Statement": {"EVP_MAC_final": "NULL", "Hash->Ctx": "NULL", "Output": "NULL", "ActualOutputSize": "NULL", "OutputLength": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "CxPlatWorkersInit(\n    void\n    )\n{\n    CxPlatLockInitialize(&CxPlatWorkerLock);\n", "Selected Statement": "if (CxPlatWorkers[i].InitializedECLock)", "Function Input": {}, "Variable Values Before Statement": {"CxPlatWorkers[i].InitializedECLock": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "CxPlatWorkersInit(\n    void\n    )\n{\n    CxPlatLockInitialize(&CxPlatWorkerLock);\n", "Selected Statement": "if (State.NoWorkCount == 0)", "Function Input": {}, "Variable Values Before Statement": {"State.NoWorkCount": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nuint64_t\nCGroupGetMemoryLimit()\n{\n    uint64_t PhysicalMemoryLimit = 0;\n    uint64_t RestrictedMemoryLimit = 0;\n\n    CGroupInitialize();\n\n    PhysicalMemoryLimit = GetPhysicalMemoryLimit();\n\n", "Selected Statement": "if (MountInfoFile)", "Function Input": {}, "Variable Values Before Statement": {"MountInfoFile": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nuint64_t\nCGroupGetMemoryLimit()\n{\n    uint64_t PhysicalMemoryLimit = 0;\n    uint64_t RestrictedMemoryLimit = 0;\n\n    CGroupInitialize();\n\n    PhysicalMemoryLimit = GetPhysicalMemoryLimit();\n\n", "Selected Statement": "if (MountInfoFile == NULL)", "Function Input": {}, "Variable Values Before Statement": {"MountInfoFile": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    _In_ BOOLEAN ManualReset,\n    _In_ BOOLEAN InitialState\n    )\n", "Selected Statement": "if (Entry != NULL)", "Function Input": {}, "Variable Values Before Statement": {"Entry": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    _In_ BOOLEAN ManualReset,\n    _In_ BOOLEAN InitialState\n    )\n", "Selected Statement": "if (wait_time != UINT32_MAX)", "Function Input": {}, "Variable Values Before Statement": {"wait_time": "NULL", "UINT32_MAX": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    _In_ uint32_t Version,\n    _Out_ _Pre_defensive_ const void** QuicApi\n    )\n", "Selected Statement": "if (Handle != NULL)", "Function Input": {}, "Variable Values Before Statement": {"Handle": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    _In_ uint32_t Version,\n    _Out_ _Pre_defensive_ const void** QuicApi\n    )\n", "Selected Statement": "if (MsQuicLib.StatelessRegistration == NULL)", "Function Input": {}, "Variable Values Before Statement": {"MsQuicLib.StatelessRegistration": "NULL"}, "Value After Statement Execution": "No", "Project Information": "msquic"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"cmXMLParser.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n{\n  char test_file[] = \"libfuzzer.xml\";\n\n  FILE* fp = fopen(test_file, \"wb\");\n  if (!fp)\n    return 0;\n  fwrite(data, size, 1, fp);\n  fclose(fp);\n\n  cmXMLParser parser;\n", "Selected Statement": "if (!fp)", "Function Input": {"data": {"value": "0x103b010 \"\""}, "size": {"value": "6554624"}}, "Variable Values Before Statement": {"fp": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cmake"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"cmXMLParser.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n{\n  char test_file[] = \"libfuzzer.xml\";\n\n  FILE* fp = fopen(test_file, \"wb\");\n  if (!fp)\n    return 0;\n  fwrite(data, size, 1, fp);\n  fclose(fp);\n\n  cmXMLParser parser;\n", "Selected Statement": "if (!parser.ParseFile(test_file))", "Function Input": {"data": {"value": "0x103b010 \"\""}, "size": {"value": "6554624"}}, "Variable Values Before Statement": {"parser.ParseFile": "NULL", "test_file": "\"libfuzzer.xml\""}, "Value After Statement Execution": "No", "Project Information": "cmake"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"cmsys/FStream.hxx\"\n\ncmXMLParser::cmXMLParser()\n{\n  this->Parser = nullptr;\n  this->ParseError = 0;\n  this->ReportCallback = nullptr;\n  this->ReportCallbackData = nullptr;\n", "Selected Statement": "if (strcmp(*a, attribute) == 0)", "Function Input": {}, "Variable Values Before Statement": {"strcmp": "NULL", "a": "NULL", "attribute": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cmake"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"cmsys/FStream.hxx\"\n\ncmXMLParser::cmXMLParser()\n{\n  this->Parser = nullptr;\n  this->ParseError = 0;\n  this->ReportCallback = nullptr;\n  this->ReportCallbackData = nullptr;\n", "Selected Statement": "if (!XML_Parse(static_cast<XML_Parser>(this->Parser), \"\", 0, 1))", "Function Input": {}, "Variable Values Before Statement": {"XML_Parse": "NULL", "static_cast": "NULL", "XML_Parser": "NULL", "this->Parser": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cmake"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nchar* eat_line(char* buffer, unsigned int len)\n{\n\tchar* nl;\n\n\t\n\tnl=(char *)q_memchr( buffer, '\\n', len );\n\tif ( nl ) {\n\t\tif ( nl + 1 < buffer+len)  nl++;\n\t\tif (( nl+1<buffer+len) && * nl=='\\r')  nl++;\n\t} else  nl=buffer+len;\n", "Selected Statement": "if (( nl+1<buffer+len) && * nl=='\\r')", "Function Input": {}, "Variable Values Before Statement": {"nl": "0x0", "buffer": "0x76d25df \"s\\n\"", "len": "unsigned int"}, "Value After Statement Execution": "No", "Project Information": "opensips"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nchar* eat_line(char* buffer, unsigned int len)\n{\n\tchar* nl;\n\n\t\n\tnl=(char *)q_memchr( buffer, '\\n', len );\n\tif ( nl ) {\n\t\tif ( nl + 1 < buffer+len)  nl++;\n\t\tif (( nl+1<buffer+len) && * nl=='\\r')  nl++;\n\t} else  nl=buffer+len;\n", "Selected Statement": "if ( nl )", "Function Input": {}, "Variable Values Before Statement": {"nl": "0x0"}, "Value After Statement Execution": "No", "Project Information": "opensips"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\ninline static char* eat_token_end(const char* p, const char* pend)\n{\n\tfor (;(p<pend)&&(*p!=' ')&&(*p!='\\t')&&(*p!='\\n')&&(*p!='\\r'); p++);\n", "Selected Statement": "if ((_s->s[i] == '\\\"') && (_s->s[i - 1] != '\\\\'))", "Function Input": {"p": {"value": "0x76d25d0 \"%%%%%%%%%%%%pBYE t\""}, "pend": {"value": "0x11076d25d0 <error: Cannot access memory at address 0x11076d25d0>"}}, "Variable Values Before Statement": {"_s->s": "NULL", "i": "NULL"}, "Value After Statement Execution": "No", "Project Information": "opensips"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\ninline static char* eat_token_end(const char* p, const char* pend)\n{\n\tfor (;(p<pend)&&(*p!=' ')&&(*p!='\\t')&&(*p!='\\n')&&(*p!='\\r'); p++);\n", "Selected Statement": "if (_s->s[i] == '\\\"')", "Function Input": {"p": {"value": "0x76d25d0 \"%%%%%%%%%%%%pBYE t\""}, "pend": {"value": "0x11076d25d0 <error: Cannot access memory at address 0x11076d25d0>"}}, "Variable Values Before Statement": {"_s->s": "NULL", "i": "NULL"}, "Value After Statement Execution": "No", "Project Information": "opensips"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "typedef char *(*osips_strdup_t)(const char *s);\n\nstatic inline void *osips_pkg_malloc(size_t size)\n{\n", "Selected Statement": "if (p)", "Function Input": {}, "Variable Values Before Statement": {"p": "NULL"}, "Value After Statement Execution": "No", "Project Information": "opensips"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "typedef char *(*osips_strdup_t)(const char *s);\n\nstatic inline void *osips_pkg_malloc(size_t size)\n{\n", "Selected Statement": "if (!rval)", "Function Input": {}, "Variable Values Before Statement": {"rval": "NULL"}, "Value After Statement Execution": "No", "Project Information": "opensips"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nMmsValue*\nMmsValue_decodeMmsData(uint8_t* buffer, int bufPos, int bufferLength, int* endBufPos)\n{\n    MmsValue* value = NULL;\n\n    int dataEndBufPos = bufferLength;\n\n    if (bufferLength < 1)\n        goto exit_with_error;\n\n    uint8_t tag = buffer[bufPos++];\n\n    int dataLength;\n\n    bufPos = BerDecoder_decodeLength(buffer, &dataLength, bufPos, dataEndBufPos);\n\n    if (bufPos < 0)\n        goto exit_with_error;\n\n    \n    if ((tag != 0) && (dataLength == 0))\n        goto exit_with_error;\n\n    switch (tag) {\n\n    case 0xa1: \n    case 0xa2: \n    {\n        int elementCount = getNumberOfElements(buffer, bufPos, dataLength);\n\n        if (elementCount < 0)\n            goto exit_with_error;\n\n        if (tag == 0xa1)\n            value = MmsValue_createEmptyArray(elementCount);\n        else\n            value = MmsValue_createEmptyStructure(elementCount);\n\n        int i;\n\n        for (i = 0; i < elementCount; i++) {\n\n            int elementLength;\n\n            int newBufPos = BerDecoder_decodeLength(buffer, &elementLength, bufPos + 1, dataEndBufPos);\n\n            if (newBufPos < 0)\n                goto exit_with_error;\n\n            int elementBufLength = newBufPos - bufPos + elementLength;\n\n            MmsValue* elementValue = MmsValue_decodeMmsData(buffer, bufPos, bufPos + elementBufLength, NULL);\n\n            if (elementValue == NULL)\n                goto exit_with_error;\n\n            MmsValue_setElement(value, i, elementValue);\n\n            bufPos = newBufPos + elementLength;\n        }\n\n        if (value == NULL)\n            goto exit_with_error;\n    }\n\n        break;\n\n    case 0x80: \n        value = MmsValue_newDataAccessError((MmsDataAccessError) BerDecoder_decodeUint32(buffer, dataLength, bufPos));\n        bufPos += dataLength;\n        break;\n\n    case 0x83: \n        value = MmsValue_newBoolean(BerDecoder_decodeBoolean(buffer, bufPos));\n        bufPos += dataLength;\n        break;\n\n    case 0x84: \n    {\n        int padding = buffer[bufPos];\n\n        if (padding > 7)\n            goto exit_with_error;\n\n        int bitStringLength = (8 * (dataLength - 1)) - padding;\n        value = MmsValue_newBitString(bitStringLength);\n        memcpy(value->value.bitString.buf, buffer + bufPos + 1, dataLength - 1);\n        bufPos += dataLength;\n    }\n        break;\n\n    case 0x85: \n        if (dataLength > 8)\n            goto exit_with_error;\n\n        value = MmsValue_newInteger(dataLength * 8);\n        memcpy(value->value.integer->octets, buffer + bufPos, dataLength);\n        value->value.integer->size = dataLength;\n        bufPos += dataLength;\n        break;\n\n    case 0x86: \n        if (dataLength > 8)\n            goto exit_with_error;\n\n        value = MmsValue_newUnsigned(dataLength * 8);\n        memcpy(value->value.integer->octets, buffer + bufPos, dataLength);\n        value->value.integer->size = dataLength;\n\n        bufPos += dataLength;\n        break;\n\n    case 0x87: \n        if (dataLength == 9)\n            value = MmsValue_newDouble(BerDecoder_decodeDouble(buffer, bufPos));\n        else if (dataLength == 5)\n            value = MmsValue_newFloat(BerDecoder_decodeFloat(buffer, bufPos));\n        bufPos += dataLength;\n        break;\n\n    case 0x89: \n        value = MmsValue_newOctetString(dataLength, dataLength);\n        memcpy(value->value.octetString.buf, buffer + bufPos, dataLength);\n        bufPos += dataLength;\n        break;\n\n    case 0x8a: \n        value = MmsValue_newVisibleStringFromByteArray(buffer + bufPos, dataLength);\n        bufPos += dataLength;\n        break;\n\n    case 0x8c: \n        if (dataLength == 4)\n            value = MmsValue_newBinaryTime(true);\n        else if (dataLength == 6)\n            value = MmsValue_newBinaryTime(false);\n\n        if ((dataLength == 4) || (dataLength == 6))\n            memcpy(value->value.binaryTime.buf, buffer + bufPos, dataLength);\n\n        bufPos += dataLength;\n\n        break;\n\n    case 0x90: \n        value = MmsValue_newVisibleStringFromByteArray(buffer + bufPos, dataLength);\n        value->type = MMS_STRING;\n        bufPos += dataLength;\n\n        break;\n\n    case 0x91: \n        if (dataLength == 8) {\n            value = MmsValue_newUtcTime(0);\n            MmsValue_setUtcTimeByBuffer(value, buffer + bufPos);\n            bufPos += dataLength;\n        }\n        else\n            goto exit_with_error;\n\n        break;\n\n    case 0x00: \n        break;\n\n    default: \n        goto exit_with_error;\n    }\n\n    if (endBufPos != NULL)\n        *endBufPos = bufPos;\n\n    return value;\n\nexit_with_error:\n\n    if (value != NULL)\n        MmsValue_delete(value);\n\n    return NULL;\n", "Selected Statement": "if (encode)", "Function Input": {"bufPos": {"value": "0"}, "buffer": {"value": "0x7fffffffde58 \"\\240~\\327\""}, "value": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"type": {"type_category": "unknown", "concrete_type": "MmsType", "value": "3519328"}, "deleteValue": {"type_category": "unknown", "concrete_type": "uint8_t", "value": "0 '\\000'"}, "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"dataAccessError": {"type_category": "unknown", "concrete_type": "MmsDataAccessError", "value": "33554432"}, "structure": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{size = 33554432, components = 0x600007f}"}, "boolean": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "integer": {"type_category": "pointer", "concrete_type": "RECURSIVE", "value": "0xff00001002000000"}, "floatingPoint": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{exponentWidth = 0 '\\000', formatWidth = 0 '\\000', buf = \"\\000\\002\\020\\000\\000\\377\\177\"}"}, "octetString": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{size = 0, maxSize = -16777200, buf = 0x600007f &lt;error: Cannot access memory at address 0x600007f&gt;}"}, "bitString": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{size = 33554432, buf = 0x600007f &lt;error: Cannot access memory at address 0x600007f&gt;}"}, "visibleString": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{buf = 0xff00001002000000 &lt;error: Cannot access memory at address 0xff00001002000000&gt;, size = 127}"}, "utcTime": {"type_category": "string", "concrete_type": "string", "value": "\"\\000\\000\\000\\002\\020\\000\\000\\377\""}, "binaryTime": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{size = 0 '\\000', buf = \"\\000\\000\\002\\020\\000\"}"}}}}}}}, "Variable Values Before Statement": {"encode": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nMmsValue*\nMmsValue_decodeMmsData(uint8_t* buffer, int bufPos, int bufferLength, int* endBufPos)\n{\n    MmsValue* value = NULL;\n\n    int dataEndBufPos = bufferLength;\n\n    if (bufferLength < 1)\n        goto exit_with_error;\n\n    uint8_t tag = buffer[bufPos++];\n\n    int dataLength;\n\n    bufPos = BerDecoder_decodeLength(buffer, &dataLength, bufPos, dataEndBufPos);\n\n    if (bufPos < 0)\n        goto exit_with_error;\n\n    \n    if ((tag != 0) && (dataLength == 0))\n        goto exit_with_error;\n\n    switch (tag) {\n\n    case 0xa1: \n    case 0xa2: \n    {\n        int elementCount = getNumberOfElements(buffer, bufPos, dataLength);\n\n        if (elementCount < 0)\n            goto exit_with_error;\n\n        if (tag == 0xa1)\n            value = MmsValue_createEmptyArray(elementCount);\n        else\n            value = MmsValue_createEmptyStructure(elementCount);\n\n        int i;\n\n        for (i = 0; i < elementCount; i++) {\n\n            int elementLength;\n\n            int newBufPos = BerDecoder_decodeLength(buffer, &elementLength, bufPos + 1, dataEndBufPos);\n\n            if (newBufPos < 0)\n                goto exit_with_error;\n\n            int elementBufLength = newBufPos - bufPos + elementLength;\n\n            MmsValue* elementValue = MmsValue_decodeMmsData(buffer, bufPos, bufPos + elementBufLength, NULL);\n\n            if (elementValue == NULL)\n                goto exit_with_error;\n\n            MmsValue_setElement(value, i, elementValue);\n\n            bufPos = newBufPos + elementLength;\n        }\n\n        if (value == NULL)\n            goto exit_with_error;\n    }\n\n        break;\n\n    case 0x80: \n        value = MmsValue_newDataAccessError((MmsDataAccessError) BerDecoder_decodeUint32(buffer, dataLength, bufPos));\n        bufPos += dataLength;\n        break;\n\n    case 0x83: \n        value = MmsValue_newBoolean(BerDecoder_decodeBoolean(buffer, bufPos));\n        bufPos += dataLength;\n        break;\n\n    case 0x84: \n    {\n        int padding = buffer[bufPos];\n\n        if (padding > 7)\n            goto exit_with_error;\n\n        int bitStringLength = (8 * (dataLength - 1)) - padding;\n        value = MmsValue_newBitString(bitStringLength);\n        memcpy(value->value.bitString.buf, buffer + bufPos + 1, dataLength - 1);\n        bufPos += dataLength;\n    }\n        break;\n\n    case 0x85: \n        if (dataLength > 8)\n            goto exit_with_error;\n\n        value = MmsValue_newInteger(dataLength * 8);\n        memcpy(value->value.integer->octets, buffer + bufPos, dataLength);\n        value->value.integer->size = dataLength;\n        bufPos += dataLength;\n        break;\n\n    case 0x86: \n        if (dataLength > 8)\n            goto exit_with_error;\n\n        value = MmsValue_newUnsigned(dataLength * 8);\n        memcpy(value->value.integer->octets, buffer + bufPos, dataLength);\n        value->value.integer->size = dataLength;\n\n        bufPos += dataLength;\n        break;\n\n    case 0x87: \n        if (dataLength == 9)\n            value = MmsValue_newDouble(BerDecoder_decodeDouble(buffer, bufPos));\n        else if (dataLength == 5)\n            value = MmsValue_newFloat(BerDecoder_decodeFloat(buffer, bufPos));\n        bufPos += dataLength;\n        break;\n\n    case 0x89: \n        value = MmsValue_newOctetString(dataLength, dataLength);\n        memcpy(value->value.octetString.buf, buffer + bufPos, dataLength);\n        bufPos += dataLength;\n        break;\n\n    case 0x8a: \n        value = MmsValue_newVisibleStringFromByteArray(buffer + bufPos, dataLength);\n        bufPos += dataLength;\n        break;\n\n    case 0x8c: \n        if (dataLength == 4)\n            value = MmsValue_newBinaryTime(true);\n        else if (dataLength == 6)\n            value = MmsValue_newBinaryTime(false);\n\n        if ((dataLength == 4) || (dataLength == 6))\n            memcpy(value->value.binaryTime.buf, buffer + bufPos, dataLength);\n\n        bufPos += dataLength;\n\n        break;\n\n    case 0x90: \n        value = MmsValue_newVisibleStringFromByteArray(buffer + bufPos, dataLength);\n        value->type = MMS_STRING;\n        bufPos += dataLength;\n\n        break;\n\n    case 0x91: \n        if (dataLength == 8) {\n            value = MmsValue_newUtcTime(0);\n            MmsValue_setUtcTimeByBuffer(value, buffer + bufPos);\n            bufPos += dataLength;\n        }\n        else\n            goto exit_with_error;\n\n        break;\n\n    case 0x00: \n        break;\n\n    default: \n        goto exit_with_error;\n    }\n\n    if (endBufPos != NULL)\n        *endBufPos = bufPos;\n\n    return value;\n\nexit_with_error:\n\n    if (value != NULL)\n        MmsValue_delete(value);\n\n    return NULL;\n", "Selected Statement": "if (elementCount < 0)", "Function Input": {"bufPos": {"value": "0"}, "buffer": {"value": "0x7fffffffde58 \"\\240~\\327\""}, "value": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"type": {"type_category": "unknown", "concrete_type": "MmsType", "value": "3519328"}, "deleteValue": {"type_category": "unknown", "concrete_type": "uint8_t", "value": "0 '\\000'"}, "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"dataAccessError": {"type_category": "unknown", "concrete_type": "MmsDataAccessError", "value": "33554432"}, "structure": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{size = 33554432, components = 0x600007f}"}, "boolean": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "integer": {"type_category": "pointer", "concrete_type": "RECURSIVE", "value": "0xff00001002000000"}, "floatingPoint": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{exponentWidth = 0 '\\000', formatWidth = 0 '\\000', buf = \"\\000\\002\\020\\000\\000\\377\\177\"}"}, "octetString": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{size = 0, maxSize = -16777200, buf = 0x600007f &lt;error: Cannot access memory at address 0x600007f&gt;}"}, "bitString": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{size = 33554432, buf = 0x600007f &lt;error: Cannot access memory at address 0x600007f&gt;}"}, "visibleString": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{buf = 0xff00001002000000 &lt;error: Cannot access memory at address 0xff00001002000000&gt;, size = 127}"}, "utcTime": {"type_category": "string", "concrete_type": "string", "value": "\"\\000\\000\\000\\002\\020\\000\\000\\377\""}, "binaryTime": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{size = 0 '\\000', buf = \"\\000\\000\\002\\020\\000\"}"}}}}}}}, "Variable Values Before Statement": {"elementCount": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nMmsValue*\nMmsValue_decodeMmsData(uint8_t* buffer, int bufPos, int bufferLength, int* endBufPos)\n{\n    MmsValue* value = NULL;\n\n    int dataEndBufPos = bufferLength;\n\n    if (bufferLength < 1)\n        goto exit_with_error;\n\n    uint8_t tag = buffer[bufPos++];\n\n    int dataLength;\n\n    bufPos = BerDecoder_decodeLength(buffer, &dataLength, bufPos, dataEndBufPos);\n\n    if (bufPos < 0)\n        goto exit_with_error;\n\n    \n    if ((tag != 0) && (dataLength == 0))\n        goto exit_with_error;\n\n    switch (tag) {\n\n    case 0xa1: \n    case 0xa2: \n    {\n        int elementCount = getNumberOfElements(buffer, bufPos, dataLength);\n\n        if (elementCount < 0)\n            goto exit_with_error;\n\n        if (tag == 0xa1)\n            value = MmsValue_createEmptyArray(elementCount);\n        else\n            value = MmsValue_createEmptyStructure(elementCount);\n\n        int i;\n\n        for (i = 0; i < elementCount; i++) {\n\n            int elementLength;\n\n            int newBufPos = BerDecoder_decodeLength(buffer, &elementLength, bufPos + 1, dataEndBufPos);\n\n            if (newBufPos < 0)\n                goto exit_with_error;\n\n            int elementBufLength = newBufPos - bufPos + elementLength;\n\n            MmsValue* elementValue = MmsValue_decodeMmsData(buffer, bufPos, bufPos + elementBufLength, NULL);\n\n            if (elementValue == NULL)\n                goto exit_with_error;\n\n            MmsValue_setElement(value, i, elementValue);\n\n            bufPos = newBufPos + elementLength;\n        }\n\n        if (value == NULL)\n            goto exit_with_error;\n    }\n\n        break;\n\n    case 0x80: \n        value = MmsValue_newDataAccessError((MmsDataAccessError) BerDecoder_decodeUint32(buffer, dataLength, bufPos));\n        bufPos += dataLength;\n        break;\n\n    case 0x83: \n        value = MmsValue_newBoolean(BerDecoder_decodeBoolean(buffer, bufPos));\n        bufPos += dataLength;\n        break;\n\n    case 0x84: \n    {\n        int padding = buffer[bufPos];\n\n        if (padding > 7)\n            goto exit_with_error;\n\n        int bitStringLength = (8 * (dataLength - 1)) - padding;\n        value = MmsValue_newBitString(bitStringLength);\n        memcpy(value->value.bitString.buf, buffer + bufPos + 1, dataLength - 1);\n        bufPos += dataLength;\n    }\n        break;\n\n    case 0x85: \n        if (dataLength > 8)\n            goto exit_with_error;\n\n        value = MmsValue_newInteger(dataLength * 8);\n        memcpy(value->value.integer->octets, buffer + bufPos, dataLength);\n        value->value.integer->size = dataLength;\n        bufPos += dataLength;\n        break;\n\n    case 0x86: \n        if (dataLength > 8)\n            goto exit_with_error;\n\n        value = MmsValue_newUnsigned(dataLength * 8);\n        memcpy(value->value.integer->octets, buffer + bufPos, dataLength);\n        value->value.integer->size = dataLength;\n\n        bufPos += dataLength;\n        break;\n\n    case 0x87: \n        if (dataLength == 9)\n            value = MmsValue_newDouble(BerDecoder_decodeDouble(buffer, bufPos));\n        else if (dataLength == 5)\n            value = MmsValue_newFloat(BerDecoder_decodeFloat(buffer, bufPos));\n        bufPos += dataLength;\n        break;\n\n    case 0x89: \n        value = MmsValue_newOctetString(dataLength, dataLength);\n        memcpy(value->value.octetString.buf, buffer + bufPos, dataLength);\n        bufPos += dataLength;\n        break;\n\n    case 0x8a: \n        value = MmsValue_newVisibleStringFromByteArray(buffer + bufPos, dataLength);\n        bufPos += dataLength;\n        break;\n\n    case 0x8c: \n        if (dataLength == 4)\n            value = MmsValue_newBinaryTime(true);\n        else if (dataLength == 6)\n            value = MmsValue_newBinaryTime(false);\n\n        if ((dataLength == 4) || (dataLength == 6))\n            memcpy(value->value.binaryTime.buf, buffer + bufPos, dataLength);\n\n        bufPos += dataLength;\n\n        break;\n\n    case 0x90: \n        value = MmsValue_newVisibleStringFromByteArray(buffer + bufPos, dataLength);\n        value->type = MMS_STRING;\n        bufPos += dataLength;\n\n        break;\n\n    case 0x91: \n        if (dataLength == 8) {\n            value = MmsValue_newUtcTime(0);\n            MmsValue_setUtcTimeByBuffer(value, buffer + bufPos);\n            bufPos += dataLength;\n        }\n        else\n            goto exit_with_error;\n\n        break;\n\n    case 0x00: \n        break;\n\n    default: \n        goto exit_with_error;\n    }\n\n    if (endBufPos != NULL)\n        *endBufPos = bufPos;\n\n    return value;\n\nexit_with_error:\n\n    if (value != NULL)\n        MmsValue_delete(value);\n\n    return NULL;\n", "Selected Statement": "if (encode)", "Function Input": {"bufPos": {"value": "0"}, "buffer": {"value": "0x7fffffffde58 \"\\240~\\327\""}, "value": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"type": {"type_category": "unknown", "concrete_type": "MmsType", "value": "3519328"}, "deleteValue": {"type_category": "unknown", "concrete_type": "uint8_t", "value": "0 '\\000'"}, "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"dataAccessError": {"type_category": "unknown", "concrete_type": "MmsDataAccessError", "value": "33554432"}, "structure": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{size = 33554432, components = 0x600007f}"}, "boolean": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "integer": {"type_category": "pointer", "concrete_type": "RECURSIVE", "value": "0xff00001002000000"}, "floatingPoint": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{exponentWidth = 0 '\\000', formatWidth = 0 '\\000', buf = \"\\000\\002\\020\\000\\000\\377\\177\"}"}, "octetString": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{size = 0, maxSize = -16777200, buf = 0x600007f &lt;error: Cannot access memory at address 0x600007f&gt;}"}, "bitString": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{size = 33554432, buf = 0x600007f &lt;error: Cannot access memory at address 0x600007f&gt;}"}, "visibleString": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{buf = 0xff00001002000000 &lt;error: Cannot access memory at address 0xff00001002000000&gt;, size = 127}"}, "utcTime": {"type_category": "string", "concrete_type": "string", "value": "\"\\000\\000\\000\\002\\020\\000\\000\\377\""}, "binaryTime": {"type_category": "struct", "concrete_type": "RECURSIVE", "value": "{size = 0 '\\000', buf = \"\\000\\000\\002\\020\\000\"}"}}}}}}}, "Variable Values Before Statement": {"encode": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\nBerDecoder_decodeLength(uint8_t* buffer, int* length, int bufPos, int maxBufPos)\n{\n", "Selected Statement": "if (*length < 0)", "Function Input": {"bufPos": {"value": "0"}, "buffer": {"value": "0x7ffff7cb6ee3 <fread+131> \"I\\211\\300\\367\\003\""}, "maxBufPos": {"value": "14123104"}}, "Variable Values Before Statement": {"length": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\nBerDecoder_decodeLength(uint8_t* buffer, int* length, int bufPos, int maxBufPos)\n{\n", "Selected Statement": "if (bufPos + (*length) > maxBufPos)", "Function Input": {"bufPos": {"value": "0"}, "buffer": {"value": "0x7ffff7cb6ee3 <fread+131> \"I\\211\\300\\367\\003\""}, "maxBufPos": {"value": "14123104"}}, "Variable Values Before Statement": {"bufPos": "NULL", "length": "NULL", "maxBufPos": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nMmsValue*\nMmsValue_createEmptyArray(int size)\n{\n    MmsValue* self = (MmsValue*) GLOBAL_CALLOC(1, sizeof(MmsValue));\n\n    if (self == NULL)\n        goto exit_function;\n\n    self->type = MMS_ARRAY;\n    self->value.structure.size = size;\n    self->value.structure.components = (MmsValue**) GLOBAL_CALLOC(size, sizeof(MmsValue*));\n\n    if (self->value.structure.components == NULL) {\n        GLOBAL_FREEMEM(self);\n        self = NULL;\n        goto exit_function;\n    }\n\n    int i;\n    for (i = 0; i < size; i++) {\n        self->value.structure.components[i] = NULL;\n    }\n\nexit_function:\n", "Selected Statement": "if (self->value.visibleString.buf == NULL)", "Function Input": {}, "Variable Values Before Statement": {"self->value.visibleString.buf": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nMmsValue*\nMmsValue_createEmptyArray(int size)\n{\n    MmsValue* self = (MmsValue*) GLOBAL_CALLOC(1, sizeof(MmsValue));\n\n    if (self == NULL)\n        goto exit_function;\n\n    self->type = MMS_ARRAY;\n    self->value.structure.size = size;\n    self->value.structure.components = (MmsValue**) GLOBAL_CALLOC(size, sizeof(MmsValue*));\n\n    if (self->value.structure.components == NULL) {\n        GLOBAL_FREEMEM(self);\n        self = NULL;\n        goto exit_function;\n    }\n\n    int i;\n    for (i = 0; i < size; i++) {\n        self->value.structure.components[i] = NULL;\n    }\n\nexit_function:\n", "Selected Statement": "if (self->value.bitString.size == update->value.bitString.size)", "Function Input": {}, "Variable Values Before Statement": {"self->value.bitString.size": "NULL", "update->value.bitString.size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid*\nMemory_calloc(size_t nmemb, size_t size)\n{\n    void* memory = calloc(nmemb, size);\n\n    if (memory == NULL)\n        noMemoryAvailableHandler();\n\n", "Selected Statement": "if (memory == NULL)", "Function Input": {}, "Variable Values Before Statement": {"memory": "VOID"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid*\nMemory_calloc(size_t nmemb, size_t size)\n{\n    void* memory = calloc(nmemb, size);\n\n    if (memory == NULL)\n        noMemoryAvailableHandler();\n\n", "Selected Statement": "if (memory == NULL)", "Function Input": {}, "Variable Values Before Statement": {"memory": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nAsn1PrimitiveValue*\nBerInteger_createInt32()\n{\n", "Selected Statement": "if (buf[0] & 0x80)", "Function Input": {}, "Variable Values Before Statement": {"buf": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nAsn1PrimitiveValue*\nBerInteger_createInt32()\n{\n", "Selected Statement": "if (self->maxSize >= value->size)", "Function Input": {}, "Variable Values Before Statement": {"self->maxSize": "NULL", "value->size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nAsn1PrimitiveValue*\nAsn1PrimitiveValue_create(int size)\n{\n\tAsn1PrimitiveValue* self = (Asn1PrimitiveValue*) GLOBAL_MALLOC(sizeof(Asn1PrimitiveValue));\n\n\tif (self) {\n\t    self->size = 1;\n\t    self->maxSize = size;\n\n\t    self->octets = (uint8_t*) GLOBAL_CALLOC(1, size);\n\n\t    if (self->octets == NULL) {\n\t        GLOBAL_FREEMEM(self);\n\t        self = NULL;\n\t    }\n\t}\n\n", "Selected Statement": "if (self->size == otherValue->size)", "Function Input": {"self": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1\n", "message": "Cannot access memory at address 0x1"}}}, "Variable Values Before Statement": {"self->size": "1 '\\001'", "otherValue->size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nAsn1PrimitiveValue*\nAsn1PrimitiveValue_create(int size)\n{\n\tAsn1PrimitiveValue* self = (Asn1PrimitiveValue*) GLOBAL_MALLOC(sizeof(Asn1PrimitiveValue));\n\n\tif (self) {\n\t    self->size = 1;\n\t    self->maxSize = size;\n\n\t    self->octets = (uint8_t*) GLOBAL_CALLOC(1, size);\n\n\t    if (self->octets == NULL) {\n\t        GLOBAL_FREEMEM(self);\n\t        self = NULL;\n\t    }\n\t}\n\n", "Selected Statement": "if (self)", "Function Input": {"self": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1\n", "message": "Cannot access memory at address 0x1"}}}, "Variable Values Before Statement": {"self": {"size": "176 '\\260'", "maxSize": "74 'J'", "octets": "0xd7 <error: Cannot access memory at address 0xd7>"}}, "Value After Statement Execution": "Yes", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nAsn1PrimitiveValue*\nAsn1PrimitiveValue_create(int size)\n{\n\tAsn1PrimitiveValue* self = (Asn1PrimitiveValue*) GLOBAL_MALLOC(sizeof(Asn1PrimitiveValue));\n\n\tif (self) {\n\t    self->size = 1;\n\t    self->maxSize = size;\n\n\t    self->octets = (uint8_t*) GLOBAL_CALLOC(1, size);\n\n\t    if (self->octets == NULL) {\n\t        GLOBAL_FREEMEM(self);\n\t        self = NULL;\n\t    }\n\t}\n\n", "Selected Statement": "if (clone->octets)", "Function Input": {"self": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1\n", "message": "Cannot access memory at address 0x1"}}}, "Variable Values Before Statement": {"clone->octets": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nchar*\nStringUtils_createStringFromBuffer(const uint8_t* buf, int size)\n{\n\tchar* newStr = (char*) GLOBAL_MALLOC(size + 1);\n\n\tif (newStr) {\n\t    memcpy(newStr, buf, size);\n\t    newStr[size] = 0;\n\t}\n\n", "Selected Statement": "if (newStr)", "Function Input": {}, "Variable Values Before Statement": {"newStr": "0xd710d0 \"\\360\\020\\327\""}, "Value After Statement Execution": "Yes", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nchar*\nStringUtils_createStringFromBuffer(const uint8_t* buf, int size)\n{\n\tchar* newStr = (char*) GLOBAL_MALLOC(size + 1);\n\n\tif (newStr) {\n\t    memcpy(newStr, buf, size);\n\t    newStr[size] = 0;\n\t}\n\n", "Selected Statement": "if (StringUtils_compareStrings(str1, str2) < 0)", "Function Input": {}, "Variable Values Before Statement": {"StringUtils_compareStrings": "NULL", "str1": "NULL", "str2": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nchar*\nStringUtils_createStringFromBuffer(const uint8_t* buf, int size)\n{\n\tchar* newStr = (char*) GLOBAL_MALLOC(size + 1);\n\n\tif (newStr) {\n\t    memcpy(newStr, buf, size);\n\t    newStr[size] = 0;\n\t}\n\n", "Selected Statement": "if (string[index] != prefix[index])", "Function Input": {}, "Variable Values Before Statement": {"string": "NULL", "index": "NULL", "prefix": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libiec61850"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nlog_register(void (*cb)(int, const char *))\n{\n\tlogh = cb;\n", "Selected Statement": "if (emsg == NULL)", "Function Input": {}, "Variable Values Before Statement": {"emsg": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nlog_register(void (*cb)(int, const char *))\n{\n\tlogh = cb;\n", "Selected Statement": "if (vasprintf(&result, fmt, ap) != -1)", "Function Input": {}, "Variable Values Before Statement": {"vasprintf": "NULL", "result": "NULL", "fmt": "NULL", "ap": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\nsonmp_decode(struct lldpd *cfg, char *frame, int s, struct lldpd_hardware *hardware,\n    struct lldpd_chassis **newchassis, struct lldpd_port **newport)\n{\n\tconst u_int8_t mcastaddr[] = SONMP_MULTICAST_ADDR;\n\tstruct lldpd_chassis *chassis;\n\tstruct lldpd_port *port;\n\tstruct lldpd_mgmt *mgmt;\n\tint length, i;\n\tu_int8_t *pos;\n\tu_int8_t seg[3], rchassis;\n\tstruct in_addr address;\n\n\tlog_debug(\"sonmp\", \"decode SONMP PDU from %s\", hardware->h_ifname);\n\n\tif ((chassis = calloc(1, sizeof(struct lldpd_chassis))) == NULL) {\n\t\tlog_warn(\"sonmp\", \"failed to allocate remote chassis\");\n\t\treturn -1;\n\t}\n\tTAILQ_INIT(&chassis->c_mgmt);\n\tif ((port = calloc(1, sizeof(struct lldpd_port))) == NULL) {\n\t\tlog_warn(\"sonmp\", \"failed to allocate remote port\");\n\t\tfree(chassis);\n\t\treturn -1;\n\t}\n#  ifdef ENABLE_DOT1\n\tTAILQ_INIT(&port->p_vlans);\n#  endif\n\n\tlength = s;\n\tpos = (u_int8_t *)frame;\n\tif (length < SONMP_SIZE + 2 * ETHER_ADDR_LEN + sizeof(u_int16_t)) {\n\t\tlog_warnx(\"sonmp\", \"too short SONMP frame received on %s\",\n\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\tif (PEEK_CMP(mcastaddr, sizeof(mcastaddr)) != 0)\n\t\t\n\t\tgoto malformed;\n\t\n\tPEEK_DISCARD(ETHER_ADDR_LEN);\n\tPEEK_DISCARD_UINT16;\n\tPEEK_DISCARD(6);\n\tif (PEEK_UINT16 != LLC_PID_SONMP_HELLO) {\n\t\tlog_debug(\"sonmp\", \"incorrect LLC protocol ID received for SONMP on %s\",\n\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\n\tchassis->c_id_subtype = LLDP_CHASSISID_SUBTYPE_ADDR;\n\tif ((chassis->c_id = calloc(1, sizeof(struct in_addr) + 1)) == NULL) {\n\t\tlog_warn(\"sonmp\", \"unable to allocate memory for chassis id on %s\",\n\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\tchassis->c_id_len = sizeof(struct in_addr) + 1;\n\tchassis->c_id[0] = 1;\n\tPEEK_BYTES(&address, sizeof(struct in_addr));\n\tmemcpy(chassis->c_id + 1, &address, sizeof(struct in_addr));\n\tif (asprintf(&chassis->c_name, \"%s\", inet_ntoa(address)) == -1) {\n\t\tlog_warnx(\"sonmp\", \"unable to write chassis name for %s\",\n\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\tPEEK_BYTES(seg, sizeof(seg));\n\trchassis = PEEK_UINT8;\n\tfor (i = 0; sonmp_chassis_types[i].type != 0; i++) {\n\t\tif (sonmp_chassis_types[i].type == rchassis) break;\n\t}\n\tif (asprintf(&chassis->c_descr, \"%s\", sonmp_chassis_types[i].description) ==\n\t    -1) {\n\t\tlog_warnx(\"sonmp\", \"unable to write chassis description for %s\",\n\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\tmgmt = lldpd_alloc_mgmt(LLDPD_AF_IPV4, &address, sizeof(struct in_addr), 0);\n\tif (mgmt == NULL) {\n\t\tif (errno == ENOMEM)\n\t\t\tlog_warn(\"sonmp\",\n\t\t\t    \"unable to allocate memory for management address\");\n\t\telse\n\t\t\tlog_warn(\"sonmp\", \"too large management address received on %s\",\n\t\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\tTAILQ_INSERT_TAIL(&chassis->c_mgmt, mgmt, m_entries);\n\tport->p_ttl =\n\t    cfg ? (cfg->g_config.c_tx_interval * cfg->g_config.c_tx_hold) : LLDPD_TTL;\n\tport->p_ttl = (port->p_ttl + 999) / 1000;\n\n\tport->p_id_subtype = LLDP_PORTID_SUBTYPE_LOCAL;\n\n\tport->p_id_len =\n\t    asprintf(&port->p_id, \"%02x-%02x-%02x\", seg[0], seg[1], seg[2]);\n\tif (port->p_id_len == -1) {\n\t\tlog_warn(\"sonmp\", \"unable to allocate memory for port id on %s\",\n\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\n\t\n\tif ((seg[0] == 0) && (seg[1] == 0)) {\n\t\tif (asprintf(&port->p_descr, \"port %d\", seg[2]) == -1) {\n\t\t\tlog_warnx(\"sonmp\", \"unable to write port description for %s\",\n\t\t\t    hardware->h_ifname);\n\t\t\tgoto malformed;\n\t\t}\n\t} else if (seg[0] == 0) {\n\t\tif (asprintf(&port->p_descr, \"port %d/%d\", seg[1], seg[2]) == -1) {\n\t\t\tlog_warnx(\"sonmp\", \"unable to write port description for %s\",\n\t\t\t    hardware->h_ifname);\n\t\t\tgoto malformed;\n\t\t}\n\t} else {\n\t\tif (asprintf(&port->p_descr, \"port %x:%x:%x\", seg[0], seg[1], seg[2]) ==\n\t\t    -1) {\n\t\t\tlog_warnx(\"sonmp\", \"unable to write port description for %s\",\n\t\t\t    hardware->h_ifname);\n\t\t\tgoto malformed;\n\t\t}\n\t}\n\t*newchassis = chassis;\n\t*newport = port;\n\treturn 1;\n\nmalformed:\n\tlldpd_chassis_cleanup(chassis, 1);\n\tlldpd_port_cleanup(port, 1);\n\tfree(port);\n\treturn -1;\n", "Selected Statement": "if (port->p_id_len == -1)", "Function Input": {"hardware": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x18\n", "message": "Cannot access memory at address 0x18"}}}, "Variable Values Before Statement": {"port->p_id_len": "8"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\nsonmp_decode(struct lldpd *cfg, char *frame, int s, struct lldpd_hardware *hardware,\n    struct lldpd_chassis **newchassis, struct lldpd_port **newport)\n{\n\tconst u_int8_t mcastaddr[] = SONMP_MULTICAST_ADDR;\n\tstruct lldpd_chassis *chassis;\n\tstruct lldpd_port *port;\n\tstruct lldpd_mgmt *mgmt;\n\tint length, i;\n\tu_int8_t *pos;\n\tu_int8_t seg[3], rchassis;\n\tstruct in_addr address;\n\n\tlog_debug(\"sonmp\", \"decode SONMP PDU from %s\", hardware->h_ifname);\n\n\tif ((chassis = calloc(1, sizeof(struct lldpd_chassis))) == NULL) {\n\t\tlog_warn(\"sonmp\", \"failed to allocate remote chassis\");\n\t\treturn -1;\n\t}\n\tTAILQ_INIT(&chassis->c_mgmt);\n\tif ((port = calloc(1, sizeof(struct lldpd_port))) == NULL) {\n\t\tlog_warn(\"sonmp\", \"failed to allocate remote port\");\n\t\tfree(chassis);\n\t\treturn -1;\n\t}\n#  ifdef ENABLE_DOT1\n\tTAILQ_INIT(&port->p_vlans);\n#  endif\n\n\tlength = s;\n\tpos = (u_int8_t *)frame;\n\tif (length < SONMP_SIZE + 2 * ETHER_ADDR_LEN + sizeof(u_int16_t)) {\n\t\tlog_warnx(\"sonmp\", \"too short SONMP frame received on %s\",\n\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\tif (PEEK_CMP(mcastaddr, sizeof(mcastaddr)) != 0)\n\t\t\n\t\tgoto malformed;\n\t\n\tPEEK_DISCARD(ETHER_ADDR_LEN);\n\tPEEK_DISCARD_UINT16;\n\tPEEK_DISCARD(6);\n\tif (PEEK_UINT16 != LLC_PID_SONMP_HELLO) {\n\t\tlog_debug(\"sonmp\", \"incorrect LLC protocol ID received for SONMP on %s\",\n\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\n\tchassis->c_id_subtype = LLDP_CHASSISID_SUBTYPE_ADDR;\n\tif ((chassis->c_id = calloc(1, sizeof(struct in_addr) + 1)) == NULL) {\n\t\tlog_warn(\"sonmp\", \"unable to allocate memory for chassis id on %s\",\n\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\tchassis->c_id_len = sizeof(struct in_addr) + 1;\n\tchassis->c_id[0] = 1;\n\tPEEK_BYTES(&address, sizeof(struct in_addr));\n\tmemcpy(chassis->c_id + 1, &address, sizeof(struct in_addr));\n\tif (asprintf(&chassis->c_name, \"%s\", inet_ntoa(address)) == -1) {\n\t\tlog_warnx(\"sonmp\", \"unable to write chassis name for %s\",\n\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\tPEEK_BYTES(seg, sizeof(seg));\n\trchassis = PEEK_UINT8;\n\tfor (i = 0; sonmp_chassis_types[i].type != 0; i++) {\n\t\tif (sonmp_chassis_types[i].type == rchassis) break;\n\t}\n\tif (asprintf(&chassis->c_descr, \"%s\", sonmp_chassis_types[i].description) ==\n\t    -1) {\n\t\tlog_warnx(\"sonmp\", \"unable to write chassis description for %s\",\n\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\tmgmt = lldpd_alloc_mgmt(LLDPD_AF_IPV4, &address, sizeof(struct in_addr), 0);\n\tif (mgmt == NULL) {\n\t\tif (errno == ENOMEM)\n\t\t\tlog_warn(\"sonmp\",\n\t\t\t    \"unable to allocate memory for management address\");\n\t\telse\n\t\t\tlog_warn(\"sonmp\", \"too large management address received on %s\",\n\t\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\tTAILQ_INSERT_TAIL(&chassis->c_mgmt, mgmt, m_entries);\n\tport->p_ttl =\n\t    cfg ? (cfg->g_config.c_tx_interval * cfg->g_config.c_tx_hold) : LLDPD_TTL;\n\tport->p_ttl = (port->p_ttl + 999) / 1000;\n\n\tport->p_id_subtype = LLDP_PORTID_SUBTYPE_LOCAL;\n\n\tport->p_id_len =\n\t    asprintf(&port->p_id, \"%02x-%02x-%02x\", seg[0], seg[1], seg[2]);\n\tif (port->p_id_len == -1) {\n\t\tlog_warn(\"sonmp\", \"unable to allocate memory for port id on %s\",\n\t\t    hardware->h_ifname);\n\t\tgoto malformed;\n\t}\n\n\t\n\tif ((seg[0] == 0) && (seg[1] == 0)) {\n\t\tif (asprintf(&port->p_descr, \"port %d\", seg[2]) == -1) {\n\t\t\tlog_warnx(\"sonmp\", \"unable to write port description for %s\",\n\t\t\t    hardware->h_ifname);\n\t\t\tgoto malformed;\n\t\t}\n\t} else if (seg[0] == 0) {\n\t\tif (asprintf(&port->p_descr, \"port %d/%d\", seg[1], seg[2]) == -1) {\n\t\t\tlog_warnx(\"sonmp\", \"unable to write port description for %s\",\n\t\t\t    hardware->h_ifname);\n\t\t\tgoto malformed;\n\t\t}\n\t} else {\n\t\tif (asprintf(&port->p_descr, \"port %x:%x:%x\", seg[0], seg[1], seg[2]) ==\n\t\t    -1) {\n\t\t\tlog_warnx(\"sonmp\", \"unable to write port description for %s\",\n\t\t\t    hardware->h_ifname);\n\t\t\tgoto malformed;\n\t\t}\n\t}\n\t*newchassis = chassis;\n\t*newport = port;\n\treturn 1;\n\nmalformed:\n\tlldpd_chassis_cleanup(chassis, 1);\n\tlldpd_port_cleanup(port, 1);\n\tfree(port);\n\treturn -1;\n", "Selected Statement": "if (sonmp_chassis_types[i].type == rchassis)", "Function Input": {"hardware": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x18\n", "message": "Cannot access memory at address 0x18"}}}, "Variable Values Before Statement": {"sonmp_chassis_types[i].type": "NULL", "rchassis": "u_int8_t"}, "Value After Statement Execution": "Yes", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define kMaxInputLength 2048\n\n\n", "Selected Statement": "if (!nchassis || !nport)", "Function Input": {"msg": {"value": "0x55555575e400 <fuzzer::TPC> \"\\003\""}, "pri": {"value": "21845"}}, "Variable Values Before Statement": {"nchassis": "NULL", "nport": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define kMaxInputLength 2048\n\n\n", "Selected Statement": "if (Size < kMinInputLength || Size > kMaxInputLength)", "Function Input": {"msg": {"value": "0x55555575e400 <fuzzer::TPC> \"\\003\""}, "pri": {"value": "21845"}}, "Variable Values Before Statement": {"Size": "NULL", "kMinInputLength": "NULL", "kMaxInputLength": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct lldpd_mgmt *\nlldpd_alloc_mgmt(int family, void *addrptr, size_t addrsize, u_int32_t iface)\n{\n\tstruct lldpd_mgmt *mgmt;\n\n\tlog_debug(\"alloc\", \"allocate a new management address (family: %d)\", family);\n\n\tif (family <= LLDPD_AF_UNSPEC || family >= LLDPD_AF_LAST) {\n\t\terrno = EAFNOSUPPORT;\n\t\treturn NULL;\n\t}\n\tif (addrsize > LLDPD_MGMT_MAXADDRSIZE) {\n\t\terrno = EOVERFLOW;\n\t\treturn NULL;\n\t}\n\tmgmt = calloc(1, sizeof(struct lldpd_mgmt));\n\tif (mgmt == NULL) {\n\t\terrno = ENOMEM;\n\t\treturn NULL;\n\t}\n\tmgmt->m_family = family;\n\tmemcpy(&mgmt->m_addr, addrptr, addrsize);\n\tmgmt->m_addrsize = addrsize;\n\tmgmt->m_iface = iface;\n\treturn mgmt;\n", "Selected Statement": "if (neighbors == 0)", "Function Input": {}, "Variable Values Before Statement": {"neighbors": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstruct lldpd_mgmt *\nlldpd_alloc_mgmt(int family, void *addrptr, size_t addrsize, u_int32_t iface)\n{\n\tstruct lldpd_mgmt *mgmt;\n\n\tlog_debug(\"alloc\", \"allocate a new management address (family: %d)\", family);\n\n\tif (family <= LLDPD_AF_UNSPEC || family >= LLDPD_AF_LAST) {\n\t\terrno = EAFNOSUPPORT;\n\t\treturn NULL;\n\t}\n\tif (addrsize > LLDPD_MGMT_MAXADDRSIZE) {\n\t\terrno = EOVERFLOW;\n\t\treturn NULL;\n\t}\n\tmgmt = calloc(1, sizeof(struct lldpd_mgmt));\n\tif (mgmt == NULL) {\n\t\terrno = ENOMEM;\n\t\treturn NULL;\n\t}\n\tmgmt->m_family = family;\n\tmemcpy(&mgmt->m_addr, addrptr, addrsize);\n\tmgmt->m_addrsize = addrsize;\n\tmgmt->m_iface = iface;\n\treturn mgmt;\n", "Selected Statement": "if (addrsize > LLDPD_MGMT_MAXADDRSIZE)", "Function Input": {}, "Variable Values Before Statement": {"addrsize": "4", "LLDPD_MGMT_MAXADDRSIZE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "   are not refreshed periodically. Port should be freed manually. */\nvoid\nlldpd_port_cleanup(struct lldpd_port *port, int all)\n{\n#ifdef ENABLE_LLDPMED\n\tint i;\n\tif (all)\n\t\tfor (i = 0; i < LLDP_MED_LOCFORMAT_LAST; i++)\n\t\t\tfree(port->p_med_location[i].data);\n#endif\n#ifdef ENABLE_DOT1\n\tlldpd_vlan_cleanup(port);\n\tlldpd_ppvid_cleanup(port);\n\tlldpd_pi_cleanup(port);\n#endif\n\t\n\n\tif (all) {\n\t\tfree(port->p_id);\n\t\tport->p_id = NULL;\n\t\tfree(port->p_descr);\n\t\tport->p_descr = NULL;\n\t\tfree(port->p_lastframe);\n\t\tif (port->p_chassis) { \n\t\t\tport->p_chassis->c_refcount--;\n\t\t\tport->p_chassis = NULL;\n\t\t}\n#ifdef ENABLE_CUSTOM\n\t\tlldpd_custom_list_cleanup(port);\n#endif\n\t}\n", "Selected Statement": "if (!all && expire && (now >= port->p_lastupdate + port->p_ttl))", "Function Input": {}, "Variable Values Before Statement": {"all": "NULL", "expire": "NULL", "now": "NULL", "port->p_lastupdate": "NULL", "port->p_ttl": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "   are not refreshed periodically. Port should be freed manually. */\nvoid\nlldpd_port_cleanup(struct lldpd_port *port, int all)\n{\n#ifdef ENABLE_LLDPMED\n\tint i;\n\tif (all)\n\t\tfor (i = 0; i < LLDP_MED_LOCFORMAT_LAST; i++)\n\t\t\tfree(port->p_med_location[i].data);\n#endif\n#ifdef ENABLE_DOT1\n\tlldpd_vlan_cleanup(port);\n\tlldpd_ppvid_cleanup(port);\n\tlldpd_pi_cleanup(port);\n#endif\n\t\n\n\tif (all) {\n\t\tfree(port->p_id);\n\t\tport->p_id = NULL;\n\t\tfree(port->p_descr);\n\t\tport->p_descr = NULL;\n\t\tfree(port->p_lastframe);\n\t\tif (port->p_chassis) { \n\t\t\tport->p_chassis->c_refcount--;\n\t\t\tport->p_chassis = NULL;\n\t\t}\n#ifdef ENABLE_CUSTOM\n\t\tlldpd_custom_list_cleanup(port);\n#endif\n\t}\n", "Selected Statement": "if (del)", "Function Input": {}, "Variable Values Before Statement": {"del": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "   are not refreshed periodically. Port should be freed manually. */\nvoid\nlldpd_port_cleanup(struct lldpd_port *port, int all)\n{\n#ifdef ENABLE_LLDPMED\n\tint i;\n\tif (all)\n\t\tfor (i = 0; i < LLDP_MED_LOCFORMAT_LAST; i++)\n\t\t\tfree(port->p_med_location[i].data);\n#endif\n#ifdef ENABLE_DOT1\n\tlldpd_vlan_cleanup(port);\n\tlldpd_ppvid_cleanup(port);\n\tlldpd_pi_cleanup(port);\n#endif\n\t\n\n\tif (all) {\n\t\tfree(port->p_id);\n\t\tport->p_id = NULL;\n\t\tfree(port->p_descr);\n\t\tport->p_descr = NULL;\n\t\tfree(port->p_lastframe);\n\t\tif (port->p_chassis) { \n\t\t\tport->p_chassis->c_refcount--;\n\t\t\tport->p_chassis = NULL;\n\t\t}\n#ifdef ENABLE_CUSTOM\n\t\tlldpd_custom_list_cleanup(port);\n#endif\n\t}\n", "Selected Statement": "if (all)", "Function Input": {}, "Variable Values Before Statement": {"all": "int"}, "Value After Statement Execution": "Yes", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "   are not refreshed periodically. Port should be freed manually. */\nvoid\nlldpd_port_cleanup(struct lldpd_port *port, int all)\n{\n#ifdef ENABLE_LLDPMED\n\tint i;\n\tif (all)\n\t\tfor (i = 0; i < LLDP_MED_LOCFORMAT_LAST; i++)\n\t\t\tfree(port->p_med_location[i].data);\n#endif\n#ifdef ENABLE_DOT1\n\tlldpd_vlan_cleanup(port);\n\tlldpd_ppvid_cleanup(port);\n\tlldpd_pi_cleanup(port);\n#endif\n\t\n\n\tif (all) {\n\t\tfree(port->p_id);\n\t\tport->p_id = NULL;\n\t\tfree(port->p_descr);\n\t\tport->p_descr = NULL;\n\t\tfree(port->p_lastframe);\n\t\tif (port->p_chassis) { \n\t\t\tport->p_chassis->c_refcount--;\n\t\t\tport->p_chassis = NULL;\n\t\t}\n#ifdef ENABLE_CUSTOM\n\t\tlldpd_custom_list_cleanup(port);\n#endif\n\t}\n", "Selected Statement": "if (all)", "Function Input": {}, "Variable Values Before Statement": {"all": "int"}, "Value After Statement Execution": "Yes", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define kMaxInputLength 2048\n\n\n", "Selected Statement": "if (Size < kMinInputLength || Size > kMaxInputLength)", "Function Input": {"msg": {"value": "0x55555575e400 <fuzzer::TPC> \"\\003\""}, "pri": {"value": "21845"}}, "Variable Values Before Statement": {"Size": "NULL", "kMinInputLength": "NULL", "kMaxInputLength": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define kMaxInputLength 2048\n\n\n", "Selected Statement": "if (!nchassis || !nport)", "Function Input": {"msg": {"value": "0x55555575e400 <fuzzer::TPC> \"\\003\""}, "pri": {"value": "21845"}}, "Variable Values Before Statement": {"nchassis": "NULL", "nport": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\ncdpv2_guess(char *frame, int len)\n{\n", "Selected Statement": "if (PEEK_CMP(mcastaddr, ETHER_ADDR_LEN) != 0)", "Function Input": {}, "Variable Values Before Statement": {"PEEK_CMP": "NULL", "mcastaddr": "NULL", "ETHER_ADDR_LEN": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\ncdpv2_guess(char *frame, int len)\n{\n", "Selected Statement": "if (len_eth > length)", "Function Input": {}, "Variable Values Before Statement": {"len_eth": "NULL", "length": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define kMaxInputLength 2048\n\n\n", "Selected Statement": "if (Size < kMinInputLength || Size > kMaxInputLength)", "Function Input": {"msg": {"value": "0x55555575e400 <fuzzer::TPC> \"\\002\""}, "pri": {"value": "21845"}}, "Variable Values Before Statement": {"Size": "NULL", "kMinInputLength": "NULL", "kMaxInputLength": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define kMaxInputLength 2048\n\n\n", "Selected Statement": "if (!cdpv2_guess((char *)Data, Size))", "Function Input": {"msg": {"value": "0x55555575e400 <fuzzer::TPC> \"\\002\""}, "pri": {"value": "21845"}}, "Variable Values Before Statement": {"cdpv2_guess": "NULL", "Data": "NULL", "Size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define kMaxInputLength 2048\n\n\n", "Selected Statement": "if (Size < kMinInputLength || Size > kMaxInputLength)", "Function Input": {"msg": {"value": "0x55555575e400 <fuzzer::TPC> \"\\377\\377\\377\\377\\037\""}, "pri": {"value": "21845"}}, "Variable Values Before Statement": {"Size": "NULL", "kMinInputLength": "NULL", "kMaxInputLength": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define kMaxInputLength 2048\n\n\n", "Selected Statement": "if (!nchassis || !nport)", "Function Input": {"msg": {"value": "0x55555575e400 <fuzzer::TPC> \"\\377\\377\\377\\377\\037\""}, "pri": {"value": "21845"}}, "Variable Values Before Statement": {"nchassis": "NULL", "nport": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lldpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\t\t\t\t\tconst_hashtab_key_t key1,\n\t\t\t\t\tconst_hashtab_key_t key2),\n\t\t\t unsigned int size)\n{\n\n\thashtab_t p;\n\n\tp = (hashtab_t) malloc(sizeof(hashtab_val_t));\n\tif (p == NULL)\n\t\treturn p;\n\n\tmemset(p, 0, sizeof(hashtab_val_t));\n\tp->size = size;\n\tp->nel = 0;\n\tp->hash_value = hash_value;\n\tp->keycmp = keycmp;\n\tp->htable = (hashtab_ptr_t *) calloc(size, sizeof(hashtab_ptr_t));\n\tif (p->htable == NULL) {\n\t\tfree(p);\n\t\treturn NULL;\n\t}\n\n\treturn p;\n", "Selected Statement": "if (h->size == new_size)", "Function Input": {"size": {"value": "32767"}}, "Variable Values Before Statement": {"h->size": "NULL", "new_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\t\t\t\t\tconst_hashtab_key_t key1,\n\t\t\t\t\tconst_hashtab_key_t key2),\n\t\t\t unsigned int size)\n{\n\n\thashtab_t p;\n\n\tp = (hashtab_t) malloc(sizeof(hashtab_val_t));\n\tif (p == NULL)\n\t\treturn p;\n\n\tmemset(p, 0, sizeof(hashtab_val_t));\n\tp->size = size;\n\tp->nel = 0;\n\tp->hash_value = hash_value;\n\tp->keycmp = keycmp;\n\tp->htable = (hashtab_ptr_t *) calloc(size, sizeof(hashtab_ptr_t));\n\tif (p->htable == NULL) {\n\t\tfree(p);\n\t\treturn NULL;\n\t}\n\n\treturn p;\n", "Selected Statement": "if (ret)", "Function Input": {"size": {"value": "32767"}}, "Variable Values Before Statement": {"ret": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint symtab_init(symtab_t * s, unsigned int size)\n{\n\ts->table = hashtab_create(symhash, symcmp, size);\n\tif (!s->table)\n\t\treturn -1;\n\ts->nprim = 0;\n\treturn 0;\n", "Selected Statement": "if (!s->table)", "Function Input": {}, "Variable Values Before Statement": {"s->table": "0x10be070"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint symtab_init(symtab_t * s, unsigned int size)\n{\n\ts->table = hashtab_create(symhash, symcmp, size);\n\tif (!s->table)\n\t\treturn -1;\n\ts->nprim = 0;\n\treturn 0;\n", "Selected Statement": "if (s->table)", "Function Input": {}, "Variable Values Before Statement": {"s->table": "0x10be070"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include <sepol/cil/cil.h>\n#include <sepol/policydb.h>\n\nstatic void log_handler(__attribute__((unused)) int lvl, __attribute__((unused)) const char *msg) {\n\t\n", "Selected Statement": "if (cil_build_policydb(db, &pdb) != SEPOL_OK)", "Function Input": {"lvl": {"value": "0"}, "msg": {"value": "0x6b7e00 <fuzzer::TPC> \"\\001\""}}, "Variable Values Before Statement": {"cil_build_policydb": "NULL", "db": "NULL", "pdb": "NULL", "SEPOL_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include <sepol/cil/cil.h>\n#include <sepol/policydb.h>\n\nstatic void log_handler(__attribute__((unused)) int lvl, __attribute__((unused)) const char *msg) {\n\t\n", "Selected Statement": "if (sepol_policydb_optimize(pdb) != SEPOL_OK)", "Function Input": {"lvl": {"value": "0"}, "msg": {"value": "0x6b7e00 <fuzzer::TPC> \"\\001\""}}, "Variable Values Before Statement": {"sepol_policydb_optimize": "NULL", "pdb": "NULL", "SEPOL_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid sepol_policydb_free(sepol_policydb_t * p)\n{\n\tif (!p)\n\t\treturn;\n\tpolicydb_destroy(&p->p);\n\tfree(p);\n", "Selected Statement": "if (!p)", "Function Input": {}, "Variable Values Before Statement": {"p": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid sepol_policydb_free(sepol_policydb_t * p)\n{\n\tif (!p)\n\t\treturn;\n\tpolicydb_destroy(&p->p);\n\tfree(p);\n", "Selected Statement": "if (!(*pf))", "Function Input": {}, "Variable Values Before Statement": {"pf": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid sepol_policydb_free(sepol_policydb_t * p)\n{\n\tif (!p)\n\t\treturn;\n\tpolicydb_destroy(&p->p);\n\tfree(p);\n", "Selected Statement": "if (pf->type != PF_LEN)", "Function Input": {}, "Variable Values Before Statement": {"pf->type": "NULL", "PF_LEN": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Initialize a policy database structure.\n */\nint policydb_init(policydb_t * p)\n{\n\tint i, rc;\n\n\tmemset(p, 0, sizeof(policydb_t));\n\n\tfor (i = 0; i < SYM_NUM; i++) {\n\t\tp->sym_val_to_name[i] = NULL;\n\t\trc = symtab_init(&p->symtab[i], symtab_sizes[i]);\n\t\tif (rc)\n\t\t\tgoto err;\n\t}\n\n\t\n\tfor (i = 0; i < SYM_NUM; i++) {\n\t\tif (symtab_init(&p->scope[i], symtab_sizes[i])) {\n\t\t\tgoto err;\n\t\t}\n\t}\n\tif ((p->global = avrule_block_create()) == NULL ||\n\t    (p->global->branch_list = avrule_decl_create(1)) == NULL) {\n\t\tgoto err;\n\t}\n\tp->decl_val_to_struct = NULL;\n\n\trc = avtab_init(&p->te_avtab);\n\tif (rc)\n\t\tgoto err;\n\n\trc = roles_init(p);\n\tif (rc)\n\t\tgoto err;\n\n\trc = cond_policydb_init(p);\n\tif (rc)\n\t\tgoto err;\n\n\tp->filename_trans = hashtab_create(filenametr_hash, filenametr_cmp, (1 << 10));\n\tif (!p->filename_trans) {\n\t\trc = -ENOMEM;\n\t\tgoto err;\n\t}\n\n\tp->range_tr = hashtab_create(rangetr_hash, rangetr_cmp, 256);\n\tif (!p->range_tr) {\n\t\trc = -ENOMEM;\n\t\tgoto err;\n\t}\n\n\tebitmap_init(&p->policycaps);\n\tebitmap_init(&p->permissive_map);\n\n\treturn 0;\nerr:\n\thashtab_destroy(p->filename_trans);\n\thashtab_destroy(p->range_tr);\n\tfor (i = 0; i < SYM_NUM; i++) {\n\t\thashtab_destroy(p->symtab[i].table);\n\t\thashtab_destroy(p->scope[i].table);\n\t}\n\tavrule_block_list_destroy(p->global);\n\treturn rc;\n", "Selected Statement": "if (rc < 0)", "Function Input": {}, "Variable Values Before Statement": {"rc": "int"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Initialize a policy database structure.\n */\nint policydb_init(policydb_t * p)\n{\n\tint i, rc;\n\n\tmemset(p, 0, sizeof(policydb_t));\n\n\tfor (i = 0; i < SYM_NUM; i++) {\n\t\tp->sym_val_to_name[i] = NULL;\n\t\trc = symtab_init(&p->symtab[i], symtab_sizes[i]);\n\t\tif (rc)\n\t\t\tgoto err;\n\t}\n\n\t\n\tfor (i = 0; i < SYM_NUM; i++) {\n\t\tif (symtab_init(&p->scope[i], symtab_sizes[i])) {\n\t\t\tgoto err;\n\t\t}\n\t}\n\tif ((p->global = avrule_block_create()) == NULL ||\n\t    (p->global->branch_list = avrule_decl_create(1)) == NULL) {\n\t\tgoto err;\n\t}\n\tp->decl_val_to_struct = NULL;\n\n\trc = avtab_init(&p->te_avtab);\n\tif (rc)\n\t\tgoto err;\n\n\trc = roles_init(p);\n\tif (rc)\n\t\tgoto err;\n\n\trc = cond_policydb_init(p);\n\tif (rc)\n\t\tgoto err;\n\n\tp->filename_trans = hashtab_create(filenametr_hash, filenametr_cmp, (1 << 10));\n\tif (!p->filename_trans) {\n\t\trc = -ENOMEM;\n\t\tgoto err;\n\t}\n\n\tp->range_tr = hashtab_create(rangetr_hash, rangetr_cmp, 256);\n\tif (!p->range_tr) {\n\t\trc = -ENOMEM;\n\t\tgoto err;\n\t}\n\n\tebitmap_init(&p->policycaps);\n\tebitmap_init(&p->permissive_map);\n\n\treturn 0;\nerr:\n\thashtab_destroy(p->filename_trans);\n\thashtab_destroy(p->range_tr);\n\tfor (i = 0; i < SYM_NUM; i++) {\n\t\thashtab_destroy(p->symtab[i].table);\n\t\thashtab_destroy(p->scope[i].table);\n\t}\n\tavrule_block_list_destroy(p->global);\n\treturn rc;\n", "Selected Statement": "if (!value_isvalid(typdatum->s.value, p->p_types.nprim))", "Function Input": {}, "Variable Values Before Statement": {"value_isvalid": "NULL", "typdatum->s.value": "NULL", "p->p_types.nprim": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "};\n\navrule_block_t *avrule_block_create(void)\n{\n\tavrule_block_t *block;\n\tif ((block = calloc(1, sizeof(*block))) == NULL) {\n\t\treturn NULL;\n\t}\n\treturn block;\n", "Selected Statement": "if (perm == NULL && cladatum->comdatum != 0)", "Function Input": {}, "Variable Values Before Statement": {"perm": "NULL", "cladatum->comdatum": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "};\n\navrule_block_t *avrule_block_create(void)\n{\n\tavrule_block_t *block;\n\tif ((block = calloc(1, sizeof(*block))) == NULL) {\n\t\treturn NULL;\n\t}\n\treturn block;\n", "Selected Statement": "if (scope->class_perms_map)", "Function Input": {}, "Variable Values Before Statement": {"scope->class_perms_map": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic inline void ebitmap_init(ebitmap_t * e)\n{\n\tmemset(e, 0, sizeof(*e));\n", "Selected Statement": "if (n->map & (MAPBIT << (bit - n->startbit)))", "Function Input": {"e": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"node": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x109e420", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1623058\n", "message": "Cannot access memory at address 0x1623058"}}, "highbit": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}}}, "Variable Values Before Statement": {"n->map": "NULL", "MAPBIT": "NULL", "bit": "NULL", "n->startbit": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic inline void ebitmap_init(ebitmap_t * e)\n{\n\tmemset(e, 0, sizeof(*e));\n", "Selected Statement": "if ((bit == ((*n)->startbit + MAPSIZE - 1)) && (*n)->next)", "Function Input": {"e": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"node": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x109e420", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1623058\n", "message": "Cannot access memory at address 0x1623058"}}, "highbit": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}}}, "Variable Values Before Statement": {"bit": "NULL", "(*n)->startbit": "NULL", "MAPSIZE": "NULL", "(*n)->next": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint avtab_init(avtab_t * h)\n{\n\th->htable = NULL;\n\th->nel = 0;\n", "Selected Statement": "if (!(val & (AVTAB_AV | AVTAB_TYPE)))", "Function Input": {}, "Variable Values Before Statement": {"val": "NULL", "AVTAB_AV": "NULL", "AVTAB_TYPE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * NULL then this function will create a new array (*cnt is reset to\n * 0).  Return 0 on success, -1 on out of memory. */\nint add_i_to_a(uint32_t i, uint32_t * cnt, uint32_t ** a)\n{\n\tuint32_t *new;\n\n\tif (cnt == NULL || *cnt == UINT32_MAX || a == NULL)\n\t\treturn -1;\n\n\t\n\tif (*a != NULL)\n\t\tnew = (uint32_t *) reallocarray(*a, *cnt + 1, sizeof(uint32_t));\n\telse {\t\t\t\n\n\t\t*cnt = 0;\n\t\tnew = (uint32_t *) malloc(sizeof(uint32_t));\n\t}\n\tif (new == NULL) {\n\t\treturn -1;\n\t}\n\tnew[*cnt] = i;\n\t(*cnt)++;\n\t*a = new;\n\treturn 0;\n", "Selected Statement": "if (!xperm_test(bit, xperms->perms))", "Function Input": {"a": {"value": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x10a7570", "value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x725f7463656a626f\n", "message": "Cannot access memory at address 0x725f7463656a626f"}}}, "cnt": {"value": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "17455024"}}, "i": {"value": "4294956832"}}, "Variable Values Before Statement": {"xperm_test": "NULL", "bit": "NULL", "xperms->perms": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * NULL then this function will create a new array (*cnt is reset to\n * 0).  Return 0 on success, -1 on out of memory. */\nint add_i_to_a(uint32_t i, uint32_t * cnt, uint32_t ** a)\n{\n\tuint32_t *new;\n\n\tif (cnt == NULL || *cnt == UINT32_MAX || a == NULL)\n\t\treturn -1;\n\n\t\n\tif (*a != NULL)\n\t\tnew = (uint32_t *) reallocarray(*a, *cnt + 1, sizeof(uint32_t));\n\telse {\t\t\t\n\n\t\t*cnt = 0;\n\t\tnew = (uint32_t *) malloc(sizeof(uint32_t));\n\t}\n\tif (new == NULL) {\n\t\treturn -1;\n\t}\n\tnew[*cnt] = i;\n\t(*cnt)++;\n\t*a = new;\n\treturn 0;\n", "Selected Statement": "if (rc < 0)", "Function Input": {"a": {"value": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x10a7570", "value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x725f7463656a626f\n", "message": "Cannot access memory at address 0x725f7463656a626f"}}}, "cnt": {"value": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "17455024"}}, "i": {"value": "4294956832"}}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint cond_policydb_init(policydb_t * p)\n{\n\tp->bool_val_to_struct = NULL;\n\tp->cond_list = NULL;\n\tif (avtab_init(&p->te_cond_avtab))\n\t\treturn -1;\n\n\treturn 0;\n", "Selected Statement": "if (k)", "Function Input": {}, "Variable Values Before Statement": {"k": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint cond_policydb_init(policydb_t * p)\n{\n\tp->bool_val_to_struct = NULL;\n\tp->cond_list = NULL;\n\tif (avtab_init(&p->te_cond_avtab))\n\t\treturn -1;\n\n\treturn 0;\n", "Selected Statement": "if (!new_expr)", "Function Input": {}, "Variable Values Before Statement": {"new_expr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic int read_source_policy(policydb_t *p, const uint8_t *data, size_t size)\n{\n\tint fd, rc;\n\tssize_t wr;\n\n\tfd = memfd_create(\"fuzz-input\", MFD_CLOEXEC);\n\tif (fd < 0)\n\t\treturn -1;\n\n\twr = full_write(fd, data, size);\n\tif (wr < 0 || (size_t)wr != size) {\n\t\tclose(fd);\n\t\treturn -1;\n\t}\n\n\tfsync(fd);\n\n\tyynerrs = 0;\n\n\tyyin = fdopen(fd, \"r\");\n\tif (!yyin) {\n\t\tclose(fd);\n\t\treturn -1;\n\t}\n\n\trewind(yyin);\n\n\tset_source_file(\"fuzz-input\");\n\n\tid_queue = queue_create();\n\tif (id_queue == NULL) {\n\t\tfclose(yyin);\n\t\tyylex_destroy();\n\t\treturn -1;\n\t}\n\n\tpolicydbp = p;\n\tmlspol = p->mls;\n\n\tinit_parser(1);\n\n\tif (!setjmp(fuzzing_pre_parse_stack_state)) {\n\t\tqueue_destroy(id_queue);\n\t\tfclose(yyin);\n\t\tyylex_destroy();\n\t\treturn -1;\n\t}\n\n\trc = yyparse();\n\t\n\tassert(rc || !policydb_errors);\n\tif (rc || policydb_errors) {\n\t\tqueue_destroy(id_queue);\n\t\tfclose(yyin);\n\t\tyylex_destroy();\n\t\treturn -1;\n\t}\n\n\trewind(yyin);\n\tinit_parser(2);\n\tset_source_file(\"fuzz-input\");\n\tyyrestart(yyin);\n\n\trc = yyparse();\n\tassert(rc || !policydb_errors);\n\tif (rc || policydb_errors) {\n\t\tqueue_destroy(id_queue);\n\t\tfclose(yyin);\n\t\tyylex_destroy();\n\t\treturn -1;\n\t}\n\n\tqueue_destroy(id_queue);\n\tfclose(yyin);\n\tyylex_destroy();\n\n\treturn 0;\n}\n\nstatic int write_binary_policy(FILE *outfp, policydb_t *p)\n{\n\tstruct policy_file pf;\n\n\tpolicy_file_init(&pf);\n\tpf.type = PF_USE_STDIO;\n\tpf.fp = outfp;\n\treturn policydb_write(p, &pf);\n}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n\tpolicydb_t parsepolicydb = {};\n\tpolicydb_t kernpolicydb = {};\n\tpolicydb_t *finalpolicydb;\n\tsidtab_t sidtab = {};\n\tFILE *devnull = NULL;\n\tint mls, platform, policyvers;\n\n\tsepol_debug(VERBOSE);\n\n\t\n\tif (size < 3)\n\t\treturn 0;\n\tswitch (data[0]) {\n\tcase 'S':\n\t\tplatform = SEPOL_TARGET_SELINUX;\n\t\tbreak;\n\tcase 'X':\n\t\tplatform = SEPOL_TARGET_XEN;\n\t\tbreak;\n\tdefault:\n\t\treturn 0;\n\t}\n\tswitch (data[1]) {\n\tcase '0':\n\t\tmls = 0;\n\t\tbreak;\n\tcase '1':\n\t\tmls = 1;\n\t\tbreak;\n\tdefault:\n\t\treturn 0;\n\t}\n\tstatic_assert(0x7F - 'A' >= POLICYDB_VERSION_MAX, \"Max policy version should be representable\");\n\tpolicyvers = data[2] - 'A';\n\tif (policyvers < POLICYDB_VERSION_MIN || policyvers > POLICYDB_VERSION_MAX)\n\t\treturn 0;\n\tdata += 3;\n\tsize -= 3;\n\n\tif (policydb_init(&parsepolicydb))\n\t\tgoto exit;\n\n\tparsepolicydb.policy_type = POLICY_BASE;\n\tparsepolicydb.mls = mls;\n\tparsepolicydb.handle_unknown = DENY_UNKNOWN;\n\tparsepolicydb.policyvers = policyvers;\n\tpolicydb_set_target_platform(&parsepolicydb, platform);\n\n", "Selected Statement": "if (size < 3)", "Function Input": {"fd": {"value": "0"}}, "Variable Values Before Statement": {"size": "0"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic int read_source_policy(policydb_t *p, const uint8_t *data, size_t size)\n{\n\tint fd, rc;\n\tssize_t wr;\n\n\tfd = memfd_create(\"fuzz-input\", MFD_CLOEXEC);\n\tif (fd < 0)\n\t\treturn -1;\n\n\twr = full_write(fd, data, size);\n\tif (wr < 0 || (size_t)wr != size) {\n\t\tclose(fd);\n\t\treturn -1;\n\t}\n\n\tfsync(fd);\n\n\tyynerrs = 0;\n\n\tyyin = fdopen(fd, \"r\");\n\tif (!yyin) {\n\t\tclose(fd);\n\t\treturn -1;\n\t}\n\n\trewind(yyin);\n\n\tset_source_file(\"fuzz-input\");\n\n\tid_queue = queue_create();\n\tif (id_queue == NULL) {\n\t\tfclose(yyin);\n\t\tyylex_destroy();\n\t\treturn -1;\n\t}\n\n\tpolicydbp = p;\n\tmlspol = p->mls;\n\n\tinit_parser(1);\n\n\tif (!setjmp(fuzzing_pre_parse_stack_state)) {\n\t\tqueue_destroy(id_queue);\n\t\tfclose(yyin);\n\t\tyylex_destroy();\n\t\treturn -1;\n\t}\n\n\trc = yyparse();\n\t\n\tassert(rc || !policydb_errors);\n\tif (rc || policydb_errors) {\n\t\tqueue_destroy(id_queue);\n\t\tfclose(yyin);\n\t\tyylex_destroy();\n\t\treturn -1;\n\t}\n\n\trewind(yyin);\n\tinit_parser(2);\n\tset_source_file(\"fuzz-input\");\n\tyyrestart(yyin);\n\n\trc = yyparse();\n\tassert(rc || !policydb_errors);\n\tif (rc || policydb_errors) {\n\t\tqueue_destroy(id_queue);\n\t\tfclose(yyin);\n\t\tyylex_destroy();\n\t\treturn -1;\n\t}\n\n\tqueue_destroy(id_queue);\n\tfclose(yyin);\n\tyylex_destroy();\n\n\treturn 0;\n}\n\nstatic int write_binary_policy(FILE *outfp, policydb_t *p)\n{\n\tstruct policy_file pf;\n\n\tpolicy_file_init(&pf);\n\tpf.type = PF_USE_STDIO;\n\tpf.fp = outfp;\n\treturn policydb_write(p, &pf);\n}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n\tpolicydb_t parsepolicydb = {};\n\tpolicydb_t kernpolicydb = {};\n\tpolicydb_t *finalpolicydb;\n\tsidtab_t sidtab = {};\n\tFILE *devnull = NULL;\n\tint mls, platform, policyvers;\n\n\tsepol_debug(VERBOSE);\n\n\t\n\tif (size < 3)\n\t\treturn 0;\n\tswitch (data[0]) {\n\tcase 'S':\n\t\tplatform = SEPOL_TARGET_SELINUX;\n\t\tbreak;\n\tcase 'X':\n\t\tplatform = SEPOL_TARGET_XEN;\n\t\tbreak;\n\tdefault:\n\t\treturn 0;\n\t}\n\tswitch (data[1]) {\n\tcase '0':\n\t\tmls = 0;\n\t\tbreak;\n\tcase '1':\n\t\tmls = 1;\n\t\tbreak;\n\tdefault:\n\t\treturn 0;\n\t}\n\tstatic_assert(0x7F - 'A' >= POLICYDB_VERSION_MAX, \"Max policy version should be representable\");\n\tpolicyvers = data[2] - 'A';\n\tif (policyvers < POLICYDB_VERSION_MIN || policyvers > POLICYDB_VERSION_MAX)\n\t\treturn 0;\n\tdata += 3;\n\tsize -= 3;\n\n\tif (policydb_init(&parsepolicydb))\n\t\tgoto exit;\n\n\tparsepolicydb.policy_type = POLICY_BASE;\n\tparsepolicydb.mls = mls;\n\tparsepolicydb.handle_unknown = DENY_UNKNOWN;\n\tparsepolicydb.policyvers = policyvers;\n\tpolicydb_set_target_platform(&parsepolicydb, platform);\n\n", "Selected Statement": "if (!setjmp(fuzzing_pre_parse_stack_state))", "Function Input": {"fd": {"value": "0"}}, "Variable Values Before Statement": {"setjmp": "NULL", "fuzzing_pre_parse_stack_state": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic int read_source_policy(policydb_t *p, const uint8_t *data, size_t size)\n{\n\tint fd, rc;\n\tssize_t wr;\n\n\tfd = memfd_create(\"fuzz-input\", MFD_CLOEXEC);\n\tif (fd < 0)\n\t\treturn -1;\n\n\twr = full_write(fd, data, size);\n\tif (wr < 0 || (size_t)wr != size) {\n\t\tclose(fd);\n\t\treturn -1;\n\t}\n\n\tfsync(fd);\n\n\tyynerrs = 0;\n\n\tyyin = fdopen(fd, \"r\");\n\tif (!yyin) {\n\t\tclose(fd);\n\t\treturn -1;\n\t}\n\n\trewind(yyin);\n\n\tset_source_file(\"fuzz-input\");\n\n\tid_queue = queue_create();\n\tif (id_queue == NULL) {\n\t\tfclose(yyin);\n\t\tyylex_destroy();\n\t\treturn -1;\n\t}\n\n\tpolicydbp = p;\n\tmlspol = p->mls;\n\n\tinit_parser(1);\n\n\tif (!setjmp(fuzzing_pre_parse_stack_state)) {\n\t\tqueue_destroy(id_queue);\n\t\tfclose(yyin);\n\t\tyylex_destroy();\n\t\treturn -1;\n\t}\n\n\trc = yyparse();\n\t\n\tassert(rc || !policydb_errors);\n\tif (rc || policydb_errors) {\n\t\tqueue_destroy(id_queue);\n\t\tfclose(yyin);\n\t\tyylex_destroy();\n\t\treturn -1;\n\t}\n\n\trewind(yyin);\n\tinit_parser(2);\n\tset_source_file(\"fuzz-input\");\n\tyyrestart(yyin);\n\n\trc = yyparse();\n\tassert(rc || !policydb_errors);\n\tif (rc || policydb_errors) {\n\t\tqueue_destroy(id_queue);\n\t\tfclose(yyin);\n\t\tyylex_destroy();\n\t\treturn -1;\n\t}\n\n\tqueue_destroy(id_queue);\n\tfclose(yyin);\n\tyylex_destroy();\n\n\treturn 0;\n}\n\nstatic int write_binary_policy(FILE *outfp, policydb_t *p)\n{\n\tstruct policy_file pf;\n\n\tpolicy_file_init(&pf);\n\tpf.type = PF_USE_STDIO;\n\tpf.fp = outfp;\n\treturn policydb_write(p, &pf);\n}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n\tpolicydb_t parsepolicydb = {};\n\tpolicydb_t kernpolicydb = {};\n\tpolicydb_t *finalpolicydb;\n\tsidtab_t sidtab = {};\n\tFILE *devnull = NULL;\n\tint mls, platform, policyvers;\n\n\tsepol_debug(VERBOSE);\n\n\t\n\tif (size < 3)\n\t\treturn 0;\n\tswitch (data[0]) {\n\tcase 'S':\n\t\tplatform = SEPOL_TARGET_SELINUX;\n\t\tbreak;\n\tcase 'X':\n\t\tplatform = SEPOL_TARGET_XEN;\n\t\tbreak;\n\tdefault:\n\t\treturn 0;\n\t}\n\tswitch (data[1]) {\n\tcase '0':\n\t\tmls = 0;\n\t\tbreak;\n\tcase '1':\n\t\tmls = 1;\n\t\tbreak;\n\tdefault:\n\t\treturn 0;\n\t}\n\tstatic_assert(0x7F - 'A' >= POLICYDB_VERSION_MAX, \"Max policy version should be representable\");\n\tpolicyvers = data[2] - 'A';\n\tif (policyvers < POLICYDB_VERSION_MIN || policyvers > POLICYDB_VERSION_MAX)\n\t\treturn 0;\n\tdata += 3;\n\tsize -= 3;\n\n\tif (policydb_init(&parsepolicydb))\n\t\tgoto exit;\n\n\tparsepolicydb.policy_type = POLICY_BASE;\n\tparsepolicydb.mls = mls;\n\tparsepolicydb.handle_unknown = DENY_UNKNOWN;\n\tparsepolicydb.policyvers = policyvers;\n\tpolicydb_set_target_platform(&parsepolicydb, platform);\n\n", "Selected Statement": "if (write_binary_policy(devnull, finalpolicydb))", "Function Input": {"fd": {"value": "0"}}, "Variable Values Before Statement": {"write_binary_policy": "NULL", "devnull": "NULL", "finalpolicydb": {"policy_type": "0", "name": "0x10a42f0 \" C\\n\\001\"", "version": null, "target_platform": "17449792", "unsupported_format": "0", "mls": "0", "symtab": [{"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x10a4480"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "1"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x10a4540"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x109da90"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x109d2d0"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x10aaa90"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x109e4c0"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}], "sym_val_to_name": [{"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}], "class_val_to_struct": null, "role_val_to_struct": null, "user_val_to_struct": null, "type_val_to_struct": null, "scope": [{"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x10a5780"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x10a5840"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x10aab50"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x10a6c90"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x10a6d50"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x10a6e10"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t", "value": "0x10a6ed0"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"table": {"type_category": "unknown", "concrete_type": "hashtab_t"}, "nprim": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}], "global": null, "decl_val_to_struct": null, "te_avtab": null, "bool_val_to_struct": null, "te_cond_avtab": null, "cond_list": null, "role_tr": null, "role_allow": null, "ocontexts": [{"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffddc8", "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"u": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"name": {"type_category": "string", "concrete_type": "string", "value": "0x10a7650 \"\""}, "port": {"type_category": "struct", "concrete_type": "NESTED", "value": "{protocol = 80 'P', low_port = 266, high_port = 0}"}, "node": {"type_category": "struct", "concrete_type": "NESTED", "value": "{addr = 17462864, mask = 0}"}, "node6": {"type_category": "struct", "concrete_type": "NESTED", "value": "{addr = {17462864, 0, 256, 0}, mask = {5700928, 0, 5701008, 0}}"}, "device": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "17462864"}, "pirq": {"type_category": "unknown", "concrete_type": "uint16_t", "value": "30288"}, "iomem": {"type_category": "struct", "concrete_type": "NESTED", "value": "{low_iomem = 17462864, high_iomem = 256}"}, "ioport": {"type_category": "struct", "concrete_type": "NESTED", "value": "{low_ioport = 17462864, high_ioport = 0}"}, "ibpkey": {"type_category": "struct", "concrete_type": "NESTED", "value": "{subnet_prefix = 17462864, low_pkey = 256, high_pkey = 0}"}, "ibendport": {"type_category": "struct", "concrete_type": "NESTED", "value": "{dev_name = 0x10a7650 \"\", port = 0 '\\000'}"}}}, "v": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"sclass": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}, "behavior": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, "context": {"type_category": "array", "concrete_type": "context_struct_t", "value": [{"type_category": "struct", "concrete_type": "context_struct_t", "value": "{user = 2065, role = 0, type = 0, range = {level = {{sens = 0, cat = {node = 0x0, highbit = 0}}, {sens = 0, cat = {node = 0x0, highbit = 0}}}}}"}, {"type_category": "struct", "concrete_type": "context_struct_t", "value": "{user = 0, role = 0, type = 0, range = {level = {{sens = 0, cat = {node = 0x0, highbit = 0}}, {sens = 0, cat = {node = 0x0, highbit = 0}}}}}"}]}, "sid": {"type_category": "array", "concrete_type": "sepol_security_id_t", "value": [{"type_category": "unknown", "concrete_type": "sepol_security_id_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "sepol_security_id_t", "value": "0"}]}, "next": {"type_category": "pointer", "concrete_type": "NULL"}}}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffddd0", "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"u": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"name": {"type_category": "string", "concrete_type": "string", "value": "0x10aadd0 \"\""}, "port": {"type_category": "struct", "concrete_type": "NESTED", "value": "{protocol = 208 '\\320', low_port = 266, high_port = 0}"}, "node": {"type_category": "struct", "concrete_type": "NESTED", "value": "{addr = 17477072, mask = 0}"}, "node6": {"type_category": "struct", "concrete_type": "NESTED", "value": "{addr = {17477072, 0, 1024, 0}, mask = {5700208, 0, 5700448, 0}}"}, "device": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "17477072"}, "pirq": {"type_category": "unknown", "concrete_type": "uint16_t", "value": "44496"}, "iomem": {"type_category": "struct", "concrete_type": "NESTED", "value": "{low_iomem = 17477072, high_iomem = 1024}"}, "ioport": {"type_category": "struct", "concrete_type": "NESTED", "value": "{low_ioport = 17477072, high_ioport = 0}"}, "ibpkey": {"type_category": "struct", "concrete_type": "NESTED", "value": "{subnet_prefix = 17477072, low_pkey = 1024, high_pkey = 0}"}, "ibendport": {"type_category": "struct", "concrete_type": "NESTED", "value": "{dev_name = 0x10aadd0 \"\", port = 0 '\\000'}"}}}, "v": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"sclass": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}, "behavior": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}, "context": {"type_category": "array", "concrete_type": "context_struct_t", "value": [{"type_category": "struct", "concrete_type": "context_struct_t", "value": "{user = 49, role = 0, type = 17462864, range = {level = {{sens = 256, cat = {node = 0x56fd40 &lt;rangetr_hash&gt;, highbit = 5701008}}, {sens = 0, cat = {node = 0x811, highbit = 0}}}}}"}, {"type_category": "struct", "concrete_type": "context_struct_t", "value": "{user = 0, role = 0, type = 0, range = {level = {{sens = 0, cat = {node = 0x0, highbit = 0}}, {sens = 0, cat = {node = 0x0, highbit = 0}}}}}"}]}, "sid": {"type_category": "array", "concrete_type": "sepol_security_id_t", "value": [{"type_category": "unknown", "concrete_type": "sepol_security_id_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "sepol_security_id_t", "value": "0"}]}, "next": {"type_category": "pointer", "concrete_type": "NULL"}}}}, {"type_category": "pointer", "concrete_type": "NULL"}], "genfs": null, "range_tr": null, "filename_trans": null, "filename_trans_count": "0", "type_attr_map": null, "attr_type_map": null, "policycaps": null, "permissive_map": null, "policyvers": "17447475", "handle_unknown": "0", "process_class": "65216", "dir_class": "265", "process_trans": "0", "process_trans_dyntrans": "4294958720"}}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid set_source_file(const char *name)\n{\n\tsource_lineno = 1;\n\tstrncpy(source_file, name, sizeof(source_file)-1); \n\tsource_file[sizeof(source_file)-1] = '\\0';\n\tif (strlen(source_file) && source_file[strlen(source_file)-1] == '\"')\n\t\tsource_file[strlen(source_file)-1] = '\\0';\n", "Selected Statement": "if (werror)", "Function Input": {}, "Variable Values Before Statement": {"werror": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid set_source_file(const char *name)\n{\n\tsource_lineno = 1;\n\tstrncpy(source_file, name, sizeof(source_file)-1); \n\tsource_file[sizeof(source_file)-1] = '\\0';\n\tif (strlen(source_file) && source_file[strlen(source_file)-1] == '\"')\n\t\tsource_file[strlen(source_file)-1] = '\\0';\n", "Selected Statement": "if (isprint((unsigned char)yytext[0]))", "Function Input": {}, "Variable Values Before Statement": {"isprint": "NULL", "yytext": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"queue.h\"\n\nqueue_t queue_create(void)\n{\n\tqueue_t q;\n\n\tq = (queue_t) malloc(sizeof(struct queue_info));\n\tif (q == NULL)\n\t\treturn NULL;\n\n\tq->head = q->tail = NULL;\n\n\treturn q;\n", "Selected Statement": "if (q->head == NULL)", "Function Input": {}, "Variable Values Before Statement": {"q->head": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"queue.h\"\n\nqueue_t queue_create(void)\n{\n\tqueue_t q;\n\n\tq = (queue_t) malloc(sizeof(struct queue_info));\n\tif (q == NULL)\n\t\treturn NULL;\n\n\tq->head = q->tail = NULL;\n\n\treturn q;\n", "Selected Statement": "if (ret)", "Function Input": {}, "Variable Values Before Statement": {"ret": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid init_parser(int pass_number)\n{\n\tpolicydb_lineno = 1;\n\tsource_lineno = 1;\n\tpolicydb_errors = 0;\n\tpass = pass_number;\n", "Selected Statement": "if (l)", "Function Input": {"pass_number": {"value": "0"}}, "Variable Values Before Statement": {"l": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid init_parser(int pass_number)\n{\n\tpolicydb_lineno = 1;\n\tsource_lineno = 1;\n\tpolicydb_errors = 0;\n\tpass = pass_number;\n", "Selected Statement": "if (depth < 0)", "Function Input": {"pass_number": {"value": "0"}}, "Variable Values Before Statement": {"depth": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nint yylex_destroy  (void)\n{\n    \n    \n\twhile(YY_CURRENT_BUFFER){\n\t\tyy_delete_buffer( YY_CURRENT_BUFFER  );\n\t\tYY_CURRENT_BUFFER_LVALUE = NULL;\n\t\tyypop_buffer_state();\n\t}\n\n\t\n\tyyfree((yy_buffer_stack) );\n\t(yy_buffer_stack) = NULL;\n\n    \n    yy_init_globals( );\n\n", "Selected Statement": "if ( ! yyout )", "Function Input": {}, "Variable Values Before Statement": {"yyout": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nint yylex_destroy  (void)\n{\n    \n    \n\twhile(YY_CURRENT_BUFFER){\n\t\tyy_delete_buffer( YY_CURRENT_BUFFER  );\n\t\tYY_CURRENT_BUFFER_LVALUE = NULL;\n\t\tyypop_buffer_state();\n\t}\n\n\t\n\tyyfree((yy_buffer_stack) );\n\t(yy_buffer_stack) = NULL;\n\n    \n    yy_init_globals( );\n\n", "Selected Statement": "if ( (yy_c_buf_p) <= &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )", "Function Input": {}, "Variable Values Before Statement": {"yy_c_buf_p": "NULL", "YY_CURRENT_BUFFER_LVALUE->yy_ch_buf": "NULL", "yy_n_chars": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid sepol_sidtab_destroy(sidtab_t * s)\n{\n\tint i;\n\tsidtab_ptr_t cur, temp;\n\n\tif (!s || !s->htable)\n\t\treturn;\n\n\tfor (i = 0; i < SIDTAB_SIZE; i++) {\n\t\tcur = s->htable[i];\n\t\twhile (cur != NULL) {\n\t\t\ttemp = cur;\n\t\t\tcur = cur->next;\n\t\t\tcontext_destroy(&temp->context);\n\t\t\tfree(temp);\n\t\t}\n\t\ts->htable[i] = NULL;\n\t}\n\tfree(s->htable);\n\ts->htable = NULL;\n\ts->nel = 0;\n\ts->next_sid = 1;\n", "Selected Statement": "if (chain_len > max_chain_len)", "Function Input": {"s": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xffffffff00000000\n", "message": "Cannot access memory at address 0xffffffff00000000"}}}, "Variable Values Before Statement": {"chain_len": "NULL", "max_chain_len": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid sepol_sidtab_destroy(sidtab_t * s)\n{\n\tint i;\n\tsidtab_ptr_t cur, temp;\n\n\tif (!s || !s->htable)\n\t\treturn;\n\n\tfor (i = 0; i < SIDTAB_SIZE; i++) {\n\t\tcur = s->htable[i];\n\t\twhile (cur != NULL) {\n\t\t\ttemp = cur;\n\t\t\tcur = cur->next;\n\t\t\tcontext_destroy(&temp->context);\n\t\t\tfree(temp);\n\t\t}\n\t\ts->htable[i] = NULL;\n\t}\n\tfree(s->htable);\n\ts->htable = NULL;\n\ts->nel = 0;\n\ts->next_sid = 1;\n", "Selected Statement": "if (!s || !s->htable)", "Function Input": {"s": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xffffffff00000000\n", "message": "Cannot access memory at address 0xffffffff00000000"}}}, "Variable Values Before Statement": {"s": {"htable": null, "nel": "0", "next_sid": "0", "shutdown": "0 '\\000'"}, "s->htable": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid sepol_sidtab_destroy(sidtab_t * s)\n{\n\tint i;\n\tsidtab_ptr_t cur, temp;\n\n\tif (!s || !s->htable)\n\t\treturn;\n\n\tfor (i = 0; i < SIDTAB_SIZE; i++) {\n\t\tcur = s->htable[i];\n\t\twhile (cur != NULL) {\n\t\t\ttemp = cur;\n\t\t\tcur = cur->next;\n\t\t\tcontext_destroy(&temp->context);\n\t\t\tfree(temp);\n\t\t}\n\t\ts->htable[i] = NULL;\n\t}\n\tfree(s->htable);\n\ts->htable = NULL;\n\ts->nel = 0;\n\ts->next_sid = 1;\n", "Selected Statement": "if (cur == NULL || sid != cur->sid)", "Function Input": {"s": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xffffffff00000000\n", "message": "Cannot access memory at address 0xffffffff00000000"}}}, "Variable Values Before Statement": {"cur": "NULL", "sid": "NULL", "cur->sid": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid ebitmap_destroy(ebitmap_t * e)\n{\n\tebitmap_node_t *n, *temp;\n\n\tif (!e)\n\t\treturn;\n\n\tn = e->node;\n\twhile (n) {\n\t\ttemp = n;\n\t\tn = n->next;\n\t\tfree(temp);\n\t}\n\n\te->highbit = 0;\n\te->node = 0;\n\treturn;\n", "Selected Statement": "if (maxbit - cur_startbit < MAPSIZE)", "Function Input": {}, "Variable Values Before Statement": {"maxbit": "NULL", "cur_startbit": "NULL", "MAPSIZE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid ebitmap_destroy(ebitmap_t * e)\n{\n\tebitmap_node_t *n, *temp;\n\n\tif (!e)\n\t\treturn;\n\n\tn = e->node;\n\twhile (n) {\n\t\ttemp = n;\n\t\tn = n->next;\n\t\tfree(temp);\n\t}\n\n\te->highbit = 0;\n\te->node = 0;\n\treturn;\n", "Selected Statement": "if (!new)", "Function Input": {}, "Variable Values Before Statement": {"new": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\nvoid module_compiler_reset(void)\n{\n\twhile (stack_top)\n\t\tpop_stack();\n\n\tlast_block = NULL;\n\tnext_decl_id = 1;\n", "Selected Statement": "if (!level)", "Function Input": {}, "Variable Values Before Statement": {"level": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\nvoid module_compiler_reset(void)\n{\n\twhile (stack_top)\n\t\tpop_stack();\n\n\tlast_block = NULL;\n\tnext_decl_id = 1;\n", "Selected Statement": "if (dest_typdatum == NULL)", "Function Input": {}, "Variable Values Before Statement": {"dest_typdatum": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nint next_entry(void *buf, struct policy_file *fp, size_t bytes)\n{\n\tsize_t nread;\n\n\tswitch (fp->type) {\n\tcase PF_USE_STDIO:\n\t\tnread = fread(buf, bytes, 1, fp->fp);\n\n\t\tif (nread != 1)\n\t\t\treturn -1;\n\t\tbreak;\n\tcase PF_USE_MEMORY:\n\t\tif (bytes > fp->len) {\n\t\t\terrno = EOVERFLOW;\n\t\t\treturn -1;\n\t\t}\n\t\tmemcpy(buf, fp->data, bytes);\n\t\tfp->data += bytes;\n\t\tfp->len -= bytes;\n\t\tbreak;\n\tdefault:\n\t\terrno = EINVAL;\n\t\treturn -1;\n\t}\n\treturn 0;\n", "Selected Statement": "if (bytes > fp->len)", "Function Input": {}, "Variable Values Before Statement": {"bytes": "8", "fp->len": "0"}, "Value After Statement Execution": "Yes", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nint next_entry(void *buf, struct policy_file *fp, size_t bytes)\n{\n\tsize_t nread;\n\n\tswitch (fp->type) {\n\tcase PF_USE_STDIO:\n\t\tnread = fread(buf, bytes, 1, fp->fp);\n\n\t\tif (nread != 1)\n\t\t\treturn -1;\n\t\tbreak;\n\tcase PF_USE_MEMORY:\n\t\tif (bytes > fp->len) {\n\t\t\terrno = EOVERFLOW;\n\t\t\treturn -1;\n\t\t}\n\t\tmemcpy(buf, fp->data, bytes);\n\t\tfp->data += bytes;\n\t\tfp->len -= bytes;\n\t\tbreak;\n\tdefault:\n\t\terrno = EINVAL;\n\t\treturn -1;\n\t}\n\treturn 0;\n", "Selected Statement": "if (perm_datum != NULL)", "Function Input": {}, "Variable Values Before Statement": {"perm_datum": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nint next_entry(void *buf, struct policy_file *fp, size_t bytes)\n{\n\tsize_t nread;\n\n\tswitch (fp->type) {\n\tcase PF_USE_STDIO:\n\t\tnread = fread(buf, bytes, 1, fp->fp);\n\n\t\tif (nread != 1)\n\t\t\treturn -1;\n\t\tbreak;\n\tcase PF_USE_MEMORY:\n\t\tif (bytes > fp->len) {\n\t\t\terrno = EOVERFLOW;\n\t\t\treturn -1;\n\t\t}\n\t\tmemcpy(buf, fp->data, bytes);\n\t\tfp->data += bytes;\n\t\tfp->len -= bytes;\n\t\tbreak;\n\tdefault:\n\t\terrno = EINVAL;\n\t\treturn -1;\n\t}\n\treturn 0;\n", "Selected Statement": "if (usercon.type == fromcon->type)", "Function Input": {}, "Variable Values Before Statement": {"usercon.type": "NULL", "fromcon->type": "NULL"}, "Value After Statement Execution": "No", "Project Information": "selinux"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " *\n */\nint shm_address_in(void *p)\n{\n\tint i;\n\n\tfor(i = 0; i < _shm_core_pools_num; i++) {\n\t\tif(_shm_core_pools_mem[i] == (void *)-1) {\n\t\t\tcontinue;\n\t\t}\n\t\tif(((char *)p >= (char *)_shm_core_pools_mem[i])\n\t\t\t\t&& ((char *)p\n\t\t\t\t\t\t< ((char *)_shm_core_pools_mem[i]) + shm_mem_size)) {\n\t\t\t\n\t\t\treturn 1;\n\t\t}\n\t}\n\n\t\n\treturn 0;\n", "Selected Statement": "if (_shm_core_pools_mem[i] == (void *)-1)", "Function Input": {}, "Variable Values Before Statement": {"_shm_core_pools_mem": "ARRAY", "i": "int"}, "Value After Statement Execution": "Yes", "Project Information": "kamailio"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " *\n * Return value: point to MdbHandle structure.\n */\nMdbHandle *mdb_open_buffer(void *buffer, size_t len, MdbFileFlags flags) {\n    FILE *file = NULL;\n#ifdef HAVE_FMEMOPEN\n    file = fmemopen(buffer, len, (flags & MDB_WRITABLE) ? \"r+\" : \"r\");\n#else\n    fprintf(stderr, \"mdb_open_buffer requires a platform with support for fmemopen(3)\\n\");\n#endif\n    if (file == NULL) {\n        fprintf(stderr, \"Couldn't open memory buffer\\n\");\n        return NULL;\n    }\n    return mdb_handle_from_stream(file, flags);\n", "Selected Statement": "if (mdb->f->jet_version == MDB_VER_JET3)", "Function Input": {}, "Variable Values Before Statement": {"mdb->f->jet_version": "NULL", "MDB_VER_JET3": "NULL"}, "Value After Statement Execution": "No", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " *\n * Return value: point to MdbHandle structure.\n */\nMdbHandle *mdb_open_buffer(void *buffer, size_t len, MdbFileFlags flags) {\n    FILE *file = NULL;\n#ifdef HAVE_FMEMOPEN\n    file = fmemopen(buffer, len, (flags & MDB_WRITABLE) ? \"r+\" : \"r\");\n#else\n    fprintf(stderr, \"mdb_open_buffer requires a platform with support for fmemopen(3)\\n\");\n#endif\n    if (file == NULL) {\n        fprintf(stderr, \"Couldn't open memory buffer\\n\");\n        return NULL;\n    }\n    return mdb_handle_from_stream(file, flags);\n", "Selected Statement": "if (!mdb)", "Function Input": {}, "Variable Values Before Statement": {"mdb": "NULL"}, "Value After Statement Execution": "No", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: 1 if successful, 0 if unsuccessful.\n */\nint mdb_set_default_backend(MdbHandle *mdb, const char *backend_name)\n{\n\tMdbBackend *backend;\n\n    if (!mdb->backends) {\n        mdb_init_backends(mdb);\n    }\n\tbackend = (MdbBackend *) g_hash_table_lookup(mdb->backends, backend_name);\n\tif (backend) {\n\t\tmdb->default_backend = backend;\n\t\tg_free(mdb->backend_name); \n\t\tmdb->backend_name = (char *) g_strdup(backend_name);\n\t\tmdb->relationships_table = NULL;\n\t\tif (backend->date_fmt) {\n\t\t\tmdb_set_date_fmt(mdb, backend->date_fmt);\n\t\t} else {\n\t\t\tmdb_set_date_fmt(mdb, \"%x %X\");\n\t\t}\n\t\tif (backend->shortdate_fmt) {\n\t\t\tmdb_set_shortdate_fmt(mdb, backend->shortdate_fmt);\n\t\t} else {\n\t\t\tmdb_set_shortdate_fmt(mdb, \"%x\");\n\t\t}\n\t}\n", "Selected Statement": "if (backend)", "Function Input": {}, "Variable Values Before Statement": {"backend": {"capabilities": "19", "types_table": null, "type_shortdate": null, "type_autonum": null, "short_now": "0x52f2b0 \"Date()\"", "long_now": "0x52f2b0 \"Date()\"", "date_fmt": null, "shortdate_fmt": null, "charset_statement": "0x52f2b7 \"-- That file uses encoding %s\\n\"", "drop_statement": "0x52f2d6 \"DROP TABLE %s;\\n\"", "constaint_not_empty_statement": null, "column_comment_statement": null, "per_column_comment_statement": null, "table_comment_statement": null, "per_table_comment_statement": null, "quote_schema_name": "{gchar *(const gchar *, const gchar *)} 0x4caac0 <quote_schema_name_bracket_merge>", "create_table_statement": "0x52f418 \"CREATE TABLE %s\\n\"", "normalise_case": "{gchar *(const gchar *)} 0x4cb1a0 <passthrough_unchanged>"}}, "Value After Statement Execution": "Yes", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: 1 if successful, 0 if unsuccessful.\n */\nint mdb_set_default_backend(MdbHandle *mdb, const char *backend_name)\n{\n\tMdbBackend *backend;\n\n    if (!mdb->backends) {\n        mdb_init_backends(mdb);\n    }\n\tbackend = (MdbBackend *) g_hash_table_lookup(mdb->backends, backend_name);\n\tif (backend) {\n\t\tmdb->default_backend = backend;\n\t\tg_free(mdb->backend_name); \n\t\tmdb->backend_name = (char *) g_strdup(backend_name);\n\t\tmdb->relationships_table = NULL;\n\t\tif (backend->date_fmt) {\n\t\t\tmdb_set_date_fmt(mdb, backend->date_fmt);\n\t\t} else {\n\t\t\tmdb_set_date_fmt(mdb, \"%x %X\");\n\t\t}\n\t\tif (backend->shortdate_fmt) {\n\t\t\tmdb_set_shortdate_fmt(mdb, backend->shortdate_fmt);\n\t\t} else {\n\t\t\tmdb_set_shortdate_fmt(mdb, \"%x\");\n\t\t}\n\t}\n", "Selected Statement": "if (!type)", "Function Input": {}, "Variable Values Before Statement": {"type": "NULL"}, "Value After Statement Execution": "No", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: 1 if successful, 0 if unsuccessful.\n */\nint mdb_set_default_backend(MdbHandle *mdb, const char *backend_name)\n{\n\tMdbBackend *backend;\n\n    if (!mdb->backends) {\n        mdb_init_backends(mdb);\n    }\n\tbackend = (MdbBackend *) g_hash_table_lookup(mdb->backends, backend_name);\n\tif (backend) {\n\t\tmdb->default_backend = backend;\n\t\tg_free(mdb->backend_name); \n\t\tmdb->backend_name = (char *) g_strdup(backend_name);\n\t\tmdb->relationships_table = NULL;\n\t\tif (backend->date_fmt) {\n\t\t\tmdb_set_date_fmt(mdb, backend->date_fmt);\n\t\t} else {\n\t\t\tmdb_set_date_fmt(mdb, \"%x %X\");\n\t\t}\n\t\tif (backend->shortdate_fmt) {\n\t\t\tmdb_set_shortdate_fmt(mdb, backend->shortdate_fmt);\n\t\t} else {\n\t\t\tmdb_set_shortdate_fmt(mdb, \"%x\");\n\t\t}\n\t}\n", "Selected Statement": "if (!done && col->col_type == MDB_BOOL)", "Function Input": {}, "Variable Values Before Statement": {"done": "NULL", "col->col_type": "NULL", "MDB_BOOL": "NULL"}, "Value After Statement Execution": "No", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns: 1 if successful, 0 if unsuccessful.\n */\nint mdb_set_default_backend(MdbHandle *mdb, const char *backend_name)\n{\n\tMdbBackend *backend;\n\n    if (!mdb->backends) {\n        mdb_init_backends(mdb);\n    }\n\tbackend = (MdbBackend *) g_hash_table_lookup(mdb->backends, backend_name);\n\tif (backend) {\n\t\tmdb->default_backend = backend;\n\t\tg_free(mdb->backend_name); \n\t\tmdb->backend_name = (char *) g_strdup(backend_name);\n\t\tmdb->relationships_table = NULL;\n\t\tif (backend->date_fmt) {\n\t\t\tmdb_set_date_fmt(mdb, backend->date_fmt);\n\t\t} else {\n\t\t\tmdb_set_date_fmt(mdb, \"%x %X\");\n\t\t}\n\t\tif (backend->shortdate_fmt) {\n\t\t\tmdb_set_shortdate_fmt(mdb, backend->shortdate_fmt);\n\t\t} else {\n\t\t\tmdb_set_shortdate_fmt(mdb, \"%x\");\n\t\t}\n\t}\n", "Selected Statement": "if (!mdb->backends)", "Function Input": {}, "Variable Values Before Statement": {"mdb->backends": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    return found;\n}\n\nGHashTable *g_hash_table_new(GHashFunc hashes, GEqualFunc equals) {\n    GHashTable *table = calloc(1, sizeof(GHashTable));\n    table->array = g_ptr_array_new();\n    table->compare = equals;\n", "Selected Statement": "if (delimiters == NULL)", "Function Input": {}, "Variable Values Before Statement": {"delimiters": "NULL"}, "Value After Statement Execution": "No", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    return found;\n}\n\nGHashTable *g_hash_table_new(GHashFunc hashes, GEqualFunc equals) {\n    GHashTable *table = calloc(1, sizeof(GHashTable));\n    table->array = g_ptr_array_new();\n    table->compare = equals;\n", "Selected Statement": "if (entry->arg == G_OPTION_ARG_NONE)", "Function Input": {}, "Variable Values Before Statement": {"entry->arg": "NULL", "G_OPTION_ARG_NONE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#endif\n\nvoid mdb_iconv_init(MdbHandle *mdb)\n{\n\tconst char *iconv_code;\n\n\t\n\tif (!(iconv_code=getenv(\"MDBICONV\"))) {\n\t\ticonv_code=\"UTF-8\";\n\t}\n\n#ifdef HAVE_ICONV\n\tif (!IS_JET3(mdb)) {\n\t\tmdb->iconv_out = iconv_open(\"UCS-2LE\", iconv_code);\n\t\tmdb->iconv_in = iconv_open(iconv_code, \"UCS-2LE\");\n\t} else {\n\t\t\n\t\tconst char *jet3_iconv_code = getenv(\"MDB_JET3_CHARSET\");\n\n\t\tif (!jet3_iconv_code) {\n\t\t\t\n\t\t\t\n\t\t\tjet3_iconv_code = mdb_iconv_name_from_code_page(mdb->f->code_page);\n\t\t}\n\t\tif (!jet3_iconv_code) {\n\t\t\tjet3_iconv_code = \"CP1252\";\n\t\t}\n\n\t\tmdb->iconv_out = iconv_open(jet3_iconv_code, iconv_code);\n\t\tmdb->iconv_in = iconv_open(iconv_code, jet3_iconv_code);\n\t}\n#elif defined(_WIN32) || defined(WIN32) || defined(_WIN64) || defined(WIN64) || defined(WINDOWS)\n    mdb->locale = _create_locale(LC_CTYPE, \".65001\");\n#else\n    mdb->locale = newlocale(LC_CTYPE_MASK, \"C.UTF-8\", NULL);\n#endif\n", "Selected Statement": "if (!(iconv_code=getenv(\"MDBICONV\")))", "Function Input": {}, "Variable Values Before Statement": {"iconv_code": "NULL", "getenv": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#endif\n\nvoid mdb_iconv_init(MdbHandle *mdb)\n{\n\tconst char *iconv_code;\n\n\t\n\tif (!(iconv_code=getenv(\"MDBICONV\"))) {\n\t\ticonv_code=\"UTF-8\";\n\t}\n\n#ifdef HAVE_ICONV\n\tif (!IS_JET3(mdb)) {\n\t\tmdb->iconv_out = iconv_open(\"UCS-2LE\", iconv_code);\n\t\tmdb->iconv_in = iconv_open(iconv_code, \"UCS-2LE\");\n\t} else {\n\t\t\n\t\tconst char *jet3_iconv_code = getenv(\"MDB_JET3_CHARSET\");\n\n\t\tif (!jet3_iconv_code) {\n\t\t\t\n\t\t\t\n\t\t\tjet3_iconv_code = mdb_iconv_name_from_code_page(mdb->f->code_page);\n\t\t}\n\t\tif (!jet3_iconv_code) {\n\t\t\tjet3_iconv_code = \"CP1252\";\n\t\t}\n\n\t\tmdb->iconv_out = iconv_open(jet3_iconv_code, iconv_code);\n\t\tmdb->iconv_in = iconv_open(iconv_code, jet3_iconv_code);\n\t}\n#elif defined(_WIN32) || defined(WIN32) || defined(_WIN64) || defined(WIN64) || defined(WINDOWS)\n    mdb->locale = _create_locale(LC_CTYPE, \".65001\");\n#else\n    mdb->locale = newlocale(LC_CTYPE_MASK, \"C.UTF-8\", NULL);\n#endif\n", "Selected Statement": "if (mdb->locale)", "Function Input": {}, "Variable Values Before Statement": {"mdb->locale": "NULL"}, "Value After Statement Execution": "No", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#endif\n\nvoid mdb_iconv_init(MdbHandle *mdb)\n{\n\tconst char *iconv_code;\n\n\t\n\tif (!(iconv_code=getenv(\"MDBICONV\"))) {\n\t\ticonv_code=\"UTF-8\";\n\t}\n\n#ifdef HAVE_ICONV\n\tif (!IS_JET3(mdb)) {\n\t\tmdb->iconv_out = iconv_open(\"UCS-2LE\", iconv_code);\n\t\tmdb->iconv_in = iconv_open(iconv_code, \"UCS-2LE\");\n\t} else {\n\t\t\n\t\tconst char *jet3_iconv_code = getenv(\"MDB_JET3_CHARSET\");\n\n\t\tif (!jet3_iconv_code) {\n\t\t\t\n\t\t\t\n\t\t\tjet3_iconv_code = mdb_iconv_name_from_code_page(mdb->f->code_page);\n\t\t}\n\t\tif (!jet3_iconv_code) {\n\t\t\tjet3_iconv_code = \"CP1252\";\n\t\t}\n\n\t\tmdb->iconv_out = iconv_open(jet3_iconv_code, iconv_code);\n\t\tmdb->iconv_in = iconv_open(iconv_code, jet3_iconv_code);\n\t}\n#elif defined(_WIN32) || defined(WIN32) || defined(_WIN64) || defined(WIN64) || defined(WINDOWS)\n    mdb->locale = _create_locale(LC_CTYPE, \".65001\");\n#else\n    mdb->locale = newlocale(LC_CTYPE_MASK, \"C.UTF-8\", NULL);\n#endif\n", "Selected Statement": "if (!jet3_iconv_code)", "Function Input": {}, "Variable Values Before Statement": {"jet3_iconv_code": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#endif\n\nvoid mdb_iconv_init(MdbHandle *mdb)\n{\n\tconst char *iconv_code;\n\n\t\n\tif (!(iconv_code=getenv(\"MDBICONV\"))) {\n\t\ticonv_code=\"UTF-8\";\n\t}\n\n#ifdef HAVE_ICONV\n\tif (!IS_JET3(mdb)) {\n\t\tmdb->iconv_out = iconv_open(\"UCS-2LE\", iconv_code);\n\t\tmdb->iconv_in = iconv_open(iconv_code, \"UCS-2LE\");\n\t} else {\n\t\t\n\t\tconst char *jet3_iconv_code = getenv(\"MDB_JET3_CHARSET\");\n\n\t\tif (!jet3_iconv_code) {\n\t\t\t\n\t\t\t\n\t\t\tjet3_iconv_code = mdb_iconv_name_from_code_page(mdb->f->code_page);\n\t\t}\n\t\tif (!jet3_iconv_code) {\n\t\t\tjet3_iconv_code = \"CP1252\";\n\t\t}\n\n\t\tmdb->iconv_out = iconv_open(jet3_iconv_code, iconv_code);\n\t\tmdb->iconv_in = iconv_open(iconv_code, jet3_iconv_code);\n\t}\n#elif defined(_WIN32) || defined(WIN32) || defined(_WIN64) || defined(WIN64) || defined(WINDOWS)\n    mdb->locale = _create_locale(LC_CTYPE, \".65001\");\n#else\n    mdb->locale = newlocale(LC_CTYPE_MASK, \"C.UTF-8\", NULL);\n#endif\n", "Selected Statement": "if (!len_in || !len_out || errno == E2BIG)", "Function Input": {}, "Variable Values Before Statement": {"len_in": "NULL", "len_out": "NULL", "errno": "NULL", "E2BIG": "NULL"}, "Value After Statement Execution": "No", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\tg_free(table);\n}\nMdbTableDef *mdb_read_table(MdbCatalogEntry *entry)\n{\n\tMdbTableDef *table;\n\tMdbHandle *mdb = entry->mdb;\n\tMdbFormatConstants *fmt = mdb->fmt;\n\tint row_start, pg_row;\n\tvoid *buf, *pg_buf = mdb->pg_buf;\n\tguint i;\n\n\tif (!mdb_read_pg(mdb, entry->table_pg)) {\n        fprintf(stderr, \"mdb_read_table: Unable to read page %lu\\n\", entry->table_pg);\n        return NULL;\n    }\n\tif (mdb_get_byte(pg_buf, 0) != 0x02) {\n        fprintf(stderr, \"mdb_read_table: Page %lu [size=%d] is not a valid table definition page (First byte = 0x%02X, expected 0x02)\\n\",\n                entry->table_pg, (int)fmt->pg_size, mdb_get_byte(pg_buf, 0));\n\t\treturn NULL;\n    }\n\ttable = mdb_alloc_tabledef(entry);\n\n\tmdb_get_int16(pg_buf, 8); \n\n\t\n\tpg_row = mdb_get_int32(pg_buf, fmt->tab_usage_map_offset);\n\tif (mdb_find_pg_row(mdb, pg_row, &buf, &row_start, &(table->map_sz))) {\n        fprintf(stderr, \"mdb_read_table: Unable to find page row %d\\n\", pg_row);\n\t\tmdb_free_tabledef(table);\n\t\treturn NULL;\n\t}\n\ttable->usage_map = g_memdup2((char*)buf + row_start, table->map_sz);\n\tif (mdb_get_option(MDB_DEBUG_USAGE)) \n\t\tmdb_buffer_dump(buf, row_start, table->map_sz);\n\tmdb_debug(MDB_DEBUG_USAGE,\"usage map found on page %ld row %d start %d len %d\",\n\t\tpg_row >> 8, pg_row & 0xff, row_start, table->map_sz);\n\n\t\n\tpg_row = mdb_get_int32(pg_buf, fmt->tab_free_map_offset);\n\tif (mdb_find_pg_row(mdb, pg_row, &buf, &row_start, &(table->freemap_sz))) {\n        fprintf(stderr, \"mdb_read_table: Unable to find page row %d\\n\", pg_row);\n\t\tmdb_free_tabledef(table);\n\t\treturn NULL;\n\t}\n\ttable->free_usage_map = g_memdup2((char*)buf + row_start, table->freemap_sz);\n\tmdb_debug(MDB_DEBUG_USAGE,\"free map found on page %ld row %d start %d len %d\\n\",\n\t\tpg_row >> 8, pg_row & 0xff, row_start, table->freemap_sz);\n\n\ttable->first_data_pg = mdb_get_int16(pg_buf, fmt->tab_first_dpg_offset);\n\n\tif (entry->props)\n\t\tfor (i=0; i<entry->props->len; ++i) {\n\t\t\tMdbProperties *props = g_ptr_array_index(entry->props, i);\n\t\t\tif (!props->name)\n\t\t\t\ttable->props = props;\n\t\t}\n\n\treturn table;\n", "Selected Statement": "if (read_pg_if_n(mdb, tmp_buf, &cur_pos, name_sz))", "Function Input": {}, "Variable Values Before Statement": {"read_pg_if_n": "NULL", "mdb": {"f": null, "cur_pg": "2", "row_num": "0", "cur_pos": "0", "pg_buf": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\265o\\003ba\\b\\302U\\353\\251grC?\\000\\234z\\237\\220\\377\\200\\2321\\305y\\272\\3550\\274\\337\\314\\235c\\331\\344\\303{B\\373\\212\\274N\\206\\373\\3547]D\\234\\372\\306^(\\346\\023\\266\\212`T\\224{6\\365r\\337\\261w\\364\\023C\\317\\257\\26134ay[\\222\\265|*\\005\\361|\\231\\001\\033\\230\\375\\022OJ\\224l>`&_\\225\\370\\320\\211$\\205g\\306\\037'D\\322\\356\\317e\\355\\377\\a\\307F\\241x\\026\\falt_pg_buffmt": null, "bind_size": "16384", "date_fmt": "\"%x %X\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "shortdate_fmt": "\"%x\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "repid_fmt": "MDB_BRACES_4_2_2_8", "boolean_false_value": "0x52f210 <boolean_false_number> \"0\"", "boolean_true_value": "0x52f212 <boolean_true_number> \"1\"", "num_catalog": "0", "catalog": null, "default_backend": null, "backend_name": "0xf72290 \"access\"", "relationships_table": null, "relationships_values": [{"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}], "stats": null, "backends": null, "iconv_in": "0xf7d090", "iconv_out": "0xf74f80"}, "tmp_buf": "NULL", "cur_pos": "NULL", "name_sz": "NULL"}, "Value After Statement Execution": "No", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\tg_free(table);\n}\nMdbTableDef *mdb_read_table(MdbCatalogEntry *entry)\n{\n\tMdbTableDef *table;\n\tMdbHandle *mdb = entry->mdb;\n\tMdbFormatConstants *fmt = mdb->fmt;\n\tint row_start, pg_row;\n\tvoid *buf, *pg_buf = mdb->pg_buf;\n\tguint i;\n\n\tif (!mdb_read_pg(mdb, entry->table_pg)) {\n        fprintf(stderr, \"mdb_read_table: Unable to read page %lu\\n\", entry->table_pg);\n        return NULL;\n    }\n\tif (mdb_get_byte(pg_buf, 0) != 0x02) {\n        fprintf(stderr, \"mdb_read_table: Page %lu [size=%d] is not a valid table definition page (First byte = 0x%02X, expected 0x02)\\n\",\n                entry->table_pg, (int)fmt->pg_size, mdb_get_byte(pg_buf, 0));\n\t\treturn NULL;\n    }\n\ttable = mdb_alloc_tabledef(entry);\n\n\tmdb_get_int16(pg_buf, 8); \n\n\t\n\tpg_row = mdb_get_int32(pg_buf, fmt->tab_usage_map_offset);\n\tif (mdb_find_pg_row(mdb, pg_row, &buf, &row_start, &(table->map_sz))) {\n        fprintf(stderr, \"mdb_read_table: Unable to find page row %d\\n\", pg_row);\n\t\tmdb_free_tabledef(table);\n\t\treturn NULL;\n\t}\n\ttable->usage_map = g_memdup2((char*)buf + row_start, table->map_sz);\n\tif (mdb_get_option(MDB_DEBUG_USAGE)) \n\t\tmdb_buffer_dump(buf, row_start, table->map_sz);\n\tmdb_debug(MDB_DEBUG_USAGE,\"usage map found on page %ld row %d start %d len %d\",\n\t\tpg_row >> 8, pg_row & 0xff, row_start, table->map_sz);\n\n\t\n\tpg_row = mdb_get_int32(pg_buf, fmt->tab_free_map_offset);\n\tif (mdb_find_pg_row(mdb, pg_row, &buf, &row_start, &(table->freemap_sz))) {\n        fprintf(stderr, \"mdb_read_table: Unable to find page row %d\\n\", pg_row);\n\t\tmdb_free_tabledef(table);\n\t\treturn NULL;\n\t}\n\ttable->free_usage_map = g_memdup2((char*)buf + row_start, table->freemap_sz);\n\tmdb_debug(MDB_DEBUG_USAGE,\"free map found on page %ld row %d start %d len %d\\n\",\n\t\tpg_row >> 8, pg_row & 0xff, row_start, table->freemap_sz);\n\n\ttable->first_data_pg = mdb_get_int16(pg_buf, fmt->tab_first_dpg_offset);\n\n\tif (entry->props)\n\t\tfor (i=0; i<entry->props->len; ++i) {\n\t\t\tMdbProperties *props = g_ptr_array_index(entry->props, i);\n\t\t\tif (!props->name)\n\t\t\t\ttable->props = props;\n\t\t}\n\n\treturn table;\n", "Selected Statement": "if (!mdb_read_pg(mdb, entry->table_pg))", "Function Input": {}, "Variable Values Before Statement": {"mdb_read_pg": "NULL", "mdb": {"f": null, "cur_pg": "2", "row_num": "0", "cur_pos": "0", "pg_buf": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\265o\\003ba\\b\\302U\\353\\251grC?\\000\\234z\\237\\220\\377\\200\\2321\\305y\\272\\3550\\274\\337\\314\\235c\\331\\344\\303{B\\373\\212\\274N\\206\\373\\3547]D\\234\\372\\306^(\\346\\023\\266\\212`T\\224{6\\365r\\337\\261w\\364\\023C\\317\\257\\26134ay[\\222\\265|*\\005\\361|\\231\\001\\033\\230\\375\\022OJ\\224l>`&_\\225\\370\\320\\211$\\205g\\306\\037'D\\322\\356\\317e\\355\\377\\a\\307F\\241x\\026\\falt_pg_buffmt": null, "bind_size": "16384", "date_fmt": "\"%x %X\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "shortdate_fmt": "\"%x\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "repid_fmt": "MDB_BRACES_4_2_2_8", "boolean_false_value": "0x52f210 <boolean_false_number> \"0\"", "boolean_true_value": "0x52f212 <boolean_true_number> \"1\"", "num_catalog": "0", "catalog": null, "default_backend": null, "backend_name": "0xf72290 \"access\"", "relationships_table": null, "relationships_values": [{"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}], "stats": null, "backends": null, "iconv_in": "0xf7d090", "iconv_out": "0xf74f80"}, "entry->table_pg": "2"}, "Value After Statement Execution": "Yes", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\tg_free(table);\n}\nMdbTableDef *mdb_read_table(MdbCatalogEntry *entry)\n{\n\tMdbTableDef *table;\n\tMdbHandle *mdb = entry->mdb;\n\tMdbFormatConstants *fmt = mdb->fmt;\n\tint row_start, pg_row;\n\tvoid *buf, *pg_buf = mdb->pg_buf;\n\tguint i;\n\n\tif (!mdb_read_pg(mdb, entry->table_pg)) {\n        fprintf(stderr, \"mdb_read_table: Unable to read page %lu\\n\", entry->table_pg);\n        return NULL;\n    }\n\tif (mdb_get_byte(pg_buf, 0) != 0x02) {\n        fprintf(stderr, \"mdb_read_table: Page %lu [size=%d] is not a valid table definition page (First byte = 0x%02X, expected 0x02)\\n\",\n                entry->table_pg, (int)fmt->pg_size, mdb_get_byte(pg_buf, 0));\n\t\treturn NULL;\n    }\n\ttable = mdb_alloc_tabledef(entry);\n\n\tmdb_get_int16(pg_buf, 8); \n\n\t\n\tpg_row = mdb_get_int32(pg_buf, fmt->tab_usage_map_offset);\n\tif (mdb_find_pg_row(mdb, pg_row, &buf, &row_start, &(table->map_sz))) {\n        fprintf(stderr, \"mdb_read_table: Unable to find page row %d\\n\", pg_row);\n\t\tmdb_free_tabledef(table);\n\t\treturn NULL;\n\t}\n\ttable->usage_map = g_memdup2((char*)buf + row_start, table->map_sz);\n\tif (mdb_get_option(MDB_DEBUG_USAGE)) \n\t\tmdb_buffer_dump(buf, row_start, table->map_sz);\n\tmdb_debug(MDB_DEBUG_USAGE,\"usage map found on page %ld row %d start %d len %d\",\n\t\tpg_row >> 8, pg_row & 0xff, row_start, table->map_sz);\n\n\t\n\tpg_row = mdb_get_int32(pg_buf, fmt->tab_free_map_offset);\n\tif (mdb_find_pg_row(mdb, pg_row, &buf, &row_start, &(table->freemap_sz))) {\n        fprintf(stderr, \"mdb_read_table: Unable to find page row %d\\n\", pg_row);\n\t\tmdb_free_tabledef(table);\n\t\treturn NULL;\n\t}\n\ttable->free_usage_map = g_memdup2((char*)buf + row_start, table->freemap_sz);\n\tmdb_debug(MDB_DEBUG_USAGE,\"free map found on page %ld row %d start %d len %d\\n\",\n\t\tpg_row >> 8, pg_row & 0xff, row_start, table->freemap_sz);\n\n\ttable->first_data_pg = mdb_get_int16(pg_buf, fmt->tab_first_dpg_offset);\n\n\tif (entry->props)\n\t\tfor (i=0; i<entry->props->len; ++i) {\n\t\t\tMdbProperties *props = g_ptr_array_index(entry->props, i);\n\t\t\tif (!props->name)\n\t\t\t\ttable->props = props;\n\t\t}\n\n\treturn table;\n", "Selected Statement": "if (table->is_temp_table)", "Function Input": {}, "Variable Values Before Statement": {"table->is_temp_table": "NULL"}, "Value After Statement Execution": "No", "Project Information": "mdbtools"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic int\nenforce_null_termination (Bit_Chain *dat, bool enforce)\n{\n  unsigned char *copy;\n  unsigned char c;\n  if (!dat->size)\n    return 0;\n  c = dat->chain[dat->size - 1];\n  \n  if (!enforce && ((c == '\\n' && c + 1 == '\\0') || c == '\\0'))\n    return 0;\n#ifdef STANDALONE\n  fprintf (stderr,\n           \"llvmfuzz_standalone: enforce libfuzzer buffer NULL termination\\n\");\n#endif\n  copy = malloc (dat->size + 1);\n  memcpy (copy, dat->chain, dat->size);\n  copy[dat->size] = '\\0';\n  dat->chain = copy;\n  return 1;\n}\n\nint\nLLVMFuzzerTestOneInput (const unsigned char *data, size_t size)\n{\n  Dwg_Data dwg;\n  Bit_Chain dat = { NULL, 0, 0, 0, 0, 0, 0, NULL, 0 };\n  Bit_Chain out_dat = { NULL, 0, 0, 0, 0, 0, 0, NULL, 0 };\n  int copied = 0;\n  struct ly_ctx *ctx = NULL;\n\n  static char tmp_file[256];\n  dat.chain = (unsigned char *)data;\n  dat.size = size;\n  memset (&dwg, 0, sizeof (dwg));\n\n  \n  if (dat.size > 2 && dat.chain[0] == 'A' && dat.chain[1] == 'C')\n    {\n      if (dwg_decode (&dat, &dwg) >= DWG_ERR_CRITICAL)\n        {\n          dwg_free (&dwg);\n          return 0;\n        }\n    }\n#ifndef DISABLE_JSON\n  else if (dat.size > 1 && dat.chain[0] == '{')\n    {\n      copied = enforce_null_termination (&dat, true);\n      if (dwg_read_json (&dat, &dwg) >= DWG_ERR_CRITICAL)\n        {\n          if (copied)\n            bit_chain_free (&dat);\n          dwg_free (&dwg);\n          return 0;\n        }\n      dat.opts |= DWG_OPTS_INJSON;\n      dwg.opts |= DWG_OPTS_INJSON;\n    }\n#endif\n#ifndef DISABLE_DXF\n  else\n    {\n", "Selected Statement": "if (!(out || getenv (\"VER\")))", "Function Input": {"dat": {"value": null}, "enforce": {"value": "false"}}, "Variable Values Before Statement": {"out": "int", "getenv": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libredwg"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic int\nenforce_null_termination (Bit_Chain *dat, bool enforce)\n{\n  unsigned char *copy;\n  unsigned char c;\n  if (!dat->size)\n    return 0;\n  c = dat->chain[dat->size - 1];\n  \n  if (!enforce && ((c == '\\n' && c + 1 == '\\0') || c == '\\0'))\n    return 0;\n#ifdef STANDALONE\n  fprintf (stderr,\n           \"llvmfuzz_standalone: enforce libfuzzer buffer NULL termination\\n\");\n#endif\n  copy = malloc (dat->size + 1);\n  memcpy (copy, dat->chain, dat->size);\n  copy[dat->size] = '\\0';\n  dat->chain = copy;\n  return 1;\n}\n\nint\nLLVMFuzzerTestOneInput (const unsigned char *data, size_t size)\n{\n  Dwg_Data dwg;\n  Bit_Chain dat = { NULL, 0, 0, 0, 0, 0, 0, NULL, 0 };\n  Bit_Chain out_dat = { NULL, 0, 0, 0, 0, 0, 0, NULL, 0 };\n  int copied = 0;\n  struct ly_ctx *ctx = NULL;\n\n  static char tmp_file[256];\n  dat.chain = (unsigned char *)data;\n  dat.size = size;\n  memset (&dwg, 0, sizeof (dwg));\n\n  \n  if (dat.size > 2 && dat.chain[0] == 'A' && dat.chain[1] == 'C')\n    {\n      if (dwg_decode (&dat, &dwg) >= DWG_ERR_CRITICAL)\n        {\n          dwg_free (&dwg);\n          return 0;\n        }\n    }\n#ifndef DISABLE_JSON\n  else if (dat.size > 1 && dat.chain[0] == '{')\n    {\n      copied = enforce_null_termination (&dat, true);\n      if (dwg_read_json (&dat, &dwg) >= DWG_ERR_CRITICAL)\n        {\n          if (copied)\n            bit_chain_free (&dat);\n          dwg_free (&dwg);\n          return 0;\n        }\n      dat.opts |= DWG_OPTS_INJSON;\n      dwg.opts |= DWG_OPTS_INJSON;\n    }\n#endif\n#ifndef DISABLE_DXF\n  else\n    {\n", "Selected Statement": "if (!dat->size)", "Function Input": {"dat": {"value": null}, "enforce": {"value": "false"}}, "Variable Values Before Statement": {"dat->size": "0"}, "Value After Statement Execution": "Yes", "Project Information": "libredwg"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic int\nenforce_null_termination (Bit_Chain *dat, bool enforce)\n{\n  unsigned char *copy;\n  unsigned char c;\n  if (!dat->size)\n    return 0;\n  c = dat->chain[dat->size - 1];\n  \n  if (!enforce && ((c == '\\n' && c + 1 == '\\0') || c == '\\0'))\n    return 0;\n#ifdef STANDALONE\n  fprintf (stderr,\n           \"llvmfuzz_standalone: enforce libfuzzer buffer NULL termination\\n\");\n#endif\n  copy = malloc (dat->size + 1);\n  memcpy (copy, dat->chain, dat->size);\n  copy[dat->size] = '\\0';\n  dat->chain = copy;\n  return 1;\n}\n\nint\nLLVMFuzzerTestOneInput (const unsigned char *data, size_t size)\n{\n  Dwg_Data dwg;\n  Bit_Chain dat = { NULL, 0, 0, 0, 0, 0, 0, NULL, 0 };\n  Bit_Chain out_dat = { NULL, 0, 0, 0, 0, 0, 0, NULL, 0 };\n  int copied = 0;\n  struct ly_ctx *ctx = NULL;\n\n  static char tmp_file[256];\n  dat.chain = (unsigned char *)data;\n  dat.size = size;\n  memset (&dwg, 0, sizeof (dwg));\n\n  \n  if (dat.size > 2 && dat.chain[0] == 'A' && dat.chain[1] == 'C')\n    {\n      if (dwg_decode (&dat, &dwg) >= DWG_ERR_CRITICAL)\n        {\n          dwg_free (&dwg);\n          return 0;\n        }\n    }\n#ifndef DISABLE_JSON\n  else if (dat.size > 1 && dat.chain[0] == '{')\n    {\n      copied = enforce_null_termination (&dat, true);\n      if (dwg_read_json (&dat, &dwg) >= DWG_ERR_CRITICAL)\n        {\n          if (copied)\n            bit_chain_free (&dat);\n          dwg_free (&dwg);\n          return 0;\n        }\n      dat.opts |= DWG_OPTS_INJSON;\n      dwg.opts |= DWG_OPTS_INJSON;\n    }\n#endif\n#ifndef DISABLE_DXF\n  else\n    {\n", "Selected Statement": "if (copied)", "Function Input": {"dat": {"value": null}, "enforce": {"value": "false"}}, "Variable Values Before Statement": {"copied": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libredwg"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\ndwg_free (Dwg_Data *dwg)\n{\n  BITCODE_BL i;\n  if (dwg)\n    {\n      pdat.version = dwg->header.version;\n      pdat.from_version = dwg->header.from_version;\n      if (dwg->opts)\n        {\n          loglevel = dwg->opts & DWG_OPTS_LOGLEVEL;\n          pdat.opts = dwg->opts;\n        }\n#ifdef USE_TRACING\n      \n      if (!env_var_checked_p)\n        {\n          char *probe = getenv (\"LIBREDWG_TRACE\");\n          if (probe)\n            loglevel = atoi (probe);\n          env_var_checked_p = 1;\n        }\n#endif \n      LOG_INFO (\"\\n============\\ndwg_free\\n\")\n      \n      for (i = 0; i < dwg->num_objects; ++i)\n        {\n          if (!dwg_obj_is_control (&dwg->object[i]))\n            dwg_free_object (&dwg->object[i]);\n        }\n      if (dwg->header.version < R_13b1)\n        dwg_free_preR13_header_vars (dwg);\n      else\n        dwg_free_header_vars (dwg);\n      dwg_free_summaryinfo (dwg);\n      if (dwg->header.section_infohdr.num_desc)\n        {\n          for (i = 0; i < dwg->header.section_infohdr.num_desc; ++i)\n            FREE_IF (dwg->header.section_info[i].sections);\n          FREE_IF (dwg->header.section_info);\n        }\n      dwg_free_appinfo (dwg);\n      dwg_free_filedeplist (dwg);\n      dwg_free_security (dwg);\n      dwg_free_acds (dwg);\n\n      FREE_IF (dwg->thumbnail.chain);\n      FREE_IF (dwg->vbaproject.unknown_bits);\n      FREE_IF (dwg->revhistory.histories);\n      FREE_IF (dwg->appinfohistory.unknown_bits);\n      \n      FREE_IF (dwg->Template.description);\n      FREE_IF (dwg->header.section);\n      FREE_IF (dwg->auxheader.R11_HANDSEED);\n\n      for (i = 0; i < dwg->num_objects; ++i)\n        {\n          if (dwg_obj_is_control (&dwg->object[i]))\n            dwg_free_object (&dwg->object[i]);\n        }\n      if (dwg->num_classes && dwg->dwg_class)\n        {\n          for (i = 0; i < dwg->num_classes; ++i)\n            {\n              FREE_IF (dwg->dwg_class[i].appname);\n              FREE_IF (dwg->dwg_class[i].cppname);\n              FREE_IF (dwg->dwg_class[i].dxfname);\n              if (dwg->header.from_version >= R_2007)\n                FREE_IF (dwg->dwg_class[i].dxfname_u);\n            }\n        }\n      FREE_IF (dwg->dwg_class);\n      if (dwg->object_ref)\n        {\n          LOG_HANDLE (\"free %d global refs\\n\", dwg->num_object_refs)\n          for (i = 0; i < dwg->num_object_refs; ++i)\n            {\n              LOG_INSANE (\"free ref %d\\n\", i)\n              FREE_IF (dwg->object_ref[i]);\n            }\n        }\n      FREE_IF (dwg->object_ref);\n      for (i = 0; i < dwg->num_acis_sab_hdl; ++i)\n        {\n          FREE_IF (dwg->acis_sab_hdl[i]);\n        }\n      FREE_IF (dwg->acis_sab_hdl);\n      FREE_IF (dwg->object);\n      if (dwg->object_map)\n        {\n          hash_free (dwg->object_map);\n          dwg->object_map = NULL;\n        }\n      dwg->num_objects = dwg->num_classes = dwg->num_object_refs = 0;\n#undef FREE_IF\n    }\n", "Selected Statement": "if (dwg->object_ref)", "Function Input": {}, "Variable Values Before Statement": {"dwg->object_ref": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libredwg"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\ndwg_free (Dwg_Data *dwg)\n{\n  BITCODE_BL i;\n  if (dwg)\n    {\n      pdat.version = dwg->header.version;\n      pdat.from_version = dwg->header.from_version;\n      if (dwg->opts)\n        {\n          loglevel = dwg->opts & DWG_OPTS_LOGLEVEL;\n          pdat.opts = dwg->opts;\n        }\n#ifdef USE_TRACING\n      \n      if (!env_var_checked_p)\n        {\n          char *probe = getenv (\"LIBREDWG_TRACE\");\n          if (probe)\n            loglevel = atoi (probe);\n          env_var_checked_p = 1;\n        }\n#endif \n      LOG_INFO (\"\\n============\\ndwg_free\\n\")\n      \n      for (i = 0; i < dwg->num_objects; ++i)\n        {\n          if (!dwg_obj_is_control (&dwg->object[i]))\n            dwg_free_object (&dwg->object[i]);\n        }\n      if (dwg->header.version < R_13b1)\n        dwg_free_preR13_header_vars (dwg);\n      else\n        dwg_free_header_vars (dwg);\n      dwg_free_summaryinfo (dwg);\n      if (dwg->header.section_infohdr.num_desc)\n        {\n          for (i = 0; i < dwg->header.section_infohdr.num_desc; ++i)\n            FREE_IF (dwg->header.section_info[i].sections);\n          FREE_IF (dwg->header.section_info);\n        }\n      dwg_free_appinfo (dwg);\n      dwg_free_filedeplist (dwg);\n      dwg_free_security (dwg);\n      dwg_free_acds (dwg);\n\n      FREE_IF (dwg->thumbnail.chain);\n      FREE_IF (dwg->vbaproject.unknown_bits);\n      FREE_IF (dwg->revhistory.histories);\n      FREE_IF (dwg->appinfohistory.unknown_bits);\n      \n      FREE_IF (dwg->Template.description);\n      FREE_IF (dwg->header.section);\n      FREE_IF (dwg->auxheader.R11_HANDSEED);\n\n      for (i = 0; i < dwg->num_objects; ++i)\n        {\n          if (dwg_obj_is_control (&dwg->object[i]))\n            dwg_free_object (&dwg->object[i]);\n        }\n      if (dwg->num_classes && dwg->dwg_class)\n        {\n          for (i = 0; i < dwg->num_classes; ++i)\n            {\n              FREE_IF (dwg->dwg_class[i].appname);\n              FREE_IF (dwg->dwg_class[i].cppname);\n              FREE_IF (dwg->dwg_class[i].dxfname);\n              if (dwg->header.from_version >= R_2007)\n                FREE_IF (dwg->dwg_class[i].dxfname_u);\n            }\n        }\n      FREE_IF (dwg->dwg_class);\n      if (dwg->object_ref)\n        {\n          LOG_HANDLE (\"free %d global refs\\n\", dwg->num_object_refs)\n          for (i = 0; i < dwg->num_object_refs; ++i)\n            {\n              LOG_INSANE (\"free ref %d\\n\", i)\n              FREE_IF (dwg->object_ref[i]);\n            }\n        }\n      FREE_IF (dwg->object_ref);\n      for (i = 0; i < dwg->num_acis_sab_hdl; ++i)\n        {\n          FREE_IF (dwg->acis_sab_hdl[i]);\n        }\n      FREE_IF (dwg->acis_sab_hdl);\n      FREE_IF (dwg->object);\n      if (dwg->object_map)\n        {\n          hash_free (dwg->object_map);\n          dwg->object_map = NULL;\n        }\n      dwg->num_objects = dwg->num_classes = dwg->num_object_refs = 0;\n#undef FREE_IF\n    }\n", "Selected Statement": "if (dwg->header.version < R_13b1)", "Function Input": {}, "Variable Values Before Statement": {"dwg->header.version": "NULL", "R_13b1": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libredwg"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\ndwg_free (Dwg_Data *dwg)\n{\n  BITCODE_BL i;\n  if (dwg)\n    {\n      pdat.version = dwg->header.version;\n      pdat.from_version = dwg->header.from_version;\n      if (dwg->opts)\n        {\n          loglevel = dwg->opts & DWG_OPTS_LOGLEVEL;\n          pdat.opts = dwg->opts;\n        }\n#ifdef USE_TRACING\n      \n      if (!env_var_checked_p)\n        {\n          char *probe = getenv (\"LIBREDWG_TRACE\");\n          if (probe)\n            loglevel = atoi (probe);\n          env_var_checked_p = 1;\n        }\n#endif \n      LOG_INFO (\"\\n============\\ndwg_free\\n\")\n      \n      for (i = 0; i < dwg->num_objects; ++i)\n        {\n          if (!dwg_obj_is_control (&dwg->object[i]))\n            dwg_free_object (&dwg->object[i]);\n        }\n      if (dwg->header.version < R_13b1)\n        dwg_free_preR13_header_vars (dwg);\n      else\n        dwg_free_header_vars (dwg);\n      dwg_free_summaryinfo (dwg);\n      if (dwg->header.section_infohdr.num_desc)\n        {\n          for (i = 0; i < dwg->header.section_infohdr.num_desc; ++i)\n            FREE_IF (dwg->header.section_info[i].sections);\n          FREE_IF (dwg->header.section_info);\n        }\n      dwg_free_appinfo (dwg);\n      dwg_free_filedeplist (dwg);\n      dwg_free_security (dwg);\n      dwg_free_acds (dwg);\n\n      FREE_IF (dwg->thumbnail.chain);\n      FREE_IF (dwg->vbaproject.unknown_bits);\n      FREE_IF (dwg->revhistory.histories);\n      FREE_IF (dwg->appinfohistory.unknown_bits);\n      \n      FREE_IF (dwg->Template.description);\n      FREE_IF (dwg->header.section);\n      FREE_IF (dwg->auxheader.R11_HANDSEED);\n\n      for (i = 0; i < dwg->num_objects; ++i)\n        {\n          if (dwg_obj_is_control (&dwg->object[i]))\n            dwg_free_object (&dwg->object[i]);\n        }\n      if (dwg->num_classes && dwg->dwg_class)\n        {\n          for (i = 0; i < dwg->num_classes; ++i)\n            {\n              FREE_IF (dwg->dwg_class[i].appname);\n              FREE_IF (dwg->dwg_class[i].cppname);\n              FREE_IF (dwg->dwg_class[i].dxfname);\n              if (dwg->header.from_version >= R_2007)\n                FREE_IF (dwg->dwg_class[i].dxfname_u);\n            }\n        }\n      FREE_IF (dwg->dwg_class);\n      if (dwg->object_ref)\n        {\n          LOG_HANDLE (\"free %d global refs\\n\", dwg->num_object_refs)\n          for (i = 0; i < dwg->num_object_refs; ++i)\n            {\n              LOG_INSANE (\"free ref %d\\n\", i)\n              FREE_IF (dwg->object_ref[i]);\n            }\n        }\n      FREE_IF (dwg->object_ref);\n      for (i = 0; i < dwg->num_acis_sab_hdl; ++i)\n        {\n          FREE_IF (dwg->acis_sab_hdl[i]);\n        }\n      FREE_IF (dwg->acis_sab_hdl);\n      FREE_IF (dwg->object);\n      if (dwg->object_map)\n        {\n          hash_free (dwg->object_map);\n          dwg->object_map = NULL;\n        }\n      dwg->num_objects = dwg->num_classes = dwg->num_object_refs = 0;\n#undef FREE_IF\n    }\n", "Selected Statement": "if (obj->fixedtype == DWG_TYPE_TABLESTYLE)", "Function Input": {}, "Variable Values Before Statement": {"obj->fixedtype": "NULL", "DWG_TYPE_TABLESTYLE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libredwg"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "     uint8_t *buffer,\n     size_t buffer_size,\n     libcerror_error_t **error )\n{\n\tlibfplist_xml_parser_state_t parser_state;\n\t\n\tYY_BUFFER_STATE buffer_state = NULL;\n\tstatic char *function        = \"libfplist_xml_parser_parse_buffer\";\n\tint result                   = -1;\n\n\tif( buffer == NULL )\n\t{\n\t\tlibcerror_error_set(\n\t\t error,\n\t\t LIBCERROR_ERROR_DOMAIN_ARGUMENTS,\n\t\t LIBCERROR_ARGUMENT_ERROR_INVALID_VALUE,\n\t\t \"%s: invalid buffer.\",\n\t\t function );\n\n\t\treturn( -1 );\n\t}\n\tbuffer_state = libfplist_xml_scanner__scan_buffer(\n\t                (char *) buffer,\n\t                buffer_size );\n\n\tlibfplist_xml_scanner_buffer_offset = 0;\n\n\tif( buffer_state != NULL )\n\t{\n\t\tparser_state.property_list = property_list;\n\t\tparser_state.error         = error;\n\t\tparser_state.root_tag      = NULL;\n\t\tparser_state.current_tag   = NULL;\n\t\tparser_state.parent_tag    = NULL;\n\n\t\tif( libfplist_xml_scanner_parse(\n\t\t     &parser_state ) == 0 )\n\t\t{\n\t\t\tif( libfplist_property_list_set_root_tag(\n\t\t\t     property_list,\n\t\t\t     parser_state.root_tag,\n\t\t\t     error ) != 1 )\n\t\t\t{\n\t\t\t\tlibcerror_error_set(\n\t\t\t\t error,\n\t\t\t\t LIBCERROR_ERROR_DOMAIN_RUNTIME,\n\t\t\t\t LIBCERROR_RUNTIME_ERROR_GET_FAILED,\n\t\t\t\t \"%s: unable to set root tag.\",\n\t\t\t\t function );\n\n\t\t\t\tresult = -1;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\tparser_state.root_tag = NULL;\n\n\t\t\t\tresult = 1;\n\t\t\t}\n\t\t}\n\t\tlibfplist_xml_scanner__delete_buffer(\n\t\t buffer_state );\n\t}\n\tlibfplist_xml_scanner_lex_destroy();\n\n\tif( parser_state.root_tag != NULL )\n\t{\n\t\tlibfplist_xml_tag_free(\n\t\t &( parser_state.root_tag ),\n\t\t NULL );\n\t}\n\treturn( result );\n", "Selected Statement": "if (yydebug)", "Function Input": {"buffer": {"value": "0x11f6eb0 \"\\340\\v\\342\\367\\377\\177\""}, "buffer_size": {"value": "4096"}, "error": {"value": {"type_category": "pointer", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1000\n", "message": "Cannot access memory at address 0x1000"}}, "property_list": {"value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x2\n", "message": "Cannot access memory at address 0x2"}}}, "Variable Values Before Statement": {"yydebug": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libyal"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @return the newly allocated buffer state object.\n */\nYY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )\n{\n\tYY_BUFFER_STATE b;\n    \n\tif ( size < 2 ||\n\t     base[size-2] != YY_END_OF_BUFFER_CHAR ||\n\t     base[size-1] != YY_END_OF_BUFFER_CHAR )\n\t\t\n\t\treturn NULL;\n\n\tb = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );\n\tif ( ! b )\n\t\tYY_FATAL_ERROR( \"out of dynamic memory in yy_scan_buffer()\" );\n\n\tb->yy_buf_size = (int) (size - 2);\t\n\tb->yy_buf_pos = b->yy_ch_buf = base;\n\tb->yy_is_our_buffer = 0;\n\tb->yy_input_file = NULL;\n\tb->yy_n_chars = b->yy_buf_size;\n\tb->yy_is_interactive = 0;\n\tb->yy_at_bol = 1;\n\tb->yy_fill_buffer = 0;\n\tb->yy_buffer_status = YY_BUFFER_NEW;\n\n\tyy_switch_to_buffer( b  );\n\n\treturn b;\n", "Selected Statement": "if (new_buffer == NULL)", "Function Input": {}, "Variable Values Before Statement": {"new_buffer": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libyal"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @return the newly allocated buffer state object.\n */\nYY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )\n{\n\tYY_BUFFER_STATE b;\n    \n\tif ( size < 2 ||\n\t     base[size-2] != YY_END_OF_BUFFER_CHAR ||\n\t     base[size-1] != YY_END_OF_BUFFER_CHAR )\n\t\t\n\t\treturn NULL;\n\n\tb = (YY_BUFFER_STATE) yyalloc( sizeof( struct yy_buffer_state )  );\n\tif ( ! b )\n\t\tYY_FATAL_ERROR( \"out of dynamic memory in yy_scan_buffer()\" );\n\n\tb->yy_buf_size = (int) (size - 2);\t\n\tb->yy_buf_pos = b->yy_ch_buf = base;\n\tb->yy_is_our_buffer = 0;\n\tb->yy_input_file = NULL;\n\tb->yy_n_chars = b->yy_buf_size;\n\tb->yy_is_interactive = 0;\n\tb->yy_at_bol = 1;\n\tb->yy_fill_buffer = 0;\n\tb->yy_buffer_status = YY_BUFFER_NEW;\n\n\tyy_switch_to_buffer( b  );\n\n\treturn b;\n", "Selected Statement": "if ( (yy_c_buf_p) < &YY_CURRENT_BUFFER_LVALUE->yy_ch_buf[(yy_n_chars)] )", "Function Input": {}, "Variable Values Before Statement": {"yy_c_buf_p": "NULL", "YY_CURRENT_BUFFER_LVALUE->yy_ch_buf": "NULL", "yy_n_chars": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libyal"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void\ninit_parse_tree(struct sudoers_parse_tree *parse_tree, char *lhost, char *shost,\n    struct sudoers_context *ctx, struct sudo_nss *nss)\n{\n    TAILQ_INIT(&parse_tree->userspecs);\n    TAILQ_INIT(&parse_tree->defaults);\n    parse_tree->aliases = NULL;\n    parse_tree->shost = shost;\n    parse_tree->lhost = lhost;\n    parse_tree->ctx = ctx;\n    parse_tree->nss = nss;\n", "Selected Statement": "if (!add_userspec($1, $2))", "Function Input": {}, "Variable Values Before Statement": {"add_userspec": "NULL"}, "Value After Statement Execution": "No", "Project Information": "sudoers"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void\ninit_parse_tree(struct sudoers_parse_tree *parse_tree, char *lhost, char *shost,\n    struct sudoers_context *ctx, struct sudo_nss *nss)\n{\n    TAILQ_INIT(&parse_tree->userspecs);\n    TAILQ_INIT(&parse_tree->defaults);\n    parse_tree->aliases = NULL;\n    parse_tree->shost = shost;\n    parse_tree->lhost = lhost;\n    parse_tree->ctx = ctx;\n    parse_tree->nss = nss;\n", "Selected Statement": "if (errnum == EEXIST)", "Function Input": {}, "Variable Values Before Statement": {"errnum": "NULL", "EEXIST": "NULL"}, "Value After Statement Execution": "No", "Project Information": "sudoers"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid *\nisc__mem_get(isc_mem_t *ctx, size_t size, int flags FLARG) {\n\tvoid *ptr = NULL;\n\n\tREQUIRE(VALID_CONTEXT(ctx));\n\n\tptr = mem_get(ctx, size, flags);\n\n\tmem_getstats(ctx, size);\n\tADD_TRACE(ctx, ptr, size, file, line);\n\n", "Selected Statement": "if (inuse <= hiwater)", "Function Input": {"ptr": {"value": null}}, "Variable Values Before Statement": {"inuse": "NULL", "hiwater": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid *\nisc__mem_get(isc_mem_t *ctx, size_t size, int flags FLARG) {\n\tvoid *ptr = NULL;\n\n\tREQUIRE(VALID_CONTEXT(ctx));\n\n\tptr = mem_get(ctx, size, flags);\n\n\tmem_getstats(ctx, size);\n\tADD_TRACE(ctx, ptr, size, file, line);\n\n", "Selected Statement": "if ((isc_mem_debugging & ISC_MEM_DEBUGUSAGE) != 0)", "Function Input": {"ptr": {"value": null}}, "Variable Values Before Statement": {"isc_mem_debugging": "unsigned int", "ISC_MEM_DEBUGUSAGE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n#if !defined(HAVE_STRLCPY)\nsize_t\nstrlcpy(char *dst, const char *src, size_t size) {\n\tchar *d = dst;\n\tconst char *s = src;\n\tsize_t n = size;\n\n\t\n\tif (n != 0U && --n != 0U) {\n\t\tdo {\n\t\t\tif ((*d++ = *s++) == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (--n != 0U);\n\t}\n\n\t\n\tif (n == 0U) {\n\t\tif (size != 0U) {\n\t\t\t*d = '\\0'; \n\t\t}\n\t\twhile (*s++) {\n\t\t}\n\t}\n\n", "Selected Statement": "if (n != 0U && --n != 0U)", "Function Input": {}, "Variable Values Before Statement": {"n": "21"}, "Value After Statement Execution": "Yes", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n#if !defined(HAVE_STRLCPY)\nsize_t\nstrlcpy(char *dst, const char *src, size_t size) {\n\tchar *d = dst;\n\tconst char *s = src;\n\tsize_t n = size;\n\n\t\n\tif (n != 0U && --n != 0U) {\n\t\tdo {\n\t\t\tif ((*d++ = *s++) == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (--n != 0U);\n\t}\n\n\t\n\tif (n == 0U) {\n\t\tif (size != 0U) {\n\t\t\t*d = '\\0'; \n\t\t}\n\t\twhile (*s++) {\n\t\t}\n\t}\n\n", "Selected Statement": "if (len > slen)", "Function Input": {}, "Variable Values Before Statement": {"len": "NULL", "slen": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n#if !defined(HAVE_STRLCPY)\nsize_t\nstrlcpy(char *dst, const char *src, size_t size) {\n\tchar *d = dst;\n\tconst char *s = src;\n\tsize_t n = size;\n\n\t\n\tif (n != 0U && --n != 0U) {\n\t\tdo {\n\t\t\tif ((*d++ = *s++) == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (--n != 0U);\n\t}\n\n\t\n\tif (n == 0U) {\n\t\tif (size != 0U) {\n\t\t\t*d = '\\0'; \n\t\t}\n\t\twhile (*s++) {\n\t\t}\n\t}\n\n", "Selected Statement": "if (n != 1U)", "Function Input": {}, "Variable Values Before Statement": {"n": "0"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n#if !defined(HAVE_STRLCPY)\nsize_t\nstrlcpy(char *dst, const char *src, size_t size) {\n\tchar *d = dst;\n\tconst char *s = src;\n\tsize_t n = size;\n\n\t\n\tif (n != 0U && --n != 0U) {\n\t\tdo {\n\t\t\tif ((*d++ = *s++) == 0) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t} while (--n != 0U);\n\t}\n\n\t\n\tif (n == 0U) {\n\t\tif (size != 0U) {\n\t\t\t*d = '\\0'; \n\t\t}\n\t\twhile (*s++) {\n\t\t}\n\t}\n\n", "Selected Statement": "if (size != 0U)", "Function Input": {}, "Variable Values Before Statement": {"size": "22"}, "Value After Statement Execution": "Yes", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic isc_result_t\nparse_message(isc_buffer_t *input, dns_message_t **messagep) {\n\tisc_result_t result;\n\tdns_message_t *message = NULL;\n\n\tdns_message_create(mctx, NULL, NULL, DNS_MESSAGE_INTENTPARSE, &message);\n\n\tresult = dns_message_parse(message, input, DNS_MESSAGEPARSE_BESTEFFORT);\n\tif (result == DNS_R_RECOVERABLE) {\n\t\tresult = ISC_R_SUCCESS;\n\t}\n\n\tif (result == ISC_R_SUCCESS && messagep != NULL) {\n\t\t*messagep = message;\n\t} else {\n\t\tdns_message_detach(&message);\n\t}\n\n\treturn (result);\n}\n\nstatic isc_result_t\nprint_message(dns_message_t *message) {\n\tisc_result_t result;\n\tisc_buffer_t buffer;\n\n\tdo {\n\t\tisc_buffer_init(&buffer, output, output_len);\n\t\tresult = dns_message_totext(message, &dns_master_style_debug, 0,\n\t\t\t\t\t    &buffer);\n\t\tif (result == ISC_R_NOSPACE) {\n\t\t\tisc_mem_put(mctx, output, output_len);\n\t\t\toutput_len *= 2;\n\t\t\toutput = isc_mem_get(mctx, output_len);\n\t\t\tcontinue;\n\t\t}\n\t} while (result == ISC_R_NOSPACE);\n\n\tif (debug) {\n\t\tfprintf(stderr, \"%.*s\\n\", (int)isc_buffer_usedlength(&buffer),\n\t\t\toutput);\n\t}\n\n\treturn (result);\n}\n\n#define CHECKRESULT(r, f)                 \\\n\t{                                 \\\n\t\tr = (f);                  \\\n\t\tif (r != ISC_R_SUCCESS) { \\\n\t\t\tgoto cleanup;     \\\n\t\t}                         \\\n\t}\n\nstatic isc_result_t\nrender_message(dns_message_t **messagep) {\n\tisc_result_t result;\n\tdns_message_t *message = *messagep;\n\tisc_buffer_t buffer;\n\tdns_compress_t cctx;\n\n\tisc_buffer_init(&buffer, render_buf, sizeof(render_buf));\n\n\tmessage->from_to_wire = DNS_MESSAGE_INTENTRENDER;\n\tfor (size_t i = 0; i < DNS_SECTION_MAX; i++) {\n\t\tmessage->counts[i] = 0;\n\t}\n\n\tdns_compress_init(&cctx, mctx, 0);\n\n\tCHECKRESULT(result, dns_message_renderbegin(message, &cctx, &buffer));\n\n\tCHECKRESULT(result, dns_message_rendersection(message,\n\t\t\t\t\t\t      DNS_SECTION_QUESTION, 0));\n\n\tCHECKRESULT(result,\n\t\t    dns_message_rendersection(message, DNS_SECTION_ANSWER, 0));\n\tCHECKRESULT(result, dns_message_rendersection(\n\t\t\t\t    message, DNS_SECTION_AUTHORITY, 0));\n\n\tCHECKRESULT(result, dns_message_rendersection(\n\t\t\t\t    message, DNS_SECTION_ADDITIONAL, 0));\n\n\tdns_message_renderend(message);\n\n\tdns_compress_invalidate(&cctx);\n\n\tmessage->from_to_wire = DNS_MESSAGE_INTENTPARSE;\n\n\tdns_message_detach(messagep);\n\n\tresult = parse_message(&buffer, messagep);\n\n\treturn (result);\n\ncleanup:\n\tdns_compress_invalidate(&cctx);\n\treturn (result);\n}\n\nint\nLLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\tisc_buffer_t buffer;\n\tisc_result_t result;\n\tdns_message_t *message = NULL;\n\n\tif (size > 65535) {\n\t\treturn (0);\n\t}\n\n\tisc_buffer_constinit(&buffer, data, size);\n\tisc_buffer_add(&buffer, size);\n\tisc_buffer_setactive(&buffer, size);\n\n", "Selected Statement": "if (result != ISC_R_SUCCESS)", "Function Input": {}, "Variable Values Before Statement": {"result": "isc_result_t", "ISC_R_SUCCESS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic isc_result_t\nparse_message(isc_buffer_t *input, dns_message_t **messagep) {\n\tisc_result_t result;\n\tdns_message_t *message = NULL;\n\n\tdns_message_create(mctx, NULL, NULL, DNS_MESSAGE_INTENTPARSE, &message);\n\n\tresult = dns_message_parse(message, input, DNS_MESSAGEPARSE_BESTEFFORT);\n\tif (result == DNS_R_RECOVERABLE) {\n\t\tresult = ISC_R_SUCCESS;\n\t}\n\n\tif (result == ISC_R_SUCCESS && messagep != NULL) {\n\t\t*messagep = message;\n\t} else {\n\t\tdns_message_detach(&message);\n\t}\n\n\treturn (result);\n}\n\nstatic isc_result_t\nprint_message(dns_message_t *message) {\n\tisc_result_t result;\n\tisc_buffer_t buffer;\n\n\tdo {\n\t\tisc_buffer_init(&buffer, output, output_len);\n\t\tresult = dns_message_totext(message, &dns_master_style_debug, 0,\n\t\t\t\t\t    &buffer);\n\t\tif (result == ISC_R_NOSPACE) {\n\t\t\tisc_mem_put(mctx, output, output_len);\n\t\t\toutput_len *= 2;\n\t\t\toutput = isc_mem_get(mctx, output_len);\n\t\t\tcontinue;\n\t\t}\n\t} while (result == ISC_R_NOSPACE);\n\n\tif (debug) {\n\t\tfprintf(stderr, \"%.*s\\n\", (int)isc_buffer_usedlength(&buffer),\n\t\t\toutput);\n\t}\n\n\treturn (result);\n}\n\n#define CHECKRESULT(r, f)                 \\\n\t{                                 \\\n\t\tr = (f);                  \\\n\t\tif (r != ISC_R_SUCCESS) { \\\n\t\t\tgoto cleanup;     \\\n\t\t}                         \\\n\t}\n\nstatic isc_result_t\nrender_message(dns_message_t **messagep) {\n\tisc_result_t result;\n\tdns_message_t *message = *messagep;\n\tisc_buffer_t buffer;\n\tdns_compress_t cctx;\n\n\tisc_buffer_init(&buffer, render_buf, sizeof(render_buf));\n\n\tmessage->from_to_wire = DNS_MESSAGE_INTENTRENDER;\n\tfor (size_t i = 0; i < DNS_SECTION_MAX; i++) {\n\t\tmessage->counts[i] = 0;\n\t}\n\n\tdns_compress_init(&cctx, mctx, 0);\n\n\tCHECKRESULT(result, dns_message_renderbegin(message, &cctx, &buffer));\n\n\tCHECKRESULT(result, dns_message_rendersection(message,\n\t\t\t\t\t\t      DNS_SECTION_QUESTION, 0));\n\n\tCHECKRESULT(result,\n\t\t    dns_message_rendersection(message, DNS_SECTION_ANSWER, 0));\n\tCHECKRESULT(result, dns_message_rendersection(\n\t\t\t\t    message, DNS_SECTION_AUTHORITY, 0));\n\n\tCHECKRESULT(result, dns_message_rendersection(\n\t\t\t\t    message, DNS_SECTION_ADDITIONAL, 0));\n\n\tdns_message_renderend(message);\n\n\tdns_compress_invalidate(&cctx);\n\n\tmessage->from_to_wire = DNS_MESSAGE_INTENTPARSE;\n\n\tdns_message_detach(messagep);\n\n\tresult = parse_message(&buffer, messagep);\n\n\treturn (result);\n\ncleanup:\n\tdns_compress_invalidate(&cctx);\n\treturn (result);\n}\n\nint\nLLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\tisc_buffer_t buffer;\n\tisc_result_t result;\n\tdns_message_t *message = NULL;\n\n\tif (size > 65535) {\n\t\treturn (0);\n\t}\n\n\tisc_buffer_constinit(&buffer, data, size);\n\tisc_buffer_add(&buffer, size);\n\tisc_buffer_setactive(&buffer, size);\n\n", "Selected Statement": "if (result != ISC_R_SUCCESS)", "Function Input": {}, "Variable Values Before Statement": {"result": "isc_result_t", "ISC_R_SUCCESS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void\ndns_message_create(isc_mem_t *mctx, isc_mempool_t *namepool,\n\t\t   isc_mempool_t *rdspool, dns_message_intent_t intent,\n\t\t   dns_message_t **msgp) {\n\tREQUIRE(mctx != NULL);\n\tREQUIRE(msgp != NULL);\n\tREQUIRE(*msgp == NULL);\n\tREQUIRE(intent == DNS_MESSAGE_INTENTPARSE ||\n\t\tintent == DNS_MESSAGE_INTENTRENDER);\n\tREQUIRE((namepool != NULL && rdspool != NULL) ||\n\t\t(namepool == NULL && rdspool == NULL));\n\n\tdns_message_t *msg = isc_mem_get(mctx, sizeof(dns_message_t));\n\t*msg = (dns_message_t){\n\t\t.from_to_wire = intent,\n\t\t.references = ISC_REFCOUNT_INITIALIZER(1),\n\t\t.scratchpad = ISC_LIST_INITIALIZER,\n\t\t.cleanup = ISC_LIST_INITIALIZER,\n\t\t.rdatas = ISC_LIST_INITIALIZER,\n\t\t.rdatalists = ISC_LIST_INITIALIZER,\n\t\t.offsets = ISC_LIST_INITIALIZER,\n\t\t.freerdata = ISC_LIST_INITIALIZER,\n\t\t.freerdatalist = ISC_LIST_INITIALIZER,\n\t\t.magic = DNS_MESSAGE_MAGIC,\n\t\t.namepool = namepool,\n\t\t.rdspool = rdspool,\n\t\t.free_pools = (namepool == NULL && rdspool == NULL),\n\t};\n\n\tisc_mem_attach(mctx, &msg->mctx);\n\n\tif (msg->free_pools) {\n\t\tdns_message_createpools(mctx, &msg->namepool, &msg->rdspool);\n\t}\n\n\tmsginit(msg);\n\n\tfor (size_t i = 0; i < DNS_SECTION_MAX; i++) {\n\t\tISC_LIST_INIT(msg->sections[i]);\n\t}\n\n\tisc_buffer_t *dynbuf = NULL;\n\tisc_buffer_allocate(mctx, &dynbuf, SCRATCHPAD_SIZE);\n\tISC_LIST_APPEND(msg->scratchpad, dynbuf, link);\n\n\t*msgp = msg;\n", "Selected Statement": "if (msg->free_pools)", "Function Input": {}, "Variable Values Before Statement": {"msg->free_pools": "1"}, "Value After Statement Execution": "Yes", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void\ndns_message_create(isc_mem_t *mctx, isc_mempool_t *namepool,\n\t\t   isc_mempool_t *rdspool, dns_message_intent_t intent,\n\t\t   dns_message_t **msgp) {\n\tREQUIRE(mctx != NULL);\n\tREQUIRE(msgp != NULL);\n\tREQUIRE(*msgp == NULL);\n\tREQUIRE(intent == DNS_MESSAGE_INTENTPARSE ||\n\t\tintent == DNS_MESSAGE_INTENTRENDER);\n\tREQUIRE((namepool != NULL && rdspool != NULL) ||\n\t\t(namepool == NULL && rdspool == NULL));\n\n\tdns_message_t *msg = isc_mem_get(mctx, sizeof(dns_message_t));\n\t*msg = (dns_message_t){\n\t\t.from_to_wire = intent,\n\t\t.references = ISC_REFCOUNT_INITIALIZER(1),\n\t\t.scratchpad = ISC_LIST_INITIALIZER,\n\t\t.cleanup = ISC_LIST_INITIALIZER,\n\t\t.rdatas = ISC_LIST_INITIALIZER,\n\t\t.rdatalists = ISC_LIST_INITIALIZER,\n\t\t.offsets = ISC_LIST_INITIALIZER,\n\t\t.freerdata = ISC_LIST_INITIALIZER,\n\t\t.freerdatalist = ISC_LIST_INITIALIZER,\n\t\t.magic = DNS_MESSAGE_MAGIC,\n\t\t.namepool = namepool,\n\t\t.rdspool = rdspool,\n\t\t.free_pools = (namepool == NULL && rdspool == NULL),\n\t};\n\n\tisc_mem_attach(mctx, &msg->mctx);\n\n\tif (msg->free_pools) {\n\t\tdns_message_createpools(mctx, &msg->namepool, &msg->rdspool);\n\t}\n\n\tmsginit(msg);\n\n\tfor (size_t i = 0; i < DNS_SECTION_MAX; i++) {\n\t\tISC_LIST_INIT(msg->sections[i]);\n\t}\n\n\tisc_buffer_t *dynbuf = NULL;\n\tisc_buffer_allocate(mctx, &dynbuf, SCRATCHPAD_SIZE);\n\tISC_LIST_APPEND(msg->scratchpad, dynbuf, link);\n\n\t*msgp = msg;\n", "Selected Statement": "if ((msg->flags & DNS_MESSAGEFLAG_RD) != 0)", "Function Input": {}, "Variable Values Before Statement": {"msg->flags": "0", "DNS_MESSAGEFLAG_RD": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void\ndns_message_create(isc_mem_t *mctx, isc_mempool_t *namepool,\n\t\t   isc_mempool_t *rdspool, dns_message_intent_t intent,\n\t\t   dns_message_t **msgp) {\n\tREQUIRE(mctx != NULL);\n\tREQUIRE(msgp != NULL);\n\tREQUIRE(*msgp == NULL);\n\tREQUIRE(intent == DNS_MESSAGE_INTENTPARSE ||\n\t\tintent == DNS_MESSAGE_INTENTRENDER);\n\tREQUIRE((namepool != NULL && rdspool != NULL) ||\n\t\t(namepool == NULL && rdspool == NULL));\n\n\tdns_message_t *msg = isc_mem_get(mctx, sizeof(dns_message_t));\n\t*msg = (dns_message_t){\n\t\t.from_to_wire = intent,\n\t\t.references = ISC_REFCOUNT_INITIALIZER(1),\n\t\t.scratchpad = ISC_LIST_INITIALIZER,\n\t\t.cleanup = ISC_LIST_INITIALIZER,\n\t\t.rdatas = ISC_LIST_INITIALIZER,\n\t\t.rdatalists = ISC_LIST_INITIALIZER,\n\t\t.offsets = ISC_LIST_INITIALIZER,\n\t\t.freerdata = ISC_LIST_INITIALIZER,\n\t\t.freerdatalist = ISC_LIST_INITIALIZER,\n\t\t.magic = DNS_MESSAGE_MAGIC,\n\t\t.namepool = namepool,\n\t\t.rdspool = rdspool,\n\t\t.free_pools = (namepool == NULL && rdspool == NULL),\n\t};\n\n\tisc_mem_attach(mctx, &msg->mctx);\n\n\tif (msg->free_pools) {\n\t\tdns_message_createpools(mctx, &msg->namepool, &msg->rdspool);\n\t}\n\n\tmsginit(msg);\n\n\tfor (size_t i = 0; i < DNS_SECTION_MAX; i++) {\n\t\tISC_LIST_INIT(msg->sections[i]);\n\t}\n\n\tisc_buffer_t *dynbuf = NULL;\n\tisc_buffer_allocate(mctx, &dynbuf, SCRATCHPAD_SIZE);\n\tISC_LIST_APPEND(msg->scratchpad, dynbuf, link);\n\n\t*msgp = msg;\n", "Selected Statement": "if (optcode == DNS_OPT_EDE)", "Function Input": {}, "Variable Values Before Statement": {"optcode": "NULL", "DNS_OPT_EDE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "impfind(const char *name) {\n\tdns_dbimplementation_t *imp;\n\n\tfor (imp = ISC_LIST_HEAD(implementations); imp != NULL;\n\t     imp = ISC_LIST_NEXT(imp, link))\n\t{\n", "Selected Statement": "if (db->methods->endload != NULL)", "Function Input": {}, "Variable Values Before Statement": {"db->methods->endload": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "impfind(const char *name) {\n\tdns_dbimplementation_t *imp;\n\n\tfor (imp = ISC_LIST_HEAD(implementations); imp != NULL;\n\t     imp = ISC_LIST_NEXT(imp, link))\n\t{\n", "Selected Statement": "if (db->methods->newversion != NULL)", "Function Input": {}, "Variable Values Before Statement": {"db->methods->newversion": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid\nisc_rwlock_init(isc_rwlock_t *rwl) {\n\tREQUIRE(rwl != NULL);\n\n\tatomic_init(&rwl->writers_lock, ISC_RWLOCK_UNLOCKED);\n\tatomic_init(&rwl->writers_barrier, 0);\n\tatomic_init(&rwl->readers_ingress, 0);\n\tatomic_init(&rwl->readers_egress, 0);\n\tLIBISC_RWLOCK_INIT(rwl);\n", "Selected Statement": "if (!writers_lock_islocked(rwl))", "Function Input": {"rwl": {"value": null}}, "Variable Values Before Statement": {"writers_lock_islocked": "NULL", "rwl": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid\nisc_rwlock_init(isc_rwlock_t *rwl) {\n\tREQUIRE(rwl != NULL);\n\n\tatomic_init(&rwl->writers_lock, ISC_RWLOCK_UNLOCKED);\n\tatomic_init(&rwl->writers_barrier, 0);\n\tatomic_init(&rwl->readers_ingress, 0);\n\tatomic_init(&rwl->readers_egress, 0);\n\tLIBISC_RWLOCK_INIT(rwl);\n", "Selected Statement": "if (!writers_lock_acquire(rwl))", "Function Input": {"rwl": {"value": null}}, "Variable Values Before Statement": {"writers_lock_acquire": "NULL", "rwl": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include <isc/result.h>\n\nisc_result_t\nisc_parse_uint32(uint32_t *uip, const char *string, int base) {\n\tunsigned long n;\n\tuint32_t r;\n\tchar *e;\n\tif (!isalnum((unsigned char)(string[0]))) {\n\t\treturn (ISC_R_BADNUMBER);\n\t}\n\terrno = 0;\n\tn = strtoul(string, &e, base);\n\tif (*e != '\\0') {\n\t\treturn (ISC_R_BADNUMBER);\n\t}\n\t\n\tr = (uint32_t)n;\n\tif ((n == ULONG_MAX && errno == ERANGE) || (n != (unsigned long)r)) {\n\t\treturn (ISC_R_RANGE);\n\t}\n\t*uip = r;\n\treturn (ISC_R_SUCCESS);\n", "Selected Statement": "if ((n == ULONG_MAX && errno == ERANGE) || (n != (unsigned long)r))", "Function Input": {"base": {"value": "-1"}, "string": {"value": "0x7ffffffed9b0 \"\\260\\334\\376\\377\\377\\177\""}, "uip": {"value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xffffffff00000000\n", "message": "Cannot access memory at address 0xffffffff00000000"}}}, "Variable Values Before Statement": {"n": "unsigned long", "ULONG_MAX": "NULL", "errno": "NULL", "ERANGE": "NULL", "r": "8"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include <isc/result.h>\n\nisc_result_t\nisc_parse_uint32(uint32_t *uip, const char *string, int base) {\n\tunsigned long n;\n\tuint32_t r;\n\tchar *e;\n\tif (!isalnum((unsigned char)(string[0]))) {\n\t\treturn (ISC_R_BADNUMBER);\n\t}\n\terrno = 0;\n\tn = strtoul(string, &e, base);\n\tif (*e != '\\0') {\n\t\treturn (ISC_R_BADNUMBER);\n\t}\n\t\n\tr = (uint32_t)n;\n\tif ((n == ULONG_MAX && errno == ERANGE) || (n != (unsigned long)r)) {\n\t\treturn (ISC_R_RANGE);\n\t}\n\t*uip = r;\n\treturn (ISC_R_SUCCESS);\n", "Selected Statement": "if (result != ISC_R_SUCCESS)", "Function Input": {"base": {"value": "-1"}, "string": {"value": "0x7ffffffed9b0 \"\\260\\334\\376\\377\\377\\177\""}, "uip": {"value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xffffffff00000000\n", "message": "Cannot access memory at address 0xffffffff00000000"}}}, "Variable Values Before Statement": {"result": "NULL", "ISC_R_SUCCESS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * add classes?\n */\nisc_result_t\ndns_rdataclass_fromtext(dns_rdataclass_t *classp, isc_textregion_t *source) {\n#define COMPARE(string, rdclass)                                      \\\n\tif (((sizeof(string) - 1) == source->length) &&               \\\n\t    (strncasecmp(source->base, string, source->length) == 0)) \\\n\t{                                                             \\\n\t\t*classp = rdclass;                                    \\\n\t\treturn (ISC_R_SUCCESS);                               \\\n\t}\n\n\tswitch (isc_ascii_tolower(source->base[0])) {\n\tcase 'a':\n\t\tCOMPARE(\"any\", dns_rdataclass_any);\n\t\tbreak;\n\tcase 'c':\n\t\t\n\t\tCOMPARE(\"ch\", dns_rdataclass_chaos);\n\t\tCOMPARE(\"chaos\", dns_rdataclass_chaos);\n\n\t\tif (source->length > 5 &&\n\t\t    source->length < (5 + sizeof(\"65000\")) &&\n\t\t    strncasecmp(\"class\", source->base, 5) == 0)\n\t\t{\n\t\t\tchar buf[sizeof(\"65000\")];\n\t\t\tchar *endp;\n\t\t\tunsigned int val;\n\n\t\t\t\n\t\t\tsnprintf(buf, sizeof(buf), \"%.*s\",\n\t\t\t\t (int)(source->length - 5), source->base + 5);\n\t\t\tval = strtoul(buf, &endp, 10);\n\t\t\tif (*endp == '\\0' && val <= 0xffff) {\n\t\t\t\t*classp = (dns_rdataclass_t)val;\n\t\t\t\treturn (ISC_R_SUCCESS);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase 'h':\n\t\tCOMPARE(\"hs\", dns_rdataclass_hs);\n\t\tCOMPARE(\"hesiod\", dns_rdataclass_hs);\n\t\tbreak;\n\tcase 'i':\n\t\tCOMPARE(\"in\", dns_rdataclass_in);\n\t\tbreak;\n\tcase 'n':\n\t\tCOMPARE(\"none\", dns_rdataclass_none);\n\t\tbreak;\n\tcase 'r':\n\t\tCOMPARE(\"reserved0\", dns_rdataclass_reserved0);\n\t\tbreak;\n\t}\n\n#undef COMPARE\n\n\treturn (DNS_R_UNKNOWN);\n", "Selected Statement": "if (p->name == NULL)", "Function Input": {"source": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x9fffedcb0\n", "message": "Cannot access memory at address 0x9fffedcb0"}}}, "Variable Values Before Statement": {"p->name": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * add classes?\n */\nisc_result_t\ndns_rdataclass_fromtext(dns_rdataclass_t *classp, isc_textregion_t *source) {\n#define COMPARE(string, rdclass)                                      \\\n\tif (((sizeof(string) - 1) == source->length) &&               \\\n\t    (strncasecmp(source->base, string, source->length) == 0)) \\\n\t{                                                             \\\n\t\t*classp = rdclass;                                    \\\n\t\treturn (ISC_R_SUCCESS);                               \\\n\t}\n\n\tswitch (isc_ascii_tolower(source->base[0])) {\n\tcase 'a':\n\t\tCOMPARE(\"any\", dns_rdataclass_any);\n\t\tbreak;\n\tcase 'c':\n\t\t\n\t\tCOMPARE(\"ch\", dns_rdataclass_chaos);\n\t\tCOMPARE(\"chaos\", dns_rdataclass_chaos);\n\n\t\tif (source->length > 5 &&\n\t\t    source->length < (5 + sizeof(\"65000\")) &&\n\t\t    strncasecmp(\"class\", source->base, 5) == 0)\n\t\t{\n\t\t\tchar buf[sizeof(\"65000\")];\n\t\t\tchar *endp;\n\t\t\tunsigned int val;\n\n\t\t\t\n\t\t\tsnprintf(buf, sizeof(buf), \"%.*s\",\n\t\t\t\t (int)(source->length - 5), source->base + 5);\n\t\t\tval = strtoul(buf, &endp, 10);\n\t\t\tif (*endp == '\\0' && val <= 0xffff) {\n\t\t\t\t*classp = (dns_rdataclass_t)val;\n\t\t\t\treturn (ISC_R_SUCCESS);\n\t\t\t}\n\t\t}\n\t\tbreak;\n\tcase 'h':\n\t\tCOMPARE(\"hs\", dns_rdataclass_hs);\n\t\tCOMPARE(\"hesiod\", dns_rdataclass_hs);\n\t\tbreak;\n\tcase 'i':\n\t\tCOMPARE(\"in\", dns_rdataclass_in);\n\t\tbreak;\n\tcase 'n':\n\t\tCOMPARE(\"none\", dns_rdataclass_none);\n\t\tbreak;\n\tcase 'r':\n\t\tCOMPARE(\"reserved0\", dns_rdataclass_reserved0);\n\t\tbreak;\n\t}\n\n#undef COMPARE\n\n\treturn (DNS_R_UNKNOWN);\n", "Selected Statement": "if (result != ISC_R_SUCCESS)", "Function Input": {"source": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x9fffedcb0\n", "message": "Cannot access memory at address 0x9fffedcb0"}}}, "Variable Values Before Statement": {"result": "NULL", "ISC_R_SUCCESS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "bind9"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Ptr       errarg,\n    Dwarf_Debug *   ret_dbg,\n    Dwarf_Error *   error)\n{\n    unsigned ftype = 0;\n    unsigned endian = 0;\n    unsigned offsetsize = 0;\n    unsigned universalnumber = 0;\n    Dwarf_Unsigned   filesize = 0;\n    int res = 0;\n    int errcode = 0;\n\n    if (!ret_dbg) {\n        DWARF_DBG_ERROR(NULL,DW_DLE_DWARF_INIT_DBG_NULL,DW_DLV_ERROR);\n    }\n    \n    *ret_dbg = 0;\n    res = dwarf_object_detector_fd(fd, &ftype,\n        &endian,&offsetsize,&filesize,&errcode);\n    if (res == DW_DLV_NO_ENTRY) {\n        return res;\n    }\n    if (res == DW_DLV_ERROR) {\n        \n        DWARF_DBG_ERROR(NULL, DW_DLE_FILE_WRONG_TYPE, DW_DLV_ERROR);\n    }\n    switch(ftype) {\n    case DW_FTYPE_ELF: {\n        int res2 = 0;\n\n        res2 = _dwarf_elf_nlsetup(fd,\"\",\n            ftype,endian,offsetsize,filesize,\n            group_number,errhand,errarg,ret_dbg,error);\n        if (res2 != DW_DLV_OK) {\n            return res2;\n        }\n        set_global_paths_init(*ret_dbg,error);\n        return res2;\n        }\n    case DW_FTYPE_APPLEUNIVERSAL:\n    case DW_FTYPE_MACH_O: {\n        int resm = 0;\n\n        resm = _dwarf_macho_setup(fd,\"\",\n            universalnumber,\n            ftype,endian,offsetsize,filesize,\n            group_number,errhand,errarg,ret_dbg,error);\n        if (resm != DW_DLV_OK) {\n            return resm;\n        }\n        set_global_paths_init(*ret_dbg,error);\n        return resm;\n        }\n\n    case DW_FTYPE_PE: {\n        int resp = 0;\n\n        resp = _dwarf_pe_setup(fd,\n            \"\",\n            ftype,endian,offsetsize,filesize,\n            group_number,errhand,errarg,ret_dbg,error);\n        if (resp != DW_DLV_OK) {\n            return resp;\n        }\n        set_global_paths_init(*ret_dbg,error);\n        return resp;\n        }\n    default: break;\n    }\n    DWARF_DBG_ERROR(NULL, DW_DLE_FILE_WRONG_TYPE, DW_DLV_ERROR);\n    \n", "Selected Statement": "if (!ret_dbg)", "Function Input": {"error": {"value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xfe02dd63e9f26600\n", "message": "Cannot access memory at address 0xfe02dd63e9f26600"}}}, "Variable Values Before Statement": {"ret_dbg": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Ptr       errarg,\n    Dwarf_Debug *   ret_dbg,\n    Dwarf_Error *   error)\n{\n    unsigned ftype = 0;\n    unsigned endian = 0;\n    unsigned offsetsize = 0;\n    unsigned universalnumber = 0;\n    Dwarf_Unsigned   filesize = 0;\n    int res = 0;\n    int errcode = 0;\n\n    if (!ret_dbg) {\n        DWARF_DBG_ERROR(NULL,DW_DLE_DWARF_INIT_DBG_NULL,DW_DLV_ERROR);\n    }\n    \n    *ret_dbg = 0;\n    res = dwarf_object_detector_fd(fd, &ftype,\n        &endian,&offsetsize,&filesize,&errcode);\n    if (res == DW_DLV_NO_ENTRY) {\n        return res;\n    }\n    if (res == DW_DLV_ERROR) {\n        \n        DWARF_DBG_ERROR(NULL, DW_DLE_FILE_WRONG_TYPE, DW_DLV_ERROR);\n    }\n    switch(ftype) {\n    case DW_FTYPE_ELF: {\n        int res2 = 0;\n\n        res2 = _dwarf_elf_nlsetup(fd,\"\",\n            ftype,endian,offsetsize,filesize,\n            group_number,errhand,errarg,ret_dbg,error);\n        if (res2 != DW_DLV_OK) {\n            return res2;\n        }\n        set_global_paths_init(*ret_dbg,error);\n        return res2;\n        }\n    case DW_FTYPE_APPLEUNIVERSAL:\n    case DW_FTYPE_MACH_O: {\n        int resm = 0;\n\n        resm = _dwarf_macho_setup(fd,\"\",\n            universalnumber,\n            ftype,endian,offsetsize,filesize,\n            group_number,errhand,errarg,ret_dbg,error);\n        if (resm != DW_DLV_OK) {\n            return resm;\n        }\n        set_global_paths_init(*ret_dbg,error);\n        return resm;\n        }\n\n    case DW_FTYPE_PE: {\n        int resp = 0;\n\n        resp = _dwarf_pe_setup(fd,\n            \"\",\n            ftype,endian,offsetsize,filesize,\n            group_number,errhand,errarg,ret_dbg,error);\n        if (resp != DW_DLV_OK) {\n            return resp;\n        }\n        set_global_paths_init(*ret_dbg,error);\n        return resp;\n        }\n    default: break;\n    }\n    DWARF_DBG_ERROR(NULL, DW_DLE_FILE_WRONG_TYPE, DW_DLV_ERROR);\n    \n", "Selected Statement": "if (resm != DW_DLV_OK)", "Function Input": {"error": {"value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xfe02dd63e9f26600\n", "message": "Cannot access memory at address 0xfe02dd63e9f26600"}}}, "Variable Values Before Statement": {"resm": "int", "DW_DLV_OK": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Ptr       errarg,\n    Dwarf_Debug *   ret_dbg,\n    Dwarf_Error *   error)\n{\n    unsigned ftype = 0;\n    unsigned endian = 0;\n    unsigned offsetsize = 0;\n    unsigned universalnumber = 0;\n    Dwarf_Unsigned   filesize = 0;\n    int res = 0;\n    int errcode = 0;\n\n    if (!ret_dbg) {\n        DWARF_DBG_ERROR(NULL,DW_DLE_DWARF_INIT_DBG_NULL,DW_DLV_ERROR);\n    }\n    \n    *ret_dbg = 0;\n    res = dwarf_object_detector_fd(fd, &ftype,\n        &endian,&offsetsize,&filesize,&errcode);\n    if (res == DW_DLV_NO_ENTRY) {\n        return res;\n    }\n    if (res == DW_DLV_ERROR) {\n        \n        DWARF_DBG_ERROR(NULL, DW_DLE_FILE_WRONG_TYPE, DW_DLV_ERROR);\n    }\n    switch(ftype) {\n    case DW_FTYPE_ELF: {\n        int res2 = 0;\n\n        res2 = _dwarf_elf_nlsetup(fd,\"\",\n            ftype,endian,offsetsize,filesize,\n            group_number,errhand,errarg,ret_dbg,error);\n        if (res2 != DW_DLV_OK) {\n            return res2;\n        }\n        set_global_paths_init(*ret_dbg,error);\n        return res2;\n        }\n    case DW_FTYPE_APPLEUNIVERSAL:\n    case DW_FTYPE_MACH_O: {\n        int resm = 0;\n\n        resm = _dwarf_macho_setup(fd,\"\",\n            universalnumber,\n            ftype,endian,offsetsize,filesize,\n            group_number,errhand,errarg,ret_dbg,error);\n        if (resm != DW_DLV_OK) {\n            return resm;\n        }\n        set_global_paths_init(*ret_dbg,error);\n        return resm;\n        }\n\n    case DW_FTYPE_PE: {\n        int resp = 0;\n\n        resp = _dwarf_pe_setup(fd,\n            \"\",\n            ftype,endian,offsetsize,filesize,\n            group_number,errhand,errarg,ret_dbg,error);\n        if (resp != DW_DLV_OK) {\n            return resp;\n        }\n        set_global_paths_init(*ret_dbg,error);\n        return resp;\n        }\n    default: break;\n    }\n    DWARF_DBG_ERROR(NULL, DW_DLE_FILE_WRONG_TYPE, DW_DLV_ERROR);\n    \n", "Selected Statement": "if (path_source)", "Function Input": {"error": {"value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xfe02dd63e9f26600\n", "message": "Cannot access memory at address 0xfe02dd63e9f26600"}}}, "Variable Values Before Statement": {"path_source": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    unsigned *offsetsize,\n    Dwarf_Unsigned  *filesize,\n    int *errcode)\n{\n    Dwarf_Unsigned fileoffsetbase = 0;\n    int res = 0;\n\n    res = _dwarf_object_detector_fd_a(fd,\n        ftype,endian,offsetsize,\n        fileoffsetbase,filesize,\n        errcode);\n", "Selected Statement": "if (dp >= endpoint)", "Function Input": {}, "Variable Values Before Statement": {"dp": "NULL", "endpoint": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    unsigned *offsetsize,\n    Dwarf_Unsigned  *filesize,\n    int *errcode)\n{\n    Dwarf_Unsigned fileoffsetbase = 0;\n    int res = 0;\n\n    res = _dwarf_object_detector_fd_a(fd,\n        ftype,endian,offsetsize,\n        fileoffsetbase,filesize,\n        errcode);\n", "Selected Statement": "if (res == DW_DLV_NO_ENTRY)", "Function Input": {}, "Variable Values Before Statement": {"res": "int", "DW_DLV_NO_ENTRY": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Unsigned loc,\n    int seektype,\n    Dwarf_Unsigned *out_loc)\n{\n    Dwarf_Signed fsize = 0;\n    Dwarf_Signed sloc = 0;\n\n    sloc = (Dwarf_Signed)loc;\n    if (sloc < 0) {\n        return DW_DLV_ERROR;\n    }\n#ifdef _WIN64\n    fsize = (Dwarf_Signed)lseek(fd,(__int64)loc,seektype);\n#elif defined(_WIN32)\n    fsize = (Dwarf_Signed)lseek(fd,(off_t)loc,seektype);\n#else \n    fsize = (Dwarf_Signed)lseek(fd,(off_t)loc,seektype);\n#endif\n    if (fsize < 0) {\n        return DW_DLV_ERROR;\n    }\n    if (out_loc) {\n        *out_loc = (Dwarf_Unsigned)fsize;\n    }\n    return DW_DLV_OK;\n", "Selected Statement": "if (rcode < 0 || rcode != (Dwarf_Signed)size)", "Function Input": {}, "Variable Values Before Statement": {"rcode": "NULL", "size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Unsigned loc,\n    int seektype,\n    Dwarf_Unsigned *out_loc)\n{\n    Dwarf_Signed fsize = 0;\n    Dwarf_Signed sloc = 0;\n\n    sloc = (Dwarf_Signed)loc;\n    if (sloc < 0) {\n        return DW_DLV_ERROR;\n    }\n#ifdef _WIN64\n    fsize = (Dwarf_Signed)lseek(fd,(__int64)loc,seektype);\n#elif defined(_WIN32)\n    fsize = (Dwarf_Signed)lseek(fd,(off_t)loc,seektype);\n#else \n    fsize = (Dwarf_Signed)lseek(fd,(off_t)loc,seektype);\n#endif\n    if (fsize < 0) {\n        return DW_DLV_ERROR;\n    }\n    if (out_loc) {\n        *out_loc = (Dwarf_Unsigned)fsize;\n    }\n    return DW_DLV_OK;\n", "Selected Statement": "if (sloc < 0)", "Function Input": {}, "Variable Values Before Statement": {"sloc": "Dwarf_Signed"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Unsigned loc,\n    int seektype,\n    Dwarf_Unsigned *out_loc)\n{\n    Dwarf_Signed fsize = 0;\n    Dwarf_Signed sloc = 0;\n\n    sloc = (Dwarf_Signed)loc;\n    if (sloc < 0) {\n        return DW_DLV_ERROR;\n    }\n#ifdef _WIN64\n    fsize = (Dwarf_Signed)lseek(fd,(__int64)loc,seektype);\n#elif defined(_WIN32)\n    fsize = (Dwarf_Signed)lseek(fd,(off_t)loc,seektype);\n#else \n    fsize = (Dwarf_Signed)lseek(fd,(off_t)loc,seektype);\n#endif\n    if (fsize < 0) {\n        return DW_DLV_ERROR;\n    }\n    if (out_loc) {\n        *out_loc = (Dwarf_Unsigned)fsize;\n    }\n    return DW_DLV_OK;\n", "Selected Statement": "if (out_loc)", "Function Input": {}, "Variable Values Before Statement": {"out_loc": "0"}, "Value After Statement Execution": "Yes", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Handler errhand,\n    Dwarf_Ptr errarg,\n    Dwarf_Debug *dbg,Dwarf_Error *error)\n{\n    Dwarf_Obj_Access_Interface_a *binary_interface = 0;\n    dwarf_macho_object_access_internals_t *intfc = 0;\n    int res = DW_DLV_OK;\n    int localerrnum = 0;\n    unsigned universalbinary_count = 0;\n\n    res = _dwarf_macho_object_access_init(\n        fd,\n        universalnumber,\n        ftype,endian,offsetsize,\n        &universalbinary_count,\n        filesize,\n        &binary_interface,\n        &localerrnum);\n    if (res != DW_DLV_OK) {\n        if (res == DW_DLV_NO_ENTRY) {\n            return res;\n        }\n        _dwarf_error(NULL, error, localerrnum);\n        return DW_DLV_ERROR;\n    }\n    \n    res = dwarf_object_init_b(binary_interface, errhand, errarg,\n        groupnumber, dbg, error);\n    if (res != DW_DLV_OK){\n        _dwarf_destruct_macho_access(binary_interface);\n        return res;\n    }\n    intfc = binary_interface->ai_object;\n    intfc->mo_path = strdup(true_path);\n    (*dbg)->de_obj_flags = intfc->mo_flags;\n    (*dbg)->de_obj_machine = intfc->mo_machine;\n    (*dbg)->de_universalbinary_index = universalnumber;\n    (*dbg)->de_universalbinary_count = universalbinary_count;\n    return res;\n", "Selected Statement": "if (!secs)", "Function Input": {}, "Variable Values Before Statement": {"secs": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Handler errhand,\n    Dwarf_Ptr errarg,\n    Dwarf_Debug *dbg,Dwarf_Error *error)\n{\n    Dwarf_Obj_Access_Interface_a *binary_interface = 0;\n    dwarf_macho_object_access_internals_t *intfc = 0;\n    int res = DW_DLV_OK;\n    int localerrnum = 0;\n    unsigned universalbinary_count = 0;\n\n    res = _dwarf_macho_object_access_init(\n        fd,\n        universalnumber,\n        ftype,endian,offsetsize,\n        &universalbinary_count,\n        filesize,\n        &binary_interface,\n        &localerrnum);\n    if (res != DW_DLV_OK) {\n        if (res == DW_DLV_NO_ENTRY) {\n            return res;\n        }\n        _dwarf_error(NULL, error, localerrnum);\n        return DW_DLV_ERROR;\n    }\n    \n    res = dwarf_object_init_b(binary_interface, errhand, errarg,\n        groupnumber, dbg, error);\n    if (res != DW_DLV_OK){\n        _dwarf_destruct_macho_access(binary_interface);\n        return res;\n    }\n    intfc = binary_interface->ai_object;\n    intfc->mo_path = strdup(true_path);\n    (*dbg)->de_obj_flags = intfc->mo_flags;\n    (*dbg)->de_obj_machine = intfc->mo_machine;\n    (*dbg)->de_universalbinary_index = universalnumber;\n    (*dbg)->de_universalbinary_count = universalbinary_count;\n    return res;\n", "Selected Statement": "if (res != DW_DLV_OK)", "Function Input": {}, "Variable Values Before Statement": {"res": "int", "DW_DLV_OK": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Handler errhand,\n    Dwarf_Ptr errarg,\n    Dwarf_Debug *dbg,Dwarf_Error *error)\n{\n    Dwarf_Obj_Access_Interface_a *binary_interface = 0;\n    dwarf_macho_object_access_internals_t *intfc = 0;\n    int res = DW_DLV_OK;\n    int localerrnum = 0;\n    unsigned universalbinary_count = 0;\n\n    res = _dwarf_macho_object_access_init(\n        fd,\n        universalnumber,\n        ftype,endian,offsetsize,\n        &universalbinary_count,\n        filesize,\n        &binary_interface,\n        &localerrnum);\n    if (res != DW_DLV_OK) {\n        if (res == DW_DLV_NO_ENTRY) {\n            return res;\n        }\n        _dwarf_error(NULL, error, localerrnum);\n        return DW_DLV_ERROR;\n    }\n    \n    res = dwarf_object_init_b(binary_interface, errhand, errarg,\n        groupnumber, dbg, error);\n    if (res != DW_DLV_OK){\n        _dwarf_destruct_macho_access(binary_interface);\n        return res;\n    }\n    intfc = binary_interface->ai_object;\n    intfc->mo_path = strdup(true_path);\n    (*dbg)->de_obj_flags = intfc->mo_flags;\n    (*dbg)->de_obj_machine = intfc->mo_machine;\n    (*dbg)->de_universalbinary_index = universalnumber;\n    (*dbg)->de_universalbinary_count = universalbinary_count;\n    return res;\n", "Selected Statement": "if (dua->au_size >= duhd->au_filesize)", "Function Input": {}, "Variable Values Before Statement": {"dua->au_size": "NULL", "duhd->au_filesize": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void\n_dwarf_error(Dwarf_Debug dbg, Dwarf_Error * error,\n    Dwarf_Signed errval)\n{\n    _dwarf_error_string(dbg,error,errval,0);\n", "Selected Statement": "if (dbg)", "Function Input": {"dbg": {"value": "0x100000003"}}, "Variable Values Before Statement": {"dbg": "Dwarf_Debug"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void\n_dwarf_error(Dwarf_Debug dbg, Dwarf_Error * error,\n    Dwarf_Signed errval)\n{\n    _dwarf_error_string(dbg,error,errval,0);\n", "Selected Statement": "if (!errptr)", "Function Input": {"dbg": {"value": "0x100000003"}}, "Variable Values Before Statement": {"errptr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    but that is ok */\nvoid\n_dwarf_free_static_errlist(void)\n{\n    unsigned i = 0;\n\n    for ( ; i <static_used; ++i) {\n        Dwarf_Error e = staticerrlist[i];\n        if (e) {\n            dw_empty_errlist_item(e);\n            staticerrlist[i] = 0;\n        }\n    }\n", "Selected Statement": "if (e->er_static_alloc == DE_MALLOC)", "Function Input": {}, "Variable Values Before Statement": {"e->er_static_alloc": "NULL", "DE_MALLOC": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    but that is ok */\nvoid\n_dwarf_free_static_errlist(void)\n{\n    unsigned i = 0;\n\n    for ( ; i <static_used; ++i) {\n        Dwarf_Error e = staticerrlist[i];\n        if (e) {\n            dw_empty_errlist_item(e);\n            staticerrlist[i] = 0;\n        }\n    }\n", "Selected Statement": "if (e != e_in)", "Function Input": {}, "Variable Values Before Statement": {"e": "NULL", "e_in": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\n_dwarf_object_read_random(int fd, char *buf, Dwarf_Unsigned loc,\n    Dwarf_Unsigned size, Dwarf_Unsigned filesize, int *errc)\n{\n    Dwarf_Unsigned endpoint = 0;\n    int res = 0;\n\n    if (loc >= filesize) {\n        \n        *errc = DW_DLE_SEEK_OFF_END;\n        return DW_DLV_ERROR;\n    }\n    endpoint = loc+size;\n    if (endpoint < loc) {\n        \n        *errc = DW_DLE_READ_OFF_END;\n        return DW_DLV_ERROR;\n    }\n    if (endpoint > filesize) {\n        \n        *errc = DW_DLE_READ_OFF_END;\n        return DW_DLV_ERROR;\n    }\n    res = _dwarf_seekr(fd,loc,SEEK_SET,0);\n    if (res != DW_DLV_OK) {\n        *errc = DW_DLE_SEEK_ERROR;\n        return DW_DLV_ERROR;\n    }\n    res = _dwarf_readr(fd,buf,size,0);\n    if (res != DW_DLV_OK) {\n        *errc = DW_DLE_READ_ERROR;\n        return DW_DLV_ERROR;\n    }\n    return DW_DLV_OK;\n", "Selected Statement": "if (endpoint > filesize)", "Function Input": {"buf": {"value": "0x3 <error: Cannot access memory at address 0x3>"}, "errc": {"value": null}, "fd": {"value": "-10544"}, "filesize": {"value": "6002422"}, "loc": {"value": "140737348690585"}, "size": {"value": "3"}}, "Variable Values Before Statement": {"endpoint": "Dwarf_Unsigned", "filesize": "Dwarf_Unsigned"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\n_dwarf_object_read_random(int fd, char *buf, Dwarf_Unsigned loc,\n    Dwarf_Unsigned size, Dwarf_Unsigned filesize, int *errc)\n{\n    Dwarf_Unsigned endpoint = 0;\n    int res = 0;\n\n    if (loc >= filesize) {\n        \n        *errc = DW_DLE_SEEK_OFF_END;\n        return DW_DLV_ERROR;\n    }\n    endpoint = loc+size;\n    if (endpoint < loc) {\n        \n        *errc = DW_DLE_READ_OFF_END;\n        return DW_DLV_ERROR;\n    }\n    if (endpoint > filesize) {\n        \n        *errc = DW_DLE_READ_OFF_END;\n        return DW_DLV_ERROR;\n    }\n    res = _dwarf_seekr(fd,loc,SEEK_SET,0);\n    if (res != DW_DLV_OK) {\n        *errc = DW_DLE_SEEK_ERROR;\n        return DW_DLV_ERROR;\n    }\n    res = _dwarf_readr(fd,buf,size,0);\n    if (res != DW_DLV_OK) {\n        *errc = DW_DLE_READ_ERROR;\n        return DW_DLV_ERROR;\n    }\n    return DW_DLV_OK;\n", "Selected Statement": "if (endpoint < loc)", "Function Input": {"buf": {"value": "0x3 <error: Cannot access memory at address 0x3>"}, "errc": {"value": null}, "fd": {"value": "-10544"}, "filesize": {"value": "6002422"}, "loc": {"value": "140737348690585"}, "size": {"value": "3"}}, "Variable Values Before Statement": {"endpoint": "Dwarf_Unsigned", "loc": "Dwarf_Unsigned"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "_dwarf_memcpy_noswap_bytes(void *s1,\n    const void *s2,\n    unsigned long len)\n{\n    memcpy(s1,s2,(size_t)len);\n", "Selected Statement": "if (len > 8)", "Function Input": {"len": {"value": "3216703178"}, "s1": {"value": null}, "s2": {"value": null}}, "Variable Values Before Statement": {"len": "unsigned long"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Handler errhand,\n    Dwarf_Ptr errarg,\n    Dwarf_Debug *dbg,Dwarf_Error *error)\n{\n    Dwarf_Obj_Access_Interface_a *binary_interface = 0;\n    dwarf_elf_object_access_internals_t *intfc = 0;\n    int res = DW_DLV_OK;\n    int localerrnum = 0;\n\n    res = _dwarf_elf_object_access_init(\n        fd,\n        ftype,endian,offsetsize,filesize,\n        &binary_interface,\n        &localerrnum);\n    if (res != DW_DLV_OK) {\n        if (res == DW_DLV_NO_ENTRY) {\n            return res;\n        }\n        _dwarf_error(NULL, error, localerrnum);\n        return DW_DLV_ERROR;\n    }\n    \n    res = dwarf_object_init_b(binary_interface, errhand, errarg,\n        groupnumber, dbg, error);\n    if (res != DW_DLV_OK){\n        _dwarf_destruct_elf_nlaccess(binary_interface);\n        return res;\n    }\n    intfc = binary_interface->ai_object;\n    intfc->f_path = strdup(true_path);\n    (*dbg)->de_obj_machine = intfc->f_machine;\n    (*dbg)->de_obj_flags = intfc->f_flags;\n    return res;\n", "Selected Statement": "if (read_size > read_size_limit)", "Function Input": {}, "Variable Values Before Statement": {"read_size": "NULL", "read_size_limit": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Handler errhand,\n    Dwarf_Ptr errarg,\n    Dwarf_Debug *dbg,Dwarf_Error *error)\n{\n    Dwarf_Obj_Access_Interface_a *binary_interface = 0;\n    dwarf_elf_object_access_internals_t *intfc = 0;\n    int res = DW_DLV_OK;\n    int localerrnum = 0;\n\n    res = _dwarf_elf_object_access_init(\n        fd,\n        ftype,endian,offsetsize,filesize,\n        &binary_interface,\n        &localerrnum);\n    if (res != DW_DLV_OK) {\n        if (res == DW_DLV_NO_ENTRY) {\n            return res;\n        }\n        _dwarf_error(NULL, error, localerrnum);\n        return DW_DLV_ERROR;\n    }\n    \n    res = dwarf_object_init_b(binary_interface, errhand, errarg,\n        groupnumber, dbg, error);\n    if (res != DW_DLV_OK){\n        _dwarf_destruct_elf_nlaccess(binary_interface);\n        return res;\n    }\n    intfc = binary_interface->ai_object;\n    intfc->f_path = strdup(true_path);\n    (*dbg)->de_obj_machine = intfc->f_machine;\n    (*dbg)->de_obj_flags = intfc->f_flags;\n    return res;\n", "Selected Statement": "if (!internals)", "Function Input": {}, "Variable Values Before Statement": {"internals": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Handler errhand,\n    Dwarf_Ptr errarg,\n    Dwarf_Debug *dbg,Dwarf_Error *error)\n{\n    Dwarf_Obj_Access_Interface_a *binary_interface = 0;\n    dwarf_elf_object_access_internals_t *intfc = 0;\n    int res = DW_DLV_OK;\n    int localerrnum = 0;\n\n    res = _dwarf_elf_object_access_init(\n        fd,\n        ftype,endian,offsetsize,filesize,\n        &binary_interface,\n        &localerrnum);\n    if (res != DW_DLV_OK) {\n        if (res == DW_DLV_NO_ENTRY) {\n            return res;\n        }\n        _dwarf_error(NULL, error, localerrnum);\n        return DW_DLV_ERROR;\n    }\n    \n    res = dwarf_object_init_b(binary_interface, errhand, errarg,\n        groupnumber, dbg, error);\n    if (res != DW_DLV_OK){\n        _dwarf_destruct_elf_nlaccess(binary_interface);\n        return res;\n    }\n    intfc = binary_interface->ai_object;\n    intfc->f_path = strdup(true_path);\n    (*dbg)->de_obj_machine = intfc->f_machine;\n    (*dbg)->de_obj_flags = intfc->f_flags;\n    return res;\n", "Selected Statement": "if (res != DW_DLV_OK)", "Function Input": {}, "Variable Values Before Statement": {"res": "int", "DW_DLV_OK": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\n_dwarf_load_elf_header(\n    dwarf_elf_object_access_internals_t *ep,int*errcode)\n{\n    unsigned offsetsize = ep->f_offsetsize;\n    int res = 0;\n\n    if (offsetsize == 32) {\n        res = elf_load_elf_header32(ep,errcode);\n    } else if (offsetsize == 64) {\n        if (sizeof(Dwarf_Unsigned) < 8) {\n            *errcode =  DW_DLE_INTEGER_TOO_SMALL;\n            return DW_DLV_ERROR;\n        }\n        res = elf_load_elf_header64(ep,errcode);\n    } else {\n        *errcode = DW_DLE_OFFSET_SIZE;\n        return DW_DLV_ERROR;\n    }\n    return res;\n", "Selected Statement": "if (res == DW_DLV_OK)", "Function Input": {}, "Variable Values Before Statement": {"res": "NULL", "DW_DLV_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\n_dwarf_load_elf_header(\n    dwarf_elf_object_access_internals_t *ep,int*errcode)\n{\n    unsigned offsetsize = ep->f_offsetsize;\n    int res = 0;\n\n    if (offsetsize == 32) {\n        res = elf_load_elf_header32(ep,errcode);\n    } else if (offsetsize == 64) {\n        if (sizeof(Dwarf_Unsigned) < 8) {\n            *errcode =  DW_DLE_INTEGER_TOO_SMALL;\n            return DW_DLV_ERROR;\n        }\n        res = elf_load_elf_header64(ep,errcode);\n    } else {\n        *errcode = DW_DLE_OFFSET_SIZE;\n        return DW_DLV_ERROR;\n    }\n    return res;\n", "Selected Statement": "if (have_shdr_count)", "Function Input": {}, "Variable Values Before Statement": {"have_shdr_count": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\ndwarf_crc32 (Dwarf_Debug dbg,unsigned char *crcbuf,\n    Dwarf_Error *error)\n{\n    \n    \n\n    \n    Dwarf_Unsigned   fsize = 0;\n    \n    Dwarf_Unsigned  readlenu = 10000;\n    Dwarf_Unsigned  size_left = 0;\n    const unsigned char *readbuf = 0;\n    unsigned int   tcrc = 0;\n    unsigned int   init = 0;\n    int            fd = -1;\n    Dwarf_Unsigned   sz = 0;\n    int            res = 0;\n\n    CHECK_DBG(dbg,error,\"dwarf_crc32()\");\n    if (!crcbuf) {\n        return DW_DLV_NO_ENTRY;\n    }\n    if (!dbg->de_owns_fd) {\n        return DW_DLV_NO_ENTRY;\n    }\n    fd = dbg->de_fd;\n    if (fd < 0) {\n        return DW_DLV_NO_ENTRY;\n    }\n    fd = dbg->de_fd;\n    if (dbg->de_filesize) {\n        fsize = (size_t)dbg->de_filesize;\n    } else {\n        res = _dwarf_seekr(fd,0,SEEK_END,&sz);\n        if (res != DW_DLV_OK) {\n            _dwarf_error_string(dbg,error,DW_DLE_SEEK_ERROR,\n                \"DW_DLE_SEEK_ERROR: dwarf_crc32 seek \"\n                \"to end fails\");\n            return DW_DLV_ERROR;\n        }\n        fsize = sz;\n    }\n    if (fsize <= (Dwarf_Unsigned)500) {\n        \n        return DW_DLV_NO_ENTRY;\n    }\n    size_left = fsize;\n    res = _dwarf_seekr(fd,0,SEEK_SET,0);\n    if (res != DW_DLV_OK) {\n        _dwarf_error_string(dbg,error,DW_DLE_SEEK_ERROR,\n            \"DW_DLE_SEEK_ERROR: dwarf_crc32 seek \"\n            \"to start fails\");\n        return DW_DLV_ERROR;\n    }\n    readbuf = (unsigned char *)malloc(readlenu);\n    if (!readbuf) {\n        _dwarf_error_string(dbg,error,DW_DLE_ALLOC_FAIL,\n            \"DW_DLE_ALLOC_FAIL: dwarf_crc32 read buffer\"\n            \" alloc fails\");\n        return DW_DLV_ERROR;\n    }\n    while (size_left > 0) {\n        if (size_left < readlenu) {\n            readlenu = size_left;\n        }\n        res = _dwarf_readr(fd,(char *)readbuf,readlenu,0);\n        if (res != DW_DLV_OK) {\n            _dwarf_error_string(dbg,error,DW_DLE_READ_ERROR,\n                \"DW_DLE_READ_ERROR: dwarf_crc32 read fails \");\n            free((unsigned char*)readbuf);\n            return DW_DLV_ERROR;\n        }\n        \n        tcrc = (unsigned int)dwarf_basic_crc32(readbuf,\n            (unsigned long)readlenu,\n            (unsigned long)init);\n        init = tcrc;\n        size_left -= readlenu;\n    }\n    \n    free((unsigned char*)readbuf);\n    memcpy(crcbuf,(void *)&tcrc,4);\n    return DW_DLV_OK;\n", "Selected Statement": "if (fd < 0)", "Function Input": {"crcbuf": {"value": null}, "dbg": {"value": "0xfd1bf0"}, "error": {"value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x100000003\n", "message": "Cannot access memory at address 0x100000003"}}}, "Variable Values Before Statement": {"fd": "int"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\ndwarf_crc32 (Dwarf_Debug dbg,unsigned char *crcbuf,\n    Dwarf_Error *error)\n{\n    \n    \n\n    \n    Dwarf_Unsigned   fsize = 0;\n    \n    Dwarf_Unsigned  readlenu = 10000;\n    Dwarf_Unsigned  size_left = 0;\n    const unsigned char *readbuf = 0;\n    unsigned int   tcrc = 0;\n    unsigned int   init = 0;\n    int            fd = -1;\n    Dwarf_Unsigned   sz = 0;\n    int            res = 0;\n\n    CHECK_DBG(dbg,error,\"dwarf_crc32()\");\n    if (!crcbuf) {\n        return DW_DLV_NO_ENTRY;\n    }\n    if (!dbg->de_owns_fd) {\n        return DW_DLV_NO_ENTRY;\n    }\n    fd = dbg->de_fd;\n    if (fd < 0) {\n        return DW_DLV_NO_ENTRY;\n    }\n    fd = dbg->de_fd;\n    if (dbg->de_filesize) {\n        fsize = (size_t)dbg->de_filesize;\n    } else {\n        res = _dwarf_seekr(fd,0,SEEK_END,&sz);\n        if (res != DW_DLV_OK) {\n            _dwarf_error_string(dbg,error,DW_DLE_SEEK_ERROR,\n                \"DW_DLE_SEEK_ERROR: dwarf_crc32 seek \"\n                \"to end fails\");\n            return DW_DLV_ERROR;\n        }\n        fsize = sz;\n    }\n    if (fsize <= (Dwarf_Unsigned)500) {\n        \n        return DW_DLV_NO_ENTRY;\n    }\n    size_left = fsize;\n    res = _dwarf_seekr(fd,0,SEEK_SET,0);\n    if (res != DW_DLV_OK) {\n        _dwarf_error_string(dbg,error,DW_DLE_SEEK_ERROR,\n            \"DW_DLE_SEEK_ERROR: dwarf_crc32 seek \"\n            \"to start fails\");\n        return DW_DLV_ERROR;\n    }\n    readbuf = (unsigned char *)malloc(readlenu);\n    if (!readbuf) {\n        _dwarf_error_string(dbg,error,DW_DLE_ALLOC_FAIL,\n            \"DW_DLE_ALLOC_FAIL: dwarf_crc32 read buffer\"\n            \" alloc fails\");\n        return DW_DLV_ERROR;\n    }\n    while (size_left > 0) {\n        if (size_left < readlenu) {\n            readlenu = size_left;\n        }\n        res = _dwarf_readr(fd,(char *)readbuf,readlenu,0);\n        if (res != DW_DLV_OK) {\n            _dwarf_error_string(dbg,error,DW_DLE_READ_ERROR,\n                \"DW_DLE_READ_ERROR: dwarf_crc32 read fails \");\n            free((unsigned char*)readbuf);\n            return DW_DLV_ERROR;\n        }\n        \n        tcrc = (unsigned int)dwarf_basic_crc32(readbuf,\n            (unsigned long)readlenu,\n            (unsigned long)init);\n        init = tcrc;\n        size_left -= readlenu;\n    }\n    \n    free((unsigned char*)readbuf);\n    memcpy(crcbuf,(void *)&tcrc,4);\n    return DW_DLV_OK;\n", "Selected Statement": "if (res != DW_DLV_OK)", "Function Input": {"crcbuf": {"value": null}, "dbg": {"value": "0xfd1bf0"}, "error": {"value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x100000003\n", "message": "Cannot access memory at address 0x100000003"}}}, "Variable Values Before Statement": {"res": "int", "DW_DLV_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    the s_size and s_avail are set to zero. */\nint\ndwarfstring_constructor(struct dwarfstring_s *g)\n{\n    g->s_data = \"\";\n    g->s_size = 0;\n    g->s_avail = 0;\n    g->s_malloc = FALSE;\n", "Selected Statement": "if (!remaining)", "Function Input": {"g": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"s_data": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffe51000 <error: Cannot access memory at address 0x7fffffffe51000>"}, "s_size": {"type_category": "unknown", "concrete_type": "size_t", "value": "36028797016885248"}, "s_avail": {"type_category": "unknown", "concrete_type": "size_t", "value": "4237742080"}, "s_malloc": {"type_category": "int", "concrete_type": "unsigned char", "value": "0 '\\000'"}}}}}, "Variable Values Before Statement": {"remaining": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    the s_size and s_avail are set to zero. */\nint\ndwarfstring_constructor(struct dwarfstring_s *g)\n{\n    g->s_data = \"\";\n    g->s_size = 0;\n    g->s_avail = 0;\n    g->s_malloc = FALSE;\n", "Selected Statement": "if (format[next] == '+')", "Function Input": {"g": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"s_data": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffe51000 <error: Cannot access memory at address 0x7fffffffe51000>"}, "s_size": {"type_category": "unknown", "concrete_type": "size_t", "value": "36028797016885248"}, "s_avail": {"type_category": "unknown", "concrete_type": "size_t", "value": "4237742080"}, "s_malloc": {"type_category": "int", "concrete_type": "unsigned char", "value": "0 '\\000'"}}}}}, "Variable Values Before Statement": {"format": "NULL", "next": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    const char *     sig_type  ,\n    Dwarf_Die  *     returned_die,\n    Dwarf_Error*     error)\n{\n    Dwarf_Bool is_type_unit = FALSE;\n    int sres = 0;\n\n    CHECK_DBG(dbg,error,\"dwarf_die_from_hash_signature()\");\n    sres = _dwarf_load_debug_info(dbg,error);\n    if (sres == DW_DLV_ERROR) {\n        return sres;\n    }\n    sres = _dwarf_load_debug_types(dbg,error);\n    if (sres == DW_DLV_ERROR) {\n        return sres;\n    }\n\n    if (!strcmp(sig_type,\"tu\")) {\n        is_type_unit = TRUE;\n    } else if (!strcmp(sig_type,\"cu\")) {\n        is_type_unit = FALSE;\n    } else {\n        _dwarf_error(dbg,error,DW_DLE_SIG_TYPE_WRONG_STRING);\n        return DW_DLV_ERROR;\n    }\n\n    if (_dwarf_file_has_debug_fission_index(dbg)) {\n        \n        int fisres = 0;\n        Dwarf_Bool is_info2 = TRUE;\n        Dwarf_Off cu_header_off = 0;\n        Dwarf_Off cu_size = 0;\n        Dwarf_Off cu_die_off = 0;\n        Dwarf_Off typeoffset = 0;\n        Dwarf_Die cudie = 0;\n        Dwarf_Die typedie = 0;\n        Dwarf_CU_Context context = 0;\n        Dwarf_Debug_Fission_Per_CU fiss;\n\n        memset(&fiss,0,sizeof(fiss));\n        fisres = dwarf_get_debugfission_for_key(dbg,hash_sig,\n            sig_type,&fiss,error);\n        if (fisres != DW_DLV_OK) {\n            return fisres;\n        }\n        \n        if (is_type_unit) {\n            \n            is_info2 = dbg->de_debug_types.dss_size?FALSE:TRUE;\n        } else {\n            is_info2 = TRUE;\n        }\n\n        cu_header_off = _dwarf_get_dwp_extra_offset(&fiss,\n            is_info2?DW_SECT_INFO:DW_SECT_TYPES,\n            &cu_size);\n\n        fisres = dwarf_get_cu_die_offset_given_cu_header_offset_b(\n            dbg,cu_header_off,\n            is_info2,\n            &cu_die_off,error);\n        if (fisres != DW_DLV_OK) {\n            return fisres;\n        }\n        fisres = dwarf_offdie_b(dbg,cu_die_off,is_info2,\n            &cudie,error);\n        if (fisres != DW_DLV_OK) {\n            return fisres;\n        }\n        if (!is_type_unit) {\n            *returned_die = cudie;\n            return DW_DLV_OK;\n        }\n        context = cudie->di_cu_context;\n        typeoffset = context->cc_signature_offset;\n        typeoffset += cu_header_off;\n        fisres = dwarf_offdie_b(dbg,typeoffset,is_info2,\n            &typedie,error);\n        if (fisres != DW_DLV_OK) {\n            dwarf_dealloc(dbg,cudie,DW_DLA_DIE);\n            return fisres;\n        }\n        *returned_die = typedie;\n        dwarf_dealloc(dbg,cudie,DW_DLA_DIE);\n        return DW_DLV_OK;\n    }\n    \n    \n    _dwarf_error(dbg,error,DW_DLE_DEBUG_FISSION_INCOMPLETE);\n    return DW_DLV_ERROR;\n", "Selected Statement": "if (version == DW_CU_VERSION4)", "Function Input": {}, "Variable Values Before Statement": {"version": "NULL", "DW_CU_VERSION4": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    const char  *key_type  ,\n    Dwarf_Debug_Fission_Per_CU *  percu_out,\n    Dwarf_Error *error)\n{\n    int sres = 0;\n    Dwarf_Unsigned percu_index = 0;\n    Dwarf_Xu_Index_Header xuhdr = 0;\n\n    CHECK_DBG(dbg,error,\"dwarf_get_debugfission_for_key()\");\n    if (!key || !key_type || !percu_out) {\n        _dwarf_error_string(0,error,DW_DLE_XU_TYPE_ARG_ERROR,\n            \"DW_DLE_XU_TYPE_ARG_ERROR: dw_key, dw_keytype, or \"\n            \"Dwarf_Debug_Fission_Per_CU pointer* to return \"\n            \"is not valid\");\n        return DW_DLV_ERROR;\n    }\n\n    sres = _dwarf_load_debug_info(dbg,error);\n    if (sres == DW_DLV_ERROR) {\n        return sres;\n    }\n    sres = _dwarf_load_debug_types(dbg,error);\n    if (sres == DW_DLV_ERROR) {\n        return sres;\n    }\n    \n    sres = _dwarf_get_xuhdr(dbg,key_type, &xuhdr,error);\n    if (sres != DW_DLV_OK) {\n        return sres;\n    }\n    \n    sres = _dwarf_search_fission_for_key(dbg,\n        xuhdr,key,&percu_index,error);\n    if (sres != DW_DLV_OK) {\n        return sres;\n    }\n    sres = transform_xu_to_dfp(xuhdr,percu_index,key,\n        key_type,percu_out,error);\n    return sres;\n", "Selected Statement": "if ( column_index >= xuhdr->gx_column_count_sections)", "Function Input": {}, "Variable Values Before Statement": {"column_index": "NULL", "xuhdr->gx_column_count_sections": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    const char  *key_type  ,\n    Dwarf_Debug_Fission_Per_CU *  percu_out,\n    Dwarf_Error *error)\n{\n    int sres = 0;\n    Dwarf_Unsigned percu_index = 0;\n    Dwarf_Xu_Index_Header xuhdr = 0;\n\n    CHECK_DBG(dbg,error,\"dwarf_get_debugfission_for_key()\");\n    if (!key || !key_type || !percu_out) {\n        _dwarf_error_string(0,error,DW_DLE_XU_TYPE_ARG_ERROR,\n            \"DW_DLE_XU_TYPE_ARG_ERROR: dw_key, dw_keytype, or \"\n            \"Dwarf_Debug_Fission_Per_CU pointer* to return \"\n            \"is not valid\");\n        return DW_DLV_ERROR;\n    }\n\n    sres = _dwarf_load_debug_info(dbg,error);\n    if (sres == DW_DLV_ERROR) {\n        return sres;\n    }\n    sres = _dwarf_load_debug_types(dbg,error);\n    if (sres == DW_DLV_ERROR) {\n        return sres;\n    }\n    \n    sres = _dwarf_get_xuhdr(dbg,key_type, &xuhdr,error);\n    if (sres != DW_DLV_OK) {\n        return sres;\n    }\n    \n    sres = _dwarf_search_fission_for_key(dbg,\n        xuhdr,key,&percu_index,error);\n    if (sres != DW_DLV_OK) {\n        return sres;\n    }\n    sres = transform_xu_to_dfp(xuhdr,percu_index,key,\n        key_type,percu_out,error);\n    return sres;\n", "Selected Statement": "if (res != DW_DLV_OK)", "Function Input": {}, "Variable Values Before Statement": {"res": "NULL", "DW_DLV_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\ndwarf_formaddr(Dwarf_Attribute attr,\n    Dwarf_Addr * return_addr, Dwarf_Error * error)\n{\n    Dwarf_Debug dbg = 0;\n    Dwarf_Addr ret_addr = 0;\n    Dwarf_CU_Context cu_context = 0;\n    Dwarf_Half attrform = 0;\n    int res = 0;\n\n    res  = get_attr_dbg(&dbg,&cu_context,attr,error);\n    if (res != DW_DLV_OK) {\n        return res;\n    }\n    attrform = attr->ar_attribute_form;\n    if (dwarf_addr_form_is_indexed(attrform)) {\n        res = _dwarf_look_in_local_and_tied(\n            attrform,\n            cu_context,\n            attr->ar_debug_ptr,\n            return_addr,\n            error);\n        return res;\n    }\n    if (attrform == DW_FORM_addr ||\n        (cu_context->cc_producer == CC_PROD_METROWERKS &&\n        attrform == DW_FORM_ref_addr)\n            \n        ) {\n        Dwarf_Small *section_end =\n            _dwarf_calculate_info_section_end_ptr(cu_context);\n\n        READ_UNALIGNED_CK(dbg, ret_addr, Dwarf_Addr,\n            attr->ar_debug_ptr,\n            cu_context->cc_address_size,\n            error,section_end);\n        *return_addr = ret_addr;\n        return DW_DLV_OK;\n    }\n    generate_form_error(dbg,error,attrform,\n        DW_DLE_ATTR_FORM_BAD,\n        \"DW_DLE_ATTR_FORM_BAD\",\n        \"dwarf_formaddr\");\n    return DW_DLV_ERROR;\n", "Selected Statement": "if (length_size == 4)", "Function Input": {}, "Variable Values Before Statement": {"length_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\ndwarf_formaddr(Dwarf_Attribute attr,\n    Dwarf_Addr * return_addr, Dwarf_Error * error)\n{\n    Dwarf_Debug dbg = 0;\n    Dwarf_Addr ret_addr = 0;\n    Dwarf_CU_Context cu_context = 0;\n    Dwarf_Half attrform = 0;\n    int res = 0;\n\n    res  = get_attr_dbg(&dbg,&cu_context,attr,error);\n    if (res != DW_DLV_OK) {\n        return res;\n    }\n    attrform = attr->ar_attribute_form;\n    if (dwarf_addr_form_is_indexed(attrform)) {\n        res = _dwarf_look_in_local_and_tied(\n            attrform,\n            cu_context,\n            attr->ar_debug_ptr,\n            return_addr,\n            error);\n        return res;\n    }\n    if (attrform == DW_FORM_addr ||\n        (cu_context->cc_producer == CC_PROD_METROWERKS &&\n        attrform == DW_FORM_ref_addr)\n            \n        ) {\n        Dwarf_Small *section_end =\n            _dwarf_calculate_info_section_end_ptr(cu_context);\n\n        READ_UNALIGNED_CK(dbg, ret_addr, Dwarf_Addr,\n            attr->ar_debug_ptr,\n            cu_context->cc_address_size,\n            error,section_end);\n        *return_addr = ret_addr;\n        return DW_DLV_OK;\n    }\n    generate_form_error(dbg,error,attrform,\n        DW_DLE_ATTR_FORM_BAD,\n        \"DW_DLE_ATTR_FORM_BAD\",\n        \"dwarf_formaddr\");\n    return DW_DLV_ERROR;\n", "Selected Statement": "if (res != DW_DLV_OK)", "Function Input": {}, "Variable Values Before Statement": {"res": "NULL", "DW_DLV_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\ndwarf_formaddr(Dwarf_Attribute attr,\n    Dwarf_Addr * return_addr, Dwarf_Error * error)\n{\n    Dwarf_Debug dbg = 0;\n    Dwarf_Addr ret_addr = 0;\n    Dwarf_CU_Context cu_context = 0;\n    Dwarf_Half attrform = 0;\n    int res = 0;\n\n    res  = get_attr_dbg(&dbg,&cu_context,attr,error);\n    if (res != DW_DLV_OK) {\n        return res;\n    }\n    attrform = attr->ar_attribute_form;\n    if (dwarf_addr_form_is_indexed(attrform)) {\n        res = _dwarf_look_in_local_and_tied(\n            attrform,\n            cu_context,\n            attr->ar_debug_ptr,\n            return_addr,\n            error);\n        return res;\n    }\n    if (attrform == DW_FORM_addr ||\n        (cu_context->cc_producer == CC_PROD_METROWERKS &&\n        attrform == DW_FORM_ref_addr)\n            \n        ) {\n        Dwarf_Small *section_end =\n            _dwarf_calculate_info_section_end_ptr(cu_context);\n\n        READ_UNALIGNED_CK(dbg, ret_addr, Dwarf_Addr,\n            attr->ar_debug_ptr,\n            cu_context->cc_address_size,\n            error,section_end);\n        *return_addr = ret_addr;\n        return DW_DLV_OK;\n    }\n    generate_form_error(dbg,error,attrform,\n        DW_DLE_ATTR_FORM_BAD,\n        \"DW_DLE_ATTR_FORM_BAD\",\n        \"dwarf_formaddr\");\n    return DW_DLV_ERROR;\n", "Selected Statement": "if (res != DW_DLV_OK)", "Function Input": {}, "Variable Values Before Statement": {"res": "int", "DW_DLV_OK": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Debug dbg,\n    Dwarf_Unsigned *rnglists_count,\n    Dwarf_Error *error)\n{\n    int res = DW_DLV_ERROR;\n    Dwarf_Rnglists_Context *cxt = 0;\n    Dwarf_Unsigned count = 0;\n\n    CHECK_DBG(dbg,error,\"dwarf_load_rnglists\");\n    if (dbg->de_rnglists_context) {\n        if (rnglists_count) {\n            *rnglists_count = dbg->de_rnglists_context_count;\n        }\n        return DW_DLV_OK;\n    }\n    if (!dbg->de_debug_rnglists.dss_size) {\n        \n        return DW_DLV_NO_ENTRY;\n    }\n    if (!dbg->de_debug_rnglists.dss_data) {\n        res = _dwarf_load_section(dbg, &dbg->de_debug_rnglists,\n            error);\n        if (res != DW_DLV_OK) {\n            return res;\n        }\n    }\n    res = internal_load_rnglists_contexts(dbg,&cxt,&count,error);\n    if (res == DW_DLV_ERROR) {\n        return res;\n    }\n    dbg->de_rnglists_context = cxt;\n    dbg->de_rnglists_context_count = count;\n    if (rnglists_count) {\n        *rnglists_count = count;\n    }\n    return DW_DLV_OK;\n", "Selected Statement": "if (rnglists_count)", "Function Input": {}, "Variable Values Before Statement": {"rnglists_count": "0"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    Dwarf_Debug dbg,\n    Dwarf_Unsigned *rnglists_count,\n    Dwarf_Error *error)\n{\n    int res = DW_DLV_ERROR;\n    Dwarf_Rnglists_Context *cxt = 0;\n    Dwarf_Unsigned count = 0;\n\n    CHECK_DBG(dbg,error,\"dwarf_load_rnglists\");\n    if (dbg->de_rnglists_context) {\n        if (rnglists_count) {\n            *rnglists_count = dbg->de_rnglists_context_count;\n        }\n        return DW_DLV_OK;\n    }\n    if (!dbg->de_debug_rnglists.dss_size) {\n        \n        return DW_DLV_NO_ENTRY;\n    }\n    if (!dbg->de_debug_rnglists.dss_data) {\n        res = _dwarf_load_section(dbg, &dbg->de_debug_rnglists,\n            error);\n        if (res != DW_DLV_OK) {\n            return res;\n        }\n    }\n    res = internal_load_rnglists_contexts(dbg,&cxt,&count,error);\n    if (res == DW_DLV_ERROR) {\n        return res;\n    }\n    dbg->de_rnglists_context = cxt;\n    dbg->de_rnglists_context_count = count;\n    if (rnglists_count) {\n        *rnglists_count = count;\n    }\n    return DW_DLV_OK;\n", "Selected Statement": "if (version != DW_CU_VERSION5)", "Function Input": {}, "Variable Values Before Statement": {"version": "NULL", "DW_CU_VERSION5": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libdwarf"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "** to signal that. So, the real value is (1xxxx) * 2^(eeee - 7 - 1) if\n** eeee != 0, and (xxxx) * 2^-7 otherwise (subnormal numbers).\n*/\nunsigned int luaO_codeparam (unsigned int p) {\n  if (p >= (cast(lu_mem, 0x1F) << (0xF - 7 - 1)) * 100u)  \n    return 0xFF;  \n  else {\n    p = (cast(l_uint32, p) * 128 + 99) / 100;  \n    if (p < 0x10)  \n      return p;  \n    else {\n      int log = luaO_ceillog2(p + 1) - 5;  \n      return ((p >> log) - 0x10) | ((log + 1) << 4);\n    }\n  }\n", "Selected Statement": "if ((e = l_str2int(s, &i)) != NULL)", "Function Input": {}, "Variable Values Before Statement": {"e": "NULL", "l_str2int": "NULL", "s": "NULL", "i": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "** to signal that. So, the real value is (1xxxx) * 2^(eeee - 7 - 1) if\n** eeee != 0, and (xxxx) * 2^-7 otherwise (subnormal numbers).\n*/\nunsigned int luaO_codeparam (unsigned int p) {\n  if (p >= (cast(lu_mem, 0x1F) << (0xF - 7 - 1)) * 100u)  \n    return 0xFF;  \n  else {\n    p = (cast(l_uint32, p) * 128 + 99) / 100;  \n    if (p < 0x10)  \n      return p;  \n    else {\n      int log = luaO_ceillog2(p + 1) - 5;  \n      return ((p >> log) - 0x10) | ((log + 1) << 4);\n    }\n  }\n", "Selected Statement": "if (x < MAX_LOBJ / 0x1F)", "Function Input": {}, "Variable Values Before Statement": {"x": "NULL", "MAX_LOBJ": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n\nint luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {\n  l_uint32 oldnCcalls = L->nCcalls;\n  struct lua_longjmp lj;\n  lj.status = LUA_OK;\n  lj.previous = L->errorJmp;  \n  L->errorJmp = &lj;\n  LUAI_TRY(L, &lj,\n    (*f)(L, ud);\n  );\n  L->errorJmp = lj.previous;  \n  L->nCcalls = oldnCcalls;\n", "Selected Statement": "if (c == LUA_SIGNATURE[0])", "Function Input": {"L": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3000000040\n", "message": "Cannot access memory at address 0x3000000040"}}}, "Variable Values Before Statement": {"c": "NULL", "LUA_SIGNATURE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n\nint luaD_rawrunprotected (lua_State *L, Pfunc f, void *ud) {\n  l_uint32 oldnCcalls = L->nCcalls;\n  struct lua_longjmp lj;\n  lj.status = LUA_OK;\n  lj.previous = L->errorJmp;  \n  L->errorJmp = &lj;\n  LUAI_TRY(L, &lj,\n    (*f)(L, ud);\n  );\n  L->errorJmp = lj.previous;  \n  L->nCcalls = oldnCcalls;\n", "Selected Statement": "if (l_unlikely(ttisnil(tm)))", "Function Input": {"L": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3000000040\n", "message": "Cannot access memory at address 0x3000000040"}}}, "Variable Values Before Statement": {"l_unlikely": "NULL", "ttisnil": "NULL", "tm": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n\nvoid *luaM_malloc_ (lua_State *L, size_t size, int tag) {\n  if (size == 0)\n    return NULL;  \n  else {\n    global_State *g = G(L);\n    void *newblock = firsttry(g, NULL, tag, size);\n    if (l_unlikely(newblock == NULL)) {\n      newblock = tryagain(L, NULL, tag, size);\n      if (newblock == NULL)\n        luaM_error(L);\n    }\n    g->totalbytes += size;\n    return newblock;\n  }\n", "Selected Statement": "if (l_unlikely(newblock == NULL && nsize > 0))", "Function Input": {"L": {"value": null}}, "Variable Values Before Statement": {"l_unlikely": "NULL", "newblock": "NULL", "nsize": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n\nvoid *luaM_malloc_ (lua_State *L, size_t size, int tag) {\n  if (size == 0)\n    return NULL;  \n  else {\n    global_State *g = G(L);\n    void *newblock = firsttry(g, NULL, tag, size);\n    if (l_unlikely(newblock == NULL)) {\n      newblock = tryagain(L, NULL, tag, size);\n      if (newblock == NULL)\n        luaM_error(L);\n    }\n    g->totalbytes += size;\n    return newblock;\n  }\n", "Selected Statement": "if (size == 0)", "Function Input": {"L": {"value": null}}, "Variable Values Before Statement": {"size": "720"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "*/\n\n\nTable *luaH_new (lua_State *L) {\n  GCObject *o = luaC_newobj(L, LUA_VTABLE, sizeof(Table));\n  Table *t = gco2t(o);\n  t->metatable = NULL;\n  t->flags = cast_byte(maskflags);  \n  t->array = NULL;\n  t->alimit = 0;\n  setnodevector(L, t, 0);\n", "Selected Statement": "if (!tagisempty(tag))", "Function Input": {}, "Variable Values Before Statement": {"tagisempty": "NULL", "tag": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "*/\n\n\nTable *luaH_new (lua_State *L) {\n  GCObject *o = luaC_newobj(L, LUA_VTABLE, sizeof(Table));\n  Table *t = gco2t(o);\n  t->metatable = NULL;\n  t->flags = cast_byte(maskflags);  \n  t->array = NULL;\n  t->alimit = 0;\n  setnodevector(L, t, 0);\n", "Selected Statement": "if (!limitequalsasize(t))", "Function Input": {}, "Variable Values Before Statement": {"limitequalsasize": "NULL", "t": {"next": null, "tt": "5 '\\005'", "marked": "8 '\\b'", "flags": "127 '\\177'", "lsizenode": "0 '\\000'", "alimit": "0", "array": null, "node": null, "metatable": null, "gclist": null}}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGCObject *luaC_newobj (lua_State *L, int tt, size_t sz) {\n", "Selected Statement": "if (traverseephemeron(g, h, dir))", "Function Input": {}, "Variable Values Before Statement": {"traverseephemeron": "NULL", "g": "NULL", "h": "NULL", "dir": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGCObject *luaC_newobj (lua_State *L, int tt, size_t sz) {\n", "Selected Statement": "if (l_unlikely(status != LUA_OK))", "Function Input": {}, "Variable Values Before Statement": {"l_unlikely": "NULL", "status": "NULL", "LUA_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid luaS_init (lua_State *L) {\n  global_State *g = G(L);\n  int i, j;\n  stringtable *tb = &G(L)->strt;\n  tb->hash = luaM_newvector(L, MINSTRTABSIZE, TString*);\n  tablerehash(tb->hash, 0, MINSTRTABSIZE);  \n  tb->size = MINSTRTABSIZE;\n  \n  g->memerrmsg = luaS_newliteral(L, MEMERRMSG);\n  luaC_fix(L, obj2gco(g->memerrmsg));  \n  for (i = 0; i < STRCACHE_N; i++)  \n    for (j = 0; j < STRCACHE_M; j++)\n      g->strcache[i][j] = g->memerrmsg;\n", "Selected Statement": "if (isdead(g, ts))", "Function Input": {}, "Variable Values Before Statement": {"isdead": "NULL", "g": {"frealloc": "0x53d5c0 <l_alloc>", "ud": null, "totalbytes": "3546", "totalobjs": "1", "GCdebt": "-3", "marked": "0", "GCmajorminor": "7364001358723691830", "strt": null, "l_registry": null, "nilvalue": null, "seed": "1737306150", "gcparams": "\" 0@PPT\"", "currentwhite": "8 '\\b'", "gcstate": "8 '\\b'", "gckind": "0 '\\000'", "gcstopem": "0 '\\000'", "gcstp": "2 '\\002'", "gcemergency": "0 '\\000'", "allgc": null, "sweepgc": null, "finobj": null, "gray": null, "grayagain": null, "weak": null, "ephemeron": null, "allweak": null, "tobefnz": null, "fixedgc": null, "survival": null, "old1": null, "reallyold": null, "firstold1": null, "finobjsur": null, "finobjold1": null, "finobjrold": null, "twups": null, "panic": null, "mainthread": null, "memerrmsg": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}", "tmname": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a1f0", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3864643865663537\n", "message": "Cannot access memory at address 0x3864643865663537"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a1f8", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3033306563393834\n", "message": "Cannot access memory at address 0x3033306563393834"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a200", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3239313266383765\n", "message": "Cannot access memory at address 0x3239313266383765"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a208", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x6438613461343639\n", "message": "Cannot access memory at address 0x6438613461343639"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a210", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3430\n", "message": "Cannot access memory at address 0x3430"}}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a220", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x230\n", "message": "Cannot access memory at address 0x230"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a228", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x50\n", "message": "Cannot access memory at address 0x50"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a230", "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"next": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a270", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x280\n", "message": "Cannot access memory at address 0x280"}}, "tt": {"type_category": "unknown", "concrete_type": "lu_byte", "value": "80 'P'"}, "marked": {"type_category": "unknown", "concrete_type": "lu_byte", "value": "0 '\\000'"}, "extra": {"type_category": "unknown", "concrete_type": "lu_byte", "value": "0 '\\000'"}, "shrlen": {"type_category": "unknown", "concrete_type": "ls_byte", "value": "0 '\\000'"}, "hash": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "u": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"lnglen": {"type_category": "unknown", "concrete_type": "size_t", "value": "16097984"}, "hnext": {"type_category": "pointer", "concrete_type": "NESTED", "value": "0xf5a2c0"}}}, "contents": {"type_category": "string", "concrete_type": "string", "value": "0x6338623138392f65 <error: Cannot access memory at address 0x6338623138392f65>"}, "falloc": {"type_category": "unknown", "concrete_type": "lua_Alloc", "value": "0x6163666137653533"}, "ud": {"type_category": "pointer", "concrete_type": "VOID"}}}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a238", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3936313731352f65\n", "message": "Cannot access memory at address 0x3936313731352f65"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a240", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x6163313037316136\n", "message": "Cannot access memory at address 0x6163313037316136"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a248", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3635643163306338\n", "message": "Cannot access memory at address 0x3635643163306338"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a250", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3736396436356530\n", "message": "Cannot access memory at address 0x3736396436356530"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a258", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3832356262323636\n", "message": "Cannot access memory at address 0x3832356262323636"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a260", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3561\n", "message": "Cannot access memory at address 0x3561"}}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "RECURSIVE", "value": "0x280"}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a278", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x50\n", "message": "Cannot access memory at address 0x50"}}, {"type_category": "pointer", "concrete_type": "RECURSIVE", "value": "0xf5a2c0"}, {"type_category": "pointer", "concrete_type": "RECURSIVE", "value": "0x6338623138392f65"}, {"type_category": "pointer", "concrete_type": "RECURSIVE", "value": "0x6163666137653533"}, {"type_category": "pointer", "concrete_type": "RECURSIVE", "value": "0x3466393730616164"}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a2a0", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x6335656636326536\n", "message": "Cannot access memory at address 0x6335656636326536"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a2a8", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3438646165333061\n", "message": "Cannot access memory at address 0x3438646165333061"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a2b0", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x6130\n", "message": "Cannot access memory at address 0x6130"}}], "mt": [{"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}, {"type_category": "pointer", "concrete_type": "NULL"}], "strcache": [{"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a300", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a308", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a310", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a318", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a320", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a328", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a330", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a338", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a340", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a348", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a350", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a358", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a360", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a368", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a370", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a378", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a380", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a388", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a390", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a398", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a3a0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a3a8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a3b0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a3b8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a3c0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a3c8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a3d0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a3d8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a3e0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a3e8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a3f0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a3f8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a400", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a408", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a410", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a418", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a420", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a428", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a430", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a438", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a440", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a448", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a450", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a458", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a460", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a468", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a470", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a478", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a480", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a488", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a490", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a498", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a4a0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a4a8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a4b0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a4b8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a4c0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a4c8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a4d0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a4d8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a4e0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a4e8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a4f0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a4f8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a500", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a508", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a510", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a518", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a520", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a528", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a530", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a538", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a540", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a548", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a550", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a558", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a560", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a568", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a570", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a578", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a580", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a588", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a590", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a598", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a5a0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a5a8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a5b0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a5b8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a5c0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a5c8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a5d0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a5d8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a5e0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a5e8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a5f0", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a5f8", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a600", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a608", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a610", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a618", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a620", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a628", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a630", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a638", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}, {"type_category": "array", "concrete_type": "ARRAY", "value": [{"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a640", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}, {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf5a648", "value": {"type_category": "struct", "concrete_type": "TString", "value": "{next = 0x0, tt = 4 '\\004', marked = 4 '\\004', extra = 0 '\\000', shrlen = 17 '\\021', hash = 1174080900, u = {lnglen = 0, hnext = 0x0}, contents = 0x756f6e6520746f6e &lt;error: Cannot access memory at address 0x756f6e6520746f6e&gt;, falloc = 0x726f6d656d206867, ud = 0x79}"}}]}], "warnf": null, "ud_warn": null}, "ts": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid luaS_init (lua_State *L) {\n  global_State *g = G(L);\n  int i, j;\n  stringtable *tb = &G(L)->strt;\n  tb->hash = luaM_newvector(L, MINSTRTABSIZE, TString*);\n  tablerehash(tb->hash, 0, MINSTRTABSIZE);  \n  tb->size = MINSTRTABSIZE;\n  \n  g->memerrmsg = luaS_newliteral(L, MEMERRMSG);\n  luaC_fix(L, obj2gco(g->memerrmsg));  \n  for (i = 0; i < STRCACHE_N; i++)  \n    for (j = 0; j < STRCACHE_M; j++)\n      g->strcache[i][j] = g->memerrmsg;\n", "Selected Statement": "if (len <= LUAI_MAXSHORTLEN)", "Function Input": {}, "Variable Values Before Statement": {"len": "NULL", "LUAI_MAXSHORTLEN": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "};\n\n\nvoid luaT_init (lua_State *L) {\n  static const char *const luaT_eventname[] = {  \n    \"__index\", \"__newindex\",\n    \"__gc\", \"__mode\", \"__len\", \"__eq\",\n    \"__add\", \"__sub\", \"__mul\", \"__mod\", \"__pow\",\n    \"__div\", \"__idiv\",\n    \"__band\", \"__bor\", \"__bxor\", \"__shl\", \"__shr\",\n    \"__unm\", \"__bnot\", \"__lt\", \"__le\",\n    \"__concat\", \"__call\", \"__close\"\n  };\n  int i;\n  for (i=0; i<TM_N; i++) {\n    G(L)->tmname[i] = luaS_new(L, luaT_eventname[i]);\n    luaC_fix(L, obj2gco(G(L)->tmname[i]));  \n  }\n", "Selected Statement": "if (callbinTM(L, p2, p1, L->top.p, TM_LT))", "Function Input": {}, "Variable Values Before Statement": {"callbinTM": "NULL", "L": "NULL", "p2": "NULL", "p1": "NULL", "L->top.p": "NULL", "TM_LT": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "};\n\n\nvoid luaT_init (lua_State *L) {\n  static const char *const luaT_eventname[] = {  \n    \"__index\", \"__newindex\",\n    \"__gc\", \"__mode\", \"__len\", \"__eq\",\n    \"__add\", \"__sub\", \"__mul\", \"__mod\", \"__pow\",\n    \"__div\", \"__idiv\",\n    \"__band\", \"__bor\", \"__bxor\", \"__shl\", \"__shr\",\n    \"__unm\", \"__bnot\", \"__lt\", \"__le\",\n    \"__concat\", \"__call\", \"__close\"\n  };\n  int i;\n  for (i=0; i<TM_N; i++) {\n    G(L)->tmname[i] = luaS_new(L, luaT_eventname[i]);\n    luaC_fix(L, obj2gco(G(L)->tmname[i]));  \n  }\n", "Selected Statement": "if (notm(tm))", "Function Input": {}, "Variable Values Before Statement": {"notm": "NULL", "tm": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n\nvoid luaX_init (lua_State *L) {\n  int i;\n  TString *e = luaS_newliteral(L, LUA_ENV);  \n  luaC_fix(L, obj2gco(e));  \n  for (i=0; i<NUM_RESERVED; i++) {\n    TString *ts = luaS_new(L, luaX_tokens[i]);\n    luaC_fix(L, obj2gco(ts));  \n    ts->extra = cast_byte(i+1);  \n  }\n", "Selected Statement": "if (luaO_str2num(luaZ_buffer(ls->buff), &obj) == 0)", "Function Input": {}, "Variable Values Before Statement": {"luaO_str2num": "NULL", "luaZ_buffer": "NULL", "ls->buff": "NULL", "obj": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n\nvoid luaX_init (lua_State *L) {\n  int i;\n  TString *e = luaS_newliteral(L, LUA_ENV);  \n  luaC_fix(L, obj2gco(e));  \n  for (i=0; i<NUM_RESERVED; i++) {\n    TString *ts = luaS_new(L, luaX_tokens[i]);\n    luaC_fix(L, obj2gco(ts));  \n    ts->extra = cast_byte(i+1);  \n  }\n", "Selected Statement": "if (check_next2(ls, expo))", "Function Input": {}, "Variable Values Before Statement": {"check_next2": "NULL", "ls": "NULL", "expo": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nextern \"C\" int\nLLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n\tFuzzedDataProvider fdp(data, size);\n\n\tlua_State *L = luaL_newstate();\n\tif (L == NULL)\n\t\treturn 0;\n\n\tauto str1 = fdp.ConsumeRandomLengthString(size);\n\tauto str2 = fdp.ConsumeRandomLengthString(size);\n\tauto str3 = fdp.ConsumeRandomLengthString(size);\n\tconst char *c_str1 = str1.c_str();\n\tconst char *c_str2 = str2.c_str();\n\tconst char *c_str3 = str3.c_str();\n\tif (strlen(c_str1) == 0 ||\n\t    strlen(c_str2) == 0 ||\n\t    strlen(c_str3) == 0) {\n\t\tlua_settop(L, 0);\n\t\tlua_close(L);\n\t\treturn -1;\n\t}\n\tint top = lua_gettop(L);\n\tluaL_gsub(L, c_str1, c_str2, c_str3);\n\t\n\tassert(lua_gettop(L) == top + 1);\n\n\tlua_settop(L, 0);\n\tlua_close(L);\n\n\treturn 0;\n", "Selected Statement": "if (L == NULL)", "Function Input": {"data": {"value": "0x1037fd0 \"\""}, "size": {"value": "6552064"}}, "Variable Values Before Statement": {"L": {"next": null, "tt": "8 '\\b'", "marked": "8 '\\b'", "status": "0 '\\000'", "allowhook": "1 '\\001'", "nci": "0", "top": null, "l_G": null, "ci": null, "stack_last": null, "stack": null, "openupval": null, "tbclist": null, "gclist": null, "twups": "{next = 0x0, tt = 8 '\\b', marked = 8 '\\b', status = 0 '\\000', allowhook = 1 '\\001', nci = 0, top = {p = 0x1038670, offset = 17008240}, l_G = 0x10380c0, ci = 0x1038058, stack_last = {p = 0x10388e0, offset = 17008864}, stack = {p = 0x1038660, offset = 17008224}, openupval = 0x0, tbclist = {p = 0x1038660, offset = 17008224}, gclist = 0x0, twups = 0x1037ff8, errorJmp = 0x0, base_ci = {func = {p = 0x1038660, offset = 17008224}, top = {p = 0x10387b0, offset = 17008560}, previous = 0x0, next = 0x0, u = {l = {savedpc = 0x0, trap = 0, nextraargs = 0}, c = {k = 0x0, old_errfunc = 0, ctx = 0}}, u2 = {funcidx = 0, nyield = 0, nres = 0, transferinfo = {ftransfer = 0, ntransfer = 0}}, nresults = 0, callstatus = 2}, hook = 0x0, errfunc = 0, nCcalls = 65536, oldpc = 0, basehookcount = 0, hookcount = 0, hookmask = 0}", "errorJmp": null, "base_ci": "{func = {p = 0x1038660, offset = 17008224}, top = {p = 0x10387b0, offset = 17008560}, previous = 0x0, next = 0x0, u = {l = {savedpc = 0x0, trap = 0, nextraargs = 0}, c = {k = 0x0, old_errfunc = 0, ctx = 0}}, u2 = {funcidx = 0, nyield = 0, nres = 0, transferinfo = {ftransfer = 0, ntransfer = 0}}, nresults = 0, callstatus = 2}", "hook": null, "errfunc": "0", "nCcalls": "65536", "oldpc": "0", "basehookcount": "0", "hookcount": "0", "hookmask": "0"}}, "Value After Statement Execution": "No", "Project Information": "lua"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"sndfile_fuzz_header.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n{   \n    if (size == 0)\n       return 0 ;\n\n    const uint8_t decider = *data ;\n    data += 1 ;\n    size -= 1 ;\n\n    SF_INFO sndfile_info ;\n    VIO_DATA vio_data ;\n    SF_VIRTUAL_IO vio ;\n    SNDFILE *sndfile = NULL ;\n    int err = sf_init_file(data, size, &sndfile, &vio_data, &vio, &sndfile_info) ;\n    if (err)\n      goto EXIT_LABEL ;\n\n    \n    switch (decider % 3)\n    {   case 0  :\n                {\n                  short* read_buffer = NULL ;\n                  read_buffer = (short*)malloc(sizeof(short) * size);\n                  if (read_buffer == NULL)\n                    abort() ;\n\n                  while (sf_read_short(sndfile, read_buffer, size))\n                  {\n                    \n                  }\n                  free(read_buffer) ;\n                }\n                break ;\n        case 1  :\n                {\n                  int* read_buffer = NULL ;\n                  read_buffer = (int*)malloc(sizeof(int) * size) ;\n                  if (read_buffer == NULL)\n                    abort() ;\n\n                  while (sf_read_int(sndfile, read_buffer, size))\n                  {\n                    \n                  }\n                  free(read_buffer) ;\n                }\n                break ;\n        case 2  :\n                {\n                  double* read_buffer = NULL ;\n                  read_buffer = (double*)malloc(sizeof(double) * size) ;\n                  if (read_buffer == NULL)\n                    abort() ;\n\n                  while (sf_read_double(sndfile, read_buffer, size))\n                  {\n                    \n                  }\n                  free(read_buffer) ;\n                }\n                break ;\n        default :\n                break ;\n                } ;\n\n  EXIT_LABEL:\n    if (sndfile != NULL)\n      sf_close(sndfile);\n\n    return 0 ;\n", "Selected Statement": "if (err)", "Function Input": {"data": {"value": "0x105a040 \"\""}, "size": {"value": "6682112"}}, "Variable Values Before Statement": {"err": "int"}, "Value After Statement Execution": "No", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"sndfile_fuzz_header.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n{   \n    if (size == 0)\n       return 0 ;\n\n    const uint8_t decider = *data ;\n    data += 1 ;\n    size -= 1 ;\n\n    SF_INFO sndfile_info ;\n    VIO_DATA vio_data ;\n    SF_VIRTUAL_IO vio ;\n    SNDFILE *sndfile = NULL ;\n    int err = sf_init_file(data, size, &sndfile, &vio_data, &vio, &sndfile_info) ;\n    if (err)\n      goto EXIT_LABEL ;\n\n    \n    switch (decider % 3)\n    {   case 0  :\n                {\n                  short* read_buffer = NULL ;\n                  read_buffer = (short*)malloc(sizeof(short) * size);\n                  if (read_buffer == NULL)\n                    abort() ;\n\n                  while (sf_read_short(sndfile, read_buffer, size))\n                  {\n                    \n                  }\n                  free(read_buffer) ;\n                }\n                break ;\n        case 1  :\n                {\n                  int* read_buffer = NULL ;\n                  read_buffer = (int*)malloc(sizeof(int) * size) ;\n                  if (read_buffer == NULL)\n                    abort() ;\n\n                  while (sf_read_int(sndfile, read_buffer, size))\n                  {\n                    \n                  }\n                  free(read_buffer) ;\n                }\n                break ;\n        case 2  :\n                {\n                  double* read_buffer = NULL ;\n                  read_buffer = (double*)malloc(sizeof(double) * size) ;\n                  if (read_buffer == NULL)\n                    abort() ;\n\n                  while (sf_read_double(sndfile, read_buffer, size))\n                  {\n                    \n                  }\n                  free(read_buffer) ;\n                }\n                break ;\n        default :\n                break ;\n                } ;\n\n  EXIT_LABEL:\n    if (sndfile != NULL)\n      sf_close(sndfile);\n\n    return 0 ;\n", "Selected Statement": "if (read_buffer == NULL)", "Function Input": {"data": {"value": "0x105a040 \"\""}, "size": {"value": "6682112"}}, "Variable Values Before Statement": {"read_buffer": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"sndfile_fuzz_header.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n{   \n    if (size == 0)\n       return 0 ;\n\n    const uint8_t decider = *data ;\n    data += 1 ;\n    size -= 1 ;\n\n    SF_INFO sndfile_info ;\n    VIO_DATA vio_data ;\n    SF_VIRTUAL_IO vio ;\n    SNDFILE *sndfile = NULL ;\n    int err = sf_init_file(data, size, &sndfile, &vio_data, &vio, &sndfile_info) ;\n    if (err)\n      goto EXIT_LABEL ;\n\n    \n    switch (decider % 3)\n    {   case 0  :\n                {\n                  short* read_buffer = NULL ;\n                  read_buffer = (short*)malloc(sizeof(short) * size);\n                  if (read_buffer == NULL)\n                    abort() ;\n\n                  while (sf_read_short(sndfile, read_buffer, size))\n                  {\n                    \n                  }\n                  free(read_buffer) ;\n                }\n                break ;\n        case 1  :\n                {\n                  int* read_buffer = NULL ;\n                  read_buffer = (int*)malloc(sizeof(int) * size) ;\n                  if (read_buffer == NULL)\n                    abort() ;\n\n                  while (sf_read_int(sndfile, read_buffer, size))\n                  {\n                    \n                  }\n                  free(read_buffer) ;\n                }\n                break ;\n        case 2  :\n                {\n                  double* read_buffer = NULL ;\n                  read_buffer = (double*)malloc(sizeof(double) * size) ;\n                  if (read_buffer == NULL)\n                    abort() ;\n\n                  while (sf_read_double(sndfile, read_buffer, size))\n                  {\n                    \n                  }\n                  free(read_buffer) ;\n                }\n                break ;\n        default :\n                break ;\n                } ;\n\n  EXIT_LABEL:\n    if (sndfile != NULL)\n      sf_close(sndfile);\n\n    return 0 ;\n", "Selected Statement": "if (size == 0)", "Function Input": {"data": {"value": "0x105a040 \"\""}, "size": {"value": "6682112"}}, "Variable Values Before Statement": {"size": "0"}, "Value After Statement Execution": "Yes", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                SNDFILE **sndfile, \n                VIO_DATA *vio_data, \n                SF_VIRTUAL_IO *vio, SF_INFO *sndfile_info)\n{\n   \n   vio->get_filelen = vfget_filelen ;\n   vio->seek = vfseek ;\n   vio->read = vfread ;\n   vio->write = vfwrite ;\n   vio->tell = vftell ;\n\n   \n   vio_data->data = data ;\n   vio_data->length = size ;\n   vio_data->offset = 0 ;\n\n   memset(sndfile_info, 0, sizeof(SF_INFO)) ;\n\n   \n   *sndfile = sf_open_virtual(vio, SFM_READ, sndfile_info, vio_data) ;\n\n   if (sndfile_info->channels == 0)\n\t\t return -1 ;\n\n   if (sndfile_info->channels > 1024 * 1024)\n\t\t return -1 ;\n\n   return 0;\n", "Selected Statement": "if (vf->offset + count > vf->length)", "Function Input": {}, "Variable Values Before Statement": {"vf->offset": "NULL", "count": "NULL", "vf->length": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                SNDFILE **sndfile, \n                VIO_DATA *vio_data, \n                SF_VIRTUAL_IO *vio, SF_INFO *sndfile_info)\n{\n   \n   vio->get_filelen = vfget_filelen ;\n   vio->seek = vfseek ;\n   vio->read = vfread ;\n   vio->write = vfwrite ;\n   vio->tell = vftell ;\n\n   \n   vio_data->data = data ;\n   vio_data->length = size ;\n   vio_data->offset = 0 ;\n\n   memset(sndfile_info, 0, sizeof(SF_INFO)) ;\n\n   \n   *sndfile = sf_open_virtual(vio, SFM_READ, sndfile_info, vio_data) ;\n\n   if (sndfile_info->channels == 0)\n\t\t return -1 ;\n\n   if (sndfile_info->channels > 1024 * 1024)\n\t\t return -1 ;\n\n   return 0;\n", "Selected Statement": "if (sndfile_info->channels == 0)", "Function Input": {}, "Variable Values Before Statement": {"sndfile_info->channels": "0"}, "Value After Statement Execution": "Yes", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                SNDFILE **sndfile, \n                VIO_DATA *vio_data, \n                SF_VIRTUAL_IO *vio, SF_INFO *sndfile_info)\n{\n   \n   vio->get_filelen = vfget_filelen ;\n   vio->seek = vfseek ;\n   vio->read = vfread ;\n   vio->write = vfwrite ;\n   vio->tell = vftell ;\n\n   \n   vio_data->data = data ;\n   vio_data->length = size ;\n   vio_data->offset = 0 ;\n\n   memset(sndfile_info, 0, sizeof(SF_INFO)) ;\n\n   \n   *sndfile = sf_open_virtual(vio, SFM_READ, sndfile_info, vio_data) ;\n\n   if (sndfile_info->channels == 0)\n\t\t return -1 ;\n\n   if (sndfile_info->channels > 1024 * 1024)\n\t\t return -1 ;\n\n   return 0;\n", "Selected Statement": "if (sndfile_info->channels > 1024 * 1024)", "Function Input": {}, "Variable Values Before Statement": {"sndfile_info->channels": "0"}, "Value After Statement Execution": "No", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nSNDFILE*\nsf_open_virtual\t(SF_VIRTUAL_IO *sfvirtual, int mode, SF_INFO *sfinfo, void *user_data)\n{\tSF_PRIVATE \t*psf ;\n\n\t\n\tif (sfvirtual->get_filelen == NULL)\n\t{\tsf_errno = SFE_BAD_VIRTUAL_IO ;\n\t\tsnprintf (sf_parselog, sizeof (sf_parselog), \"Bad vio_get_filelen in SF_VIRTUAL_IO struct.\\n\") ;\n\t\treturn NULL ;\n\t\t} ;\n\n\tif ((sfvirtual->seek == NULL || sfvirtual->tell == NULL) && sfinfo->seekable)\n\t{\tsf_errno = SFE_BAD_VIRTUAL_IO ;\n\t\tsnprintf (sf_parselog, sizeof (sf_parselog), \"Bad vio_seek / vio_tell in SF_VIRTUAL_IO struct.\\n\") ;\n\t\treturn NULL ;\n\t\t} ;\n\n\tif ((mode == SFM_READ || mode == SFM_RDWR) && sfvirtual->read == NULL)\n\t{\tsf_errno = SFE_BAD_VIRTUAL_IO ;\n\t\tsnprintf (sf_parselog, sizeof (sf_parselog), \"Bad vio_read in SF_VIRTUAL_IO struct.\\n\") ;\n\t\treturn NULL ;\n\t\t} ;\n\n\tif ((mode == SFM_WRITE || mode == SFM_RDWR) && sfvirtual->write == NULL)\n\t{\tsf_errno = SFE_BAD_VIRTUAL_IO ;\n\t\tsnprintf (sf_parselog, sizeof (sf_parselog), \"Bad vio_write in SF_VIRTUAL_IO struct.\\n\") ;\n\t\treturn NULL ;\n\t\t} ;\n\n\tif ((psf = psf_allocate ()) == NULL)\n\t{\tsf_errno = SFE_MALLOC_FAILED ;\n\t\treturn\tNULL ;\n\t\t} ;\n\n\tpsf_init_files (psf) ;\n\n\tpsf->virtual_io = SF_TRUE ;\n\tpsf->vio = *sfvirtual ;\n\tpsf->vio_user_data = user_data ;\n\n\tpsf->file.mode = mode ;\n\n\treturn psf_open_file (psf, sfinfo) ;\n", "Selected Statement": "if (psf->seek (psf, SFM_READ, psf->read_current) < 0)", "Function Input": {}, "Variable Values Before Statement": {"psf->seek": "{sf_count_t (struct sf_private_tag *, int, sf_count_t)} 0x52b1a0 <psf_default_seek>", "psf": {"file": null, "rsrc": null, "syserrparselog": null, "header": null, "rwf_endian": "268435456", "strings": null, "Magick": "305447134", "unique_id": "1590466776", "error": "8", "endian": "0", "data_endswap": "0", "float_int_mult": "0", "float_max": "-1", "scale_int_float": "0", "is_pipe": "0", "pipeoffset": "0", "add_clipping": "0", "sf": null, "have_written": "0", "peak_info": null, "cues": null, "loop_info": null, "instrument": null, "broadcast_16k": null, "cart_16k": null, "channel_map": null, "filelength": "0", "fileoffset": "0", "rsrclength": "0", "dataoffset": "-1", "datalength": "-1", "dataend": "0", "blockwidth": "0", "bytewidth": "0", "dither": null, "interleave": null, "last_op": "16", "read_current": "-1", "write_current": "-1", "container_data": null, "codec_data": null, "write_dither": null, "read_dither": null, "norm_double": "1", "norm_float": "1", "auto_header": "0", "ieee_replace": "0", "read_short": null, "read_int": null, "read_float": null, "read_double": null, "write_short": null, "write_int": null, "write_float": null, "write_double": null, "seek": "{sf_count_t (struct sf_private_tag *, int, sf_count_t)} 0x52b1a0 <psf_default_seek>", "write_header": null, "command": null, "byterate": null, "codec_close": null, "container_close": null, "format_desc": null, "virtual_io": "1", "vio": null, "vio_user_data": null, "iterator": null, "rchunks": null, "wchunks": null, "set_chunk": null, "next_chunk_iterator": null, "get_chunk_size": null, "get_chunk_data": null, "cpu_flags": "0", "id3_header": null}, "SFM_READ": "NULL", "psf->read_current": "-1"}, "Value After Statement Execution": "No", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nSNDFILE*\nsf_open_virtual\t(SF_VIRTUAL_IO *sfvirtual, int mode, SF_INFO *sfinfo, void *user_data)\n{\tSF_PRIVATE \t*psf ;\n\n\t\n\tif (sfvirtual->get_filelen == NULL)\n\t{\tsf_errno = SFE_BAD_VIRTUAL_IO ;\n\t\tsnprintf (sf_parselog, sizeof (sf_parselog), \"Bad vio_get_filelen in SF_VIRTUAL_IO struct.\\n\") ;\n\t\treturn NULL ;\n\t\t} ;\n\n\tif ((sfvirtual->seek == NULL || sfvirtual->tell == NULL) && sfinfo->seekable)\n\t{\tsf_errno = SFE_BAD_VIRTUAL_IO ;\n\t\tsnprintf (sf_parselog, sizeof (sf_parselog), \"Bad vio_seek / vio_tell in SF_VIRTUAL_IO struct.\\n\") ;\n\t\treturn NULL ;\n\t\t} ;\n\n\tif ((mode == SFM_READ || mode == SFM_RDWR) && sfvirtual->read == NULL)\n\t{\tsf_errno = SFE_BAD_VIRTUAL_IO ;\n\t\tsnprintf (sf_parselog, sizeof (sf_parselog), \"Bad vio_read in SF_VIRTUAL_IO struct.\\n\") ;\n\t\treturn NULL ;\n\t\t} ;\n\n\tif ((mode == SFM_WRITE || mode == SFM_RDWR) && sfvirtual->write == NULL)\n\t{\tsf_errno = SFE_BAD_VIRTUAL_IO ;\n\t\tsnprintf (sf_parselog, sizeof (sf_parselog), \"Bad vio_write in SF_VIRTUAL_IO struct.\\n\") ;\n\t\treturn NULL ;\n\t\t} ;\n\n\tif ((psf = psf_allocate ()) == NULL)\n\t{\tsf_errno = SFE_MALLOC_FAILED ;\n\t\treturn\tNULL ;\n\t\t} ;\n\n\tpsf_init_files (psf) ;\n\n\tpsf->virtual_io = SF_TRUE ;\n\tpsf->vio = *sfvirtual ;\n\tpsf->vio_user_data = user_data ;\n\n\tpsf->file.mode = mode ;\n\n\treturn psf_open_file (psf, sfinfo) ;\n", "Selected Statement": "if ((b)->Magick != SNDFILE_MAGICK)", "Function Input": {}, "Variable Values Before Statement": {"(b)->Magick": "NULL", "SNDFILE_MAGICK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nSF_PRIVATE *\npsf_allocate (void)\n{\tSF_PRIVATE * psf ;\n\n\tif ((psf = calloc (1, sizeof (SF_PRIVATE))) == NULL)\n\t\treturn\tNULL ;\n\n\tif ((psf->header.ptr = calloc (1, INITIAL_HEADER_SIZE)) == NULL)\n\t{\tfree (psf) ;\n\t\treturn\tNULL ;\n\t\t} ;\n\tpsf->header.len = INITIAL_HEADER_SIZE ;\n\n\treturn psf ;\n", "Selected Statement": "if (psf->rwf_endian == SF_ENDIAN_BIG)", "Function Input": {"psf": {"value": null}}, "Variable Values Before Statement": {"psf->rwf_endian": "0", "SF_ENDIAN_BIG": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nSF_PRIVATE *\npsf_allocate (void)\n{\tSF_PRIVATE * psf ;\n\n\tif ((psf = calloc (1, sizeof (SF_PRIVATE))) == NULL)\n\t\treturn\tNULL ;\n\n\tif ((psf->header.ptr = calloc (1, INITIAL_HEADER_SIZE)) == NULL)\n\t{\tfree (psf) ;\n\t\treturn\tNULL ;\n\t\t} ;\n\tpsf->header.len = INITIAL_HEADER_SIZE ;\n\n\treturn psf ;\n", "Selected Statement": "if (left_align == SF_FALSE)", "Function Input": {"psf": {"value": null}}, "Variable Values Before Statement": {"left_align": "NULL", "SF_FALSE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"sndfile_fuzz_header.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n{  VIO_DATA vio_data ;\n   SF_VIRTUAL_IO vio ;\n   SF_INFO sndfile_info ;\n   SNDFILE *sndfile = NULL ;\n   float* read_buffer = NULL ;\n\n   int err = sf_init_file(data, size, &sndfile, &vio_data, &vio, &sndfile_info) ;\n   if (err)\n     goto EXIT_LABEL ;\n\n   \n   read_buffer = (float*)malloc(sizeof(float) * sndfile_info.channels);\n   if (read_buffer == NULL)\n     abort() ;\n\n   while (sf_readf_float(sndfile, read_buffer, 1))\n   {\n     \n   }\n\nEXIT_LABEL:\n\n   if (sndfile != NULL)\n     sf_close(sndfile) ;\n\n   free(read_buffer) ;\n\n", "Selected Statement": "if (err)", "Function Input": {"data": {"value": "0x1058b40 \"0\\220\\005\\001\""}, "size": {"value": "17145920"}}, "Variable Values Before Statement": {"err": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"sndfile_fuzz_header.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n{  VIO_DATA vio_data ;\n   SF_VIRTUAL_IO vio ;\n   SF_INFO sndfile_info ;\n   SNDFILE *sndfile = NULL ;\n   float* read_buffer = NULL ;\n\n   int err = sf_init_file(data, size, &sndfile, &vio_data, &vio, &sndfile_info) ;\n   if (err)\n     goto EXIT_LABEL ;\n\n   \n   read_buffer = (float*)malloc(sizeof(float) * sndfile_info.channels);\n   if (read_buffer == NULL)\n     abort() ;\n\n   while (sf_readf_float(sndfile, read_buffer, 1))\n   {\n     \n   }\n\nEXIT_LABEL:\n\n   if (sndfile != NULL)\n     sf_close(sndfile) ;\n\n   free(read_buffer) ;\n\n", "Selected Statement": "if (sndfile != NULL)", "Function Input": {"data": {"value": "0x1058b40 \"0\\220\\005\\001\""}, "size": {"value": "17145920"}}, "Variable Values Before Statement": {"sndfile": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"sndfile_fuzz_header.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n{  VIO_DATA vio_data ;\n   SF_VIRTUAL_IO vio ;\n   SF_INFO sndfile_info ;\n   SNDFILE *sndfile = NULL ;\n   float* read_buffer = NULL ;\n\n   int err = sf_init_file(data, size, &sndfile, &vio_data, &vio, &sndfile_info) ;\n   if (err)\n     goto EXIT_LABEL ;\n\n   \n   read_buffer = (float*)malloc(sizeof(float) * sndfile_info.channels);\n   if (read_buffer == NULL)\n     abort() ;\n\n   while (sf_readf_float(sndfile, read_buffer, 1))\n   {\n     \n   }\n\nEXIT_LABEL:\n\n   if (sndfile != NULL)\n     sf_close(sndfile) ;\n\n   free(read_buffer) ;\n\n", "Selected Statement": "if (read_buffer == NULL)", "Function Input": {"data": {"value": "0x1058b40 \"0\\220\\005\\001\""}, "size": {"value": "17145920"}}, "Variable Values Before Statement": {"read_buffer": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libsndfile"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nmz_ulong mz_compressBound(mz_ulong source_len)\n{\n", "Selected Statement": "if (d->m_saved_match_len)", "Function Input": {}, "Variable Values Before Statement": {"d->m_saved_match_len": "NULL"}, "Value After Statement Execution": "No", "Project Information": "miniz"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nmz_ulong mz_compressBound(mz_ulong source_len)\n{\n", "Selected Statement": "if ((pZip->m_archive_size + MZ_ZIP_CENTRAL_DIR_HEADER_SIZE + MZ_ZIP_LOCAL_DIR_HEADER_SIZE) > MZ_UINT32_MAX)", "Function Input": {}, "Variable Values Before Statement": {"pZip->m_archive_size": "NULL", "MZ_ZIP_CENTRAL_DIR_HEADER_SIZE": "NULL", "MZ_ZIP_LOCAL_DIR_HEADER_SIZE": "NULL", "MZ_UINT32_MAX": "NULL"}, "Value After Statement Execution": "No", "Project Information": "miniz"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static void check_compress_level(uint8_t *compr, size_t comprLen,\n                                 uint8_t *uncompr, size_t uncomprLen,\n                                 int level)\n{\n", "Selected Statement": "if (size < 1 || size > kMaxSize)", "Function Input": {"compr": {"value": "0xf78060 \"\\200\""}, "comprLen": {"value": "140737488346720"}, "level": {"value": "32767"}, "uncompr": {"value": "0x1 <error: Cannot access memory at address 0x1>"}, "uncomprLen": {"value": "140737488346592"}}, "Variable Values Before Statement": {"size": "NULL", "kMaxSize": "NULL"}, "Value After Statement Execution": "No", "Project Information": "miniz"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid test_deflate(unsigned char *compr, size_t comprLen)\n{\n    z_stream c_stream; \n    int err;\n    unsigned long len = dataLen;\n\n    c_stream.zalloc = zalloc;\n    c_stream.zfree = zfree;\n    c_stream.opaque = NULL;\n\n", "Selected Statement": "if (err == Z_STREAM_END)", "Function Input": {"compr": {"value": "0xf77f80 \"=\""}, "comprLen": {"value": "140737488346736"}}, "Variable Values Before Statement": {"err": "int", "Z_STREAM_END": "NULL"}, "Value After Statement Execution": "No", "Project Information": "miniz"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid test_deflate(unsigned char *compr, size_t comprLen)\n{\n    z_stream c_stream; \n    int err;\n    unsigned long len = dataLen;\n\n    c_stream.zalloc = zalloc;\n    c_stream.zfree = zfree;\n    c_stream.opaque = NULL;\n\n", "Selected Statement": "if (size < 1 || size > kMaxSize)", "Function Input": {"compr": {"value": "0xf77f80 \"=\""}, "comprLen": {"value": "140737488346736"}}, "Variable Values Before Statement": {"size": "NULL", "kMaxSize": "NULL"}, "Value After Statement Execution": "No", "Project Information": "miniz"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid test_large_deflate(unsigned char *compr, size_t comprLen,\n                        unsigned char *uncompr, size_t uncomprLen)\n{\n    z_stream c_stream; \n    int err;\n\n    c_stream.zalloc = zalloc;\n    c_stream.zfree = zfree;\n    c_stream.opaque = NULL;\n\n", "Selected Statement": "if (err != Z_STREAM_END)", "Function Input": {"compr": {"value": "0xf77f80 \"\\n\""}, "comprLen": {"value": "140737488346736"}, "uncompr": {"value": "0x1 <error: Cannot access memory at address 0x1>"}, "uncomprLen": {"value": "16325344"}}, "Variable Values Before Statement": {"err": "int", "Z_STREAM_END": "NULL"}, "Value After Statement Execution": "No", "Project Information": "miniz"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid test_large_deflate(unsigned char *compr, size_t comprLen,\n                        unsigned char *uncompr, size_t uncomprLen)\n{\n    z_stream c_stream; \n    int err;\n\n    c_stream.zalloc = zalloc;\n    c_stream.zfree = zfree;\n    c_stream.opaque = NULL;\n\n", "Selected Statement": "if (size < 1 || size > kMaxSize)", "Function Input": {"compr": {"value": "0xf77f80 \"\\n\""}, "comprLen": {"value": "140737488346736"}, "uncompr": {"value": "0x1 <error: Cannot access memory at address 0x1>"}, "uncomprLen": {"value": "16325344"}}, "Variable Values Before Statement": {"size": "NULL", "kMaxSize": "NULL"}, "Value After Statement Execution": "No", "Project Information": "miniz"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid test_flush(unsigned char *compr, size_t *comprLen)\n{\n    z_stream c_stream; \n    int err;\n    unsigned int len = dataLen;\n\n    c_stream.zalloc = zalloc;\n    c_stream.zfree = zfree;\n    c_stream.opaque = NULL;\n\n", "Selected Statement": "if (err != Z_OK)", "Function Input": {"compr": {"value": "0xf77f80 \"\\a\""}, "comprLen": {"value": {"type_category": "unknown", "concrete_type": "size_t", "value": "140737488346800"}}}, "Variable Values Before Statement": {"err": "NULL", "Z_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "miniz"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid test_flush(unsigned char *compr, size_t *comprLen)\n{\n    z_stream c_stream; \n    int err;\n    unsigned int len = dataLen;\n\n    c_stream.zalloc = zalloc;\n    c_stream.zfree = zfree;\n    c_stream.opaque = NULL;\n\n", "Selected Statement": "if (err != Z_STREAM_END)", "Function Input": {"compr": {"value": "0xf77f80 \"\\a\""}, "comprLen": {"value": {"type_category": "unknown", "concrete_type": "size_t", "value": "140737488346800"}}}, "Variable Values Before Statement": {"err": "int", "Z_STREAM_END": "NULL"}, "Value After Statement Execution": "No", "Project Information": "miniz"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                return be32toh(message->header->serial);\n}\n\n", "Selected Statement": "if (message)", "Function Input": {}, "Variable Values Before Statement": {"message": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dbus-broker"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                return be32toh(message->header->serial);\n}\n\n", "Selected Statement": "if (_c_likely_(!message->big_endian))", "Function Input": {}, "Variable Values Before Statement": {"_c_likely_": "NULL", "message->big_endian": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dbus-broker"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic logcallback logCallbackFunction = defaultLogCallback;\nvoid EXPORT_CALL\nlou_registerLogCallback(logcallback callback) {\n\tif (callback == NULL)\n\t\tlogCallbackFunction = defaultLogCallback;\n\telse\n\t\tlogCallbackFunction = callback;\n", "Selected Statement": "if (format == NULL)", "Function Input": {}, "Variable Values Before Statement": {"format": "NULL"}, "Value After Statement Execution": "No", "Project Information": "liblouis"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic logcallback logCallbackFunction = defaultLogCallback;\nvoid EXPORT_CALL\nlou_registerLogCallback(logcallback callback) {\n\tif (callback == NULL)\n\t\tlogCallbackFunction = defaultLogCallback;\n\telse\n\t\tlogCallbackFunction = callback;\n", "Selected Statement": "if (fileName == NULL || fileName[0] == 0 || strlen(fileName) >= FILENAMESIZE)", "Function Input": {}, "Variable Values Before Statement": {"fileName": "NULL", "strlen": "NULL", "FILENAMESIZE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "liblouis"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nextern \"C\" int\nLLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n\tchar new_file[256];\n\tsprintf(new_file, \"/tmp/libfuzzer.uti\");\n\n\tFILE *fp = fopen(new_file, \"wb\");\n\tif (!fp)\n\t\treturn 0;\n\tfwrite(data, size, 1, fp);\n\tfclose(fp);\n\n\tchar *table = \"empty.ctb\";\n\tlou_compileString(table, \"include /tmp/libfuzzer.uti\");\n\n\tlou_free();\n\tstd::__fs::filesystem::remove_all(\"/tmp/libfuzzer.uti\");\n\n\treturn 0;\n", "Selected Statement": "if (!fp)", "Function Input": {"data": {"value": "0xfc2f80 \"\""}, "size": {"value": "6017536"}}, "Variable Values Before Statement": {"fp": "NULL"}, "Value After Statement Execution": "No", "Project Information": "liblouis"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint EXPORT_CALL\nlou_compileString(const char *tableList, const char *inString) {\n\tTranslationTableHeader *table;\n\tDisplayTableHeader *displayTable;\n\tgetTable(tableList, tableList, &table, &displayTable);\n\tif (!table) return 0;\n\tif (!compileString(inString, &table, &displayTable)) return 0;\n\treturn 1;\n", "Selected Statement": "if (character->definitionRule)", "Function Input": {}, "Variable Values Before Statement": {"character->definitionRule": "NULL"}, "Value After Statement Execution": "No", "Project Information": "liblouis"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint EXPORT_CALL\nlou_compileString(const char *tableList, const char *inString) {\n\tTranslationTableHeader *table;\n\tDisplayTableHeader *displayTable;\n\tgetTable(tableList, tableList, &table, &displayTable);\n\tif (!table) return 0;\n\tif (!compileString(inString, &table, &displayTable)) return 0;\n\treturn 1;\n", "Selected Statement": "if (!table)", "Function Input": {}, "Variable Values Before Statement": {"table": {"tableSize": "63248", "bytesUsed": "31808", "characterClasses": null, "nextCharacterClassAttribute": "0", "nextNumberedCharacterClassAttribute": "0", "ruleNames": null, "numberedAttributes": [{"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}], "usesAttributeOrClass": "0", "sourceFiles": [{"type_category": "string", "concrete_type": "string", "value": "0xfd4070 \"empty.ctb\""}, {"type_category": "string", "concrete_type": "string", "value": "0xfc2ef0 \"/tmp/libfuzzer.uti\""}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}], "finalized": "0", "capsNoCont": "0", "numPasses": "1", "corrections": "0", "syllables": "0", "usesSequences": "0", "usesNumericMode": "0", "hasCapsModeChars": "0", "undefined": "0", "letterSign": "0", "numberSign": "0", "noContractSign": "0", "noNumberSign": "0", "seqPatterns": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}], "emphClassNames": [{"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}], "emphClasses": [{"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}], "modes": [{"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}], "seqPatternsCount": "0", "seqAfterExpression": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}], "seqAfterExpressionLength": "0", "emphRules": [{"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "4"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "4"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "4"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}], "begComp": "0", "endComp": "0", "hyphenStatesArray": "0", "noLetsignBefore": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}], "noLetsignBeforeCount": "0", "noLetsign": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}], "noLetsignCount": "0", "noLetsignAfter": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}], "noLetsignAfterCount": "0", "emphModeChars": [{"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}], "noEmphChars": [{"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}], "characters": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "1"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "dots": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "8"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "forPassRules": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "backPassRules": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "forRules": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "backRules": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "ruleArea": [{"type_category": "unknown", "concrete_type": "TranslationTableData", "value": "0"}]}}, "Value After Statement Execution": "Yes", "Project Information": "liblouis"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint EXPORT_CALL\nlou_compileString(const char *tableList, const char *inString) {\n\tTranslationTableHeader *table;\n\tDisplayTableHeader *displayTable;\n\tgetTable(tableList, tableList, &table, &displayTable);\n\tif (!table) return 0;\n\tif (!compileString(inString, &table, &displayTable)) return 0;\n\treturn 1;\n", "Selected Statement": "if (!compileString(inString, &table, &displayTable))", "Function Input": {}, "Variable Values Before Statement": {"compileString": "NULL", "inString": "0x54c963 \"include /tmp/libfuzzer.uti\"", "table": {"tableSize": "63248", "bytesUsed": "31808", "characterClasses": null, "nextCharacterClassAttribute": "0", "nextNumberedCharacterClassAttribute": "0", "ruleNames": null, "numberedAttributes": [{"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}], "usesAttributeOrClass": "0", "sourceFiles": [{"type_category": "string", "concrete_type": "string", "value": "0xfd4070 \"empty.ctb\""}, {"type_category": "string", "concrete_type": "string", "value": "0xfc2ef0 \"/tmp/libfuzzer.uti\""}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}], "finalized": "0", "capsNoCont": "0", "numPasses": "1", "corrections": "0", "syllables": "0", "usesSequences": "0", "usesNumericMode": "0", "hasCapsModeChars": "0", "undefined": "0", "letterSign": "0", "numberSign": "0", "noContractSign": "0", "noNumberSign": "0", "seqPatterns": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}], "emphClassNames": [{"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}, {"type_category": "string", "concrete_type": "NULL"}], "emphClasses": [{"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}], "modes": [{"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}, {"type_category": "struct", "concrete_type": "STRUCT", "value": {"typeform": {"type_category": "unknown", "concrete_type": "formtype", "value": "0"}, "mode": {"type_category": "unknown", "concrete_type": "TranslationTableCharacterAttributes", "value": "0"}, "value": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "rule": {"type_category": "int", "concrete_type": "unsigned short", "value": "0"}}}], "seqPatternsCount": "0", "seqAfterExpression": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}], "seqAfterExpressionLength": "0", "emphRules": [{"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "4"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "4"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "4"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}, {"type_category": "array", "concrete_type": "TranslationTableOffset", "value": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}]}], "begComp": "0", "endComp": "0", "hyphenStatesArray": "0", "noLetsignBefore": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}], "noLetsignBeforeCount": "0", "noLetsign": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}], "noLetsignCount": "0", "noLetsignAfter": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}], "noLetsignAfterCount": "0", "emphModeChars": [{"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}], "noEmphChars": [{"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}, {"type_category": "array", "concrete_type": "widechar", "value": [{"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}, {"type_category": "unknown", "concrete_type": "widechar", "value": "0"}]}], "characters": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "1"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "dots": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "8"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "forPassRules": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "backPassRules": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "forRules": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "backRules": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "ruleArea": [{"type_category": "unknown", "concrete_type": "TranslationTableData", "value": "0"}]}, "displayTable": {"tableSize": "18000", "bytesUsed": "9024", "charToDots": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "1"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "dotsToChar": [{"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "2"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}, {"type_category": "unknown", "concrete_type": "TranslationTableOffset", "value": "0"}], "ruleArea": [{"type_category": "unknown", "concrete_type": "TranslationTableData", "value": "0"}]}}, "Value After Statement Execution": "Yes", "Project Information": "liblouis"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nunsigned long int EXPORT_CALL\n_lou_charHash(widechar c) {\n", "Selected Statement": "if (!forceHex && isASCII(c))", "Function Input": {"c": {"value": "0"}}, "Variable Values Before Statement": {"forceHex": "NULL", "isASCII": "NULL", "c": "widechar"}, "Value After Statement Execution": "No", "Project Information": "liblouis"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nunsigned long int EXPORT_CALL\n_lou_charHash(widechar c) {\n", "Selected Statement": "if (dots & dotMapping[mappingPos].key)", "Function Input": {"c": {"value": "0"}}, "Variable Values Before Statement": {"dots": "NULL", "dotMapping[mappingPos].key": "NULL"}, "Value After Statement Execution": "No", "Project Information": "liblouis"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\n__attribute_noinline__\nbuffer* buffer_init(void) {\n  #if 0 \n\treturn ck_calloc(1, sizeof(buffer));\n  #else\n\tbuffer * const b = calloc(1, sizeof(*b));\n\tforce_assert(b);\n", "Selected Statement": "if (light_islower(s[i]))", "Function Input": {"b": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"ptr": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdec0 \"\\260\\337\\377\\377\\377\\177\""}, "used": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "4350436"}, "size": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "0"}}}}}, "Variable Values Before Statement": {"light_islower": "NULL", "s": "NULL", "i": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lighttpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid run_burl_normalize (buffer *psrc, buffer *ptmp, \n\t\t\t\t\t\tint flags, int line, const char *in, \n\t\t\t\t\t\tsize_t in_len) {\n    int qs;\n    buffer_copy_string_len(psrc, in, in_len);\n    qs = burl_normalize(psrc, ptmp, flags);\n}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n    if (size <= 4) {\n        return 0;\n    }\n    int flags = ((int*)data)[0];\n    data += 4;\n    size -= 4;\n    char *new_str = (char *)malloc(size+1);\n    if (new_str == NULL){\n        return 0;\n    }\n    memcpy(new_str, data, size);\n    new_str[size] = '\\0';\n\n    \n    buffer *psrc = buffer_init();\n    buffer *ptmp = buffer_init();\n    run_burl_normalize(psrc, ptmp, flags, __LINE__, new_str, size);\n", "Selected Statement": "if (new_str == NULL)", "Function Input": {"flags": {"value": "0"}, "in": {"value": "0x55aa00 <fuzzer::TPC> \"\""}, "in_len": {"value": "16181808"}, "line": {"value": "5001103"}, "psrc": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"ptr": {"type_category": "string", "concrete_type": "NULL"}, "used": {"type_category": "unknown", "concrete_type": "u_int32_t", "value": "0"}, "size": {"type_category": "unknown", "concrete_type": "u_int32_t", "value": "0"}}}}, "ptmp": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"ptr": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffde80 \"\\300\\336\\377\\377\\377\\177\""}, "used": {"type_category": "unknown", "concrete_type": "u_int32_t", "value": "4981897"}, "size": {"type_category": "unknown", "concrete_type": "u_int32_t", "value": "0"}}}}}, "Variable Values Before Statement": {"new_str": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lighttpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid run_burl_normalize (buffer *psrc, buffer *ptmp, \n\t\t\t\t\t\tint flags, int line, const char *in, \n\t\t\t\t\t\tsize_t in_len) {\n    int qs;\n    buffer_copy_string_len(psrc, in, in_len);\n    qs = burl_normalize(psrc, ptmp, flags);\n}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n    if (size <= 4) {\n        return 0;\n    }\n    int flags = ((int*)data)[0];\n    data += 4;\n    size -= 4;\n    char *new_str = (char *)malloc(size+1);\n    if (new_str == NULL){\n        return 0;\n    }\n    memcpy(new_str, data, size);\n    new_str[size] = '\\0';\n\n    \n    buffer *psrc = buffer_init();\n    buffer *ptmp = buffer_init();\n    run_burl_normalize(psrc, ptmp, flags, __LINE__, new_str, size);\n", "Selected Statement": "if (size <= 4)", "Function Input": {"flags": {"value": "0"}, "in": {"value": "0x55aa00 <fuzzer::TPC> \"\""}, "in_len": {"value": "16181808"}, "line": {"value": "5001103"}, "psrc": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"ptr": {"type_category": "string", "concrete_type": "NULL"}, "used": {"type_category": "unknown", "concrete_type": "u_int32_t", "value": "0"}, "size": {"type_category": "unknown", "concrete_type": "u_int32_t", "value": "0"}}}}, "ptmp": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"ptr": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffde80 \"\\300\\336\\377\\377\\377\\177\""}, "used": {"type_category": "unknown", "concrete_type": "u_int32_t", "value": "4981897"}, "size": {"type_category": "unknown", "concrete_type": "u_int32_t", "value": "0"}}}}}, "Variable Values Before Statement": {"size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "lighttpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nint burl_normalize (buffer *b, buffer *t, int flags)\n{\n    int qs;\n\n  #if defined(_WIN32) || defined(__CYGWIN__)\n    \n    if (flags & HTTP_PARSEOPT_URL_NORMALIZE_PATH_BACKSLASH_TRANS) {\n        for (char *p = b->ptr; *p != '?' && *p != '\\0'; ++p) {\n            if (*p == '\\\\') *p = '/';\n        }\n    }\n  #endif\n\n    qs = (flags & HTTP_PARSEOPT_URL_NORMALIZE_REQUIRED)\n      ? burl_normalize_basic_required(b, t)\n      : burl_normalize_basic_unreserved(b, t);\n    if (-2 == qs) {\n        if (flags & HTTP_PARSEOPT_URL_NORMALIZE_INVALID_UTF8_REJECT) return -2;\n        qs = burl_scan_qmark(b);\n    }\n\n    if (flags & HTTP_PARSEOPT_URL_NORMALIZE_CTRLS_REJECT) {\n        if (burl_contains_ctrls(b)) return -2;\n    }\n\n    if (flags & (HTTP_PARSEOPT_URL_NORMALIZE_PATH_2F_DECODE\n                |HTTP_PARSEOPT_URL_NORMALIZE_PATH_2F_REJECT)) {\n        qs = burl_normalize_2F_to_slash(b, qs, flags);\n        if (-2 == qs) return -2;\n    }\n\n    if (flags & (HTTP_PARSEOPT_URL_NORMALIZE_PATH_DOTSEG_REMOVE\n                |HTTP_PARSEOPT_URL_NORMALIZE_PATH_DOTSEG_REJECT)) {\n        qs = burl_normalize_path(b, t, qs, flags);\n        if (-2 == qs) return -2;\n    }\n\n    if (flags & HTTP_PARSEOPT_URL_NORMALIZE_QUERY_20_PLUS) {\n        if (qs >= 0) burl_normalize_qs20_to_plus(b, qs);\n    }\n\n    return qs;\n", "Selected Statement": "if (0 == flags)", "Function Input": {}, "Variable Values Before Statement": {"flags": "int"}, "Value After Statement Execution": "No", "Project Information": "lighttpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nint burl_normalize (buffer *b, buffer *t, int flags)\n{\n    int qs;\n\n  #if defined(_WIN32) || defined(__CYGWIN__)\n    \n    if (flags & HTTP_PARSEOPT_URL_NORMALIZE_PATH_BACKSLASH_TRANS) {\n        for (char *p = b->ptr; *p != '?' && *p != '\\0'; ++p) {\n            if (*p == '\\\\') *p = '/';\n        }\n    }\n  #endif\n\n    qs = (flags & HTTP_PARSEOPT_URL_NORMALIZE_REQUIRED)\n      ? burl_normalize_basic_required(b, t)\n      : burl_normalize_basic_unreserved(b, t);\n    if (-2 == qs) {\n        if (flags & HTTP_PARSEOPT_URL_NORMALIZE_INVALID_UTF8_REJECT) return -2;\n        qs = burl_scan_qmark(b);\n    }\n\n    if (flags & HTTP_PARSEOPT_URL_NORMALIZE_CTRLS_REJECT) {\n        if (burl_contains_ctrls(b)) return -2;\n    }\n\n    if (flags & (HTTP_PARSEOPT_URL_NORMALIZE_PATH_2F_DECODE\n                |HTTP_PARSEOPT_URL_NORMALIZE_PATH_2F_REJECT)) {\n        qs = burl_normalize_2F_to_slash(b, qs, flags);\n        if (-2 == qs) return -2;\n    }\n\n    if (flags & (HTTP_PARSEOPT_URL_NORMALIZE_PATH_DOTSEG_REMOVE\n                |HTTP_PARSEOPT_URL_NORMALIZE_PATH_DOTSEG_REJECT)) {\n        qs = burl_normalize_path(b, t, qs, flags);\n        if (-2 == qs) return -2;\n    }\n\n    if (flags & HTTP_PARSEOPT_URL_NORMALIZE_QUERY_20_PLUS) {\n        if (qs >= 0) burl_normalize_qs20_to_plus(b, qs);\n    }\n\n    return qs;\n", "Selected Statement": "if (-2 == qs)", "Function Input": {}, "Variable Values Before Statement": {"qs": "int"}, "Value After Statement Execution": "Yes", "Project Information": "lighttpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nint burl_normalize (buffer *b, buffer *t, int flags)\n{\n    int qs;\n\n  #if defined(_WIN32) || defined(__CYGWIN__)\n    \n    if (flags & HTTP_PARSEOPT_URL_NORMALIZE_PATH_BACKSLASH_TRANS) {\n        for (char *p = b->ptr; *p != '?' && *p != '\\0'; ++p) {\n            if (*p == '\\\\') *p = '/';\n        }\n    }\n  #endif\n\n    qs = (flags & HTTP_PARSEOPT_URL_NORMALIZE_REQUIRED)\n      ? burl_normalize_basic_required(b, t)\n      : burl_normalize_basic_unreserved(b, t);\n    if (-2 == qs) {\n        if (flags & HTTP_PARSEOPT_URL_NORMALIZE_INVALID_UTF8_REJECT) return -2;\n        qs = burl_scan_qmark(b);\n    }\n\n    if (flags & HTTP_PARSEOPT_URL_NORMALIZE_CTRLS_REJECT) {\n        if (burl_contains_ctrls(b)) return -2;\n    }\n\n    if (flags & (HTTP_PARSEOPT_URL_NORMALIZE_PATH_2F_DECODE\n                |HTTP_PARSEOPT_URL_NORMALIZE_PATH_2F_REJECT)) {\n        qs = burl_normalize_2F_to_slash(b, qs, flags);\n        if (-2 == qs) return -2;\n    }\n\n    if (flags & (HTTP_PARSEOPT_URL_NORMALIZE_PATH_DOTSEG_REMOVE\n                |HTTP_PARSEOPT_URL_NORMALIZE_PATH_DOTSEG_REJECT)) {\n        qs = burl_normalize_path(b, t, qs, flags);\n        if (-2 == qs) return -2;\n    }\n\n    if (flags & HTTP_PARSEOPT_URL_NORMALIZE_QUERY_20_PLUS) {\n        if (qs >= 0) burl_normalize_qs20_to_plus(b, qs);\n    }\n\n    return qs;\n", "Selected Statement": "if (qs >= 0)", "Function Input": {}, "Variable Values Before Statement": {"qs": "int"}, "Value After Statement Execution": "Yes", "Project Information": "lighttpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\ndemux_t *demux_New( vlc_object_t *p_obj, const char *module, const char *url,\n                    stream_t *s, es_out_t *out )\n{\n    assert(s != NULL );\n", "Selected Statement": "if (demux->ops->demux.set_es != NULL)", "Function Input": {}, "Variable Values Before Statement": {"demux->ops->demux.set_es": "NULL"}, "Value After Statement Execution": "No", "Project Information": "vlc"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\ndemux_t *demux_New( vlc_object_t *p_obj, const char *module, const char *url,\n                    stream_t *s, es_out_t *out )\n{\n    assert(s != NULL );\n", "Selected Statement": "if (demux->pf_demux != NULL)", "Function Input": {}, "Variable Values Before Statement": {"demux->pf_demux": "NULL"}, "Value After Statement Execution": "No", "Project Information": "vlc"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nsldns_buffer_init_frm_data(sldns_buffer *buffer, void *data, size_t size)\n{\n\tmemset(buffer, 0, sizeof(*buffer));\n\tbuffer->_data = data;\n\tbuffer->_capacity = buffer->_limit = size;\n\tbuffer->_fixed = 1;\n", "Selected Statement": "if (!buffer)", "Function Input": {"buffer": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"_position": {"type_category": "unknown", "concrete_type": "size_t", "value": "0"}, "_limit": {"type_category": "unknown", "concrete_type": "size_t", "value": "18767888"}, "_capacity": {"type_category": "unknown", "concrete_type": "size_t", "value": "0"}, "_data": {"type_category": "string", "concrete_type": "NULL"}, "_fixed": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "_status_err": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}}}}, "data": {"value": null}, "size": {"value": "105810743"}}, "Variable Values Before Statement": {"buffer": {"_position": "0", "_limit": "12", "_capacity": "12", "_data": "0x11e62d0 \"\"", "_fixed": "1", "_status_err": "0"}}, "Value After Statement Execution": "No", "Project Information": "unbound"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nsldns_buffer_init_frm_data(sldns_buffer *buffer, void *data, size_t size)\n{\n\tmemset(buffer, 0, sizeof(*buffer));\n\tbuffer->_data = data;\n\tbuffer->_capacity = buffer->_limit = size;\n\tbuffer->_fixed = 1;\n", "Selected Statement": "if (!buffer->_fixed)", "Function Input": {"buffer": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"_position": {"type_category": "unknown", "concrete_type": "size_t", "value": "0"}, "_limit": {"type_category": "unknown", "concrete_type": "size_t", "value": "18767888"}, "_capacity": {"type_category": "unknown", "concrete_type": "size_t", "value": "0"}, "_data": {"type_category": "string", "concrete_type": "NULL"}, "_fixed": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "_status_err": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}}}}, "data": {"value": null}, "size": {"value": "105810743"}}, "Variable Values Before Statement": {"buffer->_fixed": "1"}, "Value After Statement Execution": "No", "Project Information": "unbound"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\nparse_packet(sldns_buffer* pkt, struct msg_parse* msg, struct regional* region)\n{\n\tint ret;\n\tif(sldns_buffer_remaining(pkt) < LDNS_HEADER_SIZE)\n\t\treturn LDNS_RCODE_FORMERR;\n\t\n\tsldns_buffer_read(pkt, &msg->id, sizeof(uint16_t));\n\tmsg->flags = sldns_buffer_read_u16(pkt);\n\tmsg->qdcount = sldns_buffer_read_u16(pkt);\n\tmsg->ancount = sldns_buffer_read_u16(pkt);\n\tmsg->nscount = sldns_buffer_read_u16(pkt);\n\tmsg->arcount = sldns_buffer_read_u16(pkt);\n\tif(msg->qdcount > 1)\n\t\treturn LDNS_RCODE_FORMERR;\n\tif((ret = parse_query_section(pkt, msg)) != 0)\n\t\treturn ret;\n\tif((ret = parse_section(pkt, msg, region, LDNS_SECTION_ANSWER,\n\t\tmsg->ancount, &msg->an_rrsets)) != 0)\n\t\treturn ret;\n\tif((ret = parse_section(pkt, msg, region, LDNS_SECTION_AUTHORITY,\n\t\tmsg->nscount, &msg->ns_rrsets)) != 0)\n\t\treturn ret;\n\tif(sldns_buffer_remaining(pkt) == 0 && msg->arcount == 1) {\n\t\t\n\t} else if((ret = parse_section(pkt, msg, region,\n\t\tLDNS_SECTION_ADDITIONAL, msg->arcount, &msg->ar_rrsets)) != 0)\n\t\treturn ret;\n\t\n\t\t\n\t\n\tmsg->rrset_count = msg->an_rrsets + msg->ns_rrsets + msg->ar_rrsets;\n\treturn 0;\n", "Selected Statement": "if (!cfg || !cfg->nsid)", "Function Input": {"pkt": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"_position": {"type_category": "unknown", "concrete_type": "size_t", "value": "0"}, "_limit": {"type_category": "unknown", "concrete_type": "size_t", "value": "12"}, "_capacity": {"type_category": "unknown", "concrete_type": "size_t", "value": "3546920299816956257"}, "_data": {"type_category": "string", "concrete_type": "string", "value": "0x31 <error: Cannot access memory at address 0x31>"}, "_fixed": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}, "_status_err": {"type_category": "int", "concrete_type": "unsigned int", "value": "0"}}}}}, "Variable Values Before Statement": {"cfg": "NULL", "cfg->nsid": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unbound"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nlog_init(const char* filename, int use_syslog, const char* chrootdir)\n{\n\tFILE *f;\n\tif(!key_created) {\n\t\tkey_created = 1;\n\t\tub_thread_key_create(&logkey, NULL);\n\t\tlock_basic_init(&log_lock);\n\t}\n\tlock_basic_lock(&log_lock);\n\tif(logfile \n#if defined(HAVE_SYSLOG_H) || defined(UB_ON_WINDOWS)\n\t|| logging_to_syslog\n#endif\n\t) {\n\t\tlock_basic_unlock(&log_lock); \n\t\tverbose(VERB_QUERY, \"switching log to %s\", \n\t\t\tuse_syslog?\"syslog\":(filename&&filename[0]?filename:\"stderr\"));\n\t\tlock_basic_lock(&log_lock);\n\t}\n\tif(logfile && logfile != stderr) {\n\t\tFILE* cl = logfile;\n\t\tlogfile = NULL; \n\t\tfclose(cl);\n\t}\n#ifdef HAVE_SYSLOG_H\n\tif(logging_to_syslog) {\n\t\tcloselog();\n\t\tlogging_to_syslog = 0;\n\t}\n\tif(use_syslog) {\n\t\t\n\t\t\n\t\topenlog(ident, LOG_NDELAY, UB_SYSLOG_FACILITY);\n\t\tlogging_to_syslog = 1;\n\t\tlock_basic_unlock(&log_lock);\n\t\treturn;\n\t}\n#elif defined(UB_ON_WINDOWS)\n\tif(logging_to_syslog) {\n\t\tlogging_to_syslog = 0;\n\t}\n\tif(use_syslog) {\n\t\tlogging_to_syslog = 1;\n\t\tlock_basic_unlock(&log_lock);\n\t\treturn;\n\t}\n#endif \n\tif(!filename || !filename[0]) {\n\t\tlogfile = stderr;\n\t\tlock_basic_unlock(&log_lock);\n\t\treturn;\n\t}\n\t\n\tif(chrootdir && chrootdir[0] && strncmp(filename, chrootdir,\n\t\tstrlen(chrootdir)) == 0) \n\t\tfilename += strlen(chrootdir);\n\tf = fopen(filename, \"a\");\n\tif(!f) {\n\t\tlock_basic_unlock(&log_lock);\n\t\tlog_err(\"Could not open logfile %s: %s\", filename, \n\t\t\tstrerror(errno));\n\t\treturn;\n\t}\n#ifndef UB_ON_WINDOWS\n\t\n\tsetvbuf(f, NULL, (int)_IOLBF, 0);\n#endif\n\tlogfile = f;\n\tlock_basic_unlock(&log_lock);\n", "Selected Statement": "if (!key_created)", "Function Input": {"chrootdir": {"value": "0x1ee000 <error: Cannot access memory at address 0x1ee000>"}, "filename": {"value": "0x1f1660 <error: Cannot access memory at address 0x1f1660>"}, "use_syslog": {"value": "0"}}, "Variable Values Before Statement": {"key_created": "int"}, "Value After Statement Execution": "Yes", "Project Information": "unbound"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void\nlog_nametypeclass(enum verbosity_value v, const char* str, uint8_t* name, \n\tuint16_t type, uint16_t dclass)\n{\n\tchar buf[LDNS_MAX_DOMAINLEN+1];\n\tchar t[12], c[12];\n\tconst char *ts, *cs; \n\tif(verbosity < v)\n\t\treturn;\n\tdname_str(name, buf);\n\tif(type == LDNS_RR_TYPE_TSIG) ts = \"TSIG\";\n\telse if(type == LDNS_RR_TYPE_IXFR) ts = \"IXFR\";\n\telse if(type == LDNS_RR_TYPE_AXFR) ts = \"AXFR\";\n\telse if(type == LDNS_RR_TYPE_MAILB) ts = \"MAILB\";\n\telse if(type == LDNS_RR_TYPE_MAILA) ts = \"MAILA\";\n\telse if(type == LDNS_RR_TYPE_ANY) ts = \"ANY\";\n\telse if(sldns_rr_descript(type) && sldns_rr_descript(type)->_name)\n\t\tts = sldns_rr_descript(type)->_name;\n\telse {\n\t\tsnprintf(t, sizeof(t), \"TYPE%d\", (int)type);\n\t\tts = t;\n\t}\n\tif(sldns_lookup_by_id(sldns_rr_classes, (int)dclass) &&\n\t\tsldns_lookup_by_id(sldns_rr_classes, (int)dclass)->name)\n\t\tcs = sldns_lookup_by_id(sldns_rr_classes, (int)dclass)->name;\n\telse {\n\t\tsnprintf(c, sizeof(c), \"CLASS%d\", (int)dclass);\n\t\tcs = c;\n\t}\n\tlog_info(\"%s %s %s %s\", str, buf, ts, cs);\n", "Selected Statement": "if (1 != SSL_CTX_set_tmp_ecdh (ctx, ecdh))", "Function Input": {"str": {"value": null}}, "Variable Values Before Statement": {"SSL_CTX_set_tmp_ecdh": "NULL", "ctx": "NULL", "ecdh": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unbound"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void\nlog_nametypeclass(enum verbosity_value v, const char* str, uint8_t* name, \n\tuint16_t type, uint16_t dclass)\n{\n\tchar buf[LDNS_MAX_DOMAINLEN+1];\n\tchar t[12], c[12];\n\tconst char *ts, *cs; \n\tif(verbosity < v)\n\t\treturn;\n\tdname_str(name, buf);\n\tif(type == LDNS_RR_TYPE_TSIG) ts = \"TSIG\";\n\telse if(type == LDNS_RR_TYPE_IXFR) ts = \"IXFR\";\n\telse if(type == LDNS_RR_TYPE_AXFR) ts = \"AXFR\";\n\telse if(type == LDNS_RR_TYPE_MAILB) ts = \"MAILB\";\n\telse if(type == LDNS_RR_TYPE_MAILA) ts = \"MAILA\";\n\telse if(type == LDNS_RR_TYPE_ANY) ts = \"ANY\";\n\telse if(sldns_rr_descript(type) && sldns_rr_descript(type)->_name)\n\t\tts = sldns_rr_descript(type)->_name;\n\telse {\n\t\tsnprintf(t, sizeof(t), \"TYPE%d\", (int)type);\n\t\tts = t;\n\t}\n\tif(sldns_lookup_by_id(sldns_rr_classes, (int)dclass) &&\n\t\tsldns_lookup_by_id(sldns_rr_classes, (int)dclass)->name)\n\t\tcs = sldns_lookup_by_id(sldns_rr_classes, (int)dclass)->name;\n\telse {\n\t\tsnprintf(c, sizeof(c), \"CLASS%d\", (int)dclass);\n\t\tcs = c;\n\t}\n\tlog_info(\"%s %s %s %s\", str, buf, ts, cs);\n", "Selected Statement": "if (verbosity < v)", "Function Input": {"str": {"value": null}}, "Variable Values Before Statement": {"verbosity": "NULL", "v": "verbosity_value"}, "Value After Statement Execution": "Yes", "Project Information": "unbound"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint sldns_wire2str_edns_subnet_print(char** s, size_t* sl, uint8_t* data,\n\tsize_t len)\n{\n\tint w = 0;\n\tuint16_t family;\n\tuint8_t source, scope;\n\tif(len < 4) {\n\t\tw += sldns_str_print(s, sl, \"malformed subnet \");\n\t\tw += print_hex_buf(s, sl, data, len);\n\t\treturn w;\n\t}\n\tfamily = sldns_read_uint16(data);\n\tsource = data[2];\n\tscope = data[3];\n\tif(family == 1) {\n\t\t\n\t\tchar buf[64];\n\t\tuint8_t ip4[4];\n\t\tmemset(ip4, 0, sizeof(ip4));\n\t\tif(len-4 > 4) {\n\t\t\tw += sldns_str_print(s, sl, \"trailingdata:\");\n\t\t\tw += print_hex_buf(s, sl, data+4+4, len-4-4);\n\t\t\tw += sldns_str_print(s, sl, \" \");\n\t\t\tlen = 4+4;\n\t\t}\n\t\tmemmove(ip4, data+4, len-4);\n\t\tif(!inet_ntop(AF_INET, ip4, buf, (socklen_t)sizeof(buf))) {\n\t\t\tw += sldns_str_print(s, sl, \"ip4ntoperror \");\n\t\t\tw += print_hex_buf(s, sl, data+4+4, len-4-4);\n\t\t} else {\n\t\t\tw += sldns_str_print(s, sl, \"%s\", buf);\n\t\t}\n\t} else if(family == 2) {\n\t\t\n\t\tchar buf[64];\n\t\tuint8_t ip6[16];\n\t\tmemset(ip6, 0, sizeof(ip6));\n\t\tif(len-4 > 16) {\n\t\t\tw += sldns_str_print(s, sl, \"trailingdata:\");\n\t\t\tw += print_hex_buf(s, sl, data+4+16, len-4-16);\n\t\t\tw += sldns_str_print(s, sl, \" \");\n\t\t\tlen = 4+16;\n\t\t}\n\t\tmemmove(ip6, data+4, len-4);\n#ifdef AF_INET6\n\t\tif(!inet_ntop(AF_INET6, ip6, buf, (socklen_t)sizeof(buf))) {\n\t\t\tw += sldns_str_print(s, sl, \"ip6ntoperror \");\n\t\t\tw += print_hex_buf(s, sl, data+4+4, len-4-4);\n\t\t} else {\n\t\t\tw += sldns_str_print(s, sl, \"%s\", buf);\n\t\t}\n#else\n\t\tw += print_hex_buf(s, sl, data+4+4, len-4-4);\n#endif\n\t} else {\n\t\t\n\t\tw += sldns_str_print(s, sl, \"family %d \",\n\t\t\t(int)family);\n\t\tw += print_hex_buf(s, sl, data, len);\n\t}\n\tw += sldns_str_print(s, sl, \"/%d scope /%d\", (int)source, (int)scope);\n\treturn w;\n", "Selected Statement": "if (inet_ntop(AF_INET6, data, ip_str, sizeof(ip_str)) == NULL)", "Function Input": {"s": {"value": {"type_category": "string", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3\n", "message": "Cannot access memory at address 0x3"}}}, "Variable Values Before Statement": {"inet_ntop": "NULL", "AF_INET6": "NULL", "data": "NULL", "ip_str": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unbound"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint sldns_wire2str_edns_subnet_print(char** s, size_t* sl, uint8_t* data,\n\tsize_t len)\n{\n\tint w = 0;\n\tuint16_t family;\n\tuint8_t source, scope;\n\tif(len < 4) {\n\t\tw += sldns_str_print(s, sl, \"malformed subnet \");\n\t\tw += print_hex_buf(s, sl, data, len);\n\t\treturn w;\n\t}\n\tfamily = sldns_read_uint16(data);\n\tsource = data[2];\n\tscope = data[3];\n\tif(family == 1) {\n\t\t\n\t\tchar buf[64];\n\t\tuint8_t ip4[4];\n\t\tmemset(ip4, 0, sizeof(ip4));\n\t\tif(len-4 > 4) {\n\t\t\tw += sldns_str_print(s, sl, \"trailingdata:\");\n\t\t\tw += print_hex_buf(s, sl, data+4+4, len-4-4);\n\t\t\tw += sldns_str_print(s, sl, \" \");\n\t\t\tlen = 4+4;\n\t\t}\n\t\tmemmove(ip4, data+4, len-4);\n\t\tif(!inet_ntop(AF_INET, ip4, buf, (socklen_t)sizeof(buf))) {\n\t\t\tw += sldns_str_print(s, sl, \"ip4ntoperror \");\n\t\t\tw += print_hex_buf(s, sl, data+4+4, len-4-4);\n\t\t} else {\n\t\t\tw += sldns_str_print(s, sl, \"%s\", buf);\n\t\t}\n\t} else if(family == 2) {\n\t\t\n\t\tchar buf[64];\n\t\tuint8_t ip6[16];\n\t\tmemset(ip6, 0, sizeof(ip6));\n\t\tif(len-4 > 16) {\n\t\t\tw += sldns_str_print(s, sl, \"trailingdata:\");\n\t\t\tw += print_hex_buf(s, sl, data+4+16, len-4-16);\n\t\t\tw += sldns_str_print(s, sl, \" \");\n\t\t\tlen = 4+16;\n\t\t}\n\t\tmemmove(ip6, data+4, len-4);\n#ifdef AF_INET6\n\t\tif(!inet_ntop(AF_INET6, ip6, buf, (socklen_t)sizeof(buf))) {\n\t\t\tw += sldns_str_print(s, sl, \"ip6ntoperror \");\n\t\t\tw += print_hex_buf(s, sl, data+4+4, len-4-4);\n\t\t} else {\n\t\t\tw += sldns_str_print(s, sl, \"%s\", buf);\n\t\t}\n#else\n\t\tw += print_hex_buf(s, sl, data+4+4, len-4-4);\n#endif\n\t} else {\n\t\t\n\t\tw += sldns_str_print(s, sl, \"family %d \",\n\t\t\t(int)family);\n\t\tw += print_hex_buf(s, sl, data, len);\n\t}\n\tw += sldns_str_print(s, sl, \"/%d scope /%d\", (int)source, (int)scope);\n\treturn w;\n", "Selected Statement": "if (ch == '\"' || ch == '\\\\')", "Function Input": {"s": {"value": {"type_category": "string", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3\n", "message": "Cannot access memory at address 0x3"}}}, "Variable Values Before Statement": {"ch": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unbound"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint sldns_wire2str_edns_subnet_print(char** s, size_t* sl, uint8_t* data,\n\tsize_t len)\n{\n\tint w = 0;\n\tuint16_t family;\n\tuint8_t source, scope;\n\tif(len < 4) {\n\t\tw += sldns_str_print(s, sl, \"malformed subnet \");\n\t\tw += print_hex_buf(s, sl, data, len);\n\t\treturn w;\n\t}\n\tfamily = sldns_read_uint16(data);\n\tsource = data[2];\n\tscope = data[3];\n\tif(family == 1) {\n\t\t\n\t\tchar buf[64];\n\t\tuint8_t ip4[4];\n\t\tmemset(ip4, 0, sizeof(ip4));\n\t\tif(len-4 > 4) {\n\t\t\tw += sldns_str_print(s, sl, \"trailingdata:\");\n\t\t\tw += print_hex_buf(s, sl, data+4+4, len-4-4);\n\t\t\tw += sldns_str_print(s, sl, \" \");\n\t\t\tlen = 4+4;\n\t\t}\n\t\tmemmove(ip4, data+4, len-4);\n\t\tif(!inet_ntop(AF_INET, ip4, buf, (socklen_t)sizeof(buf))) {\n\t\t\tw += sldns_str_print(s, sl, \"ip4ntoperror \");\n\t\t\tw += print_hex_buf(s, sl, data+4+4, len-4-4);\n\t\t} else {\n\t\t\tw += sldns_str_print(s, sl, \"%s\", buf);\n\t\t}\n\t} else if(family == 2) {\n\t\t\n\t\tchar buf[64];\n\t\tuint8_t ip6[16];\n\t\tmemset(ip6, 0, sizeof(ip6));\n\t\tif(len-4 > 16) {\n\t\t\tw += sldns_str_print(s, sl, \"trailingdata:\");\n\t\t\tw += print_hex_buf(s, sl, data+4+16, len-4-16);\n\t\t\tw += sldns_str_print(s, sl, \" \");\n\t\t\tlen = 4+16;\n\t\t}\n\t\tmemmove(ip6, data+4, len-4);\n#ifdef AF_INET6\n\t\tif(!inet_ntop(AF_INET6, ip6, buf, (socklen_t)sizeof(buf))) {\n\t\t\tw += sldns_str_print(s, sl, \"ip6ntoperror \");\n\t\t\tw += print_hex_buf(s, sl, data+4+4, len-4-4);\n\t\t} else {\n\t\t\tw += sldns_str_print(s, sl, \"%s\", buf);\n\t\t}\n#else\n\t\tw += print_hex_buf(s, sl, data+4+4, len-4-4);\n#endif\n\t} else {\n\t\t\n\t\tw += sldns_str_print(s, sl, \"family %d \",\n\t\t\t(int)family);\n\t\tw += print_hex_buf(s, sl, data, len);\n\t}\n\tw += sldns_str_print(s, sl, \"/%d scope /%d\", (int)source, (int)scope);\n\treturn w;\n", "Selected Statement": "if (len < 4)", "Function Input": {"s": {"value": {"type_category": "string", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x3\n", "message": "Cannot access memory at address 0x3"}}}, "Variable Values Before Statement": {"len": "2"}, "Value After Statement Execution": "Yes", "Project Information": "unbound"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nsldns_lookup_table *\nsldns_lookup_by_id(sldns_lookup_table *table, int id)\n{\n        while (table->name != NULL) {\n                if (table->id == id)\n                        return table;\n                table++;\n        }\n        return NULL;\n", "Selected Statement": "if (ch != '=')", "Function Input": {}, "Variable Values Before Statement": {"ch": "NULL"}, "Value After Statement Execution": "No", "Project Information": "unbound"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nsldns_lookup_table *\nsldns_lookup_by_id(sldns_lookup_table *table, int id)\n{\n        while (table->name != NULL) {\n                if (table->id == id)\n                        return table;\n                table++;\n        }\n        return NULL;\n", "Selected Statement": "if (table->id == id)", "Function Input": {}, "Variable Values Before Statement": {"table->id": "4", "id": "int"}, "Value After Statement Execution": "No", "Project Information": "unbound"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint client(Fuzzer *fuzzer);\n\nvoid fuzzinit(Fuzzer *fuzzer){\n    struct sockaddr_in server_addr;\n    fuzzer->socket = socket(AF_INET, SOCK_STREAM, 0);\n\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_port = htons(fuzzer->port);\n    server_addr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");\n\n    setsockopt(fuzzer->socket, SOL_SOCKET, SO_REUSEADDR, &(int){1}, sizeof(int));\n\n    bind(fuzzer->socket, (struct sockaddr*)&server_addr, sizeof(server_addr));\n    listen(fuzzer->socket,1);\n}\n\nvoid *Server(void *args){\n\n    Fuzzer *fuzzer = (Fuzzer*)args;\n    {\n        int client;\n        char clientData[10240];\n        struct sockaddr_in clientAddr;\n        uint32_t clientSZ = sizeof(clientAddr);\n\n        client = accept(fuzzer->socket, (struct sockaddr*)&clientAddr, &clientSZ);\n\n        send(client, fuzzer->buffer, fuzzer->size, 0);\n        recv(client, clientData, sizeof(clientData), 0);\n\n        send(client, fuzzer->buffer, fuzzer->size, 0);\n        recv(client, clientData, sizeof(clientData), 0);\n\n        shutdown(client,SHUT_RDWR);\n        close(client);\n    }\n    pthread_exit(NULL);\n}\n\nvoid clean(Fuzzer *fuzzer){\n    {\n        shutdown(fuzzer->socket,SHUT_RDWR);\n        close(fuzzer->socket);\n    }\n    free(fuzzer);\n}\n\nextern int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\n    if (size < kMinInputLength || size > kMaxInputLength){\n        return 0;\n    }\n\n    Fuzzer *fuzzer = (Fuzzer*)malloc(sizeof(Fuzzer));\n    fuzzer->port = PORT;\n    fuzzer->size = size;\n    fuzzer->buffer = data;\n\n    fuzzinit(fuzzer);\n\n", "Selected Statement": "if (size < kMinInputLength || size > kMaxInputLength)", "Function Input": {}, "Variable Values Before Statement": {"size": "NULL", "kMinInputLength": "NULL", "kMaxInputLength": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libmodbus"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint client(Fuzzer *fuzzer);\n\nvoid fuzzinit(Fuzzer *fuzzer){\n    struct sockaddr_in server_addr;\n    fuzzer->socket = socket(AF_INET, SOCK_STREAM, 0);\n\n    server_addr.sin_family = AF_INET;\n    server_addr.sin_port = htons(fuzzer->port);\n    server_addr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");\n\n    setsockopt(fuzzer->socket, SOL_SOCKET, SO_REUSEADDR, &(int){1}, sizeof(int));\n\n    bind(fuzzer->socket, (struct sockaddr*)&server_addr, sizeof(server_addr));\n    listen(fuzzer->socket,1);\n}\n\nvoid *Server(void *args){\n\n    Fuzzer *fuzzer = (Fuzzer*)args;\n    {\n        int client;\n        char clientData[10240];\n        struct sockaddr_in clientAddr;\n        uint32_t clientSZ = sizeof(clientAddr);\n\n        client = accept(fuzzer->socket, (struct sockaddr*)&clientAddr, &clientSZ);\n\n        send(client, fuzzer->buffer, fuzzer->size, 0);\n        recv(client, clientData, sizeof(clientData), 0);\n\n        send(client, fuzzer->buffer, fuzzer->size, 0);\n        recv(client, clientData, sizeof(clientData), 0);\n\n        shutdown(client,SHUT_RDWR);\n        close(client);\n    }\n    pthread_exit(NULL);\n}\n\nvoid clean(Fuzzer *fuzzer){\n    {\n        shutdown(fuzzer->socket,SHUT_RDWR);\n        close(fuzzer->socket);\n    }\n    free(fuzzer);\n}\n\nextern int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\n    if (size < kMinInputLength || size > kMaxInputLength){\n        return 0;\n    }\n\n    Fuzzer *fuzzer = (Fuzzer*)malloc(sizeof(Fuzzer));\n    fuzzer->port = PORT;\n    fuzzer->size = size;\n    fuzzer->buffer = data;\n\n    fuzzinit(fuzzer);\n\n", "Selected Statement": "if (modbus_connect(ctx) == -1)", "Function Input": {}, "Variable Values Before Statement": {"modbus_connect": "NULL", "ctx": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libmodbus"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint server(Fuzzer *fuzzer);\n\nvoid *client(void *args){ \n\n    Fuzzer *fuzzer = (Fuzzer*)args;\n    int sockfd;\n    struct sockaddr_in serv_addr;\n\n    sockfd = socket(AF_INET, SOCK_STREAM, 0);\n    serv_addr.sin_family = AF_INET;\n    serv_addr.sin_port = htons(fuzzer->port);\n    serv_addr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");\n\n    while(1){\n        if (connect(sockfd, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0){\n            continue;\n        }else{\n            break;\n        }\n    }\n\n    send(sockfd,fuzzer->buffer,fuzzer->size,0);\n\n    close(sockfd);\n    pthread_exit(NULL);\n}\n\nextern int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\n    if (size < kMinInputLength || size > kMaxInputLength){\n        return 0;\n    }\n\n    Fuzzer *fuzzer = (Fuzzer*)malloc(sizeof(Fuzzer));\n    fuzzer->port = PORT;\n\n    fuzzer->size = size;\n    fuzzer->buffer = data;\n\n    pthread_create(&fuzzer->thread, NULL,client,fuzzer);\n    server(fuzzer);\n    pthread_join(fuzzer->thread, NULL); \n\n    free(fuzzer);\n    return 0;\n", "Selected Statement": "if (connect(sockfd, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0)", "Function Input": {}, "Variable Values Before Statement": {"connect": "NULL", "sockfd": "int", "serv_addr": {"sin_family": "0", "sin_port": "0", "sin_addr": null, "sin_zero": "\"\\000\\000\\000\\000\\000\\000\\000\""}}, "Value After Statement Execution": "No", "Project Information": "libmodbus"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint server(Fuzzer *fuzzer);\n\nvoid *client(void *args){ \n\n    Fuzzer *fuzzer = (Fuzzer*)args;\n    int sockfd;\n    struct sockaddr_in serv_addr;\n\n    sockfd = socket(AF_INET, SOCK_STREAM, 0);\n    serv_addr.sin_family = AF_INET;\n    serv_addr.sin_port = htons(fuzzer->port);\n    serv_addr.sin_addr.s_addr = inet_addr(\"127.0.0.1\");\n\n    while(1){\n        if (connect(sockfd, (struct sockaddr *)&serv_addr, sizeof(serv_addr)) < 0){\n            continue;\n        }else{\n            break;\n        }\n    }\n\n    send(sockfd,fuzzer->buffer,fuzzer->size,0);\n\n    close(sockfd);\n    pthread_exit(NULL);\n}\n\nextern int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\n    if (size < kMinInputLength || size > kMaxInputLength){\n        return 0;\n    }\n\n    Fuzzer *fuzzer = (Fuzzer*)malloc(sizeof(Fuzzer));\n    fuzzer->port = PORT;\n\n    fuzzer->size = size;\n    fuzzer->buffer = data;\n\n    pthread_create(&fuzzer->thread, NULL,client,fuzzer);\n    server(fuzzer);\n    pthread_join(fuzzer->thread, NULL); \n\n    free(fuzzer);\n    return 0;\n", "Selected Statement": "if (s != -1)", "Function Input": {}, "Variable Values Before Statement": {"s": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libmodbus"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"spdk/json.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n\tchar *buf = (char *)malloc(size);\n\tif (buf == NULL) {\n\t\treturn 0;\n\t}\n\tmemcpy(buf, data, size);\n\tssize_t rc = spdk_json_parse(buf, size, NULL, 0, NULL, 0);\n\n\tfree(buf);\n\treturn 0;\n", "Selected Statement": "if (buf == NULL)", "Function Input": {"data": {"value": "0xf45ff0 \"\""}, "size": {"value": "5559808"}}, "Variable Values Before Statement": {"buf": "0xf46010 \"\""}, "Value After Statement Execution": "No", "Project Information": "spdk"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "ssize_t\nspdk_json_parse(void *json, size_t size, struct spdk_json_val *values, size_t num_values,\n\t\tvoid **end, uint32_t flags)\n{\n\tuint8_t *json_end = json + size;\n\tenum spdk_json_val_type containers[SPDK_JSON_MAX_NESTING_DEPTH];\n\tsize_t con_value[SPDK_JSON_MAX_NESTING_DEPTH];\n\tenum spdk_json_val_type con_type = SPDK_JSON_VAL_INVALID;\n\tbool trailing_comma = false;\n\tsize_t depth = 0; \n\tsize_t cur_value = 0; \n\tsize_t con_start_value;\n\tuint8_t *data = json;\n\tuint8_t *new_data;\n\tint rc = 0;\n\tconst struct json_literal *lit;\n\tenum {\n\t\tSTATE_VALUE, \n\t\tSTATE_VALUE_SEPARATOR, \n\t\tSTATE_NAME, \n\t\tSTATE_NAME_SEPARATOR, \n\t\tSTATE_END, \n\t} state = STATE_VALUE;\n\n#define ADD_VALUE(t, val_start_ptr, val_end_ptr) \\\n\tif (values && cur_value < num_values) { \\\n\t\tvalues[cur_value].type = t; \\\n\t\tvalues[cur_value].start = val_start_ptr; \\\n\t\tvalues[cur_value].len = val_end_ptr - val_start_ptr; \\\n\t} \\\n\tcur_value++\n\n\twhile (data < json_end) {\n\t\tuint8_t c = *data;\n\n\t\tswitch (c) {\n\t\tcase ' ':\n\t\tcase '\\t':\n\t\tcase '\\r':\n\t\tcase '\\n':\n\t\t\t\n\t\t\tdata++;\n\t\t\tbreak;\n\n\t\tcase 't':\n\t\tcase 'f':\n\t\tcase 'n':\n\t\t\t\n\t\t\tif (state != STATE_VALUE) { goto done_invalid; }\n\t\t\tlit = &g_json_literals[(c >> 3) & 3]; \n\t\t\tassert(lit->str[0] == c);\n\t\t\trc = match_literal(data, json_end, lit->str, lit->len);\n\t\t\tif (rc < 0) { goto done_rc; }\n\t\t\tADD_VALUE(lit->type, data, data + rc);\n\t\t\tdata += rc;\n\t\t\tstate = depth ? STATE_VALUE_SEPARATOR : STATE_END;\n\t\t\ttrailing_comma = false;\n\t\t\tbreak;\n\n\t\tcase '\"':\n\t\t\tif (state != STATE_VALUE && state != STATE_NAME) { goto done_invalid; }\n\t\t\trc = json_decode_string(data, json_end, &new_data, flags);\n\t\t\tif (rc < 0) {\n\t\t\t\tdata = new_data;\n\t\t\t\tgoto done_rc;\n\t\t\t}\n\t\t\t\n\t\t\tADD_VALUE(state == STATE_VALUE ? SPDK_JSON_VAL_STRING : SPDK_JSON_VAL_NAME,\n\t\t\t\t  data + 1, data + rc - 1);\n\t\t\tdata = new_data;\n\t\t\tif (state == STATE_NAME) {\n\t\t\t\tstate = STATE_NAME_SEPARATOR;\n\t\t\t} else {\n\t\t\t\tstate = depth ? STATE_VALUE_SEPARATOR : STATE_END;\n\t\t\t}\n\t\t\ttrailing_comma = false;\n\t\t\tbreak;\n\n\t\tcase '-':\n\t\tcase '0':\n\t\tcase '1':\n\t\tcase '2':\n\t\tcase '3':\n\t\tcase '4':\n\t\tcase '5':\n\t\tcase '6':\n\t\tcase '7':\n\t\tcase '8':\n\t\tcase '9':\n\t\t\tif (state != STATE_VALUE) { goto done_invalid; }\n\t\t\trc = json_valid_number(data, json_end);\n\t\t\tif (rc < 0) { goto done_rc; }\n\t\t\tADD_VALUE(SPDK_JSON_VAL_NUMBER, data, data + rc);\n\t\t\tdata += rc;\n\t\t\tstate = depth ? STATE_VALUE_SEPARATOR : STATE_END;\n\t\t\ttrailing_comma = false;\n\t\t\tbreak;\n\n\t\tcase '{':\n\t\tcase '[':\n\t\t\tif (state != STATE_VALUE) { goto done_invalid; }\n\t\t\tif (depth == SPDK_JSON_MAX_NESTING_DEPTH) {\n\t\t\t\trc = SPDK_JSON_PARSE_MAX_DEPTH_EXCEEDED;\n\t\t\t\tgoto done_rc;\n\t\t\t}\n\t\t\tif (c == '{') {\n\t\t\t\tcon_type = SPDK_JSON_VAL_OBJECT_BEGIN;\n\t\t\t\tstate = STATE_NAME;\n\t\t\t} else {\n\t\t\t\tcon_type = SPDK_JSON_VAL_ARRAY_BEGIN;\n\t\t\t\tstate = STATE_VALUE;\n\t\t\t}\n\t\t\tcon_value[depth] = cur_value;\n\t\t\tcontainers[depth++] = con_type;\n\t\t\tADD_VALUE(con_type, data, data + 1);\n\t\t\tdata++;\n\t\t\ttrailing_comma = false;\n\t\t\tbreak;\n\n\t\tcase '}':\n\t\tcase ']':\n\t\t\tif (trailing_comma) { goto done_invalid; }\n\t\t\tif (depth == 0) { goto done_invalid; }\n\t\t\tcon_type = containers[--depth];\n\t\t\tcon_start_value = con_value[depth];\n\t\t\tif (values && con_start_value < num_values) {\n\t\t\t\tvalues[con_start_value].len = cur_value - con_start_value - 1;\n\t\t\t}\n\t\t\tif (c == '}') {\n\t\t\t\tif (state != STATE_NAME && state != STATE_VALUE_SEPARATOR) {\n\t\t\t\t\tgoto done_invalid;\n\t\t\t\t}\n\t\t\t\tif (con_type != SPDK_JSON_VAL_OBJECT_BEGIN) {\n\t\t\t\t\tgoto done_invalid;\n\t\t\t\t}\n\t\t\t\tADD_VALUE(SPDK_JSON_VAL_OBJECT_END, data, data + 1);\n\t\t\t} else {\n\t\t\t\tif (state != STATE_VALUE && state != STATE_VALUE_SEPARATOR) {\n\t\t\t\t\tgoto done_invalid;\n\t\t\t\t}\n\t\t\t\tif (con_type != SPDK_JSON_VAL_ARRAY_BEGIN) {\n\t\t\t\t\tgoto done_invalid;\n\t\t\t\t}\n\t\t\t\tADD_VALUE(SPDK_JSON_VAL_ARRAY_END, data, data + 1);\n\t\t\t}\n\t\t\tcon_type = depth == 0 ? SPDK_JSON_VAL_INVALID : containers[depth - 1];\n\t\t\tdata++;\n\t\t\tstate = depth ? STATE_VALUE_SEPARATOR : STATE_END;\n\t\t\ttrailing_comma = false;\n\t\t\tbreak;\n\n\t\tcase ',':\n\t\t\tif (state != STATE_VALUE_SEPARATOR) { goto done_invalid; }\n\t\t\tdata++;\n\t\t\tassert(con_type == SPDK_JSON_VAL_ARRAY_BEGIN ||\n\t\t\t       con_type == SPDK_JSON_VAL_OBJECT_BEGIN);\n\t\t\tstate = con_type == SPDK_JSON_VAL_ARRAY_BEGIN ? STATE_VALUE : STATE_NAME;\n\t\t\ttrailing_comma = true;\n\t\t\tbreak;\n\n\t\tcase ':':\n\t\t\tif (state != STATE_NAME_SEPARATOR) { goto done_invalid; }\n\t\t\tdata++;\n\t\t\tstate = STATE_VALUE;\n\t\t\tbreak;\n\n\t\tcase '/':\n\t\t\tif (!(flags & SPDK_JSON_PARSE_FLAG_ALLOW_COMMENTS)) {\n\t\t\t\tgoto done_invalid;\n\t\t\t}\n\t\t\trc = json_valid_comment(data, json_end);\n\t\t\tif (rc < 0) { goto done_rc; }\n\t\t\t\n\t\t\tdata += rc;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tgoto done_invalid;\n\t\t}\n\n\t\tif (state == STATE_END) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (state == STATE_END) {\n\t\t\n\t\twhile (data < json_end) {\n\t\t\tuint8_t c = *data;\n\n\t\t\tif (c == ' ' || c == '\\t' || c == '\\r' || c == '\\n') {\n\t\t\t\tdata++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tassert(depth == 0);\n\t\tassert(trailing_comma == false);\n\t\tassert(data <= json_end);\n\t\tif (end) {\n\t\t\t*end = data;\n\t\t}\n\t\treturn cur_value;\n\t}\n\n\t\n\trc = SPDK_JSON_PARSE_INCOMPLETE;\n\ndone_rc:\n\tassert(rc < 0);\n\tif (end) {\n\t\t*end = data;\n\t}\n\treturn rc;\n\ndone_invalid:\n\trc = SPDK_JSON_PARSE_INVALID;\n\tgoto done_rc;\n", "Selected Statement": "if (!(flags & SPDK_JSON_PARSE_FLAG_ALLOW_COMMENTS))", "Function Input": {}, "Variable Values Before Statement": {"flags": "<optimized out>", "SPDK_JSON_PARSE_FLAG_ALLOW_COMMENTS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "spdk"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "ssize_t\nspdk_json_parse(void *json, size_t size, struct spdk_json_val *values, size_t num_values,\n\t\tvoid **end, uint32_t flags)\n{\n\tuint8_t *json_end = json + size;\n\tenum spdk_json_val_type containers[SPDK_JSON_MAX_NESTING_DEPTH];\n\tsize_t con_value[SPDK_JSON_MAX_NESTING_DEPTH];\n\tenum spdk_json_val_type con_type = SPDK_JSON_VAL_INVALID;\n\tbool trailing_comma = false;\n\tsize_t depth = 0; \n\tsize_t cur_value = 0; \n\tsize_t con_start_value;\n\tuint8_t *data = json;\n\tuint8_t *new_data;\n\tint rc = 0;\n\tconst struct json_literal *lit;\n\tenum {\n\t\tSTATE_VALUE, \n\t\tSTATE_VALUE_SEPARATOR, \n\t\tSTATE_NAME, \n\t\tSTATE_NAME_SEPARATOR, \n\t\tSTATE_END, \n\t} state = STATE_VALUE;\n\n#define ADD_VALUE(t, val_start_ptr, val_end_ptr) \\\n\tif (values && cur_value < num_values) { \\\n\t\tvalues[cur_value].type = t; \\\n\t\tvalues[cur_value].start = val_start_ptr; \\\n\t\tvalues[cur_value].len = val_end_ptr - val_start_ptr; \\\n\t} \\\n\tcur_value++\n\n\twhile (data < json_end) {\n\t\tuint8_t c = *data;\n\n\t\tswitch (c) {\n\t\tcase ' ':\n\t\tcase '\\t':\n\t\tcase '\\r':\n\t\tcase '\\n':\n\t\t\t\n\t\t\tdata++;\n\t\t\tbreak;\n\n\t\tcase 't':\n\t\tcase 'f':\n\t\tcase 'n':\n\t\t\t\n\t\t\tif (state != STATE_VALUE) { goto done_invalid; }\n\t\t\tlit = &g_json_literals[(c >> 3) & 3]; \n\t\t\tassert(lit->str[0] == c);\n\t\t\trc = match_literal(data, json_end, lit->str, lit->len);\n\t\t\tif (rc < 0) { goto done_rc; }\n\t\t\tADD_VALUE(lit->type, data, data + rc);\n\t\t\tdata += rc;\n\t\t\tstate = depth ? STATE_VALUE_SEPARATOR : STATE_END;\n\t\t\ttrailing_comma = false;\n\t\t\tbreak;\n\n\t\tcase '\"':\n\t\t\tif (state != STATE_VALUE && state != STATE_NAME) { goto done_invalid; }\n\t\t\trc = json_decode_string(data, json_end, &new_data, flags);\n\t\t\tif (rc < 0) {\n\t\t\t\tdata = new_data;\n\t\t\t\tgoto done_rc;\n\t\t\t}\n\t\t\t\n\t\t\tADD_VALUE(state == STATE_VALUE ? SPDK_JSON_VAL_STRING : SPDK_JSON_VAL_NAME,\n\t\t\t\t  data + 1, data + rc - 1);\n\t\t\tdata = new_data;\n\t\t\tif (state == STATE_NAME) {\n\t\t\t\tstate = STATE_NAME_SEPARATOR;\n\t\t\t} else {\n\t\t\t\tstate = depth ? STATE_VALUE_SEPARATOR : STATE_END;\n\t\t\t}\n\t\t\ttrailing_comma = false;\n\t\t\tbreak;\n\n\t\tcase '-':\n\t\tcase '0':\n\t\tcase '1':\n\t\tcase '2':\n\t\tcase '3':\n\t\tcase '4':\n\t\tcase '5':\n\t\tcase '6':\n\t\tcase '7':\n\t\tcase '8':\n\t\tcase '9':\n\t\t\tif (state != STATE_VALUE) { goto done_invalid; }\n\t\t\trc = json_valid_number(data, json_end);\n\t\t\tif (rc < 0) { goto done_rc; }\n\t\t\tADD_VALUE(SPDK_JSON_VAL_NUMBER, data, data + rc);\n\t\t\tdata += rc;\n\t\t\tstate = depth ? STATE_VALUE_SEPARATOR : STATE_END;\n\t\t\ttrailing_comma = false;\n\t\t\tbreak;\n\n\t\tcase '{':\n\t\tcase '[':\n\t\t\tif (state != STATE_VALUE) { goto done_invalid; }\n\t\t\tif (depth == SPDK_JSON_MAX_NESTING_DEPTH) {\n\t\t\t\trc = SPDK_JSON_PARSE_MAX_DEPTH_EXCEEDED;\n\t\t\t\tgoto done_rc;\n\t\t\t}\n\t\t\tif (c == '{') {\n\t\t\t\tcon_type = SPDK_JSON_VAL_OBJECT_BEGIN;\n\t\t\t\tstate = STATE_NAME;\n\t\t\t} else {\n\t\t\t\tcon_type = SPDK_JSON_VAL_ARRAY_BEGIN;\n\t\t\t\tstate = STATE_VALUE;\n\t\t\t}\n\t\t\tcon_value[depth] = cur_value;\n\t\t\tcontainers[depth++] = con_type;\n\t\t\tADD_VALUE(con_type, data, data + 1);\n\t\t\tdata++;\n\t\t\ttrailing_comma = false;\n\t\t\tbreak;\n\n\t\tcase '}':\n\t\tcase ']':\n\t\t\tif (trailing_comma) { goto done_invalid; }\n\t\t\tif (depth == 0) { goto done_invalid; }\n\t\t\tcon_type = containers[--depth];\n\t\t\tcon_start_value = con_value[depth];\n\t\t\tif (values && con_start_value < num_values) {\n\t\t\t\tvalues[con_start_value].len = cur_value - con_start_value - 1;\n\t\t\t}\n\t\t\tif (c == '}') {\n\t\t\t\tif (state != STATE_NAME && state != STATE_VALUE_SEPARATOR) {\n\t\t\t\t\tgoto done_invalid;\n\t\t\t\t}\n\t\t\t\tif (con_type != SPDK_JSON_VAL_OBJECT_BEGIN) {\n\t\t\t\t\tgoto done_invalid;\n\t\t\t\t}\n\t\t\t\tADD_VALUE(SPDK_JSON_VAL_OBJECT_END, data, data + 1);\n\t\t\t} else {\n\t\t\t\tif (state != STATE_VALUE && state != STATE_VALUE_SEPARATOR) {\n\t\t\t\t\tgoto done_invalid;\n\t\t\t\t}\n\t\t\t\tif (con_type != SPDK_JSON_VAL_ARRAY_BEGIN) {\n\t\t\t\t\tgoto done_invalid;\n\t\t\t\t}\n\t\t\t\tADD_VALUE(SPDK_JSON_VAL_ARRAY_END, data, data + 1);\n\t\t\t}\n\t\t\tcon_type = depth == 0 ? SPDK_JSON_VAL_INVALID : containers[depth - 1];\n\t\t\tdata++;\n\t\t\tstate = depth ? STATE_VALUE_SEPARATOR : STATE_END;\n\t\t\ttrailing_comma = false;\n\t\t\tbreak;\n\n\t\tcase ',':\n\t\t\tif (state != STATE_VALUE_SEPARATOR) { goto done_invalid; }\n\t\t\tdata++;\n\t\t\tassert(con_type == SPDK_JSON_VAL_ARRAY_BEGIN ||\n\t\t\t       con_type == SPDK_JSON_VAL_OBJECT_BEGIN);\n\t\t\tstate = con_type == SPDK_JSON_VAL_ARRAY_BEGIN ? STATE_VALUE : STATE_NAME;\n\t\t\ttrailing_comma = true;\n\t\t\tbreak;\n\n\t\tcase ':':\n\t\t\tif (state != STATE_NAME_SEPARATOR) { goto done_invalid; }\n\t\t\tdata++;\n\t\t\tstate = STATE_VALUE;\n\t\t\tbreak;\n\n\t\tcase '/':\n\t\t\tif (!(flags & SPDK_JSON_PARSE_FLAG_ALLOW_COMMENTS)) {\n\t\t\t\tgoto done_invalid;\n\t\t\t}\n\t\t\trc = json_valid_comment(data, json_end);\n\t\t\tif (rc < 0) { goto done_rc; }\n\t\t\t\n\t\t\tdata += rc;\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tgoto done_invalid;\n\t\t}\n\n\t\tif (state == STATE_END) {\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (state == STATE_END) {\n\t\t\n\t\twhile (data < json_end) {\n\t\t\tuint8_t c = *data;\n\n\t\t\tif (c == ' ' || c == '\\t' || c == '\\r' || c == '\\n') {\n\t\t\t\tdata++;\n\t\t\t} else {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\t\n\t\tassert(depth == 0);\n\t\tassert(trailing_comma == false);\n\t\tassert(data <= json_end);\n\t\tif (end) {\n\t\t\t*end = data;\n\t\t}\n\t\treturn cur_value;\n\t}\n\n\t\n\trc = SPDK_JSON_PARSE_INCOMPLETE;\n\ndone_rc:\n\tassert(rc < 0);\n\tif (end) {\n\t\t*end = data;\n\t}\n\treturn rc;\n\ndone_invalid:\n\trc = SPDK_JSON_PARSE_INVALID;\n\tgoto done_rc;\n", "Selected Statement": "if (buf_end - str < 2)", "Function Input": {}, "Variable Values Before Statement": {"buf_end": "NULL", "str": "NULL"}, "Value After Statement Execution": "No", "Project Information": "spdk"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define kMinInputLength 10\n#define kMaxInputLength 5120\n\nint CheckXML(char *filename){\n\n    int rc;\n    DOMString s;\n    IXML_Document *doc = NULL;\n\n    rc = ixmlLoadDocumentEx(filename, &doc);\n    if (rc != IXML_SUCCESS) {\n        return rc;\n    }\n\n    s = ixmlPrintDocument(doc);\n    if (s == NULL || s[0] == '\\0') {\n        ixmlDocument_free(doc);\n        return 1;\n    }\n\n    ixmlFreeDOMString(s);\n    ixmlDocument_free(doc);\n\n    return 0;\n}\n\nextern int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {\n\n    if (Size < kMinInputLength || Size > kMaxInputLength){\n        return 1;\n    }\n    \n    int ret;\n    char filename[256];\n\n    sprintf(filename, \"/tmp/libfuzzer.%d\", getpid());\n    FILE *fp = fopen(filename, \"wb\");\n    if (!fp) {\n        return 0;\n    }\n\n    fwrite(Data, Size, 1, fp);\n    fclose(fp);\n\n", "Selected Statement": "if (rc != IXML_SUCCESS)", "Function Input": {"filename": {"value": "0xa <error: Cannot access memory at address 0xa>"}}, "Variable Values Before Statement": {"rc": "int", "IXML_SUCCESS": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define kMinInputLength 10\n#define kMaxInputLength 5120\n\nint CheckXML(char *filename){\n\n    int rc;\n    DOMString s;\n    IXML_Document *doc = NULL;\n\n    rc = ixmlLoadDocumentEx(filename, &doc);\n    if (rc != IXML_SUCCESS) {\n        return rc;\n    }\n\n    s = ixmlPrintDocument(doc);\n    if (s == NULL || s[0] == '\\0') {\n        ixmlDocument_free(doc);\n        return 1;\n    }\n\n    ixmlFreeDOMString(s);\n    ixmlDocument_free(doc);\n\n    return 0;\n}\n\nextern int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {\n\n    if (Size < kMinInputLength || Size > kMaxInputLength){\n        return 1;\n    }\n    \n    int ret;\n    char filename[256];\n\n    sprintf(filename, \"/tmp/libfuzzer.%d\", getpid());\n    FILE *fp = fopen(filename, \"wb\");\n    if (!fp) {\n        return 0;\n    }\n\n    fwrite(Data, Size, 1, fp);\n    fclose(fp);\n\n", "Selected Statement": "if (!fp)", "Function Input": {"filename": {"value": "0xa <error: Cannot access memory at address 0xa>"}}, "Variable Values Before Statement": {"fp": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define kMinInputLength 10\n#define kMaxInputLength 5120\n\nint CheckXML(char *filename){\n\n    int rc;\n    DOMString s;\n    IXML_Document *doc = NULL;\n\n    rc = ixmlLoadDocumentEx(filename, &doc);\n    if (rc != IXML_SUCCESS) {\n        return rc;\n    }\n\n    s = ixmlPrintDocument(doc);\n    if (s == NULL || s[0] == '\\0') {\n        ixmlDocument_free(doc);\n        return 1;\n    }\n\n    ixmlFreeDOMString(s);\n    ixmlDocument_free(doc);\n\n    return 0;\n}\n\nextern int LLVMFuzzerTestOneInput(const uint8_t *Data, size_t Size) {\n\n    if (Size < kMinInputLength || Size > kMaxInputLength){\n        return 1;\n    }\n    \n    int ret;\n    char filename[256];\n\n    sprintf(filename, \"/tmp/libfuzzer.%d\", getpid());\n    FILE *fp = fopen(filename, \"wb\");\n    if (!fp) {\n        return 0;\n    }\n\n    fwrite(Data, Size, 1, fp);\n    fclose(fp);\n\n", "Selected Statement": "if (s == NULL || s[0] == '\\0')", "Function Input": {"filename": {"value": "0xa <error: Cannot access memory at address 0xa>"}}, "Variable Values Before Statement": {"s": "0xec1680 \"\\340\\246\\354\""}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint ixmlLoadDocumentEx(const char *xmlFile, IXML_Document **doc)\n{\n\tif (xmlFile == NULL || doc == NULL) {\n\t\treturn IXML_INVALID_PARAMETER;\n\t}\n\n\treturn Parser_LoadDocument(doc, xmlFile, 1);\n", "Selected Statement": "if (rootNode == NULL)", "Function Input": {}, "Variable Values Before Statement": {"rootNode": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint ixmlLoadDocumentEx(const char *xmlFile, IXML_Document **doc)\n{\n\tif (xmlFile == NULL || doc == NULL) {\n\t\treturn IXML_INVALID_PARAMETER;\n\t}\n\n\treturn Parser_LoadDocument(doc, xmlFile, 1);\n", "Selected Statement": "if (nodeptr != NULL)", "Function Input": {}, "Variable Values Before Statement": {"nodeptr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\t\n\tint file)\n{\n\tint rc = IXML_SUCCESS;\n\tParser *xmlParser = NULL;\n\n\txmlParser = Parser_init();\n\tif (xmlParser == NULL) {\n\t\treturn IXML_INSUFFICIENT_MEMORY;\n\t}\n\n\trc = Parser_readFileOrBuffer(xmlParser, xmlFileName, file);\n\tif (rc != IXML_SUCCESS) {\n\t\tParser_free(xmlParser);\n\t\treturn rc;\n\t}\n\n\txmlParser->curPtr = xmlParser->dataBuffer;\n\trc = Parser_parseDocument(retDoc, xmlParser);\n\treturn rc;\n", "Selected Statement": "if (!src || len <= 0)", "Function Input": {}, "Variable Values Before Statement": {"src": "NULL", "len": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\t\n\tint file)\n{\n\tint rc = IXML_SUCCESS;\n\tParser *xmlParser = NULL;\n\n\txmlParser = Parser_init();\n\tif (xmlParser == NULL) {\n\t\treturn IXML_INSUFFICIENT_MEMORY;\n\t}\n\n\trc = Parser_readFileOrBuffer(xmlParser, xmlFileName, file);\n\tif (rc != IXML_SUCCESS) {\n\t\tParser_free(xmlParser);\n\t\treturn rc;\n\t}\n\n\txmlParser->curPtr = xmlParser->dataBuffer;\n\trc = Parser_parseDocument(retDoc, xmlParser);\n\treturn rc;\n", "Selected Statement": "if (lastElement == NULL)", "Function Input": {}, "Variable Values Before Statement": {"lastElement": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid ixml_membuf_init(ixml_membuf *m)\n{\n\tassert(m != NULL);\n\n\tm->size_inc = MEMBUF_DEF_SIZE_INC;\n\tm->buf = NULL;\n\tm->length = (size_t)0;\n\tm->capacity = (size_t)0;\n", "Selected Statement": "if ((m->capacity - new_length) <= m->size_inc)", "Function Input": {"m": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"buf": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdc80 \"\\300\\334\\377\\377\\377\\177\""}, "length": {"type_category": "unknown", "concrete_type": "size_t", "value": "5004613"}, "capacity": {"type_category": "unknown", "concrete_type": "size_t", "value": "15507792"}, "size_inc": {"type_category": "unknown", "concrete_type": "size_t", "value": "140737488346344"}}}}}, "Variable Values Before Statement": {"m->capacity": "NULL", "new_length": "NULL", "m->size_inc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid ixml_membuf_init(ixml_membuf *m)\n{\n\tassert(m != NULL);\n\n\tm->size_inc = MEMBUF_DEF_SIZE_INC;\n\tm->buf = NULL;\n\tm->length = (size_t)0;\n\tm->capacity = (size_t)0;\n", "Selected Statement": "if (temp_buf == NULL)", "Function Input": {"m": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"buf": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdc80 \"\\300\\334\\377\\377\\377\\177\""}, "length": {"type_category": "unknown", "concrete_type": "size_t", "value": "5004613"}, "capacity": {"type_category": "unknown", "concrete_type": "size_t", "value": "15507792"}, "size_inc": {"type_category": "unknown", "concrete_type": "size_t", "value": "140737488346344"}}}}}, "Variable Values Before Statement": {"temp_buf": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"posix_overwrites.h\"\n\nvoid ixmlNode_init(IXML_Node *nodeptr)\n{\n\tassert(nodeptr != NULL);\n\n\tmemset(nodeptr, 0, sizeof(IXML_Node));\n", "Selected Statement": "if (rc != IXML_SUCCESS)", "Function Input": {"nodeptr": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xb75c702cdf80b200\n", "message": "Cannot access memory at address 0xb75c702cdf80b200"}}}, "Variable Values Before Statement": {"rc": "NULL", "IXML_SUCCESS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"posix_overwrites.h\"\n\nvoid ixmlNode_init(IXML_Node *nodeptr)\n{\n\tassert(nodeptr != NULL);\n\n\tmemset(nodeptr, 0, sizeof(IXML_Node));\n", "Selected Statement": "if (rc != IXML_SUCCESS)", "Function Input": {"nodeptr": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xb75c702cdf80b200\n", "message": "Cannot access memory at address 0xb75c702cdf80b200"}}}, "Variable Values Before Statement": {"rc": "NULL", "IXML_SUCCESS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint ixmlDocument_createDocumentEx(IXML_Document **rtDoc)\n{\n\tIXML_Document *doc;\n\tint errCode = IXML_SUCCESS;\n\n\tdoc = NULL;\n\tdoc = (IXML_Document *)malloc(sizeof(IXML_Document));\n\tif (doc == NULL) {\n\t\terrCode = IXML_INSUFFICIENT_MEMORY;\n\t\tgoto ErrorHandler;\n\t}\n\n\tixmlDocument_init(doc);\n\n\tdoc->n.nodeName = strdup((const char *)DOCUMENTNODENAME);\n\tif (doc->n.nodeName == NULL) {\n\t\tixmlDocument_free(doc);\n\t\tdoc = NULL;\n\t\terrCode = IXML_INSUFFICIENT_MEMORY;\n\t\tgoto ErrorHandler;\n\t}\n\n\tdoc->n.nodeType = eDOCUMENT_NODE;\n\tdoc->n.ownerDocument = doc;\n\nErrorHandler:\n\t*rtDoc = doc;\n", "Selected Statement": "if (ret != IXML_SUCCESS)", "Function Input": {"doc": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"n": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"nodeName": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdc20 \"\\200\\334\\377\\377\\377\\177\""}, "nodeValue": {"type_category": "string", "concrete_type": "string", "value": "0x4c6354 <Parser_parseDocument+180> \"\\211\\205\\\\\\377\\377\\377\\213\\265\\\\\\377\\377\\377\\211\\2654\\377\\377\\3771\\377\\350Cw\\367\\377\\213\\2054\\377\\377\\377\\203\\370\""}, "nodeType": {"type_category": "unknown", "concrete_type": "IXML_NODE_TYPE", "value": "eINVALID_NODE"}, "namespaceURI": {"type_category": "string", "concrete_type": "NULL"}, "prefix": {"type_category": "string", "concrete_type": "string", "value": "0x539400 <fuzzer::TPC> \"\""}, "localName": {"type_category": "string", "concrete_type": "string", "value": "0xeeb830 \"<?\""}, "readOnly": {"type_category": "int", "concrete_type": "int", "value": "15472256"}, "parentNode": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x7ffff7ae1e75 <_IO_setb+85>"}, "firstChild": {"type_category": "unknown", "concrete_type": "Nodeptr"}, "prevSibling": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0xb75c702cdf80b200"}, "nextSibling": {"type_category": "unknown", "concrete_type": "Nodeptr"}, "firstAttr": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x7fffffffdce8"}, "ownerDocument": {"type_category": "unknown", "concrete_type": "Docptr", "value": "0xecb6f0"}, "ctag": {"type_category": "pointer", "concrete_type": "VOID"}}}}}}}, "Variable Values Before Statement": {"ret": "NULL", "IXML_SUCCESS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint ixmlDocument_createDocumentEx(IXML_Document **rtDoc)\n{\n\tIXML_Document *doc;\n\tint errCode = IXML_SUCCESS;\n\n\tdoc = NULL;\n\tdoc = (IXML_Document *)malloc(sizeof(IXML_Document));\n\tif (doc == NULL) {\n\t\terrCode = IXML_INSUFFICIENT_MEMORY;\n\t\tgoto ErrorHandler;\n\t}\n\n\tixmlDocument_init(doc);\n\n\tdoc->n.nodeName = strdup((const char *)DOCUMENTNODENAME);\n\tif (doc->n.nodeName == NULL) {\n\t\tixmlDocument_free(doc);\n\t\tdoc = NULL;\n\t\terrCode = IXML_INSUFFICIENT_MEMORY;\n\t\tgoto ErrorHandler;\n\t}\n\n\tdoc->n.nodeType = eDOCUMENT_NODE;\n\tdoc->n.ownerDocument = doc;\n\nErrorHandler:\n\t*rtDoc = doc;\n", "Selected Statement": "if (ret != IXML_SUCCESS)", "Function Input": {"doc": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"n": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"nodeName": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdc20 \"\\200\\334\\377\\377\\377\\177\""}, "nodeValue": {"type_category": "string", "concrete_type": "string", "value": "0x4c6354 <Parser_parseDocument+180> \"\\211\\205\\\\\\377\\377\\377\\213\\265\\\\\\377\\377\\377\\211\\2654\\377\\377\\3771\\377\\350Cw\\367\\377\\213\\2054\\377\\377\\377\\203\\370\""}, "nodeType": {"type_category": "unknown", "concrete_type": "IXML_NODE_TYPE", "value": "eINVALID_NODE"}, "namespaceURI": {"type_category": "string", "concrete_type": "NULL"}, "prefix": {"type_category": "string", "concrete_type": "string", "value": "0x539400 <fuzzer::TPC> \"\""}, "localName": {"type_category": "string", "concrete_type": "string", "value": "0xeeb830 \"<?\""}, "readOnly": {"type_category": "int", "concrete_type": "int", "value": "15472256"}, "parentNode": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x7ffff7ae1e75 <_IO_setb+85>"}, "firstChild": {"type_category": "unknown", "concrete_type": "Nodeptr"}, "prevSibling": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0xb75c702cdf80b200"}, "nextSibling": {"type_category": "unknown", "concrete_type": "Nodeptr"}, "firstAttr": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x7fffffffdce8"}, "ownerDocument": {"type_category": "unknown", "concrete_type": "Docptr", "value": "0xecb6f0"}, "ctag": {"type_category": "pointer", "concrete_type": "VOID"}}}}}}}, "Variable Values Before Statement": {"ret": "NULL", "IXML_SUCCESS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\tconst char *FunctionName,\n\tconst char *FmtStr,\n\t...)\n{\n\tva_list ArgList;\n\n\tFILE *fp = stdout;\n\tfprintf(fp, \"(%s::%s), line %d\", DbgFileName, FunctionName, DbgLineNo);\n\tif (FmtStr) {\n\t\tfprintf(fp, \": \");\n\t\tva_start(ArgList, FmtStr);\n\t\tvfprintf(fp, FmtStr, ArgList);\n\t\tfflush(fp);\n\t\tva_end(ArgList);\n\t} else {\n\t\tfprintf(fp, \"\\n\");\n\t}\n", "Selected Statement": "if (ChildNode1 == NULL)", "Function Input": {"DbgFileName": {"value": "0xeca330 \"\\260\\243\\354\""}, "DbgLineNo": {"value": "118"}, "FmtStr": {"value": "0x7fffffffd8a0 \"@\\331\\377\""}, "FunctionName": {"value": "0x4c82df <Parser_skipWhiteSpaces+175> \"H\\203\\370\""}}, "Variable Values Before Statement": {"ChildNode1": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\tconst char *FunctionName,\n\tconst char *FmtStr,\n\t...)\n{\n\tva_list ArgList;\n\n\tFILE *fp = stdout;\n\tfprintf(fp, \"(%s::%s), line %d\", DbgFileName, FunctionName, DbgLineNo);\n\tif (FmtStr) {\n\t\tfprintf(fp, \": \");\n\t\tva_start(ArgList, FmtStr);\n\t\tvfprintf(fp, FmtStr, ArgList);\n\t\tfflush(fp);\n\t\tva_end(ArgList);\n\t} else {\n\t\tfprintf(fp, \"\\n\");\n\t}\n", "Selected Statement": "if (FmtStr)", "Function Input": {"DbgFileName": {"value": "0xeca330 \"\\260\\243\\354\""}, "DbgLineNo": {"value": "118"}, "FmtStr": {"value": "0x7fffffffd8a0 \"@\\331\\377\""}, "FunctionName": {"value": "0x4c82df <Parser_skipWhiteSpaces+175> \"H\\203\\370\""}}, "Variable Values Before Statement": {"FmtStr": "0x502783 \"Error %d\\n\""}, "Value After Statement Execution": "Yes", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"posix_overwrites.h\"\n\nvoid ixmlElement_init(IXML_Element *element)\n{\n\tif (element != NULL) {\n\t\tmemset(element, 0, sizeof(IXML_Element));\n\t}\n", "Selected Statement": "if (element != NULL)", "Function Input": {"element": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"n": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"nodeName": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdb00 \" \\334\\377\\377\\377\\177\""}, "nodeValue": {"type_category": "string", "concrete_type": "string", "value": "0x4c7b3c <Parser_processElementName+300> \"\\211E\\314\\213u\\314\\211u\\2341\\377\\350d_\\367\\377\\213E\\234\\203\\370\""}, "nodeType": {"type_category": "unknown", "concrete_type": "IXML_NODE_TYPE", "value": "eELEMENT_NODE"}, "namespaceURI": {"type_category": "string", "concrete_type": "string", "value": "0x4c7409 <Parser_skipProlog+665> \"\\211E\\354\\213E\\354\\211E\\374\\213E\\374H\\203\\304p]\\303\\017\\037D\""}, "prefix": {"type_category": "string", "concrete_type": "string", "value": "0x1 <error: Cannot access memory at address 0x1>"}, "localName": {"type_category": "string", "concrete_type": "NULL"}, "readOnly": {"type_category": "int", "concrete_type": "int", "value": "15508400"}, "parentNode": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0xec9e80"}, "firstChild": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0xeca330"}, "prevSibling": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x7fffffffdb90"}, "nextSibling": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x7fffffffdb00"}, "firstAttr": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x1"}, "ownerDocument": {"type_category": "unknown", "concrete_type": "Docptr"}, "ctag": {"type_category": "pointer", "concrete_type": "NULL"}}}, "tagName": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdb90 \"@\\237\\354\""}}}}}, "Variable Values Before Statement": {"element": {"n": null, "tagName": "0x6134633430393266 <error: Cannot access memory at address 0x6134633430393266>"}}, "Value After Statement Execution": "Yes", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"posix_overwrites.h\"\n\nvoid ixmlElement_init(IXML_Element *element)\n{\n\tif (element != NULL) {\n\t\tmemset(element, 0, sizeof(IXML_Element));\n\t}\n", "Selected Statement": "if (attrNode->nodeValue == NULL)", "Function Input": {"element": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"n": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"nodeName": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdb00 \" \\334\\377\\377\\377\\177\""}, "nodeValue": {"type_category": "string", "concrete_type": "string", "value": "0x4c7b3c <Parser_processElementName+300> \"\\211E\\314\\213u\\314\\211u\\2341\\377\\350d_\\367\\377\\213E\\234\\203\\370\""}, "nodeType": {"type_category": "unknown", "concrete_type": "IXML_NODE_TYPE", "value": "eELEMENT_NODE"}, "namespaceURI": {"type_category": "string", "concrete_type": "string", "value": "0x4c7409 <Parser_skipProlog+665> \"\\211E\\354\\213E\\354\\211E\\374\\213E\\374H\\203\\304p]\\303\\017\\037D\""}, "prefix": {"type_category": "string", "concrete_type": "string", "value": "0x1 <error: Cannot access memory at address 0x1>"}, "localName": {"type_category": "string", "concrete_type": "NULL"}, "readOnly": {"type_category": "int", "concrete_type": "int", "value": "15508400"}, "parentNode": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0xec9e80"}, "firstChild": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0xeca330"}, "prevSibling": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x7fffffffdb90"}, "nextSibling": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x7fffffffdb00"}, "firstAttr": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x1"}, "ownerDocument": {"type_category": "unknown", "concrete_type": "Docptr"}, "ctag": {"type_category": "pointer", "concrete_type": "NULL"}}}, "tagName": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdb90 \"@\\237\\354\""}}}}}, "Variable Values Before Statement": {"attrNode->nodeValue": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"posix_overwrites.h\"\n\nvoid ixmlElement_init(IXML_Element *element)\n{\n\tif (element != NULL) {\n\t\tmemset(element, 0, sizeof(IXML_Element));\n\t}\n", "Selected Statement": "if (newAttr->n.nodeValue == NULL)", "Function Input": {"element": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"n": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"nodeName": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdb00 \" \\334\\377\\377\\377\\177\""}, "nodeValue": {"type_category": "string", "concrete_type": "string", "value": "0x4c7b3c <Parser_processElementName+300> \"\\211E\\314\\213u\\314\\211u\\2341\\377\\350d_\\367\\377\\213E\\234\\203\\370\""}, "nodeType": {"type_category": "unknown", "concrete_type": "IXML_NODE_TYPE", "value": "eELEMENT_NODE"}, "namespaceURI": {"type_category": "string", "concrete_type": "string", "value": "0x4c7409 <Parser_skipProlog+665> \"\\211E\\354\\213E\\354\\211E\\374\\213E\\374H\\203\\304p]\\303\\017\\037D\""}, "prefix": {"type_category": "string", "concrete_type": "string", "value": "0x1 <error: Cannot access memory at address 0x1>"}, "localName": {"type_category": "string", "concrete_type": "NULL"}, "readOnly": {"type_category": "int", "concrete_type": "int", "value": "15508400"}, "parentNode": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0xec9e80"}, "firstChild": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0xeca330"}, "prevSibling": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x7fffffffdb90"}, "nextSibling": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x7fffffffdb00"}, "firstAttr": {"type_category": "unknown", "concrete_type": "Nodeptr", "value": "0x1"}, "ownerDocument": {"type_category": "unknown", "concrete_type": "Docptr"}, "ctag": {"type_category": "pointer", "concrete_type": "NULL"}}}, "tagName": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdb90 \"@\\237\\354\""}}}}}, "Variable Values Before Statement": {"newAttr->n.nodeValue": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pupnp"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "        PREFIX##__free_unpacked(msg, NULL); \\\n    }\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n    X(Foo__TestMessSubMess, foo__test_mess_sub_mess);\n    X(Foo__TestFieldFlags, foo__test_field_flags);\n    X(Foo__TestMessageCheck, foo__test_message_check);\n", "Selected Statement": "if ( msg != NULL )", "Function Input": {"data": {"value": "0xf70a70 \"\\300\\232\\367\""}, "size": {"value": "16224128"}}, "Variable Values Before Statement": {"msg": "NULL"}, "Value After Statement Execution": "No", "Project Information": "protobuf-c"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n#include \"ext2fs/ext2fs.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\n  enum FuzzerType {\n    ext2fsImageBitmapRead,\n    ext2fsImageInodeRead,\n    ext2fsImageSuperRead,\n    ext2fsImageBitmapWrite,\n    ext2fsImageInodeWrite,\n    ext2fsImageSuperWrite,\n    kMaxValue = ext2fsImageSuperWrite\n  };\n\n  FuzzedDataProvider stream(data, size);\n  const FuzzerType f = stream.ConsumeEnum<FuzzerType>();\n  (void) stream.ConsumeIntegral<int>();\n  \n\n  static const char* fname = \"ext2_test_file\";\n\n  \n  int fd = syscall(SYS_memfd_create, fname, 0);\n  std::vector<char> buffer = stream.ConsumeRemainingBytes<char>();\n  write(fd, buffer.data(), buffer.size());\n\n  std::string fspath(\"/proc/self/fd/\" + std::to_string(fd));\n\n  ext2_filsys fs;\n  errcode_t retval = ext2fs_open(\n      fspath.c_str(),\n      EXT2_FLAG_IGNORE_CSUM_ERRORS, 0, 0,\n      unix_io_manager,\n      &fs);\n\n  if (!retval) {\n    switch (f) {\n      case ext2fsImageBitmapRead: {\n        ext2fs_image_bitmap_read(fs, fd, 0);\n        break;\n      }\n      case ext2fsImageInodeRead: {\n        ext2fs_image_inode_read(fs, fd, 0);\n        break;\n      }\n      case ext2fsImageSuperRead: {\n        ext2fs_image_super_read(fs, fd, 0);\n        break;\n      }\n      case ext2fsImageBitmapWrite: {\n        ext2fs_image_bitmap_write(fs, fd, 0);\n        break;\n      }\n      case ext2fsImageInodeWrite: {\n        ext2fs_image_inode_write(fs, fd, 0);\n        break;\n      }\n      case ext2fsImageSuperWrite: {\n        ext2fs_image_super_write(fs, fd, 0);\n        break;\n      }\n      default: {\n        assert(false);\n      }\n    }\n    ext2fs_close(fs);\n  }\n  close(fd);\n\n  return 0;\n", "Selected Statement": "if (!retval)", "Function Input": {"data": {"value": "0x1016b70 \"`p\\001\\001\""}, "size": {"value": "16875632"}}, "Variable Values Before Statement": {"retval": "errcode_t"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "errcode_t ext2fs_open(const char *name, int flags, int superblock,\n\t\t      unsigned int block_size, io_manager manager,\n\t\t      ext2_filsys *ret_fs)\n{\n\treturn ext2fs_open2(name, 0, flags, superblock, block_size,\n", "Selected Statement": "if ((fs->flags & EXT2_FLAG_IMAGE_FILE) == 0)", "Function Input": {}, "Variable Values Before Statement": {"fs->flags": "NULL", "EXT2_FLAG_IMAGE_FILE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "errcode_t ext2fs_open(const char *name, int flags, int superblock,\n\t\t      unsigned int block_size, io_manager manager,\n\t\t      ext2_filsys *ret_fs)\n{\n\treturn ext2fs_open2(name, 0, flags, superblock, block_size,\n", "Selected Statement": "if (retval)", "Function Input": {}, "Variable Values Before Statement": {"retval": "NULL"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic errcode_t unix_open(const char *name, int flags,\n\t\t\t   io_channel *channel)\n{\n\tint fd = -1;\n\tint open_flags;\n\n\tif (name == 0)\n\t\treturn EXT2_ET_BAD_DEVICE_NAME;\n\n\topen_flags = (flags & IO_FLAG_RW) ? O_RDWR : O_RDONLY;\n\tif (flags & IO_FLAG_EXCLUSIVE)\n\t\topen_flags |= O_EXCL;\n#if defined(O_DIRECT)\n\tif (flags & IO_FLAG_DIRECT_IO)\n\t\topen_flags |= O_DIRECT;\n#endif\n\tfd = ext2fs_open_file(name, open_flags, 0);\n\tif (fd < 0)\n\t\treturn errno;\n#if defined(F_NOCACHE) && !defined(IO_DIRECT)\n\tif (flags & IO_FLAG_DIRECT_IO) {\n\t\tif (fcntl(fd, F_NOCACHE, 1) < 0)\n\t\t\treturn errno;\n\t}\n#endif\n\treturn unix_open_channel(name, fd, flags, channel, unix_io_manager);\n", "Selected Statement": "if (channel->flags & CHANNEL_FLAGS_BLOCK_DEVICE)", "Function Input": {}, "Variable Values Before Statement": {"channel->flags": "NULL", "CHANNEL_FLAGS_BLOCK_DEVICE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic errcode_t unix_open(const char *name, int flags,\n\t\t\t   io_channel *channel)\n{\n\tint fd = -1;\n\tint open_flags;\n\n\tif (name == 0)\n\t\treturn EXT2_ET_BAD_DEVICE_NAME;\n\n\topen_flags = (flags & IO_FLAG_RW) ? O_RDWR : O_RDONLY;\n\tif (flags & IO_FLAG_EXCLUSIVE)\n\t\topen_flags |= O_EXCL;\n#if defined(O_DIRECT)\n\tif (flags & IO_FLAG_DIRECT_IO)\n\t\topen_flags |= O_DIRECT;\n#endif\n\tfd = ext2fs_open_file(name, open_flags, 0);\n\tif (fd < 0)\n\t\treturn errno;\n#if defined(F_NOCACHE) && !defined(IO_DIRECT)\n\tif (flags & IO_FLAG_DIRECT_IO) {\n\t\tif (fcntl(fd, F_NOCACHE, 1) < 0)\n\t\t\treturn errno;\n\t}\n#endif\n\treturn unix_open_channel(name, fd, flags, channel, unix_io_manager);\n", "Selected Statement": "if (flags & IO_FLAG_THREADS)", "Function Input": {}, "Variable Values Before Statement": {"flags": "NULL", "IO_FLAG_THREADS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nerrcode_t io_channel_alloc_buf(io_channel io, int count, void *ptr)\n{\n\tsize_t\tsize;\n\n\tif (count == 0)\n\t\tsize = io->block_size;\n\telse if (count > 0)\n\t\tsize = io->block_size * count;\n\telse\n\t\tsize = -count;\n\n\tif (io->align > 0) {\n\t\tif ((unsigned) io->align > size)\n\t\t\tsize = io->align;\n\t\treturn ext2fs_get_memalign(size, io->align, ptr);\n\t} else\n\t\treturn ext2fs_get_mem(size, ptr);\n", "Selected Statement": "if ((block >> 32) != 0)", "Function Input": {}, "Variable Values Before Statement": {"block": "NULL"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nerrcode_t io_channel_alloc_buf(io_channel io, int count, void *ptr)\n{\n\tsize_t\tsize;\n\n\tif (count == 0)\n\t\tsize = io->block_size;\n\telse if (count > 0)\n\t\tsize = io->block_size * count;\n\telse\n\t\tsize = -count;\n\n\tif (io->align > 0) {\n\t\tif ((unsigned) io->align > size)\n\t\t\tsize = io->align;\n\t\treturn ext2fs_get_memalign(size, io->align, ptr);\n\t} else\n\t\treturn ext2fs_get_mem(size, ptr);\n", "Selected Statement": "if (channel->manager->write_byte)", "Function Input": {}, "Variable Values Before Statement": {"channel->manager->write_byte": "NULL"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nerrcode_t io_channel_alloc_buf(io_channel io, int count, void *ptr)\n{\n\tsize_t\tsize;\n\n\tif (count == 0)\n\t\tsize = io->block_size;\n\telse if (count > 0)\n\t\tsize = io->block_size * count;\n\telse\n\t\tsize = -count;\n\n\tif (io->align > 0) {\n\t\tif ((unsigned) io->align > size)\n\t\t\tsize = io->align;\n\t\treturn ext2fs_get_memalign(size, io->align, ptr);\n\t} else\n\t\treturn ext2fs_get_mem(size, ptr);\n", "Selected Statement": "if (count == 0)", "Function Input": {}, "Variable Values Before Statement": {"count": "int"}, "Value After Statement Execution": "Yes", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#endif \n\next2_loff_t ext2fs_llseek (int fd, ext2_loff_t offset, int origin)\n{\n#if SIZEOF_OFF_T >= SIZEOF_LONG_LONG\n", "Selected Statement": "if (result == -1 && errno == ENOSYS)", "Function Input": {"fd": {"value": "0"}, "offset": {"value": "4294968320"}, "origin": {"value": "0"}}, "Variable Values Before Statement": {"result": "NULL", "errno": "NULL", "ENOSYS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#endif \n\next2_loff_t ext2fs_llseek (int fd, ext2_loff_t offset, int origin)\n{\n#if SIZEOF_OFF_T >= SIZEOF_LONG_LONG\n", "Selected Statement": "if (offset < ((ext2_loff_t) 1 << ((sizeof(off_t)*8) -1)))", "Function Input": {"fd": {"value": "0"}, "offset": {"value": "4294968320"}, "origin": {"value": "0"}}, "Variable Values Before Statement": {"offset": "ext2_loff_t", "off_t": "NULL"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"hashmap.h\"\n\nvoid ext2fs_free(ext2_filsys fs)\n{\n\tif (!fs || (fs->magic != EXT2_ET_MAGIC_EXT2FS_FILSYS))\n\t\treturn;\n\tif (fs->image_io != fs->io) {\n\t\tif (fs->image_io)\n\t\t\tio_channel_close(fs->image_io);\n\t}\n\tif (fs->io) {\n\t\tio_channel_close(fs->io);\n\t}\n\tif (fs->device_name)\n\t\text2fs_free_mem(&fs->device_name);\n\tif (fs->super)\n\t\text2fs_free_mem(&fs->super);\n\tif (fs->orig_super)\n\t\text2fs_free_mem(&fs->orig_super);\n\tif (fs->group_desc)\n\t\text2fs_free_mem(&fs->group_desc);\n\tif (fs->block_map)\n\t\text2fs_free_block_bitmap(fs->block_map);\n\tif (fs->inode_map)\n\t\text2fs_free_inode_bitmap(fs->inode_map);\n\tif (fs->image_header)\n\t\text2fs_free_mem(&fs->image_header);\n\n\tif (fs->badblocks)\n\t\text2fs_badblocks_list_free(fs->badblocks);\n\tfs->badblocks = 0;\n\n\tif (fs->dblist)\n\t\text2fs_free_dblist(fs->dblist);\n\n\tif (fs->icache)\n\t\text2fs_free_inode_cache(fs->icache);\n\n\tif (fs->mmp_buf)\n\t\text2fs_free_mem(&fs->mmp_buf);\n\tif (fs->mmp_cmp)\n\t\text2fs_free_mem(&fs->mmp_cmp);\n\n\tif (fs->block_sha_map)\n\t\text2fs_hashmap_free(fs->block_sha_map);\n\n\tfs->magic = 0;\n\n\text2fs_zero_blocks2(NULL, 0, 0, NULL, NULL);\n\text2fs_free_mem(&fs);\n", "Selected Statement": "if (fs->orig_super)", "Function Input": {"fs": {"value": "0x1018230"}}, "Variable Values Before Statement": {"fs->orig_super": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"hashmap.h\"\n\nvoid ext2fs_free(ext2_filsys fs)\n{\n\tif (!fs || (fs->magic != EXT2_ET_MAGIC_EXT2FS_FILSYS))\n\t\treturn;\n\tif (fs->image_io != fs->io) {\n\t\tif (fs->image_io)\n\t\t\tio_channel_close(fs->image_io);\n\t}\n\tif (fs->io) {\n\t\tio_channel_close(fs->io);\n\t}\n\tif (fs->device_name)\n\t\text2fs_free_mem(&fs->device_name);\n\tif (fs->super)\n\t\text2fs_free_mem(&fs->super);\n\tif (fs->orig_super)\n\t\text2fs_free_mem(&fs->orig_super);\n\tif (fs->group_desc)\n\t\text2fs_free_mem(&fs->group_desc);\n\tif (fs->block_map)\n\t\text2fs_free_block_bitmap(fs->block_map);\n\tif (fs->inode_map)\n\t\text2fs_free_inode_bitmap(fs->inode_map);\n\tif (fs->image_header)\n\t\text2fs_free_mem(&fs->image_header);\n\n\tif (fs->badblocks)\n\t\text2fs_badblocks_list_free(fs->badblocks);\n\tfs->badblocks = 0;\n\n\tif (fs->dblist)\n\t\text2fs_free_dblist(fs->dblist);\n\n\tif (fs->icache)\n\t\text2fs_free_inode_cache(fs->icache);\n\n\tif (fs->mmp_buf)\n\t\text2fs_free_mem(&fs->mmp_buf);\n\tif (fs->mmp_cmp)\n\t\text2fs_free_mem(&fs->mmp_cmp);\n\n\tif (fs->block_sha_map)\n\t\text2fs_hashmap_free(fs->block_sha_map);\n\n\tfs->magic = 0;\n\n\text2fs_zero_blocks2(NULL, 0, 0, NULL, NULL);\n\text2fs_free_mem(&fs);\n", "Selected Statement": "if (!dblist || (dblist->magic != EXT2_ET_MAGIC_DBLIST))", "Function Input": {"fs": {"value": "0x1018230"}}, "Variable Values Before Statement": {"dblist": "NULL", "dblist->magic": "NULL", "EXT2_ET_MAGIC_DBLIST": "NULL"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"hashmap.h\"\n\nvoid ext2fs_free(ext2_filsys fs)\n{\n\tif (!fs || (fs->magic != EXT2_ET_MAGIC_EXT2FS_FILSYS))\n\t\treturn;\n\tif (fs->image_io != fs->io) {\n\t\tif (fs->image_io)\n\t\t\tio_channel_close(fs->image_io);\n\t}\n\tif (fs->io) {\n\t\tio_channel_close(fs->io);\n\t}\n\tif (fs->device_name)\n\t\text2fs_free_mem(&fs->device_name);\n\tif (fs->super)\n\t\text2fs_free_mem(&fs->super);\n\tif (fs->orig_super)\n\t\text2fs_free_mem(&fs->orig_super);\n\tif (fs->group_desc)\n\t\text2fs_free_mem(&fs->group_desc);\n\tif (fs->block_map)\n\t\text2fs_free_block_bitmap(fs->block_map);\n\tif (fs->inode_map)\n\t\text2fs_free_inode_bitmap(fs->inode_map);\n\tif (fs->image_header)\n\t\text2fs_free_mem(&fs->image_header);\n\n\tif (fs->badblocks)\n\t\text2fs_badblocks_list_free(fs->badblocks);\n\tfs->badblocks = 0;\n\n\tif (fs->dblist)\n\t\text2fs_free_dblist(fs->dblist);\n\n\tif (fs->icache)\n\t\text2fs_free_inode_cache(fs->icache);\n\n\tif (fs->mmp_buf)\n\t\text2fs_free_mem(&fs->mmp_buf);\n\tif (fs->mmp_cmp)\n\t\text2fs_free_mem(&fs->mmp_cmp);\n\n\tif (fs->block_sha_map)\n\t\text2fs_hashmap_free(fs->block_sha_map);\n\n\tfs->magic = 0;\n\n\text2fs_zero_blocks2(NULL, 0, 0, NULL, NULL);\n\text2fs_free_mem(&fs);\n", "Selected Statement": "if (fs->io)", "Function Input": {"fs": {"value": "0x1018230"}}, "Variable Values Before Statement": {"fs->io": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"hashmap.h\"\n\nvoid ext2fs_free(ext2_filsys fs)\n{\n\tif (!fs || (fs->magic != EXT2_ET_MAGIC_EXT2FS_FILSYS))\n\t\treturn;\n\tif (fs->image_io != fs->io) {\n\t\tif (fs->image_io)\n\t\t\tio_channel_close(fs->image_io);\n\t}\n\tif (fs->io) {\n\t\tio_channel_close(fs->io);\n\t}\n\tif (fs->device_name)\n\t\text2fs_free_mem(&fs->device_name);\n\tif (fs->super)\n\t\text2fs_free_mem(&fs->super);\n\tif (fs->orig_super)\n\t\text2fs_free_mem(&fs->orig_super);\n\tif (fs->group_desc)\n\t\text2fs_free_mem(&fs->group_desc);\n\tif (fs->block_map)\n\t\text2fs_free_block_bitmap(fs->block_map);\n\tif (fs->inode_map)\n\t\text2fs_free_inode_bitmap(fs->inode_map);\n\tif (fs->image_header)\n\t\text2fs_free_mem(&fs->image_header);\n\n\tif (fs->badblocks)\n\t\text2fs_badblocks_list_free(fs->badblocks);\n\tfs->badblocks = 0;\n\n\tif (fs->dblist)\n\t\text2fs_free_dblist(fs->dblist);\n\n\tif (fs->icache)\n\t\text2fs_free_inode_cache(fs->icache);\n\n\tif (fs->mmp_buf)\n\t\text2fs_free_mem(&fs->mmp_buf);\n\tif (fs->mmp_cmp)\n\t\text2fs_free_mem(&fs->mmp_cmp);\n\n\tif (fs->block_sha_map)\n\t\text2fs_hashmap_free(fs->block_sha_map);\n\n\tfs->magic = 0;\n\n\text2fs_zero_blocks2(NULL, 0, 0, NULL, NULL);\n\text2fs_free_mem(&fs);\n", "Selected Statement": "if (fs->group_desc)", "Function Input": {"fs": {"value": "0x1018230"}}, "Variable Values Before Statement": {"fs->group_desc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define MAX_STRIDE_LENGTH (4194304 / (int) fs->blocksize)\nerrcode_t ext2fs_zero_blocks2(ext2_filsys fs, blk64_t blk, int num,\n\t\t\t      blk64_t *ret_blk, int *ret_count)\n{\n\tint\t\tj, count;\n\tstatic void\t*buf;\n\tstatic int\tstride_length;\n\terrcode_t\tretval;\n\n\t\n\tif (!fs) {\n\t\tif (buf) {\n\t\t\tfree(buf);\n\t\t\tbuf = 0;\n\t\t\tstride_length = 0;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t\n\tif (num <= 0)\n\t\treturn 0;\n\n\t\n\tretval = io_channel_zeroout(fs->io, blk, num);\n\tif (retval == 0)\n\t\treturn 0;\n\n\t\n\tif (num > stride_length && stride_length < MAX_STRIDE_LENGTH) {\n\t\tvoid *p;\n\t\tint new_stride = num;\n\n\t\tif (new_stride > MAX_STRIDE_LENGTH)\n\t\t\tnew_stride = MAX_STRIDE_LENGTH;\n\t\tp = realloc(buf, fs->blocksize * new_stride);\n\t\tif (!p)\n\t\t\treturn EXT2_ET_NO_MEMORY;\n\t\tbuf = p;\n\t\tstride_length = new_stride;\n\t\tmemset(buf, 0, fs->blocksize * stride_length);\n\t}\n\t\n\tj=0;\n\twhile (j < num) {\n\t\tif (blk % stride_length) {\n\t\t\tcount = stride_length - (blk % stride_length);\n\t\t\tif (count > (num - j))\n\t\t\t\tcount = num - j;\n\t\t} else {\n\t\t\tcount = num - j;\n\t\t\tif (count > stride_length)\n\t\t\t\tcount = stride_length;\n\t\t}\n\t\tretval = io_channel_write_blk64(fs->io, blk, count, buf);\n\t\tif (retval) {\n\t\t\tif (ret_count)\n\t\t\t\t*ret_count = count;\n\t\t\tif (ret_blk)\n\t\t\t\t*ret_blk = blk;\n\t\t\treturn retval;\n\t\t}\n\t\tj += count; blk += count;\n\t}\n\treturn 0;\n", "Selected Statement": "if (retval)", "Function Input": {"fs": {"value": null}}, "Variable Values Before Statement": {"retval": "errcode_t"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define MAX_STRIDE_LENGTH (4194304 / (int) fs->blocksize)\nerrcode_t ext2fs_zero_blocks2(ext2_filsys fs, blk64_t blk, int num,\n\t\t\t      blk64_t *ret_blk, int *ret_count)\n{\n\tint\t\tj, count;\n\tstatic void\t*buf;\n\tstatic int\tstride_length;\n\terrcode_t\tretval;\n\n\t\n\tif (!fs) {\n\t\tif (buf) {\n\t\t\tfree(buf);\n\t\t\tbuf = 0;\n\t\t\tstride_length = 0;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t\n\tif (num <= 0)\n\t\treturn 0;\n\n\t\n\tretval = io_channel_zeroout(fs->io, blk, num);\n\tif (retval == 0)\n\t\treturn 0;\n\n\t\n\tif (num > stride_length && stride_length < MAX_STRIDE_LENGTH) {\n\t\tvoid *p;\n\t\tint new_stride = num;\n\n\t\tif (new_stride > MAX_STRIDE_LENGTH)\n\t\t\tnew_stride = MAX_STRIDE_LENGTH;\n\t\tp = realloc(buf, fs->blocksize * new_stride);\n\t\tif (!p)\n\t\t\treturn EXT2_ET_NO_MEMORY;\n\t\tbuf = p;\n\t\tstride_length = new_stride;\n\t\tmemset(buf, 0, fs->blocksize * stride_length);\n\t}\n\t\n\tj=0;\n\twhile (j < num) {\n\t\tif (blk % stride_length) {\n\t\t\tcount = stride_length - (blk % stride_length);\n\t\t\tif (count > (num - j))\n\t\t\t\tcount = num - j;\n\t\t} else {\n\t\t\tcount = num - j;\n\t\t\tif (count > stride_length)\n\t\t\t\tcount = stride_length;\n\t\t}\n\t\tretval = io_channel_write_blk64(fs->io, blk, count, buf);\n\t\tif (retval) {\n\t\t\tif (ret_count)\n\t\t\t\t*ret_count = count;\n\t\t\tif (ret_blk)\n\t\t\t\t*ret_blk = blk;\n\t\t\treturn retval;\n\t\t}\n\t\tj += count; blk += count;\n\t}\n\treturn 0;\n", "Selected Statement": "if ((retval = ext2fs_write_new_inode(fs, journal_ino, &inode)))", "Function Input": {"fs": {"value": null}}, "Variable Values Before Statement": {"retval": "errcode_t", "ext2fs_write_new_inode": "NULL", "fs": "ext2_filsys", "journal_ino": "NULL", "inode": "NULL"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define MAX_STRIDE_LENGTH (4194304 / (int) fs->blocksize)\nerrcode_t ext2fs_zero_blocks2(ext2_filsys fs, blk64_t blk, int num,\n\t\t\t      blk64_t *ret_blk, int *ret_count)\n{\n\tint\t\tj, count;\n\tstatic void\t*buf;\n\tstatic int\tstride_length;\n\terrcode_t\tretval;\n\n\t\n\tif (!fs) {\n\t\tif (buf) {\n\t\t\tfree(buf);\n\t\t\tbuf = 0;\n\t\t\tstride_length = 0;\n\t\t}\n\t\treturn 0;\n\t}\n\n\t\n\tif (num <= 0)\n\t\treturn 0;\n\n\t\n\tretval = io_channel_zeroout(fs->io, blk, num);\n\tif (retval == 0)\n\t\treturn 0;\n\n\t\n\tif (num > stride_length && stride_length < MAX_STRIDE_LENGTH) {\n\t\tvoid *p;\n\t\tint new_stride = num;\n\n\t\tif (new_stride > MAX_STRIDE_LENGTH)\n\t\t\tnew_stride = MAX_STRIDE_LENGTH;\n\t\tp = realloc(buf, fs->blocksize * new_stride);\n\t\tif (!p)\n\t\t\treturn EXT2_ET_NO_MEMORY;\n\t\tbuf = p;\n\t\tstride_length = new_stride;\n\t\tmemset(buf, 0, fs->blocksize * stride_length);\n\t}\n\t\n\tj=0;\n\twhile (j < num) {\n\t\tif (blk % stride_length) {\n\t\t\tcount = stride_length - (blk % stride_length);\n\t\t\tif (count > (num - j))\n\t\t\t\tcount = num - j;\n\t\t} else {\n\t\t\tcount = num - j;\n\t\t\tif (count > stride_length)\n\t\t\t\tcount = stride_length;\n\t\t}\n\t\tretval = io_channel_write_blk64(fs->io, blk, count, buf);\n\t\tif (retval) {\n\t\t\tif (ret_count)\n\t\t\t\t*ret_count = count;\n\t\t\tif (ret_blk)\n\t\t\t\t*ret_blk = blk;\n\t\t\treturn retval;\n\t\t}\n\t\tj += count; blk += count;\n\t}\n\treturn 0;\n", "Selected Statement": "if (!fs)", "Function Input": {"fs": {"value": null}}, "Variable Values Before Statement": {"fs": "ext2_filsys"}, "Value After Statement Execution": "Yes", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n#include \"ext2fs/ext2fs.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\n  enum FuzzerType {\n    ext2fsReadBlockBitmap,\n    ext2fsReadInodeBitmap,\n    kMaxValue = ext2fsReadInodeBitmap\n  };\n\n  FuzzedDataProvider stream(data, size);\n  const FuzzerType f = stream.ConsumeEnum<FuzzerType>();\n  (void) stream.ConsumeIntegral<int>();\n\n  static const char* fname = \"ext2_test_file\";\n\n  \n  int fd = syscall(SYS_memfd_create, fname, 0);\n  std::vector<char> buffer = stream.ConsumeRemainingBytes<char>();\n  write(fd, buffer.data(), buffer.size());\n\n  std::string fspath(\"/proc/self/fd/\" + std::to_string(fd));\n\n  ext2_filsys fs;\n  errcode_t retval = ext2fs_open(\n      fspath.c_str(),\n      EXT2_FLAG_IGNORE_CSUM_ERRORS, 0, 0,\n      unix_io_manager,\n      &fs);\n\n  if (!retval) {\n    switch (f) {\n      case ext2fsReadBlockBitmap: {\n        ext2fs_read_block_bitmap(fs);\n        break;\n      }\n      case ext2fsReadInodeBitmap: {\n        ext2fs_read_inode_bitmap(fs);\n        break;\n      }\n      default: {\n        assert(false);\n      }\n    }\n    ext2fs_close(fs);\n  }\n  close(fd);\n\n  return 0;\n", "Selected Statement": "if (!retval)", "Function Input": {"data": {"value": "0x1014b60 \"PP\\001\\001\""}, "size": {"value": "16867424"}}, "Variable Values Before Statement": {"retval": "errcode_t"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n#include \"ext2fs/ext2fs.h\"\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n  static const char* fname = \"/tmp/ext2_test_file\";\n\n  \n  int fd = open(fname, O_RDWR|O_CREAT|O_TRUNC);\n  write(fd, data, size);\n  close(fd);\n\n  ext2_filsys fs;\n  errcode_t retval = ext2fs_open(\n      fname,\n      EXT2_FLAG_IGNORE_CSUM_ERRORS, 0, 0,\n      unix_io_manager,\n      &fs);\n\n  if (!retval) {\n    retval = ext2fs_check_directory(fs, EXT2_ROOT_INO);\n    ext2fs_close(fs);\n  }\n\n", "Selected Statement": "if (!retval)", "Function Input": {"data": {"value": "0xfe1b70 \"` \\376\""}, "size": {"value": "16658544"}}, "Variable Values Before Statement": {"retval": "errcode_t"}, "Value After Statement Execution": "No", "Project Information": "e2fsprogs"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "  pr_alarms_unblock();\n}\n\nstruct pool_rec *make_sub_pool(struct pool_rec *p) {\n  union block_hdr *blok;\n  pool *new_pool;\n\n  pr_alarms_block();\n\n  blok = new_block(0, FALSE);\n\n  new_pool = (pool *) blok->h.first_avail;\n  blok->h.first_avail = POOL_HDR_BYTES + (char *) blok->h.first_avail;\n\n  memset(new_pool, 0, sizeof(struct pool_rec));\n  new_pool->free_first_avail = blok->h.first_avail;\n  new_pool->first = new_pool->last = blok;\n\n  if (p != NULL) {\n    new_pool->parent = p;\n    new_pool->sub_next = p->sub_pools;\n\n    if (new_pool->sub_next != NULL) {\n      new_pool->sub_next->sub_prev = new_pool;\n    }\n\n    p->sub_pools = new_pool;\n  }\n\n  pr_alarms_unblock();\n\n", "Selected Statement": "if (nelts < 1)", "Function Input": {}, "Variable Values Before Statement": {"nelts": "NULL"}, "Value After Statement Execution": "No", "Project Information": "proftpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * block/unblock functions.\n */\n\nvoid pr_alarms_block(void) {\n  ++alarms_blocked;\n", "Selected Statement": "if (siginterrupt(SIGALRM, 1) < 0)", "Function Input": {}, "Variable Values Before Statement": {"siginterrupt": "NULL", "SIGALRM": "NULL"}, "Value After Statement Execution": "No", "Project Information": "proftpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n\nint init_json(void) {\n  json_set_oom(json_oom);\n", "Selected Statement": "if (val == NULL)", "Function Input": {}, "Variable Values Before Statement": {"val": "NULL"}, "Value After Statement Execution": "No", "Project Information": "proftpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n\nint init_json(void) {\n  json_set_oom(json_oom);\n", "Selected Statement": "if (val_type < 0)", "Function Input": {}, "Variable Values Before Statement": {"val_type": "NULL"}, "Value After Statement Execution": "No", "Project Information": "proftpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static int tag_is_valid(unsigned int tag);\nstatic int number_is_valid(const char *num);\n\nvoid json_set_oom(void (*oom)(void)) {\n\tjson_oom = (oom != NULL ? oom : default_oom);\n", "Selected Statement": "if (*s == '}')", "Function Input": {}, "Variable Values Before Statement": {"s": "NULL"}, "Value After Statement Execution": "No", "Project Information": "proftpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static int tag_is_valid(unsigned int tag);\nstatic int number_is_valid(const char *num);\n\nvoid json_set_oom(void (*oom)(void)) {\n\tjson_oom = (oom != NULL ? oom : default_oom);\n", "Selected Statement": "if (expect_literal(&s, \"true\"))", "Function Input": {}, "Variable Values Before Statement": {"expect_literal": "NULL", "s": "NULL"}, "Value After Statement Execution": "No", "Project Information": "proftpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "  return 0;\n}\n\nint pr_trace_msg(const char *channel, int level, const char *fmt, ...) {\n  int res;\n  va_list msg;\n\n  if (channel == NULL ||\n      fmt == NULL ||\n      level <= 0) {\n    errno = EINVAL;\n    return -1;\n  }\n\n  \n  if (trace_logfd < 0 &&\n      pr_log_event_listening(PR_LOG_TYPE_TRACELOG) <= 0) {\n    return 0;\n  }\n\n  va_start(msg, fmt);\n  res = pr_trace_vmsg(channel, level, fmt, msg);\n  va_end(msg);\n\n  return res;\n", "Selected Statement": "if (use_stderr)", "Function Input": {}, "Variable Values Before Statement": {"use_stderr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "proftpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "  return 0;\n}\n\nint pr_log_event_listening(unsigned int log_type) {\n  const char *event_name;\n  int res;\n\n  event_name = get_log_event_name(log_type);\n  if (event_name == NULL) {\n    return FALSE;\n  }\n\n  res = pr_event_listening(event_name);\n  if (res <= 0) {\n    return FALSE;\n  }\n\n  return TRUE;\n", "Selected Statement": "if (!S_ISDIR(st.st_mode))", "Function Input": {}, "Variable Values Before Statement": {"S_ISDIR": "NULL", "st.st_mode": "NULL"}, "Value After Statement Execution": "No", "Project Information": "proftpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "  return 0;\n}\n\nint pr_log_event_listening(unsigned int log_type) {\n  const char *event_name;\n  int res;\n\n  event_name = get_log_event_name(log_type);\n  if (event_name == NULL) {\n    return FALSE;\n  }\n\n  res = pr_event_listening(event_name);\n  if (res <= 0) {\n    return FALSE;\n  }\n\n  return TRUE;\n", "Selected Statement": "if (stat(lf, &st) < 0)", "Function Input": {}, "Variable Values Before Statement": {"stat": "NULL", "lf": "NULL", "st": "NULL"}, "Value After Statement Execution": "No", "Project Information": "proftpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "  return 0;\n}\n\nint pr_log_event_listening(unsigned int log_type) {\n  const char *event_name;\n  int res;\n\n  event_name = get_log_event_name(log_type);\n  if (event_name == NULL) {\n    return FALSE;\n  }\n\n  res = pr_event_listening(event_name);\n  if (res <= 0) {\n    return FALSE;\n  }\n\n  return TRUE;\n", "Selected Statement": "if (res <= 0)", "Function Input": {}, "Variable Values Before Statement": {"res": "int"}, "Value After Statement Execution": "Yes", "Project Information": "proftpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "  return 0;\n}\n\nint pr_event_listening(const char *event) {\n  struct event_list *evl;\n  int count = 0;\n\n  if (event == NULL) {\n    errno = EINVAL;\n    return -1;\n  }\n\n  if (events == NULL) {\n    \n    return 0;\n  }\n\n  \n  for (evl = events; evl; evl = evl->next) {\n\n    if (strncmp(evl->event, event, evl->event_len + 1) == 0) {\n      struct event_handler *evh;\n\n      \n      if (evl->handlers == NULL) {\n        return 0;\n      }\n\n      for (evh = evl->handlers; evh; evh = evh->next) {\n        count++;\n      }\n\n      break;\n    }\n  }\n\n  return count;\n", "Selected Statement": "if (strcmp(event, untraced_events[i]) == 0)", "Function Input": {}, "Variable Values Before Statement": {"strcmp": "NULL", "event": "NULL", "untraced_events": "NULL", "i": "NULL"}, "Value After Statement Execution": "No", "Project Information": "proftpd"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nmock_module_init (void)\n{\n\tstatic bool initialized = false;\n\tif (!initialized) {\n\t\tp11_mutex_init (&init_mutex);\n\t\tinitialized = true;\n\t}\n", "Selected Statement": "if (result->ulValueLen < attr->ulValueLen)", "Function Input": {}, "Variable Values Before Statement": {"result->ulValueLen": "NULL", "attr->ulValueLen": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nmock_module_init (void)\n{\n\tstatic bool initialized = false;\n\tif (!initialized) {\n\t\tp11_mutex_init (&init_mutex);\n\t\tinitialized = true;\n\t}\n", "Selected Statement": "if (!initialized)", "Function Input": {}, "Variable Values Before Statement": {"initialized": "_Bool"}, "Value After Statement Execution": "Yes", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\np11_library_init (void)\n{\n\tp11_library_init_impl ();\n", "Selected Statement": "if (thread_local == TLS_OUT_OF_INDEXES)", "Function Input": {}, "Variable Values Before Statement": {"thread_local": "NULL", "TLS_OUT_OF_INDEXES": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\np11_library_init (void)\n{\n\tp11_library_init_impl ();\n", "Selected Statement": "if (thread_local != TLS_OUT_OF_INDEXES)", "Function Input": {}, "Variable Values Before Statement": {"thread_local": "NULL", "TLS_OUT_OF_INDEXES": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\np11_debug_init (void)\n{\n\tp11_debug_current_flags = parse_environ_flags ();\n", "Selected Statement": "if (debug_strict)", "Function Input": {}, "Variable Values Before Statement": {"debug_strict": "_Bool"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\np11_debug_init (void)\n{\n\tp11_debug_current_flags = parse_environ_flags ();\n", "Selected Statement": "if (env && env[0] != '\\0')", "Function Input": {}, "Variable Values Before Statement": {"env": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nchar *\nsecure_getenv (const char *name)\n{\n\tif (_p11_getauxval (AT_SECURE))\n\t\treturn NULL;\n\treturn getenv (name);\n", "Selected Statement": "if (!S_ISDIR(sbuf.st_mode))", "Function Input": {}, "Variable Values Before Statement": {"S_ISDIR": "NULL", "sbuf.st_mode": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nchar *\nsecure_getenv (const char *name)\n{\n\tif (_p11_getauxval (AT_SECURE))\n\t\treturn NULL;\n\treturn getenv (name);\n", "Selected Statement": "if (ret != NULL)", "Function Input": {}, "Variable Values Before Statement": {"ret": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "bool\np11_buffer_init (p11_buffer *buffer,\n                 size_t reserve)\n{\n\tp11_buffer_init_full (buffer, NULL, 0, 0, realloc, free);\n", "Selected Statement": "if (reserve > buffer->size)", "Function Input": {"buffer": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"data": {"type_category": "pointer", "concrete_type": "VOID"}, "len": {"type_category": "unknown", "concrete_type": "size_t", "value": "4990335"}, "flags": {"type_category": "int", "concrete_type": "int", "value": "-134424566"}, "size": {"type_category": "unknown", "concrete_type": "size_t", "value": "0"}, "frealloc": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdf00", "value": {"type_category": "unknown", "concrete_type": "unknown", "value": "{void *(void *, size_t)} 0x7fffffffdf58"}}, "ffree": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdf08", "value": {"type_category": "unknown", "concrete_type": "unknown", "value": "{void (void *)} 0x1305080"}}}}}}, "Variable Values Before Statement": {"reserve": "0", "buffer->size": "0"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "bool\np11_buffer_init (p11_buffer *buffer,\n                 size_t reserve)\n{\n\tp11_buffer_init_full (buffer, NULL, 0, 0, realloc, free);\n", "Selected Statement": "if (!data && size > 0)", "Function Input": {"buffer": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"data": {"type_category": "pointer", "concrete_type": "VOID"}, "len": {"type_category": "unknown", "concrete_type": "size_t", "value": "4990335"}, "flags": {"type_category": "int", "concrete_type": "int", "value": "-134424566"}, "size": {"type_category": "unknown", "concrete_type": "size_t", "value": "0"}, "frealloc": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdf00", "value": {"type_category": "unknown", "concrete_type": "unknown", "value": "{void *(void *, size_t)} 0x7fffffffdf58"}}, "ffree": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdf08", "value": {"type_category": "unknown", "concrete_type": "unknown", "value": "{void (void *)} 0x1305080"}}}}}}, "Variable Values Before Statement": {"data": "NULL", "size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                  CK_X_FUNCTION_LIST *funcs,\n                  void *lower_module,\n                  p11_destroyer lower_destroy)\n{\n\tmemcpy (virt, funcs, sizeof (CK_X_FUNCTION_LIST));\n\tvirt->lower_module = lower_module;\n\tvirt->lower_destroy = lower_destroy;\n", "Selected Statement": "if (count == NULL)", "Function Input": {}, "Variable Values Before Statement": {"count": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                  CK_X_FUNCTION_LIST *funcs,\n                  void *lower_module,\n                  p11_destroyer lower_destroy)\n{\n\tmemcpy (virt, funcs, sizeof (CK_X_FUNCTION_LIST));\n\tvirt->lower_module = lower_module;\n\tvirt->lower_destroy = lower_destroy;\n", "Selected Statement": "if (fixed_closures[i] == (CK_FUNCTION_LIST_3_0 *)module)", "Function Input": {}, "Variable Values Before Statement": {"fixed_closures": "ARRAY", "i": "NULL", "module": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "              p11_dict_equals equal_func,\n              p11_destroyer key_destroy_func,\n              p11_destroyer value_destroy_func)\n{\n\tp11_dict *dict;\n\n\tassert (hash_func);\n\tassert (equal_func);\n\n\tdict = malloc (sizeof (p11_dict));\n\tif (dict) {\n\t\tdict->hash_func = hash_func;\n\t\tdict->equal_func = equal_func;\n\t\tdict->key_destroy_func = key_destroy_func;\n\t\tdict->value_destroy_func = value_destroy_func;\n\n\t\tdict->num_buckets = 9;\n\t\tdict->buckets = (dictbucket **)calloc (dict->num_buckets, sizeof (dictbucket *));\n\t\tif (!dict->buckets) {\n\t\t\tfree (dict);\n\t\t\treturn NULL;\n\t\t}\n\n\t\tdict->num_items = 0;\n\t}\n\n\treturn dict;\n", "Selected Statement": "if (dict->buckets)", "Function Input": {}, "Variable Values Before Statement": {"dict->buckets": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "              p11_dict_equals equal_func,\n              p11_destroyer key_destroy_func,\n              p11_destroyer value_destroy_func)\n{\n\tp11_dict *dict;\n\n\tassert (hash_func);\n\tassert (equal_func);\n\n\tdict = malloc (sizeof (p11_dict));\n\tif (dict) {\n\t\tdict->hash_func = hash_func;\n\t\tdict->equal_func = equal_func;\n\t\tdict->key_destroy_func = key_destroy_func;\n\t\tdict->value_destroy_func = value_destroy_func;\n\n\t\tdict->num_buckets = 9;\n\t\tdict->buckets = (dictbucket **)calloc (dict->num_buckets, sizeof (dictbucket *));\n\t\tif (!dict->buckets) {\n\t\t\tfree (dict);\n\t\t\treturn NULL;\n\t\t}\n\n\t\tdict->num_items = 0;\n\t}\n\n\treturn dict;\n", "Selected Statement": "if (dict->value_destroy_func)", "Function Input": {}, "Variable Values Before Statement": {"dict->value_destroy_func": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "              p11_dict_equals equal_func,\n              p11_destroyer key_destroy_func,\n              p11_destroyer value_destroy_func)\n{\n\tp11_dict *dict;\n\n\tassert (hash_func);\n\tassert (equal_func);\n\n\tdict = malloc (sizeof (p11_dict));\n\tif (dict) {\n\t\tdict->hash_func = hash_func;\n\t\tdict->equal_func = equal_func;\n\t\tdict->key_destroy_func = key_destroy_func;\n\t\tdict->value_destroy_func = value_destroy_func;\n\n\t\tdict->num_buckets = 9;\n\t\tdict->buckets = (dictbucket **)calloc (dict->num_buckets, sizeof (dictbucket *));\n\t\tif (!dict->buckets) {\n\t\t\tfree (dict);\n\t\t\treturn NULL;\n\t\t}\n\n\t\tdict->num_items = 0;\n\t}\n\n\treturn dict;\n", "Selected Statement": "if (dict)", "Function Input": {}, "Variable Values Before Statement": {"dict": {"hash_func": null, "equal_func": null, "key_destroy_func": null, "value_destroy_func": null, "buckets": null, "num_items": "0", "num_buckets": "0"}}, "Value After Statement Execution": "Yes", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nCK_ATTRIBUTE *\np11_attrs_dup (const CK_ATTRIBUTE *attrs)\n{\n\tCK_ULONG count;\n\n\tcount = p11_attrs_count (attrs);\n", "Selected Statement": "if (!attr)", "Function Input": {"attrs": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"type": {"type_category": "unknown", "concrete_type": "CK_ATTRIBUTE_TYPE", "value": "7287248"}, "pValue": {"type_category": "pointer", "concrete_type": "VOID"}, "ulValueLen": {"type_category": "int", "concrete_type": "unsigned long", "value": "0"}}}}}, "Variable Values Before Statement": {"attr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nCK_ATTRIBUTE *\np11_attrs_dup (const CK_ATTRIBUTE *attrs)\n{\n\tCK_ULONG count;\n\n\tcount = p11_attrs_count (attrs);\n", "Selected Statement": "if (vasprintf (&string, format, va) < 0)", "Function Input": {"attrs": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"type": {"type_category": "unknown", "concrete_type": "CK_ATTRIBUTE_TYPE", "value": "7287248"}, "pValue": {"type_category": "pointer", "concrete_type": "VOID"}, "ulValueLen": {"type_category": "int", "concrete_type": "unsigned long", "value": "0"}}}}}, "Variable Values Before Statement": {"vasprintf": "NULL", "string": "NULL", "format": "NULL", "va": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "p11_rpc_server_handle (CK_X_FUNCTION_LIST *self,\n                       p11_buffer *request,\n                       p11_buffer *response)\n{\n\tp11_rpc_message msg;\n\tCK_RV ret;\n\tint req_id;\n\n\treturn_val_if_fail (self != NULL, false);\n\treturn_val_if_fail (request != NULL, false);\n\treturn_val_if_fail (response != NULL, false);\n\n\tp11_message_clear ();\n\n\tp11_rpc_message_init (&msg, request, response);\n\n\tif (!p11_rpc_message_parse (&msg, P11_RPC_REQUEST)) {\n\t\tp11_rpc_message_clear (&msg);\n\t\tp11_message (_(\"couldn't parse pkcs11 rpc message\"));\n\t\treturn false;\n\t}\n\n\t\n\tassert (msg.call_id > P11_RPC_CALL_ERROR);\n\tassert (msg.call_id < P11_RPC_CALL_MAX);\n\treq_id = msg.call_id;\n\n\tswitch(req_id) {\n\t#define CASE_CALL(name) \\\n\tcase P11_RPC_CALL_##name: \\\n\t\tret = rpc_##name (self, &msg); \\\n\t\tbreak;\n\tCASE_CALL (C_Initialize)\n\tCASE_CALL (C_Finalize)\n\tCASE_CALL (C_GetInfo)\n\tCASE_CALL (C_GetSlotList)\n\tCASE_CALL (C_GetSlotInfo)\n\tCASE_CALL (C_GetTokenInfo)\n\tCASE_CALL (C_GetMechanismList)\n\tCASE_CALL (C_GetMechanismInfo)\n\tCASE_CALL (C_InitToken)\n\tCASE_CALL (C_OpenSession)\n\tCASE_CALL (C_CloseSession)\n\tCASE_CALL (C_CloseAllSessions)\n\tCASE_CALL (C_GetSessionInfo)\n\tCASE_CALL (C_InitPIN)\n\tCASE_CALL (C_SetPIN)\n\tCASE_CALL (C_GetOperationState)\n\tCASE_CALL (C_SetOperationState)\n\tCASE_CALL (C_Login)\n\tCASE_CALL (C_Logout)\n\tCASE_CALL (C_CreateObject)\n\tCASE_CALL (C_CopyObject)\n\tCASE_CALL (C_DestroyObject)\n\tCASE_CALL (C_GetObjectSize)\n\tCASE_CALL (C_GetAttributeValue)\n\tCASE_CALL (C_SetAttributeValue)\n\tCASE_CALL (C_FindObjectsInit)\n\tCASE_CALL (C_FindObjects)\n\tCASE_CALL (C_FindObjectsFinal)\n\tCASE_CALL (C_EncryptInit)\n\tCASE_CALL (C_Encrypt)\n\tCASE_CALL (C_EncryptUpdate)\n\tCASE_CALL (C_EncryptFinal)\n\tCASE_CALL (C_DecryptInit)\n\tCASE_CALL (C_Decrypt)\n\tCASE_CALL (C_DecryptUpdate)\n\tCASE_CALL (C_DecryptFinal)\n\tCASE_CALL (C_DigestInit)\n\tCASE_CALL (C_Digest)\n\tCASE_CALL (C_DigestUpdate)\n\tCASE_CALL (C_DigestKey)\n\tCASE_CALL (C_DigestFinal)\n\tCASE_CALL (C_SignInit)\n\tCASE_CALL (C_Sign)\n\tCASE_CALL (C_SignUpdate)\n\tCASE_CALL (C_SignFinal)\n\tCASE_CALL (C_SignRecoverInit)\n\tCASE_CALL (C_SignRecover)\n\tCASE_CALL (C_VerifyInit)\n\tCASE_CALL (C_Verify)\n\tCASE_CALL (C_VerifyUpdate)\n\tCASE_CALL (C_VerifyFinal)\n\tCASE_CALL (C_VerifyRecoverInit)\n\tCASE_CALL (C_VerifyRecover)\n\tCASE_CALL (C_DigestEncryptUpdate)\n\tCASE_CALL (C_DecryptDigestUpdate)\n\tCASE_CALL (C_SignEncryptUpdate)\n\tCASE_CALL (C_DecryptVerifyUpdate)\n\tCASE_CALL (C_GenerateKey)\n\tCASE_CALL (C_GenerateKeyPair)\n\tCASE_CALL (C_WrapKey)\n\tCASE_CALL (C_UnwrapKey)\n\tCASE_CALL (C_DeriveKey)\n\tCASE_CALL (C_SeedRandom)\n\tCASE_CALL (C_GenerateRandom)\n\tCASE_CALL (C_WaitForSlotEvent)\n\t\n\tCASE_CALL (C_LoginUser)\n\tCASE_CALL (C_SessionCancel)\n\tCASE_CALL (C_MessageEncryptInit)\n\tCASE_CALL (C_EncryptMessage)\n\tCASE_CALL (C_EncryptMessageBegin)\n\tCASE_CALL (C_EncryptMessageNext)\n\tCASE_CALL (C_MessageEncryptFinal)\n\tCASE_CALL (C_MessageDecryptInit)\n\tCASE_CALL (C_DecryptMessage)\n\tCASE_CALL (C_DecryptMessageBegin)\n\tCASE_CALL (C_DecryptMessageNext)\n\tCASE_CALL (C_MessageDecryptFinal)\n\tCASE_CALL (C_MessageSignInit)\n\tCASE_CALL (C_SignMessage)\n\tCASE_CALL (C_SignMessageBegin)\n\tCASE_CALL (C_SignMessageNext)\n\tCASE_CALL (C_MessageSignFinal)\n\tCASE_CALL (C_MessageVerifyInit)\n\tCASE_CALL (C_VerifyMessage)\n\tCASE_CALL (C_VerifyMessageBegin)\n\tCASE_CALL (C_VerifyMessageNext)\n\tCASE_CALL (C_MessageVerifyFinal)\n\n\tCASE_CALL (C_InitToken2)\n\t#undef CASE_CALL\n\tdefault:\n\t\t\n\t\tassert (0 && \"Unchecked call\");\n\t\tbreak;\n\t};\n\n\tif (p11_buffer_failed (msg.output)) {\n\t\tp11_message (_(\"out of memory error putting together message\"));\n\t\tp11_rpc_message_clear (&msg);\n\t\treturn false;\n\t}\n\n\t\n\tif (ret == CKR_OK) {\n\n\t\t\n\t\tassert (p11_rpc_message_is_verified (&msg));\n\t\tassert (msg.call_type == P11_RPC_RESPONSE);\n\t\tassert (msg.call_id == req_id);\n\t\tassert (p11_rpc_calls[msg.call_id].response);\n\t\tassert (strcmp (p11_rpc_calls[msg.call_id].response, msg.signature) == 0);\n\n\t\n\t} else {\n\t\tif (!p11_rpc_message_prep (&msg, P11_RPC_CALL_ERROR, P11_RPC_RESPONSE) ||\n\t\t    !p11_rpc_message_write_ulong (&msg, (uint32_t)ret) ||\n\t\t    p11_buffer_failed (msg.output)) {\n\t\t\tp11_message (_(\"out of memory responding with error\"));\n\t\t\tp11_rpc_message_clear (&msg);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tp11_rpc_message_clear (&msg);\n\treturn true;\n", "Selected Statement": "if (!p11_rpc_message_write_ulong_array (msg, array, len))", "Function Input": {"msg": {"value": {"call_id": {"type_category": "int", "concrete_type": "int", "value": "7278949"}, "call_type": {"type_category": "unknown", "concrete_type": "p11_rpc_message_type", "value": "0"}, "signature": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdf20 \"\\220Q0\\001\""}, "input": {"type_category": "pointer", "concrete_type": "NULL"}, "output": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdea0", "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"data": {"type_category": "pointer", "concrete_type": "VOID"}, "len": {"type_category": "unknown", "concrete_type": "size_t", "value": "0"}, "flags": {"type_category": "int", "concrete_type": "int", "value": "0"}, "size": {"type_category": "unknown", "concrete_type": "size_t", "value": "0"}, "frealloc": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdf40", "value": {"type_category": "unknown", "concrete_type": "unknown", "value": "{void *(void *, size_t)} 0x7ffff7cc0e80 <realloc>"}}, "ffree": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdf48", "value": {"type_category": "unknown", "concrete_type": "unknown", "value": "{void (void *)} 0x7ffff7cc06d0 <free>"}}}}}, "parsed": {"type_category": "unknown", "concrete_type": "size_t", "value": "19943552"}, "sigverify": {"type_category": "string", "concrete_type": "NULL"}, "extra": {"type_category": "pointer", "concrete_type": "VOID"}}}}, "Variable Values Before Statement": {"p11_rpc_message_write_ulong_array": "NULL", "msg": "NULL", "array": "NULL", "len": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "p11_rpc_server_handle (CK_X_FUNCTION_LIST *self,\n                       p11_buffer *request,\n                       p11_buffer *response)\n{\n\tp11_rpc_message msg;\n\tCK_RV ret;\n\tint req_id;\n\n\treturn_val_if_fail (self != NULL, false);\n\treturn_val_if_fail (request != NULL, false);\n\treturn_val_if_fail (response != NULL, false);\n\n\tp11_message_clear ();\n\n\tp11_rpc_message_init (&msg, request, response);\n\n\tif (!p11_rpc_message_parse (&msg, P11_RPC_REQUEST)) {\n\t\tp11_rpc_message_clear (&msg);\n\t\tp11_message (_(\"couldn't parse pkcs11 rpc message\"));\n\t\treturn false;\n\t}\n\n\t\n\tassert (msg.call_id > P11_RPC_CALL_ERROR);\n\tassert (msg.call_id < P11_RPC_CALL_MAX);\n\treq_id = msg.call_id;\n\n\tswitch(req_id) {\n\t#define CASE_CALL(name) \\\n\tcase P11_RPC_CALL_##name: \\\n\t\tret = rpc_##name (self, &msg); \\\n\t\tbreak;\n\tCASE_CALL (C_Initialize)\n\tCASE_CALL (C_Finalize)\n\tCASE_CALL (C_GetInfo)\n\tCASE_CALL (C_GetSlotList)\n\tCASE_CALL (C_GetSlotInfo)\n\tCASE_CALL (C_GetTokenInfo)\n\tCASE_CALL (C_GetMechanismList)\n\tCASE_CALL (C_GetMechanismInfo)\n\tCASE_CALL (C_InitToken)\n\tCASE_CALL (C_OpenSession)\n\tCASE_CALL (C_CloseSession)\n\tCASE_CALL (C_CloseAllSessions)\n\tCASE_CALL (C_GetSessionInfo)\n\tCASE_CALL (C_InitPIN)\n\tCASE_CALL (C_SetPIN)\n\tCASE_CALL (C_GetOperationState)\n\tCASE_CALL (C_SetOperationState)\n\tCASE_CALL (C_Login)\n\tCASE_CALL (C_Logout)\n\tCASE_CALL (C_CreateObject)\n\tCASE_CALL (C_CopyObject)\n\tCASE_CALL (C_DestroyObject)\n\tCASE_CALL (C_GetObjectSize)\n\tCASE_CALL (C_GetAttributeValue)\n\tCASE_CALL (C_SetAttributeValue)\n\tCASE_CALL (C_FindObjectsInit)\n\tCASE_CALL (C_FindObjects)\n\tCASE_CALL (C_FindObjectsFinal)\n\tCASE_CALL (C_EncryptInit)\n\tCASE_CALL (C_Encrypt)\n\tCASE_CALL (C_EncryptUpdate)\n\tCASE_CALL (C_EncryptFinal)\n\tCASE_CALL (C_DecryptInit)\n\tCASE_CALL (C_Decrypt)\n\tCASE_CALL (C_DecryptUpdate)\n\tCASE_CALL (C_DecryptFinal)\n\tCASE_CALL (C_DigestInit)\n\tCASE_CALL (C_Digest)\n\tCASE_CALL (C_DigestUpdate)\n\tCASE_CALL (C_DigestKey)\n\tCASE_CALL (C_DigestFinal)\n\tCASE_CALL (C_SignInit)\n\tCASE_CALL (C_Sign)\n\tCASE_CALL (C_SignUpdate)\n\tCASE_CALL (C_SignFinal)\n\tCASE_CALL (C_SignRecoverInit)\n\tCASE_CALL (C_SignRecover)\n\tCASE_CALL (C_VerifyInit)\n\tCASE_CALL (C_Verify)\n\tCASE_CALL (C_VerifyUpdate)\n\tCASE_CALL (C_VerifyFinal)\n\tCASE_CALL (C_VerifyRecoverInit)\n\tCASE_CALL (C_VerifyRecover)\n\tCASE_CALL (C_DigestEncryptUpdate)\n\tCASE_CALL (C_DecryptDigestUpdate)\n\tCASE_CALL (C_SignEncryptUpdate)\n\tCASE_CALL (C_DecryptVerifyUpdate)\n\tCASE_CALL (C_GenerateKey)\n\tCASE_CALL (C_GenerateKeyPair)\n\tCASE_CALL (C_WrapKey)\n\tCASE_CALL (C_UnwrapKey)\n\tCASE_CALL (C_DeriveKey)\n\tCASE_CALL (C_SeedRandom)\n\tCASE_CALL (C_GenerateRandom)\n\tCASE_CALL (C_WaitForSlotEvent)\n\t\n\tCASE_CALL (C_LoginUser)\n\tCASE_CALL (C_SessionCancel)\n\tCASE_CALL (C_MessageEncryptInit)\n\tCASE_CALL (C_EncryptMessage)\n\tCASE_CALL (C_EncryptMessageBegin)\n\tCASE_CALL (C_EncryptMessageNext)\n\tCASE_CALL (C_MessageEncryptFinal)\n\tCASE_CALL (C_MessageDecryptInit)\n\tCASE_CALL (C_DecryptMessage)\n\tCASE_CALL (C_DecryptMessageBegin)\n\tCASE_CALL (C_DecryptMessageNext)\n\tCASE_CALL (C_MessageDecryptFinal)\n\tCASE_CALL (C_MessageSignInit)\n\tCASE_CALL (C_SignMessage)\n\tCASE_CALL (C_SignMessageBegin)\n\tCASE_CALL (C_SignMessageNext)\n\tCASE_CALL (C_MessageSignFinal)\n\tCASE_CALL (C_MessageVerifyInit)\n\tCASE_CALL (C_VerifyMessage)\n\tCASE_CALL (C_VerifyMessageBegin)\n\tCASE_CALL (C_VerifyMessageNext)\n\tCASE_CALL (C_MessageVerifyFinal)\n\n\tCASE_CALL (C_InitToken2)\n\t#undef CASE_CALL\n\tdefault:\n\t\t\n\t\tassert (0 && \"Unchecked call\");\n\t\tbreak;\n\t};\n\n\tif (p11_buffer_failed (msg.output)) {\n\t\tp11_message (_(\"out of memory error putting together message\"));\n\t\tp11_rpc_message_clear (&msg);\n\t\treturn false;\n\t}\n\n\t\n\tif (ret == CKR_OK) {\n\n\t\t\n\t\tassert (p11_rpc_message_is_verified (&msg));\n\t\tassert (msg.call_type == P11_RPC_RESPONSE);\n\t\tassert (msg.call_id == req_id);\n\t\tassert (p11_rpc_calls[msg.call_id].response);\n\t\tassert (strcmp (p11_rpc_calls[msg.call_id].response, msg.signature) == 0);\n\n\t\n\t} else {\n\t\tif (!p11_rpc_message_prep (&msg, P11_RPC_CALL_ERROR, P11_RPC_RESPONSE) ||\n\t\t    !p11_rpc_message_write_ulong (&msg, (uint32_t)ret) ||\n\t\t    p11_buffer_failed (msg.output)) {\n\t\t\tp11_message (_(\"out of memory responding with error\"));\n\t\t\tp11_rpc_message_clear (&msg);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tp11_rpc_message_clear (&msg);\n\treturn true;\n", "Selected Statement": "if (!p11_rpc_message_parse (&msg, P11_RPC_REQUEST))", "Function Input": {"msg": {"value": {"call_id": {"type_category": "int", "concrete_type": "int", "value": "7278949"}, "call_type": {"type_category": "unknown", "concrete_type": "p11_rpc_message_type", "value": "0"}, "signature": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdf20 \"\\220Q0\\001\""}, "input": {"type_category": "pointer", "concrete_type": "NULL"}, "output": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdea0", "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"data": {"type_category": "pointer", "concrete_type": "VOID"}, "len": {"type_category": "unknown", "concrete_type": "size_t", "value": "0"}, "flags": {"type_category": "int", "concrete_type": "int", "value": "0"}, "size": {"type_category": "unknown", "concrete_type": "size_t", "value": "0"}, "frealloc": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdf40", "value": {"type_category": "unknown", "concrete_type": "unknown", "value": "{void *(void *, size_t)} 0x7ffff7cc0e80 <realloc>"}}, "ffree": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdf48", "value": {"type_category": "unknown", "concrete_type": "unknown", "value": "{void (void *)} 0x7ffff7cc06d0 <free>"}}}}}, "parsed": {"type_category": "unknown", "concrete_type": "size_t", "value": "19943552"}, "sigverify": {"type_category": "string", "concrete_type": "NULL"}, "extra": {"type_category": "pointer", "concrete_type": "VOID"}}}}, "Variable Values Before Statement": {"p11_rpc_message_parse": "NULL", "msg": {"call_id": "0", "call_type": "0", "signature": null, "input": null, "output": "{data = 0x1305190, len = 0, flags = 1, size = 0, frealloc = 0x7ffff7cc0e80 &lt;realloc&gt;, ffree = 0x7ffff7cc06d0 &lt;free&gt;}", "parsed": "0", "sigverify": null, "extra": null}, "P11_RPC_REQUEST": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\np11_message_clear (void)\n{\n\tchar *buffer;\n\tbuffer = p11_message_storage ();\n\tif (buffer != NULL)\n\t\tbuffer[0] = 0;\n", "Selected Statement": "if (p11_print_messages)", "Function Input": {}, "Variable Values Before Statement": {"p11_print_messages": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\np11_message_clear (void)\n{\n\tchar *buffer;\n\tbuffer = p11_message_storage ();\n\tif (buffer != NULL)\n\t\tbuffer[0] = 0;\n", "Selected Statement": "if (buffer != NULL)", "Function Input": {}, "Variable Values Before Statement": {"buffer": "0x7ffff7c23778 \"\""}, "Value After Statement Execution": "Yes", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\np11_message_clear (void)\n{\n\tchar *buffer;\n\tbuffer = p11_message_storage ();\n\tif (buffer != NULL)\n\t\tbuffer[0] = 0;\n", "Selected Statement": "if (length > P11_MESSAGE_MAX - 1)", "Function Input": {}, "Variable Values Before Statement": {"length": "NULL", "P11_MESSAGE_MAX": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "p11_rpc_message_init (p11_rpc_message *msg,\n                      p11_buffer *input,\n                      p11_buffer *output)\n{\n\tassert (input != NULL);\n\tassert (output != NULL);\n\tassert (output->ffree != NULL);\n\tassert (output->frealloc != NULL);\n\n\tmemset (msg, 0, sizeof (*msg));\n\n\tmsg->output = output;\n\tmsg->input = input;\n", "Selected Statement": "if (value_length != sizeof (CK_RSA_PKCS_OAEP_PARAMS))", "Function Input": {"input": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"data": {"type_category": "pointer", "concrete_type": "VOID"}, "len": {"type_category": "unknown", "concrete_type": "size_t", "value": "7171829"}, "flags": {"type_category": "int", "concrete_type": "int", "value": "0"}, "size": {"type_category": "unknown", "concrete_type": "size_t", "value": "140737488346912"}, "frealloc": {"type_category": "pointer", "concrete_type": "NULL"}, "ffree": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffde38", "value": {"type_category": "unknown", "concrete_type": "unknown", "value": "{void (void *)} 0x7fffffffde80"}}}}}, "msg": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"call_id": {"type_category": "int", "concrete_type": "int", "value": "0"}, "call_type": {"type_category": "unknown", "concrete_type": "p11_rpc_message_type", "value": "0"}, "signature": {"type_category": "string", "concrete_type": "NULL"}, "input": {"type_category": "pointer", "concrete_type": "NULL"}, "output": {"type_category": "pointer", "concrete_type": "NULL"}, "parsed": {"type_category": "unknown", "concrete_type": "size_t", "value": "0"}, "sigverify": {"type_category": "string", "concrete_type": "NULL"}, "extra": {"type_category": "pointer", "concrete_type": "NULL"}}}}, "output": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"data": {"type_category": "pointer", "concrete_type": "VOID"}, "len": {"type_category": "unknown", "concrete_type": "size_t", "value": "13906552813760349578"}, "flags": {"type_category": "int", "concrete_type": "int", "value": "-1570962040"}, "size": {"type_category": "unknown", "concrete_type": "size_t", "value": "13963209366481488104"}, "frealloc": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x6f4030 <thread_local_message+32>", "value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x98b4864fffffdd0\n", "message": "Cannot access memory at address 0x98b4864fffffdd0"}}, "ffree": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x6f4038 <thread_local_message+40>", "value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xf830fc83948\n", "message": "Cannot access memory at address 0xf830fc83948"}}}}}}, "Variable Values Before Statement": {"value_length": "NULL", "CK_RSA_PKCS_OAEP_PARAMS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "p11-kit"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned short *srcBuf = NULL;\n  unsigned char *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, 1, 0 },\n    { TJPF_BGR, 2, 2 },\n    { TJPF_RGBX, 3, 4 },\n    { TJPF_BGRA, 4, 7 },\n    { TJPF_XRGB, 5, 5 },\n    { TJPF_GRAY, 6, 3 },\n    { TJPF_CMYK, 7, 0 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 0 || ti == 6 ? 1 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage16(handle, filename, &width, 1, &height,\n                                 &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, TJSAMP_444);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_LOSSLESS, 1);\n    tj3Set(handle, TJPARAM_LOSSLESSPSV, tests[ti].psv);\n    tj3Set(handle, TJPARAM_LOSSLESSPT, tests[ti].pt);\n    if (tj3Compress16(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                      &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (fd >= 0)", "Function Input": {"data": {"value": "0x1108b30 \" \\220\\020\\001\""}, "size": {"value": "17866800"}}, "Variable Values Before Statement": {"fd": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned short *srcBuf = NULL;\n  unsigned char *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, 1, 0 },\n    { TJPF_BGR, 2, 2 },\n    { TJPF_RGBX, 3, 4 },\n    { TJPF_BGRA, 4, 7 },\n    { TJPF_XRGB, 5, 5 },\n    { TJPF_GRAY, 6, 3 },\n    { TJPF_CMYK, 7, 0 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 0 || ti == 6 ? 1 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage16(handle, filename, &width, 1, &height,\n                                 &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, TJSAMP_444);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_LOSSLESS, 1);\n    tj3Set(handle, TJPARAM_LOSSLESSPSV, tests[ti].psv);\n    tj3Set(handle, TJPARAM_LOSSLESSPT, tests[ti].pt);\n    if (tj3Compress16(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                      &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)", "Function Input": {"data": {"value": "0x1108b30 \" \\220\\020\\001\""}, "size": {"value": "17866800"}}, "Variable Values Before Statement": {"fd": "int", "mkstemp": "NULL", "filename": "\"/tmp/libjpeg-turbo_compress_fuzzwrite": "NULL", "data": "0x110a030 \"\"", "size": "0"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned short *srcBuf = NULL;\n  unsigned char *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, 1, 0 },\n    { TJPF_BGR, 2, 2 },\n    { TJPF_RGBX, 3, 4 },\n    { TJPF_BGRA, 4, 7 },\n    { TJPF_XRGB, 5, 5 },\n    { TJPF_GRAY, 6, 3 },\n    { TJPF_CMYK, 7, 0 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 0 || ti == 6 ? 1 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage16(handle, filename, &width, 1, &height,\n                                 &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, TJSAMP_444);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_LOSSLESS, 1);\n    tj3Set(handle, TJPARAM_LOSSLESSPSV, tests[ti].psv);\n    tj3Set(handle, TJPARAM_LOSSLESSPT, tests[ti].pt);\n    if (tj3Compress16(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                      &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (strlen(filename) > 0)", "Function Input": {"data": {"value": "0x1108b30 \" \\220\\020\\001\""}, "size": {"value": "17866800"}}, "Variable Values Before Statement": {"strlen": "NULL", "filename": "\"/tmp/libjpeg-turbo_compress_fuzz.zy8hx}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nDLLEXPORT tjhandle tj3Init(int initType)\n{\n  static const char FUNCTION_NAME[] = \"tj3Init\";\n  tjinstance *this = NULL;\n  tjhandle retval = NULL;\n\n  if (initType < 0 || initType >= TJ_NUMINIT)\n    THROWG(\"Invalid argument\", NULL);\n\n  if ((this = (tjinstance *)malloc(sizeof(tjinstance))) == NULL)\n    THROWG(\"Memory allocation failure\", NULL);\n  memset(this, 0, sizeof(tjinstance));\n  SNPRINTF(this->errStr, JMSG_LENGTH_MAX, \"No error\");\n\n  this->quality = -1;\n  this->subsamp = TJSAMP_UNKNOWN;\n  this->jpegWidth = -1;\n  this->jpegHeight = -1;\n  this->precision = 8;\n  this->colorspace = -1;\n  this->losslessPSV = 1;\n  this->xDensity = 1;\n  this->yDensity = 1;\n  this->scalingFactor = TJUNSCALED;\n\n  switch (initType) {\n  case TJINIT_COMPRESS:  return _tjInitCompress(this);\n  case TJINIT_DECOMPRESS:  return _tjInitDecompress(this);\n  case TJINIT_TRANSFORM:\n    retval = _tjInitCompress(this);\n    if (!retval) return NULL;\n    retval = _tjInitDecompress(this);\n    return retval;\n  }\n\nbailout:\n  return retval;\n", "Selected Statement": "if (value != 0)", "Function Input": {}, "Variable Values Before Statement": {"value": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nDLLEXPORT tjhandle tj3Init(int initType)\n{\n  static const char FUNCTION_NAME[] = \"tj3Init\";\n  tjinstance *this = NULL;\n  tjhandle retval = NULL;\n\n  if (initType < 0 || initType >= TJ_NUMINIT)\n    THROWG(\"Invalid argument\", NULL);\n\n  if ((this = (tjinstance *)malloc(sizeof(tjinstance))) == NULL)\n    THROWG(\"Memory allocation failure\", NULL);\n  memset(this, 0, sizeof(tjinstance));\n  SNPRINTF(this->errStr, JMSG_LENGTH_MAX, \"No error\");\n\n  this->quality = -1;\n  this->subsamp = TJSAMP_UNKNOWN;\n  this->jpegWidth = -1;\n  this->jpegHeight = -1;\n  this->precision = 8;\n  this->colorspace = -1;\n  this->losslessPSV = 1;\n  this->xDensity = 1;\n  this->yDensity = 1;\n  this->scalingFactor = TJUNSCALED;\n\n  switch (initType) {\n  case TJINIT_COMPRESS:  return _tjInitCompress(this);\n  case TJINIT_DECOMPRESS:  return _tjInitDecompress(this);\n  case TJINIT_TRANSFORM:\n    retval = _tjInitCompress(this);\n    if (!retval) return NULL;\n    retval = _tjInitDecompress(this);\n    return retval;\n  }\n\nbailout:\n  return retval;\n", "Selected Statement": "if (this->subsamp == TJSAMP_UNKNOWN)", "Function Input": {}, "Variable Values Before Statement": {"this->subsamp": "-1", "TJSAMP_UNKNOWN": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(struct jpeg_error_mgr *)\njpeg_std_error(struct jpeg_error_mgr *err)\n{\n  err->error_exit = error_exit;\n  err->emit_message = emit_message;\n  err->output_message = output_message;\n  err->format_message = format_message;\n  err->reset_error_mgr = reset_error_mgr;\n\n  err->trace_level = 0;         \n  err->num_warnings = 0;        \n  err->msg_code = 0;            \n\n  \n  err->jpeg_message_table = jpeg_std_message_table;\n  err->last_jpeg_message = (int)JMSG_LASTMSGCODE - 1;\n\n  err->addon_message_table = NULL;\n  err->first_addon_message = 0; \n  err->last_addon_message = 0;\n\n", "Selected Statement": "if (err->num_warnings == 0 || err->trace_level >= 3)", "Function Input": {}, "Variable Values Before Statement": {"err->num_warnings": "NULL", "err->trace_level": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(struct jpeg_error_mgr *)\njpeg_std_error(struct jpeg_error_mgr *err)\n{\n  err->error_exit = error_exit;\n  err->emit_message = emit_message;\n  err->output_message = output_message;\n  err->format_message = format_message;\n  err->reset_error_mgr = reset_error_mgr;\n\n  err->trace_level = 0;         \n  err->num_warnings = 0;        \n  err->msg_code = 0;            \n\n  \n  err->jpeg_message_table = jpeg_std_message_table;\n  err->last_jpeg_message = (int)JMSG_LASTMSGCODE - 1;\n\n  err->addon_message_table = NULL;\n  err->first_addon_message = 0; \n  err->last_addon_message = 0;\n\n", "Selected Statement": "if (msg_code > 0 && msg_code <= err->last_jpeg_message)", "Function Input": {}, "Variable Values Before Statement": {"msg_code": "NULL", "err->last_jpeg_message": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_CreateCompress(j_compress_ptr cinfo, int version, size_t structsize)\n{\n  int i;\n\n  \n  cinfo->mem = NULL;            \n  if (version != JPEG_LIB_VERSION)\n    ERREXIT2(cinfo, JERR_BAD_LIB_VERSION, JPEG_LIB_VERSION, version);\n  if (structsize != sizeof(struct jpeg_compress_struct))\n    ERREXIT2(cinfo, JERR_BAD_STRUCT_SIZE,\n             (int)sizeof(struct jpeg_compress_struct), (int)structsize);\n\n  \n  {\n    struct jpeg_error_mgr *err = cinfo->err;\n    void *client_data = cinfo->client_data; \n    memset(cinfo, 0, sizeof(struct jpeg_compress_struct));\n    cinfo->err = err;\n    cinfo->client_data = client_data;\n  }\n  cinfo->is_decompressor = FALSE;\n\n  \n  jinit_memory_mgr((j_common_ptr)cinfo);\n\n  \n  cinfo->progress = NULL;\n  cinfo->dest = NULL;\n\n  cinfo->comp_info = NULL;\n\n  for (i = 0; i < NUM_QUANT_TBLS; i++) {\n    cinfo->quant_tbl_ptrs[i] = NULL;\n#if JPEG_LIB_VERSION >= 70\n    cinfo->q_scale_factor[i] = 100;\n#endif\n  }\n\n  for (i = 0; i < NUM_HUFF_TBLS; i++) {\n    cinfo->dc_huff_tbl_ptrs[i] = NULL;\n    cinfo->ac_huff_tbl_ptrs[i] = NULL;\n  }\n\n#if JPEG_LIB_VERSION >= 80\n  \n  cinfo->block_size = DCTSIZE;\n  cinfo->natural_order = jpeg_natural_order;\n  cinfo->lim_Se = DCTSIZE2 - 1;\n#endif\n\n  cinfo->script_space = NULL;\n\n  cinfo->input_gamma = 1.0;     \n\n  cinfo->data_precision = BITS_IN_JSAMPLE;\n\n  \n  cinfo->global_state = CSTATE_START;\n\n  \n  cinfo->master = (struct jpeg_comp_master *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(my_comp_master));\n  memset(cinfo->master, 0, sizeof(my_comp_master));\n", "Selected Statement": "if ((htbl = cinfo->dc_huff_tbl_ptrs[i]) != NULL)", "Function Input": {"cinfo": {"value": "0x7ffff7ffe190"}, "structsize": {"value": "511101108348"}, "version": {"value": "0"}}, "Variable Values Before Statement": {"htbl": "NULL", "cinfo->dc_huff_tbl_ptrs": "NULL", "i": "int"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_CreateCompress(j_compress_ptr cinfo, int version, size_t structsize)\n{\n  int i;\n\n  \n  cinfo->mem = NULL;            \n  if (version != JPEG_LIB_VERSION)\n    ERREXIT2(cinfo, JERR_BAD_LIB_VERSION, JPEG_LIB_VERSION, version);\n  if (structsize != sizeof(struct jpeg_compress_struct))\n    ERREXIT2(cinfo, JERR_BAD_STRUCT_SIZE,\n             (int)sizeof(struct jpeg_compress_struct), (int)structsize);\n\n  \n  {\n    struct jpeg_error_mgr *err = cinfo->err;\n    void *client_data = cinfo->client_data; \n    memset(cinfo, 0, sizeof(struct jpeg_compress_struct));\n    cinfo->err = err;\n    cinfo->client_data = client_data;\n  }\n  cinfo->is_decompressor = FALSE;\n\n  \n  jinit_memory_mgr((j_common_ptr)cinfo);\n\n  \n  cinfo->progress = NULL;\n  cinfo->dest = NULL;\n\n  cinfo->comp_info = NULL;\n\n  for (i = 0; i < NUM_QUANT_TBLS; i++) {\n    cinfo->quant_tbl_ptrs[i] = NULL;\n#if JPEG_LIB_VERSION >= 70\n    cinfo->q_scale_factor[i] = 100;\n#endif\n  }\n\n  for (i = 0; i < NUM_HUFF_TBLS; i++) {\n    cinfo->dc_huff_tbl_ptrs[i] = NULL;\n    cinfo->ac_huff_tbl_ptrs[i] = NULL;\n  }\n\n#if JPEG_LIB_VERSION >= 80\n  \n  cinfo->block_size = DCTSIZE;\n  cinfo->natural_order = jpeg_natural_order;\n  cinfo->lim_Se = DCTSIZE2 - 1;\n#endif\n\n  cinfo->script_space = NULL;\n\n  cinfo->input_gamma = 1.0;     \n\n  cinfo->data_precision = BITS_IN_JSAMPLE;\n\n  \n  cinfo->global_state = CSTATE_START;\n\n  \n  cinfo->master = (struct jpeg_comp_master *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(my_comp_master));\n  memset(cinfo->master, 0, sizeof(my_comp_master));\n", "Selected Statement": "if (cinfo->data_precision == 16)", "Function Input": {"cinfo": {"value": "0x7ffff7ffe190"}, "structsize": {"value": "511101108348"}, "version": {"value": "0"}}, "Variable Values Before Statement": {"cinfo->data_precision": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njinit_memory_mgr(j_common_ptr cinfo)\n{\n  my_mem_ptr mem;\n  long max_to_use;\n  int pool;\n  size_t test_mac;\n\n  cinfo->mem = NULL;            \n\n  \n  if ((ALIGN_SIZE & (ALIGN_SIZE - 1)) != 0)\n    ERREXIT(cinfo, JERR_BAD_ALIGN_TYPE);\n  \n  test_mac = (size_t)MAX_ALLOC_CHUNK;\n  if ((long)test_mac != MAX_ALLOC_CHUNK ||\n      (MAX_ALLOC_CHUNK % ALIGN_SIZE) != 0)\n    ERREXIT(cinfo, JERR_BAD_ALLOC_CHUNK);\n\n  max_to_use = jpeg_mem_init(cinfo); \n\n  \n  mem = (my_mem_ptr)jpeg_get_small(cinfo, sizeof(my_memory_mgr));\n\n  if (mem == NULL) {\n    jpeg_mem_term(cinfo);       \n    ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 0);\n  }\n\n  \n  mem->pub.alloc_small = alloc_small;\n  mem->pub.alloc_large = alloc_large;\n  mem->pub.alloc_sarray = alloc_sarray;\n  mem->pub.alloc_barray = alloc_barray;\n  mem->pub.request_virt_sarray = request_virt_sarray;\n  mem->pub.request_virt_barray = request_virt_barray;\n  mem->pub.realize_virt_arrays = realize_virt_arrays;\n  mem->pub.access_virt_sarray = access_virt_sarray;\n  mem->pub.access_virt_barray = access_virt_barray;\n  mem->pub.free_pool = free_pool;\n  mem->pub.self_destruct = self_destruct;\n\n  \n  mem->pub.max_alloc_chunk = MAX_ALLOC_CHUNK;\n\n  \n  mem->pub.max_memory_to_use = max_to_use;\n\n  for (pool = JPOOL_NUMPOOLS - 1; pool >= JPOOL_PERMANENT; pool--) {\n    mem->small_list[pool] = NULL;\n    mem->large_list[pool] = NULL;\n  }\n  mem->virt_sarray_list = NULL;\n  mem->virt_barray_list = NULL;\n\n  mem->total_space_allocated = sizeof(my_memory_mgr);\n\n  \n  cinfo->mem = &mem->pub;\n\n  \n#ifndef NO_GETENV\n  {\n    char memenv[30] = { 0 };\n\n    if (!GETENV_S(memenv, 30, \"JPEGMEM\") && strlen(memenv) > 0) {\n      char ch = 'x';\n\n#ifdef _MSC_VER\n      if (sscanf_s(memenv, \"%ld%c\", &max_to_use, &ch, 1) > 0) {\n#else\n      if (sscanf(memenv, \"%ld%c\", &max_to_use, &ch) > 0) {\n#endif\n        if (ch == 'm' || ch == 'M')\n          max_to_use *= 1000L;\n        mem->pub.max_memory_to_use = max_to_use * 1000L;\n      }\n    }\n  }\n#endif\n\n", "Selected Statement": "if (SIZE_MAX - maximum_space < new_space)", "Function Input": {}, "Variable Values Before Statement": {"SIZE_MAX": "NULL", "maximum_space": "NULL", "new_space": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njinit_memory_mgr(j_common_ptr cinfo)\n{\n  my_mem_ptr mem;\n  long max_to_use;\n  int pool;\n  size_t test_mac;\n\n  cinfo->mem = NULL;            \n\n  \n  if ((ALIGN_SIZE & (ALIGN_SIZE - 1)) != 0)\n    ERREXIT(cinfo, JERR_BAD_ALIGN_TYPE);\n  \n  test_mac = (size_t)MAX_ALLOC_CHUNK;\n  if ((long)test_mac != MAX_ALLOC_CHUNK ||\n      (MAX_ALLOC_CHUNK % ALIGN_SIZE) != 0)\n    ERREXIT(cinfo, JERR_BAD_ALLOC_CHUNK);\n\n  max_to_use = jpeg_mem_init(cinfo); \n\n  \n  mem = (my_mem_ptr)jpeg_get_small(cinfo, sizeof(my_memory_mgr));\n\n  if (mem == NULL) {\n    jpeg_mem_term(cinfo);       \n    ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 0);\n  }\n\n  \n  mem->pub.alloc_small = alloc_small;\n  mem->pub.alloc_large = alloc_large;\n  mem->pub.alloc_sarray = alloc_sarray;\n  mem->pub.alloc_barray = alloc_barray;\n  mem->pub.request_virt_sarray = request_virt_sarray;\n  mem->pub.request_virt_barray = request_virt_barray;\n  mem->pub.realize_virt_arrays = realize_virt_arrays;\n  mem->pub.access_virt_sarray = access_virt_sarray;\n  mem->pub.access_virt_barray = access_virt_barray;\n  mem->pub.free_pool = free_pool;\n  mem->pub.self_destruct = self_destruct;\n\n  \n  mem->pub.max_alloc_chunk = MAX_ALLOC_CHUNK;\n\n  \n  mem->pub.max_memory_to_use = max_to_use;\n\n  for (pool = JPOOL_NUMPOOLS - 1; pool >= JPOOL_PERMANENT; pool--) {\n    mem->small_list[pool] = NULL;\n    mem->large_list[pool] = NULL;\n  }\n  mem->virt_sarray_list = NULL;\n  mem->virt_barray_list = NULL;\n\n  mem->total_space_allocated = sizeof(my_memory_mgr);\n\n  \n  cinfo->mem = &mem->pub;\n\n  \n#ifndef NO_GETENV\n  {\n    char memenv[30] = { 0 };\n\n    if (!GETENV_S(memenv, 30, \"JPEGMEM\") && strlen(memenv) > 0) {\n      char ch = 'x';\n\n#ifdef _MSC_VER\n      if (sscanf_s(memenv, \"%ld%c\", &max_to_use, &ch, 1) > 0) {\n#else\n      if (sscanf(memenv, \"%ld%c\", &max_to_use, &ch) > 0) {\n#endif\n        if (ch == 'm' || ch == 'M')\n          max_to_use *= 1000L;\n        mem->pub.max_memory_to_use = max_to_use * 1000L;\n      }\n    }\n  }\n#endif\n\n", "Selected Statement": "if (hdr_ptr->bytes_left >= sizeofobject)", "Function Input": {}, "Variable Values Before Statement": {"hdr_ptr->bytes_left": "NULL", "sizeofobject": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(long)\njpeg_mem_init(j_common_ptr cinfo)\n{\n", "Selected Statement": "if (cinfo->mem->max_memory_to_use)", "Function Input": {"cinfo": {"value": "0x110a654"}}, "Variable Values Before Statement": {"cinfo->mem->max_memory_to_use": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(long)\njpeg_mem_init(j_common_ptr cinfo)\n{\n", "Selected Statement": "if ((size_t)cinfo->mem->max_memory_to_use > already_allocated)", "Function Input": {"cinfo": {"value": "0x110a654"}}, "Variable Values Before Statement": {"cinfo->mem->max_memory_to_use": "NULL", "already_allocated": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_dest_tj(j_compress_ptr cinfo, unsigned char **outbuffer,\n                 size_t *outsize, boolean alloc)\n{\n  boolean reused = FALSE;\n  my_mem_dest_ptr dest;\n\n  if (outbuffer == NULL || outsize == NULL)     \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n\n  \n  if (cinfo->dest == NULL) {    \n    cinfo->dest = (struct jpeg_destination_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(my_mem_destination_mgr));\n    dest = (my_mem_dest_ptr)cinfo->dest;\n    dest->newbuffer = NULL;\n    dest->buffer = NULL;\n  } else if (cinfo->dest->init_destination != init_mem_destination) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest = (my_mem_dest_ptr)cinfo->dest;\n  dest->pub.init_destination = init_mem_destination;\n  dest->pub.empty_output_buffer = empty_mem_output_buffer;\n  dest->pub.term_destination = term_mem_destination;\n  if (dest->buffer == *outbuffer && *outbuffer != NULL && alloc)\n    reused = TRUE;\n  dest->outbuffer = outbuffer;\n  dest->outsize = outsize;\n  dest->alloc = alloc;\n\n  if (*outbuffer == NULL || *outsize == 0) {\n    if (alloc) {\n      \n      dest->newbuffer = *outbuffer = (unsigned char *)malloc(OUTPUT_BUF_SIZE);\n      if (dest->newbuffer == NULL)\n        ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 10);\n      *outsize = OUTPUT_BUF_SIZE;\n    } else\n      ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest->pub.next_output_byte = dest->buffer = *outbuffer;\n  if (!reused)\n    dest->bufsize = *outsize;\n  dest->pub.free_in_buffer = dest->bufsize;\n", "Selected Statement": "if (dest->alloc)", "Function Input": {"cinfo": {"value": "0x110a050"}}, "Variable Values Before Statement": {"dest->alloc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_dest_tj(j_compress_ptr cinfo, unsigned char **outbuffer,\n                 size_t *outsize, boolean alloc)\n{\n  boolean reused = FALSE;\n  my_mem_dest_ptr dest;\n\n  if (outbuffer == NULL || outsize == NULL)     \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n\n  \n  if (cinfo->dest == NULL) {    \n    cinfo->dest = (struct jpeg_destination_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(my_mem_destination_mgr));\n    dest = (my_mem_dest_ptr)cinfo->dest;\n    dest->newbuffer = NULL;\n    dest->buffer = NULL;\n  } else if (cinfo->dest->init_destination != init_mem_destination) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest = (my_mem_dest_ptr)cinfo->dest;\n  dest->pub.init_destination = init_mem_destination;\n  dest->pub.empty_output_buffer = empty_mem_output_buffer;\n  dest->pub.term_destination = term_mem_destination;\n  if (dest->buffer == *outbuffer && *outbuffer != NULL && alloc)\n    reused = TRUE;\n  dest->outbuffer = outbuffer;\n  dest->outsize = outsize;\n  dest->alloc = alloc;\n\n  if (*outbuffer == NULL || *outsize == 0) {\n    if (alloc) {\n      \n      dest->newbuffer = *outbuffer = (unsigned char *)malloc(OUTPUT_BUF_SIZE);\n      if (dest->newbuffer == NULL)\n        ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 10);\n      *outsize = OUTPUT_BUF_SIZE;\n    } else\n      ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest->pub.next_output_byte = dest->buffer = *outbuffer;\n  if (!reused)\n    dest->bufsize = *outsize;\n  dest->pub.free_in_buffer = dest->bufsize;\n", "Selected Statement": "if (!reused)", "Function Input": {"cinfo": {"value": "0x110a050"}}, "Variable Values Before Statement": {"reused": "boolean"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_dest_tj(j_compress_ptr cinfo, unsigned char **outbuffer,\n                 size_t *outsize, boolean alloc)\n{\n  boolean reused = FALSE;\n  my_mem_dest_ptr dest;\n\n  if (outbuffer == NULL || outsize == NULL)     \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n\n  \n  if (cinfo->dest == NULL) {    \n    cinfo->dest = (struct jpeg_destination_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(my_mem_destination_mgr));\n    dest = (my_mem_dest_ptr)cinfo->dest;\n    dest->newbuffer = NULL;\n    dest->buffer = NULL;\n  } else if (cinfo->dest->init_destination != init_mem_destination) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest = (my_mem_dest_ptr)cinfo->dest;\n  dest->pub.init_destination = init_mem_destination;\n  dest->pub.empty_output_buffer = empty_mem_output_buffer;\n  dest->pub.term_destination = term_mem_destination;\n  if (dest->buffer == *outbuffer && *outbuffer != NULL && alloc)\n    reused = TRUE;\n  dest->outbuffer = outbuffer;\n  dest->outsize = outsize;\n  dest->alloc = alloc;\n\n  if (*outbuffer == NULL || *outsize == 0) {\n    if (alloc) {\n      \n      dest->newbuffer = *outbuffer = (unsigned char *)malloc(OUTPUT_BUF_SIZE);\n      if (dest->newbuffer == NULL)\n        ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 10);\n      *outsize = OUTPUT_BUF_SIZE;\n    } else\n      ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest->pub.next_output_byte = dest->buffer = *outbuffer;\n  if (!reused)\n    dest->bufsize = *outsize;\n  dest->pub.free_in_buffer = dest->bufsize;\n", "Selected Statement": "if (dest->newbuffer == NULL)", "Function Input": {"cinfo": {"value": "0x110a050"}}, "Variable Values Before Statement": {"dest->newbuffer": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_dest_tj(j_compress_ptr cinfo, unsigned char **outbuffer,\n                 size_t *outsize, boolean alloc)\n{\n  boolean reused = FALSE;\n  my_mem_dest_ptr dest;\n\n  if (outbuffer == NULL || outsize == NULL)     \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n\n  \n  if (cinfo->dest == NULL) {    \n    cinfo->dest = (struct jpeg_destination_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(my_mem_destination_mgr));\n    dest = (my_mem_dest_ptr)cinfo->dest;\n    dest->newbuffer = NULL;\n    dest->buffer = NULL;\n  } else if (cinfo->dest->init_destination != init_mem_destination) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest = (my_mem_dest_ptr)cinfo->dest;\n  dest->pub.init_destination = init_mem_destination;\n  dest->pub.empty_output_buffer = empty_mem_output_buffer;\n  dest->pub.term_destination = term_mem_destination;\n  if (dest->buffer == *outbuffer && *outbuffer != NULL && alloc)\n    reused = TRUE;\n  dest->outbuffer = outbuffer;\n  dest->outsize = outsize;\n  dest->alloc = alloc;\n\n  if (*outbuffer == NULL || *outsize == 0) {\n    if (alloc) {\n      \n      dest->newbuffer = *outbuffer = (unsigned char *)malloc(OUTPUT_BUF_SIZE);\n      if (dest->newbuffer == NULL)\n        ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 10);\n      *outsize = OUTPUT_BUF_SIZE;\n    } else\n      ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest->pub.next_output_byte = dest->buffer = *outbuffer;\n  if (!reused)\n    dest->bufsize = *outsize;\n  dest->pub.free_in_buffer = dest->bufsize;\n", "Selected Statement": "if (cinfo->dest == NULL)", "Function Input": {"cinfo": {"value": "0x110a050"}}, "Variable Values Before Statement": {"cinfo->dest": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "DLLEXPORT _JSAMPLE *GET_NAME(tj3LoadImage, BITS_IN_JSAMPLE)\n  (tjhandle handle, const char *filename, int *width, int align, int *height,\n   int *pixelFormat)\n", "Selected Statement": "if (setjmp(this->jerr.setjmp_buffer))", "Function Input": {"handle": {"value": "0x110a050"}, "height": {"value": {"type_category": "int", "concrete_type": "int", "value": "-8400"}}, "pitch": {"value": "24"}, "pixelFormat": {"value": {"type_category": "int", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x10000000000018\n", "message": "Cannot access memory at address 0x10000000000018"}}, "width": {"value": null}}, "Variable Values Before Statement": {"setjmp": "NULL", "this->jerr.setjmp_buffer": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_destroy(j_common_ptr cinfo)\n{\n  \n  \n  if (cinfo->mem != NULL)\n    (*cinfo->mem->self_destruct) (cinfo);\n  cinfo->mem = NULL;            \n  cinfo->global_state = 0;      \n", "Selected Statement": "if (cinfo->mem != NULL)", "Function Input": {"cinfo": {"value": "0x7ffff7de8807"}}, "Variable Values Before Statement": {"cinfo->mem": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_destroy(j_common_ptr cinfo)\n{\n  \n  \n  if (cinfo->mem != NULL)\n    (*cinfo->mem->self_destruct) (cinfo);\n  cinfo->mem = NULL;            \n  cinfo->global_state = 0;      \n", "Selected Statement": "if (cinfo->is_decompressor)", "Function Input": {"cinfo": {"value": "0x7ffff7de8807"}}, "Variable Values Before Statement": {"cinfo->is_decompressor": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_destroy(j_common_ptr cinfo)\n{\n  \n  \n  if (cinfo->mem != NULL)\n    (*cinfo->mem->self_destruct) (cinfo);\n  cinfo->mem = NULL;            \n  cinfo->global_state = 0;      \n", "Selected Statement": "if (cinfo->mem == NULL)", "Function Input": {"cinfo": {"value": "0x7ffff7de8807"}}, "Variable Values Before Statement": {"cinfo->mem": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nDLLEXPORT tjhandle tjInitCompress(void)\n{\n  tjinstance *this = NULL;\n\n  if ((this = (tjinstance *)malloc(sizeof(tjinstance))) == NULL) {\n    SNPRINTF(errStr, JMSG_LENGTH_MAX,\n             \"tjInitCompress(): Memory allocation failure\");\n    return NULL;\n  }\n  memset(this, 0, sizeof(tjinstance));\n  SNPRINTF(this->errStr, JMSG_LENGTH_MAX, \"No error\");\n  return _tjInitCompress(this);\n", "Selected Statement": "if (this->jerr.warning)", "Function Input": {}, "Variable Values Before Statement": {"this->jerr.warning": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nDLLEXPORT tjhandle tjInitCompress(void)\n{\n  tjinstance *this = NULL;\n\n  if ((this = (tjinstance *)malloc(sizeof(tjinstance))) == NULL) {\n    SNPRINTF(errStr, JMSG_LENGTH_MAX,\n             \"tjInitCompress(): Memory allocation failure\");\n    return NULL;\n  }\n  memset(this, 0, sizeof(tjinstance));\n  SNPRINTF(this->errStr, JMSG_LENGTH_MAX, \"No error\");\n  return _tjInitCompress(this);\n", "Selected Statement": "if (height == 0)", "Function Input": {}, "Variable Values Before Statement": {"height": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_CreateCompress(j_compress_ptr cinfo, int version, size_t structsize)\n{\n  int i;\n\n  \n  cinfo->mem = NULL;            \n  if (version != JPEG_LIB_VERSION)\n    ERREXIT2(cinfo, JERR_BAD_LIB_VERSION, JPEG_LIB_VERSION, version);\n  if (structsize != sizeof(struct jpeg_compress_struct))\n    ERREXIT2(cinfo, JERR_BAD_STRUCT_SIZE,\n             (int)sizeof(struct jpeg_compress_struct), (int)structsize);\n\n  \n  {\n    struct jpeg_error_mgr *err = cinfo->err;\n    void *client_data = cinfo->client_data; \n    memset(cinfo, 0, sizeof(struct jpeg_compress_struct));\n    cinfo->err = err;\n    cinfo->client_data = client_data;\n  }\n  cinfo->is_decompressor = FALSE;\n\n  \n  jinit_memory_mgr((j_common_ptr)cinfo);\n\n  \n  cinfo->progress = NULL;\n  cinfo->dest = NULL;\n\n  cinfo->comp_info = NULL;\n\n  for (i = 0; i < NUM_QUANT_TBLS; i++) {\n    cinfo->quant_tbl_ptrs[i] = NULL;\n#if JPEG_LIB_VERSION >= 70\n    cinfo->q_scale_factor[i] = 100;\n#endif\n  }\n\n  for (i = 0; i < NUM_HUFF_TBLS; i++) {\n    cinfo->dc_huff_tbl_ptrs[i] = NULL;\n    cinfo->ac_huff_tbl_ptrs[i] = NULL;\n  }\n\n#if JPEG_LIB_VERSION >= 80\n  \n  cinfo->block_size = DCTSIZE;\n  cinfo->natural_order = jpeg_natural_order;\n  cinfo->lim_Se = DCTSIZE2 - 1;\n#endif\n\n  cinfo->script_space = NULL;\n\n  cinfo->input_gamma = 1.0;     \n\n  \n  cinfo->global_state = CSTATE_START;\n", "Selected Statement": "if (cinfo->next_scanline < cinfo->image_height)", "Function Input": {"cinfo": {"value": "0x7ffff7ffe190"}, "structsize": {"value": "511101108348"}, "version": {"value": "0"}}, "Variable Values Before Statement": {"cinfo->next_scanline": "NULL", "cinfo->image_height": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_CreateCompress(j_compress_ptr cinfo, int version, size_t structsize)\n{\n  int i;\n\n  \n  cinfo->mem = NULL;            \n  if (version != JPEG_LIB_VERSION)\n    ERREXIT2(cinfo, JERR_BAD_LIB_VERSION, JPEG_LIB_VERSION, version);\n  if (structsize != sizeof(struct jpeg_compress_struct))\n    ERREXIT2(cinfo, JERR_BAD_STRUCT_SIZE,\n             (int)sizeof(struct jpeg_compress_struct), (int)structsize);\n\n  \n  {\n    struct jpeg_error_mgr *err = cinfo->err;\n    void *client_data = cinfo->client_data; \n    memset(cinfo, 0, sizeof(struct jpeg_compress_struct));\n    cinfo->err = err;\n    cinfo->client_data = client_data;\n  }\n  cinfo->is_decompressor = FALSE;\n\n  \n  jinit_memory_mgr((j_common_ptr)cinfo);\n\n  \n  cinfo->progress = NULL;\n  cinfo->dest = NULL;\n\n  cinfo->comp_info = NULL;\n\n  for (i = 0; i < NUM_QUANT_TBLS; i++) {\n    cinfo->quant_tbl_ptrs[i] = NULL;\n#if JPEG_LIB_VERSION >= 70\n    cinfo->q_scale_factor[i] = 100;\n#endif\n  }\n\n  for (i = 0; i < NUM_HUFF_TBLS; i++) {\n    cinfo->dc_huff_tbl_ptrs[i] = NULL;\n    cinfo->ac_huff_tbl_ptrs[i] = NULL;\n  }\n\n#if JPEG_LIB_VERSION >= 80\n  \n  cinfo->block_size = DCTSIZE;\n  cinfo->natural_order = jpeg_natural_order;\n  cinfo->lim_Se = DCTSIZE2 - 1;\n#endif\n\n  cinfo->script_space = NULL;\n\n  cinfo->input_gamma = 1.0;     \n\n  \n  cinfo->global_state = CSTATE_START;\n", "Selected Statement": "if ((htbl = cinfo->ac_huff_tbl_ptrs[i]) != NULL)", "Function Input": {"cinfo": {"value": "0x7ffff7ffe190"}, "structsize": {"value": "511101108348"}, "version": {"value": "0"}}, "Variable Values Before Statement": {"htbl": "NULL", "cinfo->ac_huff_tbl_ptrs": "NULL", "i": "int"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njinit_memory_mgr(j_common_ptr cinfo)\n{\n  my_mem_ptr mem;\n  long max_to_use;\n  int pool;\n  size_t test_mac;\n\n  cinfo->mem = NULL;            \n\n  \n  if ((ALIGN_SIZE & (ALIGN_SIZE - 1)) != 0)\n    ERREXIT(cinfo, JERR_BAD_ALIGN_TYPE);\n  \n  test_mac = (size_t)MAX_ALLOC_CHUNK;\n  if ((long)test_mac != MAX_ALLOC_CHUNK ||\n      (MAX_ALLOC_CHUNK % ALIGN_SIZE) != 0)\n    ERREXIT(cinfo, JERR_BAD_ALLOC_CHUNK);\n\n  max_to_use = jpeg_mem_init(cinfo); \n\n  \n  mem = (my_mem_ptr)jpeg_get_small(cinfo, sizeof(my_memory_mgr));\n\n  if (mem == NULL) {\n    jpeg_mem_term(cinfo);       \n    ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 0);\n  }\n\n  \n  mem->pub.alloc_small = alloc_small;\n  mem->pub.alloc_large = alloc_large;\n  mem->pub.alloc_sarray = alloc_sarray;\n  mem->pub.alloc_barray = alloc_barray;\n  mem->pub.request_virt_sarray = request_virt_sarray;\n  mem->pub.request_virt_barray = request_virt_barray;\n  mem->pub.realize_virt_arrays = realize_virt_arrays;\n  mem->pub.access_virt_sarray = access_virt_sarray;\n  mem->pub.access_virt_barray = access_virt_barray;\n  mem->pub.free_pool = free_pool;\n  mem->pub.self_destruct = self_destruct;\n\n  \n  mem->pub.max_alloc_chunk = MAX_ALLOC_CHUNK;\n\n  \n  mem->pub.max_memory_to_use = max_to_use;\n\n  for (pool = JPOOL_NUMPOOLS - 1; pool >= JPOOL_PERMANENT; pool--) {\n    mem->small_list[pool] = NULL;\n    mem->large_list[pool] = NULL;\n  }\n  mem->virt_sarray_list = NULL;\n  mem->virt_barray_list = NULL;\n\n  mem->total_space_allocated = sizeof(my_memory_mgr);\n\n  \n  cinfo->mem = &mem->pub;\n\n  \n#ifndef NO_GETENV\n  {\n    char memenv[30] = { 0 };\n\n    if (!GETENV_S(memenv, 30, \"JPEGMEM\") && strlen(memenv) > 0) {\n      char ch = 'x';\n\n#ifdef _MSC_VER\n      if (sscanf_s(memenv, \"%ld%c\", &max_to_use, &ch, 1) > 0) {\n#else\n      if (sscanf(memenv, \"%ld%c\", &max_to_use, &ch) > 0) {\n#endif\n        if (ch == 'm' || ch == 'M')\n          max_to_use *= 1000L;\n        mem->pub.max_memory_to_use = max_to_use * 1000L;\n      }\n    }\n  }\n#endif\n\n", "Selected Statement": "if (pool_id < 0 || pool_id >= JPOOL_NUMPOOLS)", "Function Input": {}, "Variable Values Before Statement": {"pool_id": "NULL", "JPOOL_NUMPOOLS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njinit_memory_mgr(j_common_ptr cinfo)\n{\n  my_mem_ptr mem;\n  long max_to_use;\n  int pool;\n  size_t test_mac;\n\n  cinfo->mem = NULL;            \n\n  \n  if ((ALIGN_SIZE & (ALIGN_SIZE - 1)) != 0)\n    ERREXIT(cinfo, JERR_BAD_ALIGN_TYPE);\n  \n  test_mac = (size_t)MAX_ALLOC_CHUNK;\n  if ((long)test_mac != MAX_ALLOC_CHUNK ||\n      (MAX_ALLOC_CHUNK % ALIGN_SIZE) != 0)\n    ERREXIT(cinfo, JERR_BAD_ALLOC_CHUNK);\n\n  max_to_use = jpeg_mem_init(cinfo); \n\n  \n  mem = (my_mem_ptr)jpeg_get_small(cinfo, sizeof(my_memory_mgr));\n\n  if (mem == NULL) {\n    jpeg_mem_term(cinfo);       \n    ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 0);\n  }\n\n  \n  mem->pub.alloc_small = alloc_small;\n  mem->pub.alloc_large = alloc_large;\n  mem->pub.alloc_sarray = alloc_sarray;\n  mem->pub.alloc_barray = alloc_barray;\n  mem->pub.request_virt_sarray = request_virt_sarray;\n  mem->pub.request_virt_barray = request_virt_barray;\n  mem->pub.realize_virt_arrays = realize_virt_arrays;\n  mem->pub.access_virt_sarray = access_virt_sarray;\n  mem->pub.access_virt_barray = access_virt_barray;\n  mem->pub.free_pool = free_pool;\n  mem->pub.self_destruct = self_destruct;\n\n  \n  mem->pub.max_alloc_chunk = MAX_ALLOC_CHUNK;\n\n  \n  mem->pub.max_memory_to_use = max_to_use;\n\n  for (pool = JPOOL_NUMPOOLS - 1; pool >= JPOOL_PERMANENT; pool--) {\n    mem->small_list[pool] = NULL;\n    mem->large_list[pool] = NULL;\n  }\n  mem->virt_sarray_list = NULL;\n  mem->virt_barray_list = NULL;\n\n  mem->total_space_allocated = sizeof(my_memory_mgr);\n\n  \n  cinfo->mem = &mem->pub;\n\n  \n#ifndef NO_GETENV\n  {\n    char memenv[30] = { 0 };\n\n    if (!GETENV_S(memenv, 30, \"JPEGMEM\") && strlen(memenv) > 0) {\n      char ch = 'x';\n\n#ifdef _MSC_VER\n      if (sscanf_s(memenv, \"%ld%c\", &max_to_use, &ch, 1) > 0) {\n#else\n      if (sscanf(memenv, \"%ld%c\", &max_to_use, &ch) > 0) {\n#endif\n        if (ch == 'm' || ch == 'M')\n          max_to_use *= 1000L;\n        mem->pub.max_memory_to_use = max_to_use * 1000L;\n      }\n    }\n  }\n#endif\n\n", "Selected Statement": "if (avail_mem >= maximum_space)", "Function Input": {}, "Variable Values Before Statement": {"avail_mem": "NULL", "maximum_space": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_dest_tj(j_compress_ptr cinfo, unsigned char **outbuffer,\n                 unsigned long *outsize, boolean alloc)\n{\n  boolean reused = FALSE;\n  my_mem_dest_ptr dest;\n\n  if (outbuffer == NULL || outsize == NULL)     \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n\n  \n  if (cinfo->dest == NULL) {    \n    cinfo->dest = (struct jpeg_destination_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(my_mem_destination_mgr));\n    dest = (my_mem_dest_ptr)cinfo->dest;\n    dest->newbuffer = NULL;\n    dest->buffer = NULL;\n  } else if (cinfo->dest->init_destination != init_mem_destination) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest = (my_mem_dest_ptr)cinfo->dest;\n  dest->pub.init_destination = init_mem_destination;\n  dest->pub.empty_output_buffer = empty_mem_output_buffer;\n  dest->pub.term_destination = term_mem_destination;\n  if (dest->buffer == *outbuffer && *outbuffer != NULL && alloc)\n    reused = TRUE;\n  dest->outbuffer = outbuffer;\n  dest->outsize = outsize;\n  dest->alloc = alloc;\n\n  if (*outbuffer == NULL || *outsize == 0) {\n    if (alloc) {\n      \n      dest->newbuffer = *outbuffer = (unsigned char *)malloc(OUTPUT_BUF_SIZE);\n      if (dest->newbuffer == NULL)\n        ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 10);\n      *outsize = OUTPUT_BUF_SIZE;\n    } else\n      ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest->pub.next_output_byte = dest->buffer = *outbuffer;\n  if (!reused)\n    dest->bufsize = *outsize;\n  dest->pub.free_in_buffer = dest->bufsize;\n", "Selected Statement": "if (!reused)", "Function Input": {"cinfo": {"value": "0x106b020"}}, "Variable Values Before Statement": {"reused": "boolean"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_dest_tj(j_compress_ptr cinfo, unsigned char **outbuffer,\n                 unsigned long *outsize, boolean alloc)\n{\n  boolean reused = FALSE;\n  my_mem_dest_ptr dest;\n\n  if (outbuffer == NULL || outsize == NULL)     \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n\n  \n  if (cinfo->dest == NULL) {    \n    cinfo->dest = (struct jpeg_destination_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(my_mem_destination_mgr));\n    dest = (my_mem_dest_ptr)cinfo->dest;\n    dest->newbuffer = NULL;\n    dest->buffer = NULL;\n  } else if (cinfo->dest->init_destination != init_mem_destination) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest = (my_mem_dest_ptr)cinfo->dest;\n  dest->pub.init_destination = init_mem_destination;\n  dest->pub.empty_output_buffer = empty_mem_output_buffer;\n  dest->pub.term_destination = term_mem_destination;\n  if (dest->buffer == *outbuffer && *outbuffer != NULL && alloc)\n    reused = TRUE;\n  dest->outbuffer = outbuffer;\n  dest->outsize = outsize;\n  dest->alloc = alloc;\n\n  if (*outbuffer == NULL || *outsize == 0) {\n    if (alloc) {\n      \n      dest->newbuffer = *outbuffer = (unsigned char *)malloc(OUTPUT_BUF_SIZE);\n      if (dest->newbuffer == NULL)\n        ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 10);\n      *outsize = OUTPUT_BUF_SIZE;\n    } else\n      ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest->pub.next_output_byte = dest->buffer = *outbuffer;\n  if (!reused)\n    dest->bufsize = *outsize;\n  dest->pub.free_in_buffer = dest->bufsize;\n", "Selected Statement": "if (dest->buffer == *outbuffer && *outbuffer != NULL && alloc)", "Function Input": {"cinfo": {"value": "0x106b020"}}, "Variable Values Before Statement": {"dest->buffer": "NULL", "outbuffer": "0x10687f8 <_tjInitCompress.buffer> \"\"", "alloc": "boolean"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_dest_tj(j_compress_ptr cinfo, unsigned char **outbuffer,\n                 unsigned long *outsize, boolean alloc)\n{\n  boolean reused = FALSE;\n  my_mem_dest_ptr dest;\n\n  if (outbuffer == NULL || outsize == NULL)     \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n\n  \n  if (cinfo->dest == NULL) {    \n    cinfo->dest = (struct jpeg_destination_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(my_mem_destination_mgr));\n    dest = (my_mem_dest_ptr)cinfo->dest;\n    dest->newbuffer = NULL;\n    dest->buffer = NULL;\n  } else if (cinfo->dest->init_destination != init_mem_destination) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest = (my_mem_dest_ptr)cinfo->dest;\n  dest->pub.init_destination = init_mem_destination;\n  dest->pub.empty_output_buffer = empty_mem_output_buffer;\n  dest->pub.term_destination = term_mem_destination;\n  if (dest->buffer == *outbuffer && *outbuffer != NULL && alloc)\n    reused = TRUE;\n  dest->outbuffer = outbuffer;\n  dest->outsize = outsize;\n  dest->alloc = alloc;\n\n  if (*outbuffer == NULL || *outsize == 0) {\n    if (alloc) {\n      \n      dest->newbuffer = *outbuffer = (unsigned char *)malloc(OUTPUT_BUF_SIZE);\n      if (dest->newbuffer == NULL)\n        ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 10);\n      *outsize = OUTPUT_BUF_SIZE;\n    } else\n      ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest->pub.next_output_byte = dest->buffer = *outbuffer;\n  if (!reused)\n    dest->bufsize = *outsize;\n  dest->pub.free_in_buffer = dest->bufsize;\n", "Selected Statement": "if (cinfo->dest == NULL)", "Function Input": {"cinfo": {"value": "0x106b020"}}, "Variable Values Before Statement": {"cinfo->dest": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_dest_tj(j_compress_ptr cinfo, unsigned char **outbuffer,\n                 unsigned long *outsize, boolean alloc)\n{\n  boolean reused = FALSE;\n  my_mem_dest_ptr dest;\n\n  if (outbuffer == NULL || outsize == NULL)     \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n\n  \n  if (cinfo->dest == NULL) {    \n    cinfo->dest = (struct jpeg_destination_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(my_mem_destination_mgr));\n    dest = (my_mem_dest_ptr)cinfo->dest;\n    dest->newbuffer = NULL;\n    dest->buffer = NULL;\n  } else if (cinfo->dest->init_destination != init_mem_destination) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest = (my_mem_dest_ptr)cinfo->dest;\n  dest->pub.init_destination = init_mem_destination;\n  dest->pub.empty_output_buffer = empty_mem_output_buffer;\n  dest->pub.term_destination = term_mem_destination;\n  if (dest->buffer == *outbuffer && *outbuffer != NULL && alloc)\n    reused = TRUE;\n  dest->outbuffer = outbuffer;\n  dest->outsize = outsize;\n  dest->alloc = alloc;\n\n  if (*outbuffer == NULL || *outsize == 0) {\n    if (alloc) {\n      \n      dest->newbuffer = *outbuffer = (unsigned char *)malloc(OUTPUT_BUF_SIZE);\n      if (dest->newbuffer == NULL)\n        ERREXIT1(cinfo, JERR_OUT_OF_MEMORY, 10);\n      *outsize = OUTPUT_BUF_SIZE;\n    } else\n      ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  dest->pub.next_output_byte = dest->buffer = *outbuffer;\n  if (!reused)\n    dest->bufsize = *outsize;\n  dest->pub.free_in_buffer = dest->bufsize;\n", "Selected Statement": "if (alloc)", "Function Input": {"cinfo": {"value": "0x106b020"}}, "Variable Values Before Statement": {"alloc": "boolean"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  short *srcBuf = NULL;\n  unsigned char *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, TJSAMP_444, 100 },\n    { TJPF_BGR, TJSAMP_422, 90 },\n    { TJPF_RGBX, TJSAMP_420, 80 },\n    { TJPF_BGRA, TJSAMP_411, 70 },\n    { TJPF_XRGB, TJSAMP_GRAY, 60 },\n    { TJPF_GRAY, TJSAMP_GRAY, 50 },\n    { TJPF_CMYK, TJSAMP_440, 40 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress12_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_FASTDCT, ti == 0);\n    tj3Set(handle, TJPARAM_PROGRESSIVE, ti == 1 || ti == 3);\n    tj3Set(handle, TJPARAM_ARITHMETIC, ti == 2 || ti == 3);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 1 || ti == 2 ? 2 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage12(handle, filename, &width, 1, &height,\n                                 &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, tests[ti].subsamp);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_SUBSAMP, tests[ti].subsamp);\n    tj3Set(handle, TJPARAM_QUALITY, tests[ti].quality);\n    if (tj3Compress12(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                      &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (fd >= 0)", "Function Input": {"data": {"value": "0x1108b30 \" \\220\\020\\001\""}, "size": {"value": "17866800"}}, "Variable Values Before Statement": {"fd": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  short *srcBuf = NULL;\n  unsigned char *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, TJSAMP_444, 100 },\n    { TJPF_BGR, TJSAMP_422, 90 },\n    { TJPF_RGBX, TJSAMP_420, 80 },\n    { TJPF_BGRA, TJSAMP_411, 70 },\n    { TJPF_XRGB, TJSAMP_GRAY, 60 },\n    { TJPF_GRAY, TJSAMP_GRAY, 50 },\n    { TJPF_CMYK, TJSAMP_440, 40 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress12_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_FASTDCT, ti == 0);\n    tj3Set(handle, TJPARAM_PROGRESSIVE, ti == 1 || ti == 3);\n    tj3Set(handle, TJPARAM_ARITHMETIC, ti == 2 || ti == 3);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 1 || ti == 2 ? 2 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage12(handle, filename, &width, 1, &height,\n                                 &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, tests[ti].subsamp);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_SUBSAMP, tests[ti].subsamp);\n    tj3Set(handle, TJPARAM_QUALITY, tests[ti].quality);\n    if (tj3Compress12(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                      &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)", "Function Input": {"data": {"value": "0x1108b30 \" \\220\\020\\001\""}, "size": {"value": "17866800"}}, "Variable Values Before Statement": {"dstBuf": "NULL", "malloc": "NULL", "maxBufSize": "0"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  short *srcBuf = NULL;\n  unsigned char *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, TJSAMP_444, 100 },\n    { TJPF_BGR, TJSAMP_422, 90 },\n    { TJPF_RGBX, TJSAMP_420, 80 },\n    { TJPF_BGRA, TJSAMP_411, 70 },\n    { TJPF_XRGB, TJSAMP_GRAY, 60 },\n    { TJPF_GRAY, TJSAMP_GRAY, 50 },\n    { TJPF_CMYK, TJSAMP_440, 40 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress12_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_FASTDCT, ti == 0);\n    tj3Set(handle, TJPARAM_PROGRESSIVE, ti == 1 || ti == 3);\n    tj3Set(handle, TJPARAM_ARITHMETIC, ti == 2 || ti == 3);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 1 || ti == 2 ? 2 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage12(handle, filename, &width, 1, &height,\n                                 &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, tests[ti].subsamp);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_SUBSAMP, tests[ti].subsamp);\n    tj3Set(handle, TJPARAM_QUALITY, tests[ti].quality);\n    if (tj3Compress12(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                      &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (strlen(filename) > 0)", "Function Input": {"data": {"value": "0x1108b30 \" \\220\\020\\001\""}, "size": {"value": "17866800"}}, "Variable Values Before Statement": {"strlen": "NULL", "filename": "\"/tmp/libjpeg-turbo_compress12_fuzz.a5y}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  char filename[FILENAME_MAX] = { 0 };\n  char *argv1[] = {\n    (char *)\"cjpeg\", (char *)\"-dct\", (char *)\"float\", (char *)\"-memdst\",\n    (char *)\"-optimize\", (char *)\"-quality\", (char *)\"100,99,98\",\n    (char *)\"-restart\", (char *)\"2\", (char *)\"-sample\", (char *)\"4x1,2x2,1x2\",\n    (char *)\"-targa\", NULL\n  };\n  char *argv2[] = {\n    (char *)\"cjpeg\", (char *)\"-arithmetic\", (char *)\"-dct\", (char *)\"float\",\n    (char *)\"-memdst\", (char *)\"-quality\", (char *)\"90,80,70\", (char *)\"-rgb\",\n    (char *)\"-sample\", (char *)\"2x2\", (char *)\"-smooth\", (char *)\"50\",\n    (char *)\"-targa\", NULL\n  };\n  int fd = -1;\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_cjpeg_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  argv1[12] = argv2[13] = filename;\n\n  cjpeg_main(13, argv1);\n  cjpeg_main(14, argv2);\n\n  argv1[12] = argv2[13] = NULL;\n  argv1[11] = argv2[12] = filename;\n\n  cjpeg_main(12, argv1);\n  cjpeg_main(13, argv2);\n\nbailout:\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n", "Selected Statement": "if (strlen(filename) > 0)", "Function Input": {"data": {"value": "0x1005a50 \"\\020\\340\\254\\367\\377\\177\""}, "size": {"value": "16966192"}}, "Variable Values Before Statement": {"strlen": "NULL", "filename": "\"/tmp/libjpeg-turbo_cjpeg_fuzz.PGWx}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  char filename[FILENAME_MAX] = { 0 };\n  char *argv1[] = {\n    (char *)\"cjpeg\", (char *)\"-dct\", (char *)\"float\", (char *)\"-memdst\",\n    (char *)\"-optimize\", (char *)\"-quality\", (char *)\"100,99,98\",\n    (char *)\"-restart\", (char *)\"2\", (char *)\"-sample\", (char *)\"4x1,2x2,1x2\",\n    (char *)\"-targa\", NULL\n  };\n  char *argv2[] = {\n    (char *)\"cjpeg\", (char *)\"-arithmetic\", (char *)\"-dct\", (char *)\"float\",\n    (char *)\"-memdst\", (char *)\"-quality\", (char *)\"90,80,70\", (char *)\"-rgb\",\n    (char *)\"-sample\", (char *)\"2x2\", (char *)\"-smooth\", (char *)\"50\",\n    (char *)\"-targa\", NULL\n  };\n  int fd = -1;\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_cjpeg_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  argv1[12] = argv2[13] = filename;\n\n  cjpeg_main(13, argv1);\n  cjpeg_main(14, argv2);\n\n  argv1[12] = argv2[13] = NULL;\n  argv1[11] = argv2[12] = filename;\n\n  cjpeg_main(12, argv1);\n  cjpeg_main(13, argv2);\n\nbailout:\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n", "Selected Statement": "if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)", "Function Input": {"data": {"value": "0x1005a50 \"\\020\\340\\254\\367\\377\\177\""}, "size": {"value": "16966192"}}, "Variable Values Before Statement": {"fd": "int", "mkstemp": "NULL", "filename": "\"/tmp/libjpeg-turbo_cjpeg_fuzzwrite": "NULL", "data": "0x102e230 \"\"", "size": "0"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  char filename[FILENAME_MAX] = { 0 };\n  char *argv1[] = {\n    (char *)\"cjpeg\", (char *)\"-dct\", (char *)\"float\", (char *)\"-memdst\",\n    (char *)\"-optimize\", (char *)\"-quality\", (char *)\"100,99,98\",\n    (char *)\"-restart\", (char *)\"2\", (char *)\"-sample\", (char *)\"4x1,2x2,1x2\",\n    (char *)\"-targa\", NULL\n  };\n  char *argv2[] = {\n    (char *)\"cjpeg\", (char *)\"-arithmetic\", (char *)\"-dct\", (char *)\"float\",\n    (char *)\"-memdst\", (char *)\"-quality\", (char *)\"90,80,70\", (char *)\"-rgb\",\n    (char *)\"-sample\", (char *)\"2x2\", (char *)\"-smooth\", (char *)\"50\",\n    (char *)\"-targa\", NULL\n  };\n  int fd = -1;\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_cjpeg_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  argv1[12] = argv2[13] = filename;\n\n  cjpeg_main(13, argv1);\n  cjpeg_main(14, argv2);\n\n  argv1[12] = argv2[13] = NULL;\n  argv1[11] = argv2[12] = filename;\n\n  cjpeg_main(12, argv1);\n  cjpeg_main(13, argv2);\n\nbailout:\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n", "Selected Statement": "if (fd >= 0)", "Function Input": {"data": {"value": "0x1005a50 \"\\020\\340\\254\\367\\377\\177\""}, "size": {"value": "16966192"}}, "Variable Values Before Statement": {"fd": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_set_defaults(j_compress_ptr cinfo)\n{\n  int i;\n\n  \n  if (cinfo->global_state != CSTATE_START)\n    ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);\n\n  \n  if (cinfo->comp_info == NULL)\n    cinfo->comp_info = (jpeg_component_info *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  MAX_COMPONENTS * sizeof(jpeg_component_info));\n\n  \n\n#if JPEG_LIB_VERSION >= 70\n  cinfo->scale_num = 1;         \n  cinfo->scale_denom = 1;\n#endif\n  \n  jpeg_set_quality(cinfo, 75, TRUE);\n  \n  std_huff_tables((j_common_ptr)cinfo);\n\n  \n  for (i = 0; i < NUM_ARITH_TBLS; i++) {\n    cinfo->arith_dc_L[i] = 0;\n    cinfo->arith_dc_U[i] = 1;\n    cinfo->arith_ac_K[i] = 5;\n  }\n\n  \n  cinfo->scan_info = NULL;\n  cinfo->num_scans = 0;\n\n  \n  cinfo->raw_data_in = FALSE;\n\n  \n  cinfo->arith_code = FALSE;\n\n  \n  cinfo->optimize_coding = FALSE;\n  \n  if (cinfo->data_precision == 12 && !cinfo->arith_code)\n    cinfo->optimize_coding = TRUE;\n\n  \n  cinfo->CCIR601_sampling = FALSE;\n\n#if JPEG_LIB_VERSION >= 70\n  \n  cinfo->do_fancy_downsampling = TRUE;\n#endif\n\n  \n  cinfo->smoothing_factor = 0;\n\n  \n  cinfo->dct_method = JDCT_DEFAULT;\n\n  \n  cinfo->restart_interval = 0;\n  cinfo->restart_in_rows = 0;\n\n  \n  cinfo->JFIF_major_version = 1; \n  cinfo->JFIF_minor_version = 1;\n  cinfo->density_unit = 0;      \n  cinfo->X_density = 1;         \n  cinfo->Y_density = 1;\n\n  \n\n  jpeg_default_colorspace(cinfo);\n", "Selected Statement": "if (cinfo->data_precision == 12 && !cinfo->arith_code)", "Function Input": {"cinfo": {"value": "0x7fffffffcc08"}}, "Variable Values Before Statement": {"cinfo->data_precision": "NULL", "cinfo->arith_code": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_set_defaults(j_compress_ptr cinfo)\n{\n  int i;\n\n  \n  if (cinfo->global_state != CSTATE_START)\n    ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);\n\n  \n  if (cinfo->comp_info == NULL)\n    cinfo->comp_info = (jpeg_component_info *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  MAX_COMPONENTS * sizeof(jpeg_component_info));\n\n  \n\n#if JPEG_LIB_VERSION >= 70\n  cinfo->scale_num = 1;         \n  cinfo->scale_denom = 1;\n#endif\n  \n  jpeg_set_quality(cinfo, 75, TRUE);\n  \n  std_huff_tables((j_common_ptr)cinfo);\n\n  \n  for (i = 0; i < NUM_ARITH_TBLS; i++) {\n    cinfo->arith_dc_L[i] = 0;\n    cinfo->arith_dc_U[i] = 1;\n    cinfo->arith_ac_K[i] = 5;\n  }\n\n  \n  cinfo->scan_info = NULL;\n  cinfo->num_scans = 0;\n\n  \n  cinfo->raw_data_in = FALSE;\n\n  \n  cinfo->arith_code = FALSE;\n\n  \n  cinfo->optimize_coding = FALSE;\n  \n  if (cinfo->data_precision == 12 && !cinfo->arith_code)\n    cinfo->optimize_coding = TRUE;\n\n  \n  cinfo->CCIR601_sampling = FALSE;\n\n#if JPEG_LIB_VERSION >= 70\n  \n  cinfo->do_fancy_downsampling = TRUE;\n#endif\n\n  \n  cinfo->smoothing_factor = 0;\n\n  \n  cinfo->dct_method = JDCT_DEFAULT;\n\n  \n  cinfo->restart_interval = 0;\n  cinfo->restart_in_rows = 0;\n\n  \n  cinfo->JFIF_major_version = 1; \n  cinfo->JFIF_minor_version = 1;\n  cinfo->density_unit = 0;      \n  cinfo->X_density = 1;         \n  cinfo->Y_density = 1;\n\n  \n\n  jpeg_default_colorspace(cinfo);\n", "Selected Statement": "if (cinfo->global_state != CSTATE_START)", "Function Input": {"cinfo": {"value": "0x7fffffffcc08"}}, "Variable Values Before Statement": {"cinfo->global_state": "NULL", "CSTATE_START": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_set_defaults(j_compress_ptr cinfo)\n{\n  int i;\n\n  \n  if (cinfo->global_state != CSTATE_START)\n    ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);\n\n  \n  if (cinfo->comp_info == NULL)\n    cinfo->comp_info = (jpeg_component_info *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  MAX_COMPONENTS * sizeof(jpeg_component_info));\n\n  \n\n#if JPEG_LIB_VERSION >= 70\n  cinfo->scale_num = 1;         \n  cinfo->scale_denom = 1;\n#endif\n  \n  jpeg_set_quality(cinfo, 75, TRUE);\n  \n  std_huff_tables((j_common_ptr)cinfo);\n\n  \n  for (i = 0; i < NUM_ARITH_TBLS; i++) {\n    cinfo->arith_dc_L[i] = 0;\n    cinfo->arith_dc_U[i] = 1;\n    cinfo->arith_ac_K[i] = 5;\n  }\n\n  \n  cinfo->scan_info = NULL;\n  cinfo->num_scans = 0;\n\n  \n  cinfo->raw_data_in = FALSE;\n\n  \n  cinfo->arith_code = FALSE;\n\n  \n  cinfo->optimize_coding = FALSE;\n  \n  if (cinfo->data_precision == 12 && !cinfo->arith_code)\n    cinfo->optimize_coding = TRUE;\n\n  \n  cinfo->CCIR601_sampling = FALSE;\n\n#if JPEG_LIB_VERSION >= 70\n  \n  cinfo->do_fancy_downsampling = TRUE;\n#endif\n\n  \n  cinfo->smoothing_factor = 0;\n\n  \n  cinfo->dct_method = JDCT_DEFAULT;\n\n  \n  cinfo->restart_interval = 0;\n  cinfo->restart_in_rows = 0;\n\n  \n  cinfo->JFIF_major_version = 1; \n  cinfo->JFIF_minor_version = 1;\n  cinfo->density_unit = 0;      \n  cinfo->X_density = 1;         \n  cinfo->Y_density = 1;\n\n  \n\n  jpeg_default_colorspace(cinfo);\n", "Selected Statement": "if (cinfo->comp_info == NULL)", "Function Input": {"cinfo": {"value": "0x7fffffffcc08"}}, "Variable Values Before Statement": {"cinfo->comp_info": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(boolean)\nkeymatch(char *arg, const char *keyword, int minchars)\n{\n  register int ca, ck;\n  register int nmatched = 0;\n\n  while ((ca = *arg++) != '\\0') {\n    if ((ck = *keyword++) == '\\0')\n      return FALSE;             \n    if (isupper(ca))            \n      ca = tolower(ca);\n    if (ca != ck)\n      return FALSE;             \n    nmatched++;                 \n  }\n  \n  if (nmatched < minchars)\n    return FALSE;\n  return TRUE;                  \n", "Selected Statement": "if (isupper(ca))", "Function Input": {}, "Variable Values Before Statement": {"isupper": "NULL", "ca": "int"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(boolean)\nkeymatch(char *arg, const char *keyword, int minchars)\n{\n  register int ca, ck;\n  register int nmatched = 0;\n\n  while ((ca = *arg++) != '\\0') {\n    if ((ck = *keyword++) == '\\0')\n      return FALSE;             \n    if (isupper(ca))            \n      ca = tolower(ca);\n    if (ca != ck)\n      return FALSE;             \n    nmatched++;                 \n  }\n  \n  if (nmatched < minchars)\n    return FALSE;\n  return TRUE;                  \n", "Selected Statement": "if (ca != ck)", "Function Input": {}, "Variable Values Before Statement": {"ca": "int", "ck": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(boolean)\nkeymatch(char *arg, const char *keyword, int minchars)\n{\n  register int ca, ck;\n  register int nmatched = 0;\n\n  while ((ca = *arg++) != '\\0') {\n    if ((ck = *keyword++) == '\\0')\n      return FALSE;             \n    if (isupper(ca))            \n      ca = tolower(ca);\n    if (ca != ck)\n      return FALSE;             \n    nmatched++;                 \n  }\n  \n  if (nmatched < minchars)\n    return FALSE;\n  return TRUE;                  \n", "Selected Statement": "if ((output_file = fdopen(fileno(stdout), WRITE_BINARY)) == NULL)", "Function Input": {}, "Variable Values Before Statement": {"output_file": "NULL", "fdopen": "NULL", "fileno": "NULL", "stdout": "NULL", "WRITE_BINARY": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBuf = NULL;\n  int width = 0, height = 0, jpegSubsamp, jpegColorspace, pfi;\n  \n  enum TJPF pixelFormats[NUMPF] =\n    { TJPF_RGB, TJPF_BGRX, TJPF_GRAY, TJPF_CMYK };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tjInitDecompress()) == NULL)\n    goto bailout;\n\n  \n  tjDecompressHeader3(handle, data, size, &width, &height, &jpegSubsamp,\n                      &jpegColorspace);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  for (pfi = 0; pfi < NUMPF; pfi++) {\n    int pf = pixelFormats[pfi], flags = TJFLAG_LIMITSCANS, i, sum = 0;\n    int w = width, h = height;\n\n    \n    if (pfi == 0)\n      flags |= TJFLAG_BOTTOMUP | TJFLAG_FASTUPSAMPLE | TJFLAG_FASTDCT;\n    \n    else if (pfi == 1) {\n      w = (width + 1) / 2;\n      h = (height + 1) / 2;\n    }\n\n    if ((dstBuf = (unsigned char *)malloc(w * h * tjPixelSize[pf])) == NULL)\n      goto bailout;\n\n    if (tjDecompress2(handle, data, size, dstBuf, w, 0, h, pf, flags) == 0) {\n      \n      for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n        sum += dstBuf[i];\n    } else\n      goto bailout;\n\n    free(dstBuf);\n    dstBuf = NULL;\n\n    \n    if (sum > 255 * 1048576 * tjPixelSize[pf])\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  if (handle) tjDestroy(handle);\n", "Selected Statement": "if ((dstBuf = (unsigned char *)malloc(w * h * tjPixelSize[pf])) == NULL)", "Function Input": {"data": {"value": "0x1069b80 \"p\\240\\006\\001\""}, "size": {"value": "17215616"}}, "Variable Values Before Statement": {"dstBuf": "NULL", "malloc": "NULL", "w": "NULL", "h": "NULL", "tjPixelSize": "int", "pf": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBuf = NULL;\n  int width = 0, height = 0, jpegSubsamp, jpegColorspace, pfi;\n  \n  enum TJPF pixelFormats[NUMPF] =\n    { TJPF_RGB, TJPF_BGRX, TJPF_GRAY, TJPF_CMYK };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tjInitDecompress()) == NULL)\n    goto bailout;\n\n  \n  tjDecompressHeader3(handle, data, size, &width, &height, &jpegSubsamp,\n                      &jpegColorspace);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  for (pfi = 0; pfi < NUMPF; pfi++) {\n    int pf = pixelFormats[pfi], flags = TJFLAG_LIMITSCANS, i, sum = 0;\n    int w = width, h = height;\n\n    \n    if (pfi == 0)\n      flags |= TJFLAG_BOTTOMUP | TJFLAG_FASTUPSAMPLE | TJFLAG_FASTDCT;\n    \n    else if (pfi == 1) {\n      w = (width + 1) / 2;\n      h = (height + 1) / 2;\n    }\n\n    if ((dstBuf = (unsigned char *)malloc(w * h * tjPixelSize[pf])) == NULL)\n      goto bailout;\n\n    if (tjDecompress2(handle, data, size, dstBuf, w, 0, h, pf, flags) == 0) {\n      \n      for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n        sum += dstBuf[i];\n    } else\n      goto bailout;\n\n    free(dstBuf);\n    dstBuf = NULL;\n\n    \n    if (sum > 255 * 1048576 * tjPixelSize[pf])\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  if (handle) tjDestroy(handle);\n", "Selected Statement": "if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)", "Function Input": {"data": {"value": "0x1069b80 \"p\\240\\006\\001\""}, "size": {"value": "17215616"}}, "Variable Values Before Statement": {"width": "int", "height": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBuf = NULL;\n  int width = 0, height = 0, jpegSubsamp, jpegColorspace, pfi;\n  \n  enum TJPF pixelFormats[NUMPF] =\n    { TJPF_RGB, TJPF_BGRX, TJPF_GRAY, TJPF_CMYK };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tjInitDecompress()) == NULL)\n    goto bailout;\n\n  \n  tjDecompressHeader3(handle, data, size, &width, &height, &jpegSubsamp,\n                      &jpegColorspace);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  for (pfi = 0; pfi < NUMPF; pfi++) {\n    int pf = pixelFormats[pfi], flags = TJFLAG_LIMITSCANS, i, sum = 0;\n    int w = width, h = height;\n\n    \n    if (pfi == 0)\n      flags |= TJFLAG_BOTTOMUP | TJFLAG_FASTUPSAMPLE | TJFLAG_FASTDCT;\n    \n    else if (pfi == 1) {\n      w = (width + 1) / 2;\n      h = (height + 1) / 2;\n    }\n\n    if ((dstBuf = (unsigned char *)malloc(w * h * tjPixelSize[pf])) == NULL)\n      goto bailout;\n\n    if (tjDecompress2(handle, data, size, dstBuf, w, 0, h, pf, flags) == 0) {\n      \n      for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n        sum += dstBuf[i];\n    } else\n      goto bailout;\n\n    free(dstBuf);\n    dstBuf = NULL;\n\n    \n    if (sum > 255 * 1048576 * tjPixelSize[pf])\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  if (handle) tjDestroy(handle);\n", "Selected Statement": "if (handle)", "Function Input": {"data": {"value": "0x1069b80 \"p\\240\\006\\001\""}, "size": {"value": "17215616"}}, "Variable Values Before Statement": {"handle": "tjhandle"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBuf = NULL;\n  int width = 0, height = 0, jpegSubsamp, jpegColorspace, pfi;\n  \n  enum TJPF pixelFormats[NUMPF] =\n    { TJPF_RGB, TJPF_BGRX, TJPF_GRAY, TJPF_CMYK };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tjInitDecompress()) == NULL)\n    goto bailout;\n\n  \n  tjDecompressHeader3(handle, data, size, &width, &height, &jpegSubsamp,\n                      &jpegColorspace);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  for (pfi = 0; pfi < NUMPF; pfi++) {\n    int pf = pixelFormats[pfi], flags = TJFLAG_LIMITSCANS, i, sum = 0;\n    int w = width, h = height;\n\n    \n    if (pfi == 0)\n      flags |= TJFLAG_BOTTOMUP | TJFLAG_FASTUPSAMPLE | TJFLAG_FASTDCT;\n    \n    else if (pfi == 1) {\n      w = (width + 1) / 2;\n      h = (height + 1) / 2;\n    }\n\n    if ((dstBuf = (unsigned char *)malloc(w * h * tjPixelSize[pf])) == NULL)\n      goto bailout;\n\n    if (tjDecompress2(handle, data, size, dstBuf, w, 0, h, pf, flags) == 0) {\n      \n      for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n        sum += dstBuf[i];\n    } else\n      goto bailout;\n\n    free(dstBuf);\n    dstBuf = NULL;\n\n    \n    if (sum > 255 * 1048576 * tjPixelSize[pf])\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  if (handle) tjDestroy(handle);\n", "Selected Statement": "if (pfi == 0)", "Function Input": {"data": {"value": "0x1069b80 \"p\\240\\006\\001\""}, "size": {"value": "17215616"}}, "Variable Values Before Statement": {"pfi": "int"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_CreateDecompress(j_decompress_ptr cinfo, int version, size_t structsize)\n{\n  int i;\n\n  \n  cinfo->mem = NULL;            \n  if (version != JPEG_LIB_VERSION)\n    ERREXIT2(cinfo, JERR_BAD_LIB_VERSION, JPEG_LIB_VERSION, version);\n  if (structsize != sizeof(struct jpeg_decompress_struct))\n    ERREXIT2(cinfo, JERR_BAD_STRUCT_SIZE,\n             (int)sizeof(struct jpeg_decompress_struct), (int)structsize);\n\n  \n  {\n    struct jpeg_error_mgr *err = cinfo->err;\n    void *client_data = cinfo->client_data; \n    memset(cinfo, 0, sizeof(struct jpeg_decompress_struct));\n    cinfo->err = err;\n    cinfo->client_data = client_data;\n  }\n  cinfo->is_decompressor = TRUE;\n\n  \n  jinit_memory_mgr((j_common_ptr)cinfo);\n\n  \n  cinfo->progress = NULL;\n  cinfo->src = NULL;\n\n  for (i = 0; i < NUM_QUANT_TBLS; i++)\n    cinfo->quant_tbl_ptrs[i] = NULL;\n\n  for (i = 0; i < NUM_HUFF_TBLS; i++) {\n    cinfo->dc_huff_tbl_ptrs[i] = NULL;\n    cinfo->ac_huff_tbl_ptrs[i] = NULL;\n  }\n\n  \n  cinfo->marker_list = NULL;\n  jinit_marker_reader(cinfo);\n\n  \n  jinit_input_controller(cinfo);\n\n  \n  cinfo->global_state = DSTATE_START;\n\n  \n  cinfo->master = (struct jpeg_decomp_master *)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                sizeof(my_decomp_master));\n  memset(cinfo->master, 0, sizeof(my_decomp_master));\n", "Selected Statement": "if ((*cinfo->inputctl->consume_input) (cinfo) == JPEG_SUSPENDED)", "Function Input": {"cinfo": {"value": "0x7ffff7ffe190"}, "structsize": {"value": "3"}, "version": {"value": "0"}}, "Variable Values Before Statement": {"cinfo->inputctl->consume_input": "NULL", "cinfo": "j_decompress_ptr", "JPEG_SUSPENDED": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njinit_marker_reader(j_decompress_ptr cinfo)\n{\n  my_marker_ptr marker;\n  int i;\n\n  \n  marker = (my_marker_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                sizeof(my_marker_reader));\n  cinfo->marker = (struct jpeg_marker_reader *)marker;\n  \n  marker->pub.reset_marker_reader = reset_marker_reader;\n  marker->pub.read_markers = read_markers;\n  marker->pub.read_restart_marker = read_restart_marker;\n  \n  marker->process_COM = skip_variable;\n  marker->length_limit_COM = 0;\n  for (i = 0; i < 16; i++) {\n    marker->process_APPn[i] = skip_variable;\n    marker->length_limit_APPn[i] = 0;\n  }\n  marker->process_APPn[0] = get_interesting_appn;\n  marker->process_APPn[14] = get_interesting_appn;\n  \n  reset_marker_reader(cinfo);\n", "Selected Statement": "if (length != 4)", "Function Input": {"cinfo": {"value": "0xffffdfd7"}}, "Variable Values Before Statement": {"length": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njinit_marker_reader(j_decompress_ptr cinfo)\n{\n  my_marker_ptr marker;\n  int i;\n\n  \n  marker = (my_marker_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                sizeof(my_marker_reader));\n  cinfo->marker = (struct jpeg_marker_reader *)marker;\n  \n  marker->pub.reset_marker_reader = reset_marker_reader;\n  marker->pub.read_markers = read_markers;\n  marker->pub.read_restart_marker = read_restart_marker;\n  \n  marker->process_COM = skip_variable;\n  marker->length_limit_COM = 0;\n  for (i = 0; i < 16; i++) {\n    marker->process_APPn[i] = skip_variable;\n    marker->length_limit_APPn[i] = 0;\n  }\n  marker->process_APPn[0] = get_interesting_appn;\n  marker->process_APPn[14] = get_interesting_appn;\n  \n  reset_marker_reader(cinfo);\n", "Selected Statement": "if (bytes_in_buffer == 0)", "Function Input": {"cinfo": {"value": "0xffffdfd7"}}, "Variable Values Before Statement": {"bytes_in_buffer": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njinit_input_controller(j_decompress_ptr cinfo)\n{\n  my_inputctl_ptr inputctl;\n\n  \n  inputctl = (my_inputctl_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                sizeof(my_input_controller));\n  cinfo->inputctl = (struct jpeg_input_controller *)inputctl;\n  \n  inputctl->pub.consume_input = consume_markers;\n  inputctl->pub.reset_input_controller = reset_input_controller;\n  inputctl->pub.start_input_pass = start_input_pass;\n  inputctl->pub.finish_input_pass = finish_input_pass;\n  \n  inputctl->pub.has_multiple_scans = FALSE; \n  inputctl->pub.eoi_reached = FALSE;\n  inputctl->inheaders = TRUE;\n", "Selected Statement": "if (cinfo->comps_in_scan == 1)", "Function Input": {"cinfo": {"value": "0x106b2a8"}}, "Variable Values Before Statement": {"cinfo->comps_in_scan": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njinit_input_controller(j_decompress_ptr cinfo)\n{\n  my_inputctl_ptr inputctl;\n\n  \n  inputctl = (my_inputctl_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                sizeof(my_input_controller));\n  cinfo->inputctl = (struct jpeg_input_controller *)inputctl;\n  \n  inputctl->pub.consume_input = consume_markers;\n  inputctl->pub.reset_input_controller = reset_input_controller;\n  inputctl->pub.start_input_pass = start_input_pass;\n  inputctl->pub.finish_input_pass = finish_input_pass;\n  \n  inputctl->pub.has_multiple_scans = FALSE; \n  inputctl->pub.eoi_reached = FALSE;\n  inputctl->inheaders = TRUE;\n", "Selected Statement": "if (cinfo->blocks_in_MCU + mcublks > D_MAX_BLOCKS_IN_MCU)", "Function Input": {"cinfo": {"value": "0x106b2a8"}}, "Variable Values Before Statement": {"cinfo->blocks_in_MCU": "NULL", "mcublks": "NULL", "D_MAX_BLOCKS_IN_MCU": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_src_tj(j_decompress_ptr cinfo, const unsigned char *inbuffer,\n                unsigned long insize)\n{\n  struct jpeg_source_mgr *src;\n\n  if (inbuffer == NULL || insize == 0)  \n    ERREXIT(cinfo, JERR_INPUT_EMPTY);\n\n  \n  if (cinfo->src == NULL) {     \n    cinfo->src = (struct jpeg_source_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(struct jpeg_source_mgr));\n  } else if (cinfo->src->init_source != init_mem_source) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  src = cinfo->src;\n  src->init_source = init_mem_source;\n  src->fill_input_buffer = fill_mem_input_buffer;\n  src->skip_input_data = skip_input_data;\n  src->resync_to_restart = jpeg_resync_to_restart; \n  src->term_source = term_source;\n  src->bytes_in_buffer = (size_t)insize;\n  src->next_input_byte = (const JOCTET *)inbuffer;\n", "Selected Statement": "if (inbuffer == NULL || insize == 0)", "Function Input": {"cinfo": {"value": "0x106b2a8"}}, "Variable Values Before Statement": {"inbuffer": "0x10687f9 <_tjInitDecompress.buffer> \"\"", "insize": "unsigned long"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_src_tj(j_decompress_ptr cinfo, const unsigned char *inbuffer,\n                unsigned long insize)\n{\n  struct jpeg_source_mgr *src;\n\n  if (inbuffer == NULL || insize == 0)  \n    ERREXIT(cinfo, JERR_INPUT_EMPTY);\n\n  \n  if (cinfo->src == NULL) {     \n    cinfo->src = (struct jpeg_source_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(struct jpeg_source_mgr));\n  } else if (cinfo->src->init_source != init_mem_source) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  src = cinfo->src;\n  src->init_source = init_mem_source;\n  src->fill_input_buffer = fill_mem_input_buffer;\n  src->skip_input_data = skip_input_data;\n  src->resync_to_restart = jpeg_resync_to_restart; \n  src->term_source = term_source;\n  src->bytes_in_buffer = (size_t)insize;\n  src->next_input_byte = (const JOCTET *)inbuffer;\n", "Selected Statement": "if (cinfo->src == NULL)", "Function Input": {"cinfo": {"value": "0x106b2a8"}}, "Variable Values Before Statement": {"cinfo->src": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_src_tj(j_decompress_ptr cinfo, const unsigned char *inbuffer,\n                unsigned long insize)\n{\n  struct jpeg_source_mgr *src;\n\n  if (inbuffer == NULL || insize == 0)  \n    ERREXIT(cinfo, JERR_INPUT_EMPTY);\n\n  \n  if (cinfo->src == NULL) {     \n    cinfo->src = (struct jpeg_source_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(struct jpeg_source_mgr));\n  } else if (cinfo->src->init_source != init_mem_source) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  src = cinfo->src;\n  src->init_source = init_mem_source;\n  src->fill_input_buffer = fill_mem_input_buffer;\n  src->skip_input_data = skip_input_data;\n  src->resync_to_restart = jpeg_resync_to_restart; \n  src->term_source = term_source;\n  src->bytes_in_buffer = (size_t)insize;\n  src->next_input_byte = (const JOCTET *)inbuffer;\n", "Selected Statement": "if (num_bytes > 0)", "Function Input": {"cinfo": {"value": "0x106b2a8"}}, "Variable Values Before Statement": {"num_bytes": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *srcBuf = NULL, *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, 1, 0 },\n    { TJPF_BGR, 2, 2 },\n    { TJPF_RGBX, 3, 4 },\n    { TJPF_BGRA, 4, 7 },\n    { TJPF_XRGB, 5, 5 },\n    { TJPF_GRAY, 6, 3 },\n    { TJPF_CMYK, 7, 0 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 0 || ti == 6 ? 1 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage8(handle, filename, &width, 1, &height,\n                                &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, TJSAMP_444);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_LOSSLESS, 1);\n    tj3Set(handle, TJPARAM_LOSSLESSPSV, tests[ti].psv);\n    tj3Set(handle, TJPARAM_LOSSLESSPT, tests[ti].pt);\n    if (tj3Compress8(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                     &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (strlen(filename) > 0)", "Function Input": {"data": {"value": "0x1108b70 \"`\\220\\020\\001\""}, "size": {"value": "17866864"}}, "Variable Values Before Statement": {"strlen": "NULL", "filename": "\"/tmp/libjpeg-turbo_compress_fuzz.Akr}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *srcBuf = NULL, *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, 1, 0 },\n    { TJPF_BGR, 2, 2 },\n    { TJPF_RGBX, 3, 4 },\n    { TJPF_BGRA, 4, 7 },\n    { TJPF_XRGB, 5, 5 },\n    { TJPF_GRAY, 6, 3 },\n    { TJPF_CMYK, 7, 0 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 0 || ti == 6 ? 1 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage8(handle, filename, &width, 1, &height,\n                                &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, TJSAMP_444);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_LOSSLESS, 1);\n    tj3Set(handle, TJPARAM_LOSSLESSPSV, tests[ti].psv);\n    tj3Set(handle, TJPARAM_LOSSLESSPT, tests[ti].pt);\n    if (tj3Compress8(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                     &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (fd >= 0)", "Function Input": {"data": {"value": "0x1108b70 \"`\\220\\020\\001\""}, "size": {"value": "17866864"}}, "Variable Values Before Statement": {"fd": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *srcBuf = NULL, *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, 1, 0 },\n    { TJPF_BGR, 2, 2 },\n    { TJPF_RGBX, 3, 4 },\n    { TJPF_BGRA, 4, 7 },\n    { TJPF_XRGB, 5, 5 },\n    { TJPF_GRAY, 6, 3 },\n    { TJPF_CMYK, 7, 0 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 0 || ti == 6 ? 1 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage8(handle, filename, &width, 1, &height,\n                                &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, TJSAMP_444);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_LOSSLESS, 1);\n    tj3Set(handle, TJPARAM_LOSSLESSPSV, tests[ti].psv);\n    tj3Set(handle, TJPARAM_LOSSLESSPT, tests[ti].pt);\n    if (tj3Compress8(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                     &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)", "Function Input": {"data": {"value": "0x1108b70 \"`\\220\\020\\001\""}, "size": {"value": "17866864"}}, "Variable Values Before Statement": {"fd": "int", "mkstemp": "NULL", "filename": "\"/tmp/libjpeg-turbo_compress_fuzzwrite": "NULL", "data": "0x110a070 \"\"", "size": "0"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *srcBuf = NULL, *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, 1, 0 },\n    { TJPF_BGR, 2, 2 },\n    { TJPF_RGBX, 3, 4 },\n    { TJPF_BGRA, 4, 7 },\n    { TJPF_XRGB, 5, 5 },\n    { TJPF_GRAY, 6, 3 },\n    { TJPF_CMYK, 7, 0 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 0 || ti == 6 ? 1 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage8(handle, filename, &width, 1, &height,\n                                &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, TJSAMP_444);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_LOSSLESS, 1);\n    tj3Set(handle, TJPARAM_LOSSLESSPSV, tests[ti].psv);\n    tj3Set(handle, TJPARAM_LOSSLESSPT, tests[ti].pt);\n    if (tj3Compress8(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                     &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (tj3Get(handle, TJPARAM_NOREALLOC))", "Function Input": {"data": {"value": "0x1108b70 \"`\\220\\020\\001\""}, "size": {"value": "17866864"}}, "Variable Values Before Statement": {"tj3Get": "NULL", "handle": "tjhandle", "TJPARAM_NOREALLOC": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  void *dstBuf = NULL;\n  int width = 0, height = 0, precision, sampleSize, pfi;\n  \n  enum TJPF pixelFormats[NUMPF] =\n    { TJPF_RGB, TJPF_BGRX, TJPF_GRAY, TJPF_CMYK };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tj3Init(TJINIT_DECOMPRESS)) == NULL)\n    goto bailout;\n\n  \n  tj3DecompressHeader(handle, data, size);\n  width = tj3Get(handle, TJPARAM_JPEGWIDTH);\n  height = tj3Get(handle, TJPARAM_JPEGHEIGHT);\n  precision = tj3Get(handle, TJPARAM_PRECISION);\n  sampleSize = (precision > 8 ? 2 : 1);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  tj3Set(handle, TJPARAM_SCANLIMIT, 500);\n\n  for (pfi = 0; pfi < NUMPF; pfi++) {\n    int w = width, h = height;\n    int pf = pixelFormats[pfi], i;\n    int64_t sum = 0;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, pfi == 0);\n    tj3Set(handle, TJPARAM_FASTUPSAMPLE, pfi == 0);\n\n    if (!tj3Get(handle, TJPARAM_LOSSLESS)) {\n      tj3Set(handle, TJPARAM_FASTDCT, pfi == 0);\n\n      \n      if (pfi == 1) {\n        tjscalingfactor sf = { 1, 2 };\n        tj3SetScalingFactor(handle, sf);\n        w = TJSCALED(width, sf);\n        h = TJSCALED(height, sf);\n      } else\n        tj3SetScalingFactor(handle, TJUNSCALED);\n\n      \n      if (pfi == 3 && w >= 97 && h >= 75) {\n        tjregion cr = { 32, 16, 65, 59 };\n        tj3SetCroppingRegion(handle, cr);\n      } else\n        tj3SetCroppingRegion(handle, TJUNCROPPED);\n    }\n\n    if ((dstBuf = malloc(w * h * tjPixelSize[pf] * sampleSize)) == NULL)\n      goto bailout;\n\n    if (precision == 8) {\n      if (tj3Decompress8(handle, data, size, (unsigned char *)dstBuf, 0,\n                         pf) == 0) {\n        \n        for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n          sum += ((unsigned char *)dstBuf)[i];\n      } else\n        goto bailout;\n    } else if (precision == 12) {\n      if (tj3Decompress12(handle, data, size, (short *)dstBuf, 0, pf) == 0) {\n        \n        for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n          sum += ((short *)dstBuf)[i];\n      } else\n        goto bailout;\n    } else {\n      if (tj3Decompress16(handle, data, size, (unsigned short *)dstBuf, 0,\n                          pf) == 0) {\n        \n        for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n          sum += ((unsigned short *)dstBuf)[i];\n      } else\n        goto bailout;\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n\n    \n    if (sum > ((1LL << precision) - 1LL) * 1048576LL * tjPixelSize[pf])\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Destroy(handle);\n", "Selected Statement": "if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)", "Function Input": {"data": {"value": "0x1108b70 \"`\\220\\020\\001\""}, "size": {"value": "17866864"}}, "Variable Values Before Statement": {"width": "int", "height": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  void *dstBuf = NULL;\n  int width = 0, height = 0, precision, sampleSize, pfi;\n  \n  enum TJPF pixelFormats[NUMPF] =\n    { TJPF_RGB, TJPF_BGRX, TJPF_GRAY, TJPF_CMYK };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tj3Init(TJINIT_DECOMPRESS)) == NULL)\n    goto bailout;\n\n  \n  tj3DecompressHeader(handle, data, size);\n  width = tj3Get(handle, TJPARAM_JPEGWIDTH);\n  height = tj3Get(handle, TJPARAM_JPEGHEIGHT);\n  precision = tj3Get(handle, TJPARAM_PRECISION);\n  sampleSize = (precision > 8 ? 2 : 1);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  tj3Set(handle, TJPARAM_SCANLIMIT, 500);\n\n  for (pfi = 0; pfi < NUMPF; pfi++) {\n    int w = width, h = height;\n    int pf = pixelFormats[pfi], i;\n    int64_t sum = 0;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, pfi == 0);\n    tj3Set(handle, TJPARAM_FASTUPSAMPLE, pfi == 0);\n\n    if (!tj3Get(handle, TJPARAM_LOSSLESS)) {\n      tj3Set(handle, TJPARAM_FASTDCT, pfi == 0);\n\n      \n      if (pfi == 1) {\n        tjscalingfactor sf = { 1, 2 };\n        tj3SetScalingFactor(handle, sf);\n        w = TJSCALED(width, sf);\n        h = TJSCALED(height, sf);\n      } else\n        tj3SetScalingFactor(handle, TJUNSCALED);\n\n      \n      if (pfi == 3 && w >= 97 && h >= 75) {\n        tjregion cr = { 32, 16, 65, 59 };\n        tj3SetCroppingRegion(handle, cr);\n      } else\n        tj3SetCroppingRegion(handle, TJUNCROPPED);\n    }\n\n    if ((dstBuf = malloc(w * h * tjPixelSize[pf] * sampleSize)) == NULL)\n      goto bailout;\n\n    if (precision == 8) {\n      if (tj3Decompress8(handle, data, size, (unsigned char *)dstBuf, 0,\n                         pf) == 0) {\n        \n        for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n          sum += ((unsigned char *)dstBuf)[i];\n      } else\n        goto bailout;\n    } else if (precision == 12) {\n      if (tj3Decompress12(handle, data, size, (short *)dstBuf, 0, pf) == 0) {\n        \n        for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n          sum += ((short *)dstBuf)[i];\n      } else\n        goto bailout;\n    } else {\n      if (tj3Decompress16(handle, data, size, (unsigned short *)dstBuf, 0,\n                          pf) == 0) {\n        \n        for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n          sum += ((unsigned short *)dstBuf)[i];\n      } else\n        goto bailout;\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n\n    \n    if (sum > ((1LL << precision) - 1LL) * 1048576LL * tjPixelSize[pf])\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Destroy(handle);\n", "Selected Statement": "if ((handle = tj3Init(TJINIT_DECOMPRESS)) == NULL)", "Function Input": {"data": {"value": "0x1108b70 \"`\\220\\020\\001\""}, "size": {"value": "17866864"}}, "Variable Values Before Statement": {"handle": "tjhandle", "tj3Init": "NULL", "TJINIT_DECOMPRESS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  void *dstBuf = NULL;\n  int width = 0, height = 0, precision, sampleSize, pfi;\n  \n  enum TJPF pixelFormats[NUMPF] =\n    { TJPF_RGB, TJPF_BGRX, TJPF_GRAY, TJPF_CMYK };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tj3Init(TJINIT_DECOMPRESS)) == NULL)\n    goto bailout;\n\n  \n  tj3DecompressHeader(handle, data, size);\n  width = tj3Get(handle, TJPARAM_JPEGWIDTH);\n  height = tj3Get(handle, TJPARAM_JPEGHEIGHT);\n  precision = tj3Get(handle, TJPARAM_PRECISION);\n  sampleSize = (precision > 8 ? 2 : 1);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  tj3Set(handle, TJPARAM_SCANLIMIT, 500);\n\n  for (pfi = 0; pfi < NUMPF; pfi++) {\n    int w = width, h = height;\n    int pf = pixelFormats[pfi], i;\n    int64_t sum = 0;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, pfi == 0);\n    tj3Set(handle, TJPARAM_FASTUPSAMPLE, pfi == 0);\n\n    if (!tj3Get(handle, TJPARAM_LOSSLESS)) {\n      tj3Set(handle, TJPARAM_FASTDCT, pfi == 0);\n\n      \n      if (pfi == 1) {\n        tjscalingfactor sf = { 1, 2 };\n        tj3SetScalingFactor(handle, sf);\n        w = TJSCALED(width, sf);\n        h = TJSCALED(height, sf);\n      } else\n        tj3SetScalingFactor(handle, TJUNSCALED);\n\n      \n      if (pfi == 3 && w >= 97 && h >= 75) {\n        tjregion cr = { 32, 16, 65, 59 };\n        tj3SetCroppingRegion(handle, cr);\n      } else\n        tj3SetCroppingRegion(handle, TJUNCROPPED);\n    }\n\n    if ((dstBuf = malloc(w * h * tjPixelSize[pf] * sampleSize)) == NULL)\n      goto bailout;\n\n    if (precision == 8) {\n      if (tj3Decompress8(handle, data, size, (unsigned char *)dstBuf, 0,\n                         pf) == 0) {\n        \n        for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n          sum += ((unsigned char *)dstBuf)[i];\n      } else\n        goto bailout;\n    } else if (precision == 12) {\n      if (tj3Decompress12(handle, data, size, (short *)dstBuf, 0, pf) == 0) {\n        \n        for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n          sum += ((short *)dstBuf)[i];\n      } else\n        goto bailout;\n    } else {\n      if (tj3Decompress16(handle, data, size, (unsigned short *)dstBuf, 0,\n                          pf) == 0) {\n        \n        for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n          sum += ((unsigned short *)dstBuf)[i];\n      } else\n        goto bailout;\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n\n    \n    if (sum > ((1LL << precision) - 1LL) * 1048576LL * tjPixelSize[pf])\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Destroy(handle);\n", "Selected Statement": "if (tj3Decompress12(handle, data, size, (short *)dstBuf, 0, pf) == 0)", "Function Input": {"data": {"value": "0x1108b70 \"`\\220\\020\\001\""}, "size": {"value": "17866864"}}, "Variable Values Before Statement": {"tj3Decompress12": "NULL", "handle": "tjhandle", "data": "0x110a070 \"\"", "size": "0", "dstBuf": "NULL", "pf": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_CreateDecompress(j_decompress_ptr cinfo, int version, size_t structsize)\n{\n  int i;\n\n  \n  cinfo->mem = NULL;            \n  if (version != JPEG_LIB_VERSION)\n    ERREXIT2(cinfo, JERR_BAD_LIB_VERSION, JPEG_LIB_VERSION, version);\n  if (structsize != sizeof(struct jpeg_decompress_struct))\n    ERREXIT2(cinfo, JERR_BAD_STRUCT_SIZE,\n             (int)sizeof(struct jpeg_decompress_struct), (int)structsize);\n\n  \n  {\n    struct jpeg_error_mgr *err = cinfo->err;\n    void *client_data = cinfo->client_data; \n    memset(cinfo, 0, sizeof(struct jpeg_decompress_struct));\n    cinfo->err = err;\n    cinfo->client_data = client_data;\n  }\n  cinfo->is_decompressor = TRUE;\n\n  \n  jinit_memory_mgr((j_common_ptr)cinfo);\n\n  \n  cinfo->progress = NULL;\n  cinfo->src = NULL;\n\n  for (i = 0; i < NUM_QUANT_TBLS; i++)\n    cinfo->quant_tbl_ptrs[i] = NULL;\n\n  for (i = 0; i < NUM_HUFF_TBLS; i++) {\n    cinfo->dc_huff_tbl_ptrs[i] = NULL;\n    cinfo->ac_huff_tbl_ptrs[i] = NULL;\n  }\n\n  \n  cinfo->marker_list = NULL;\n  jinit_marker_reader(cinfo);\n\n  \n  jinit_input_controller(cinfo);\n\n  cinfo->data_precision = BITS_IN_JSAMPLE;\n\n  \n  cinfo->global_state = DSTATE_START;\n\n  \n  cinfo->master = (struct jpeg_decomp_master *)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                sizeof(my_decomp_master));\n  memset(cinfo->master, 0, sizeof(my_decomp_master));\n", "Selected Statement": "if (cinfo->saw_JFIF_marker)", "Function Input": {"cinfo": {"value": "0x7ffff7ffe190"}, "structsize": {"value": "0"}, "version": {"value": "0"}}, "Variable Values Before Statement": {"cinfo->saw_JFIF_marker": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njinit_marker_reader(j_decompress_ptr cinfo)\n{\n  my_marker_ptr marker;\n  int i;\n\n  \n  marker = (my_marker_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                sizeof(my_marker_reader));\n  cinfo->marker = (struct jpeg_marker_reader *)marker;\n  \n  marker->pub.reset_marker_reader = reset_marker_reader;\n  marker->pub.read_markers = read_markers;\n  marker->pub.read_restart_marker = read_restart_marker;\n  \n  marker->process_COM = skip_variable;\n  marker->length_limit_COM = 0;\n  for (i = 0; i < 16; i++) {\n    marker->process_APPn[i] = skip_variable;\n    marker->length_limit_APPn[i] = 0;\n  }\n  marker->process_APPn[0] = get_interesting_appn;\n  marker->process_APPn[14] = get_interesting_appn;\n  \n  reset_marker_reader(cinfo);\n", "Selected Statement": "if (length >= 0)", "Function Input": {"cinfo": {"value": "0xffffdfe7"}}, "Variable Values Before Statement": {"length": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njinit_marker_reader(j_decompress_ptr cinfo)\n{\n  my_marker_ptr marker;\n  int i;\n\n  \n  marker = (my_marker_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                sizeof(my_marker_reader));\n  cinfo->marker = (struct jpeg_marker_reader *)marker;\n  \n  marker->pub.reset_marker_reader = reset_marker_reader;\n  marker->pub.read_markers = read_markers;\n  marker->pub.read_restart_marker = read_restart_marker;\n  \n  marker->process_COM = skip_variable;\n  marker->length_limit_COM = 0;\n  for (i = 0; i < 16; i++) {\n    marker->process_APPn[i] = skip_variable;\n    marker->length_limit_APPn[i] = 0;\n  }\n  marker->process_APPn[0] = get_interesting_appn;\n  marker->process_APPn[14] = get_interesting_appn;\n  \n  reset_marker_reader(cinfo);\n", "Selected Statement": "if (length != (n * 2 + 6) || n < 1 || n > MAX_COMPS_IN_SCAN)", "Function Input": {"cinfo": {"value": "0xffffdfe7"}}, "Variable Values Before Statement": {"length": "NULL", "n": "NULL", "MAX_COMPS_IN_SCAN": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njinit_input_controller(j_decompress_ptr cinfo)\n{\n  my_inputctl_ptr inputctl;\n\n  \n  inputctl = (my_inputctl_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                sizeof(my_input_controller));\n  cinfo->inputctl = (struct jpeg_input_controller *)inputctl;\n  \n  inputctl->pub.consume_input = consume_markers;\n  inputctl->pub.reset_input_controller = reset_input_controller;\n  inputctl->pub.start_input_pass = start_input_pass;\n  inputctl->pub.finish_input_pass = finish_input_pass;\n  \n  inputctl->pub.has_multiple_scans = FALSE; \n  inputctl->pub.eoi_reached = FALSE;\n  inputctl->inheaders = TRUE;\n", "Selected Statement": "if (!cinfo->master->lossless)", "Function Input": {"cinfo": {"value": "0x110a298"}}, "Variable Values Before Statement": {"cinfo->master->lossless": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njinit_input_controller(j_decompress_ptr cinfo)\n{\n  my_inputctl_ptr inputctl;\n\n  \n  inputctl = (my_inputctl_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                sizeof(my_input_controller));\n  cinfo->inputctl = (struct jpeg_input_controller *)inputctl;\n  \n  inputctl->pub.consume_input = consume_markers;\n  inputctl->pub.reset_input_controller = reset_input_controller;\n  inputctl->pub.start_input_pass = start_input_pass;\n  inputctl->pub.finish_input_pass = finish_input_pass;\n  \n  inputctl->pub.has_multiple_scans = FALSE; \n  inputctl->pub.eoi_reached = FALSE;\n  inputctl->inheaders = TRUE;\n", "Selected Statement": "if (cinfo->comps_in_scan <= 0 || cinfo->comps_in_scan > MAX_COMPS_IN_SCAN)", "Function Input": {"cinfo": {"value": "0x110a298"}}, "Variable Values Before Statement": {"cinfo->comps_in_scan": "NULL", "MAX_COMPS_IN_SCAN": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_src_tj(j_decompress_ptr cinfo, const unsigned char *inbuffer,\n                size_t insize)\n{\n  struct jpeg_source_mgr *src;\n\n  if (inbuffer == NULL || insize == 0)  \n    ERREXIT(cinfo, JERR_INPUT_EMPTY);\n\n  \n  if (cinfo->src == NULL) {     \n    cinfo->src = (struct jpeg_source_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(struct jpeg_source_mgr));\n  } else if (cinfo->src->init_source != init_mem_source) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  src = cinfo->src;\n  src->init_source = init_mem_source;\n  src->fill_input_buffer = fill_mem_input_buffer;\n  src->skip_input_data = skip_input_data;\n  src->resync_to_restart = jpeg_resync_to_restart; \n  src->term_source = term_source;\n  src->bytes_in_buffer = insize;\n  src->next_input_byte = (const JOCTET *)inbuffer;\n", "Selected Statement": "if (inbuffer == NULL || insize == 0)", "Function Input": {"cinfo": {"value": "0x110a298"}}, "Variable Values Before Statement": {"inbuffer": "0x1106df9 <_tjInitDecompress.buffer> \"\"", "insize": "1"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_src_tj(j_decompress_ptr cinfo, const unsigned char *inbuffer,\n                size_t insize)\n{\n  struct jpeg_source_mgr *src;\n\n  if (inbuffer == NULL || insize == 0)  \n    ERREXIT(cinfo, JERR_INPUT_EMPTY);\n\n  \n  if (cinfo->src == NULL) {     \n    cinfo->src = (struct jpeg_source_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(struct jpeg_source_mgr));\n  } else if (cinfo->src->init_source != init_mem_source) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  src = cinfo->src;\n  src->init_source = init_mem_source;\n  src->fill_input_buffer = fill_mem_input_buffer;\n  src->skip_input_data = skip_input_data;\n  src->resync_to_restart = jpeg_resync_to_restart; \n  src->term_source = term_source;\n  src->bytes_in_buffer = insize;\n  src->next_input_byte = (const JOCTET *)inbuffer;\n", "Selected Statement": "if (num_bytes > 0)", "Function Input": {"cinfo": {"value": "0x110a298"}}, "Variable Values Before Statement": {"num_bytes": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "GLOBAL(void)\njpeg_mem_src_tj(j_decompress_ptr cinfo, const unsigned char *inbuffer,\n                size_t insize)\n{\n  struct jpeg_source_mgr *src;\n\n  if (inbuffer == NULL || insize == 0)  \n    ERREXIT(cinfo, JERR_INPUT_EMPTY);\n\n  \n  if (cinfo->src == NULL) {     \n    cinfo->src = (struct jpeg_source_mgr *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  sizeof(struct jpeg_source_mgr));\n  } else if (cinfo->src->init_source != init_mem_source) {\n    \n    ERREXIT(cinfo, JERR_BUFFER_SIZE);\n  }\n\n  src = cinfo->src;\n  src->init_source = init_mem_source;\n  src->fill_input_buffer = fill_mem_input_buffer;\n  src->skip_input_data = skip_input_data;\n  src->resync_to_restart = jpeg_resync_to_restart; \n  src->term_source = term_source;\n  src->bytes_in_buffer = insize;\n  src->next_input_byte = (const JOCTET *)inbuffer;\n", "Selected Statement": "if (cinfo->src == NULL)", "Function Input": {"cinfo": {"value": "0x110a298"}}, "Variable Values Before Statement": {"cinfo->src": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBufs[1] = { NULL };\n  size_t dstSizes[1] = { 0 }, maxBufSize;\n  int width = 0, height = 0, jpegSubsamp, i;\n  tjtransform transforms[1];\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tj3Init(TJINIT_TRANSFORM)) == NULL)\n    goto bailout;\n\n  \n  tj3DecompressHeader(handle, data, size);\n  width = tj3Get(handle, TJPARAM_JPEGWIDTH);\n  height = tj3Get(handle, TJPARAM_JPEGHEIGHT);\n  jpegSubsamp = tj3Get(handle, TJPARAM_SUBSAMP);\n  \n  tj3Set(handle, TJPARAM_ARITHMETIC, 0);\n  tj3Set(handle, TJPARAM_PROGRESSIVE, 0);\n  tj3Set(handle, TJPARAM_OPTIMIZE, 0);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  tj3Set(handle, TJPARAM_SCANLIMIT, 500);\n\n  if (jpegSubsamp < 0 || jpegSubsamp >= TJ_NUMSAMP)\n    jpegSubsamp = TJSAMP_444;\n\n  memset(&transforms[0], 0, sizeof(tjtransform));\n\n  transforms[0].op = TJXOP_NONE;\n  transforms[0].options = TJXOPT_PROGRESSIVE | TJXOPT_COPYNONE;\n  dstBufs[0] =\n    (unsigned char *)malloc(tj3JPEGBufSize(width, height, jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tj3JPEGBufSize(width, height, jpegSubsamp);\n\n  tj3Set(handle, TJPARAM_NOREALLOC, 1);\n  if (tj3Transform(handle, data, size, 1, dstBufs, dstSizes,\n                   transforms) == 0) {\n    \n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].r.w = (height + 1) / 2;\n  transforms[0].r.h = (width + 1) / 2;\n  transforms[0].op = TJXOP_TRANSPOSE;\n  transforms[0].options = TJXOPT_GRAY | TJXOPT_CROP | TJXOPT_COPYNONE |\n                          TJXOPT_OPTIMIZE;\n  dstBufs[0] =\n    (unsigned char *)malloc(tj3JPEGBufSize((height + 1) / 2, (width + 1) / 2,\n                                           jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tj3JPEGBufSize((height + 1) / 2, (width + 1) / 2, jpegSubsamp);\n\n  if (tj3Transform(handle, data, size, 1, dstBufs, dstSizes,\n                   transforms) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].op = TJXOP_ROT90;\n  transforms[0].options = TJXOPT_TRIM | TJXOPT_ARITHMETIC;\n  dstBufs[0] =\n    (unsigned char *)malloc(tj3JPEGBufSize(height, width, jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tj3JPEGBufSize(height, width, jpegSubsamp);\n\n  if (tj3Transform(handle, data, size, 1, dstBufs, dstSizes,\n                   transforms) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].op = TJXOP_NONE;\n  transforms[0].options = TJXOPT_PROGRESSIVE;\n  dstSizes[0] = 0;\n\n  tj3Set(handle, TJPARAM_NOREALLOC, 0);\n  if (tj3Transform(handle, data, size, 1, dstBufs, dstSizes,\n                   transforms) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBufs[0]);\n  tj3Destroy(handle);\n", "Selected Statement": "if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)", "Function Input": {"data": {"value": "0x1108b40 \"0\\220\\020\\001\""}, "size": {"value": "17866816"}}, "Variable Values Before Statement": {"width": "int", "height": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBufs[1] = { NULL };\n  size_t dstSizes[1] = { 0 }, maxBufSize;\n  int width = 0, height = 0, jpegSubsamp, i;\n  tjtransform transforms[1];\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tj3Init(TJINIT_TRANSFORM)) == NULL)\n    goto bailout;\n\n  \n  tj3DecompressHeader(handle, data, size);\n  width = tj3Get(handle, TJPARAM_JPEGWIDTH);\n  height = tj3Get(handle, TJPARAM_JPEGHEIGHT);\n  jpegSubsamp = tj3Get(handle, TJPARAM_SUBSAMP);\n  \n  tj3Set(handle, TJPARAM_ARITHMETIC, 0);\n  tj3Set(handle, TJPARAM_PROGRESSIVE, 0);\n  tj3Set(handle, TJPARAM_OPTIMIZE, 0);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  tj3Set(handle, TJPARAM_SCANLIMIT, 500);\n\n  if (jpegSubsamp < 0 || jpegSubsamp >= TJ_NUMSAMP)\n    jpegSubsamp = TJSAMP_444;\n\n  memset(&transforms[0], 0, sizeof(tjtransform));\n\n  transforms[0].op = TJXOP_NONE;\n  transforms[0].options = TJXOPT_PROGRESSIVE | TJXOPT_COPYNONE;\n  dstBufs[0] =\n    (unsigned char *)malloc(tj3JPEGBufSize(width, height, jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tj3JPEGBufSize(width, height, jpegSubsamp);\n\n  tj3Set(handle, TJPARAM_NOREALLOC, 1);\n  if (tj3Transform(handle, data, size, 1, dstBufs, dstSizes,\n                   transforms) == 0) {\n    \n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].r.w = (height + 1) / 2;\n  transforms[0].r.h = (width + 1) / 2;\n  transforms[0].op = TJXOP_TRANSPOSE;\n  transforms[0].options = TJXOPT_GRAY | TJXOPT_CROP | TJXOPT_COPYNONE |\n                          TJXOPT_OPTIMIZE;\n  dstBufs[0] =\n    (unsigned char *)malloc(tj3JPEGBufSize((height + 1) / 2, (width + 1) / 2,\n                                           jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tj3JPEGBufSize((height + 1) / 2, (width + 1) / 2, jpegSubsamp);\n\n  if (tj3Transform(handle, data, size, 1, dstBufs, dstSizes,\n                   transforms) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].op = TJXOP_ROT90;\n  transforms[0].options = TJXOPT_TRIM | TJXOPT_ARITHMETIC;\n  dstBufs[0] =\n    (unsigned char *)malloc(tj3JPEGBufSize(height, width, jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tj3JPEGBufSize(height, width, jpegSubsamp);\n\n  if (tj3Transform(handle, data, size, 1, dstBufs, dstSizes,\n                   transforms) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].op = TJXOP_NONE;\n  transforms[0].options = TJXOPT_PROGRESSIVE;\n  dstSizes[0] = 0;\n\n  tj3Set(handle, TJPARAM_NOREALLOC, 0);\n  if (tj3Transform(handle, data, size, 1, dstBufs, dstSizes,\n                   transforms) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBufs[0]);\n  tj3Destroy(handle);\n", "Selected Statement": "if (sum > 255 * maxBufSize)", "Function Input": {"data": {"value": "0x1108b40 \"0\\220\\020\\001\""}, "size": {"value": "17866816"}}, "Variable Values Before Statement": {"sum": "NULL", "maxBufSize": "0"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_set_defaults(j_compress_ptr cinfo)\n{\n  int i;\n\n  \n  if (cinfo->global_state != CSTATE_START)\n    ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);\n\n  \n  if (cinfo->comp_info == NULL)\n    cinfo->comp_info = (jpeg_component_info *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  MAX_COMPONENTS * sizeof(jpeg_component_info));\n\n  \n\n#if JPEG_LIB_VERSION >= 70\n  cinfo->scale_num = 1;         \n  cinfo->scale_denom = 1;\n#endif\n  cinfo->data_precision = BITS_IN_JSAMPLE;\n  \n  jpeg_set_quality(cinfo, 75, TRUE);\n  \n  std_huff_tables((j_common_ptr)cinfo);\n\n  \n  for (i = 0; i < NUM_ARITH_TBLS; i++) {\n    cinfo->arith_dc_L[i] = 0;\n    cinfo->arith_dc_U[i] = 1;\n    cinfo->arith_ac_K[i] = 5;\n  }\n\n  \n  cinfo->scan_info = NULL;\n  cinfo->num_scans = 0;\n\n  \n  cinfo->raw_data_in = FALSE;\n\n  \n  cinfo->arith_code = FALSE;\n\n  \n  cinfo->optimize_coding = FALSE;\n  \n  if (cinfo->data_precision > 8)\n    cinfo->optimize_coding = TRUE;\n\n  \n  cinfo->CCIR601_sampling = FALSE;\n\n#if JPEG_LIB_VERSION >= 70\n  \n  cinfo->do_fancy_downsampling = TRUE;\n#endif\n\n  \n  cinfo->smoothing_factor = 0;\n\n  \n  cinfo->dct_method = JDCT_DEFAULT;\n\n  \n  cinfo->restart_interval = 0;\n  cinfo->restart_in_rows = 0;\n\n  \n  cinfo->JFIF_major_version = 1; \n  cinfo->JFIF_minor_version = 1;\n  cinfo->density_unit = 0;      \n  cinfo->X_density = 1;         \n  cinfo->Y_density = 1;\n\n  \n\n  jpeg_default_colorspace(cinfo);\n", "Selected Statement": "if (cinfo->comp_info == NULL)", "Function Input": {"cinfo": {"value": "0x7fffffffcbf8"}}, "Variable Values Before Statement": {"cinfo->comp_info": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_set_defaults(j_compress_ptr cinfo)\n{\n  int i;\n\n  \n  if (cinfo->global_state != CSTATE_START)\n    ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);\n\n  \n  if (cinfo->comp_info == NULL)\n    cinfo->comp_info = (jpeg_component_info *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  MAX_COMPONENTS * sizeof(jpeg_component_info));\n\n  \n\n#if JPEG_LIB_VERSION >= 70\n  cinfo->scale_num = 1;         \n  cinfo->scale_denom = 1;\n#endif\n  cinfo->data_precision = BITS_IN_JSAMPLE;\n  \n  jpeg_set_quality(cinfo, 75, TRUE);\n  \n  std_huff_tables((j_common_ptr)cinfo);\n\n  \n  for (i = 0; i < NUM_ARITH_TBLS; i++) {\n    cinfo->arith_dc_L[i] = 0;\n    cinfo->arith_dc_U[i] = 1;\n    cinfo->arith_ac_K[i] = 5;\n  }\n\n  \n  cinfo->scan_info = NULL;\n  cinfo->num_scans = 0;\n\n  \n  cinfo->raw_data_in = FALSE;\n\n  \n  cinfo->arith_code = FALSE;\n\n  \n  cinfo->optimize_coding = FALSE;\n  \n  if (cinfo->data_precision > 8)\n    cinfo->optimize_coding = TRUE;\n\n  \n  cinfo->CCIR601_sampling = FALSE;\n\n#if JPEG_LIB_VERSION >= 70\n  \n  cinfo->do_fancy_downsampling = TRUE;\n#endif\n\n  \n  cinfo->smoothing_factor = 0;\n\n  \n  cinfo->dct_method = JDCT_DEFAULT;\n\n  \n  cinfo->restart_interval = 0;\n  cinfo->restart_in_rows = 0;\n\n  \n  cinfo->JFIF_major_version = 1; \n  cinfo->JFIF_minor_version = 1;\n  cinfo->density_unit = 0;      \n  cinfo->X_density = 1;         \n  cinfo->Y_density = 1;\n\n  \n\n  jpeg_default_colorspace(cinfo);\n", "Selected Statement": "if (cinfo->script_space == NULL || cinfo->script_space_size < nscans)", "Function Input": {"cinfo": {"value": "0x7fffffffcbf8"}}, "Variable Values Before Statement": {"cinfo->script_space": "NULL", "cinfo->script_space_size": "NULL", "nscans": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(void)\njpeg_set_defaults(j_compress_ptr cinfo)\n{\n  int i;\n\n  \n  if (cinfo->global_state != CSTATE_START)\n    ERREXIT1(cinfo, JERR_BAD_STATE, cinfo->global_state);\n\n  \n  if (cinfo->comp_info == NULL)\n    cinfo->comp_info = (jpeg_component_info *)\n      (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_PERMANENT,\n                                  MAX_COMPONENTS * sizeof(jpeg_component_info));\n\n  \n\n#if JPEG_LIB_VERSION >= 70\n  cinfo->scale_num = 1;         \n  cinfo->scale_denom = 1;\n#endif\n  cinfo->data_precision = BITS_IN_JSAMPLE;\n  \n  jpeg_set_quality(cinfo, 75, TRUE);\n  \n  std_huff_tables((j_common_ptr)cinfo);\n\n  \n  for (i = 0; i < NUM_ARITH_TBLS; i++) {\n    cinfo->arith_dc_L[i] = 0;\n    cinfo->arith_dc_U[i] = 1;\n    cinfo->arith_ac_K[i] = 5;\n  }\n\n  \n  cinfo->scan_info = NULL;\n  cinfo->num_scans = 0;\n\n  \n  cinfo->raw_data_in = FALSE;\n\n  \n  cinfo->arith_code = FALSE;\n\n  \n  cinfo->optimize_coding = FALSE;\n  \n  if (cinfo->data_precision > 8)\n    cinfo->optimize_coding = TRUE;\n\n  \n  cinfo->CCIR601_sampling = FALSE;\n\n#if JPEG_LIB_VERSION >= 70\n  \n  cinfo->do_fancy_downsampling = TRUE;\n#endif\n\n  \n  cinfo->smoothing_factor = 0;\n\n  \n  cinfo->dct_method = JDCT_DEFAULT;\n\n  \n  cinfo->restart_interval = 0;\n  cinfo->restart_in_rows = 0;\n\n  \n  cinfo->JFIF_major_version = 1; \n  cinfo->JFIF_minor_version = 1;\n  cinfo->density_unit = 0;      \n  cinfo->X_density = 1;         \n  cinfo->Y_density = 1;\n\n  \n\n  jpeg_default_colorspace(cinfo);\n", "Selected Statement": "if (quality < 50)", "Function Input": {"cinfo": {"value": "0x7fffffffcbf8"}}, "Variable Values Before Statement": {"quality": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(cjpeg_source_ptr)\njinit_read_targa(j_compress_ptr cinfo)\n{\n  tga_source_ptr source;\n\n  \n  source = (tga_source_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,\n                                sizeof(tga_source_struct));\n  source->cinfo = cinfo;        \n  \n  source->pub.start_input = start_input_tga;\n  source->pub.finish_input = finish_input_tga;\n#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\n  source->pub.max_pixels = 0;\n#endif\n\n", "Selected Statement": "if ((c = getc(infile)) == EOF)", "Function Input": {}, "Variable Values Before Statement": {"c": "NULL", "getc": "NULL", "infile": "NULL", "EOF": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(cjpeg_source_ptr)\njinit_read_targa(j_compress_ptr cinfo)\n{\n  tga_source_ptr source;\n\n  \n  source = (tga_source_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,\n                                sizeof(tga_source_struct));\n  source->cinfo = cinfo;        \n  \n  source->pub.start_input = start_input_tga;\n  source->pub.finish_input = finish_input_tga;\n#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\n  source->pub.max_pixels = 0;\n#endif\n\n", "Selected Statement": "if (i & 0x80)", "Function Input": {}, "Variable Values Before Statement": {"i": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(cjpeg_source_ptr)\njinit_read_gif(j_compress_ptr cinfo)\n{\n  gif_source_ptr source;\n\n  \n  source = (gif_source_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,\n                                sizeof(gif_source_struct));\n  source->cinfo = cinfo;        \n  \n  source->pub.start_input = start_input_gif;\n  source->pub.finish_input = finish_input_gif;\n#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\n  source->pub.max_pixels = 0;\n#endif\n\n", "Selected Statement": "if (count > 0)", "Function Input": {}, "Variable Values Before Statement": {"count": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(cjpeg_source_ptr)\njinit_read_gif(j_compress_ptr cinfo)\n{\n  gif_source_ptr source;\n\n  \n  source = (gif_source_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,\n                                sizeof(gif_source_struct));\n  source->cinfo = cinfo;        \n  \n  source->pub.start_input = start_input_gif;\n  source->pub.finish_input = finish_input_gif;\n#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\n  source->pub.max_pixels = 0;\n#endif\n\n", "Selected Statement": "if ((c = getc(infile)) == EOF)", "Function Input": {}, "Variable Values Before Statement": {"c": "NULL", "getc": "NULL", "infile": "NULL", "EOF": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(cjpeg_source_ptr)\njinit_read_bmp(j_compress_ptr cinfo, boolean use_inversion_array)\n{\n  bmp_source_ptr source;\n\n  \n  source = (bmp_source_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,\n                                sizeof(bmp_source_struct));\n  source->cinfo = cinfo;        \n  \n  source->pub.start_input = start_input_bmp;\n  source->pub.finish_input = finish_input_bmp;\n#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\n  source->pub.max_pixels = 0;\n#endif\n\n  source->use_inversion_array = use_inversion_array;\n\n", "Selected Statement": "if (IsExtRGB(cinfo->in_color_space))", "Function Input": {}, "Variable Values Before Statement": {"IsExtRGB": "NULL", "cinfo->in_color_space": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(cjpeg_source_ptr)\njinit_read_bmp(j_compress_ptr cinfo, boolean use_inversion_array)\n{\n  bmp_source_ptr source;\n\n  \n  source = (bmp_source_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,\n                                sizeof(bmp_source_struct));\n  source->cinfo = cinfo;        \n  \n  source->pub.start_input = start_input_bmp;\n  source->pub.finish_input = finish_input_bmp;\n#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\n  source->pub.max_pixels = 0;\n#endif\n\n  source->use_inversion_array = use_inversion_array;\n\n", "Selected Statement": "if (fread(out_ptr, 1, source->row_width, infile) != source->row_width)", "Function Input": {}, "Variable Values Before Statement": {"fread": "NULL", "out_ptr": "NULL", "source->row_width": "NULL", "infile": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(cjpeg_source_ptr)\njinit_read_ppm(j_compress_ptr cinfo)\n{\n  ppm_source_ptr source;\n\n  \n  source = (ppm_source_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,\n                                sizeof(ppm_source_struct));\n  \n  source->pub.start_input = start_input_ppm;\n  source->pub.finish_input = finish_input_ppm;\n#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\n  source->pub.max_pixels = 0;\n#endif\n\n", "Selected Statement": "if (IsExtRGB(cinfo->in_color_space))", "Function Input": {}, "Variable Values Before Statement": {"IsExtRGB": "NULL", "cinfo->in_color_space": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nGLOBAL(cjpeg_source_ptr)\njinit_read_ppm(j_compress_ptr cinfo)\n{\n  ppm_source_ptr source;\n\n  \n  source = (ppm_source_ptr)\n    (*cinfo->mem->alloc_small) ((j_common_ptr)cinfo, JPOOL_IMAGE,\n                                sizeof(ppm_source_struct));\n  \n  source->pub.start_input = start_input_ppm;\n  source->pub.finish_input = finish_input_ppm;\n#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION\n  source->pub.max_pixels = 0;\n#endif\n\n", "Selected Statement": "if (cinfo->in_color_space == JCS_GRAYSCALE)", "Function Input": {}, "Variable Values Before Statement": {"cinfo->in_color_space": "NULL", "JCS_GRAYSCALE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBufs[1] = { NULL };\n  unsigned long dstSizes[1] = { 0 }, maxBufSize;\n  int width = 0, height = 0, jpegSubsamp, jpegColorspace, i;\n  tjtransform transforms[1];\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tjInitTransform()) == NULL)\n    goto bailout;\n\n  \n  tjDecompressHeader3(handle, data, size, &width, &height, &jpegSubsamp,\n                      &jpegColorspace);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  if (jpegSubsamp < 0 || jpegSubsamp >= TJ_NUMSAMP)\n    jpegSubsamp = TJSAMP_444;\n\n  memset(&transforms[0], 0, sizeof(tjtransform));\n\n  transforms[0].op = TJXOP_NONE;\n  transforms[0].options = TJXOPT_PROGRESSIVE | TJXOPT_COPYNONE;\n  dstBufs[0] = (unsigned char *)malloc(tjBufSize(width, height, jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tjBufSize(width, height, jpegSubsamp);\n\n  if (tjTransform(handle, data, size, 1, dstBufs, dstSizes, transforms,\n                  TJFLAG_LIMITSCANS | TJFLAG_NOREALLOC) == 0) {\n    \n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].r.w = (height + 1) / 2;\n  transforms[0].r.h = (width + 1) / 2;\n  transforms[0].op = TJXOP_TRANSPOSE;\n  transforms[0].options = TJXOPT_GRAY | TJXOPT_CROP | TJXOPT_COPYNONE;\n  dstBufs[0] =\n    (unsigned char *)malloc(tjBufSize((height + 1) / 2, (width + 1) / 2,\n                                      jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tjBufSize((height + 1) / 2, (width + 1) / 2, jpegSubsamp);\n\n  if (tjTransform(handle, data, size, 1, dstBufs, dstSizes, transforms,\n                  TJFLAG_LIMITSCANS | TJFLAG_NOREALLOC) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].op = TJXOP_ROT90;\n  transforms[0].options = TJXOPT_TRIM;\n  dstBufs[0] = (unsigned char *)malloc(tjBufSize(height, width, jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tjBufSize(height, width, jpegSubsamp);\n\n  if (tjTransform(handle, data, size, 1, dstBufs, dstSizes, transforms,\n                  TJFLAG_LIMITSCANS | TJFLAG_NOREALLOC) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].op = TJXOP_NONE;\n  transforms[0].options = TJXOPT_PROGRESSIVE;\n  dstSizes[0] = 0;\n\n  if (tjTransform(handle, data, size, 1, dstBufs, dstSizes, transforms,\n                  TJFLAG_LIMITSCANS) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBufs[0]);\n  if (handle) tjDestroy(handle);\n", "Selected Statement": "if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)", "Function Input": {"data": {"value": "0x1069b00 \"\\360\\237\\006\\001\""}, "size": {"value": "17215488"}}, "Variable Values Before Statement": {"width": "int", "height": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBufs[1] = { NULL };\n  unsigned long dstSizes[1] = { 0 }, maxBufSize;\n  int width = 0, height = 0, jpegSubsamp, jpegColorspace, i;\n  tjtransform transforms[1];\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tjInitTransform()) == NULL)\n    goto bailout;\n\n  \n  tjDecompressHeader3(handle, data, size, &width, &height, &jpegSubsamp,\n                      &jpegColorspace);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  if (jpegSubsamp < 0 || jpegSubsamp >= TJ_NUMSAMP)\n    jpegSubsamp = TJSAMP_444;\n\n  memset(&transforms[0], 0, sizeof(tjtransform));\n\n  transforms[0].op = TJXOP_NONE;\n  transforms[0].options = TJXOPT_PROGRESSIVE | TJXOPT_COPYNONE;\n  dstBufs[0] = (unsigned char *)malloc(tjBufSize(width, height, jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tjBufSize(width, height, jpegSubsamp);\n\n  if (tjTransform(handle, data, size, 1, dstBufs, dstSizes, transforms,\n                  TJFLAG_LIMITSCANS | TJFLAG_NOREALLOC) == 0) {\n    \n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].r.w = (height + 1) / 2;\n  transforms[0].r.h = (width + 1) / 2;\n  transforms[0].op = TJXOP_TRANSPOSE;\n  transforms[0].options = TJXOPT_GRAY | TJXOPT_CROP | TJXOPT_COPYNONE;\n  dstBufs[0] =\n    (unsigned char *)malloc(tjBufSize((height + 1) / 2, (width + 1) / 2,\n                                      jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tjBufSize((height + 1) / 2, (width + 1) / 2, jpegSubsamp);\n\n  if (tjTransform(handle, data, size, 1, dstBufs, dstSizes, transforms,\n                  TJFLAG_LIMITSCANS | TJFLAG_NOREALLOC) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].op = TJXOP_ROT90;\n  transforms[0].options = TJXOPT_TRIM;\n  dstBufs[0] = (unsigned char *)malloc(tjBufSize(height, width, jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tjBufSize(height, width, jpegSubsamp);\n\n  if (tjTransform(handle, data, size, 1, dstBufs, dstSizes, transforms,\n                  TJFLAG_LIMITSCANS | TJFLAG_NOREALLOC) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].op = TJXOP_NONE;\n  transforms[0].options = TJXOPT_PROGRESSIVE;\n  dstSizes[0] = 0;\n\n  if (tjTransform(handle, data, size, 1, dstBufs, dstSizes, transforms,\n                  TJFLAG_LIMITSCANS) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBufs[0]);\n  if (handle) tjDestroy(handle);\n", "Selected Statement": "if (handle)", "Function Input": {"data": {"value": "0x1069b00 \"\\360\\237\\006\\001\""}, "size": {"value": "17215488"}}, "Variable Values Before Statement": {"handle": "tjhandle"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBufs[1] = { NULL };\n  unsigned long dstSizes[1] = { 0 }, maxBufSize;\n  int width = 0, height = 0, jpegSubsamp, jpegColorspace, i;\n  tjtransform transforms[1];\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tjInitTransform()) == NULL)\n    goto bailout;\n\n  \n  tjDecompressHeader3(handle, data, size, &width, &height, &jpegSubsamp,\n                      &jpegColorspace);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  if (jpegSubsamp < 0 || jpegSubsamp >= TJ_NUMSAMP)\n    jpegSubsamp = TJSAMP_444;\n\n  memset(&transforms[0], 0, sizeof(tjtransform));\n\n  transforms[0].op = TJXOP_NONE;\n  transforms[0].options = TJXOPT_PROGRESSIVE | TJXOPT_COPYNONE;\n  dstBufs[0] = (unsigned char *)malloc(tjBufSize(width, height, jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tjBufSize(width, height, jpegSubsamp);\n\n  if (tjTransform(handle, data, size, 1, dstBufs, dstSizes, transforms,\n                  TJFLAG_LIMITSCANS | TJFLAG_NOREALLOC) == 0) {\n    \n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].r.w = (height + 1) / 2;\n  transforms[0].r.h = (width + 1) / 2;\n  transforms[0].op = TJXOP_TRANSPOSE;\n  transforms[0].options = TJXOPT_GRAY | TJXOPT_CROP | TJXOPT_COPYNONE;\n  dstBufs[0] =\n    (unsigned char *)malloc(tjBufSize((height + 1) / 2, (width + 1) / 2,\n                                      jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tjBufSize((height + 1) / 2, (width + 1) / 2, jpegSubsamp);\n\n  if (tjTransform(handle, data, size, 1, dstBufs, dstSizes, transforms,\n                  TJFLAG_LIMITSCANS | TJFLAG_NOREALLOC) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].op = TJXOP_ROT90;\n  transforms[0].options = TJXOPT_TRIM;\n  dstBufs[0] = (unsigned char *)malloc(tjBufSize(height, width, jpegSubsamp));\n  if (!dstBufs[0])\n    goto bailout;\n\n  maxBufSize = tjBufSize(height, width, jpegSubsamp);\n\n  if (tjTransform(handle, data, size, 1, dstBufs, dstSizes, transforms,\n                  TJFLAG_LIMITSCANS | TJFLAG_NOREALLOC) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\n  free(dstBufs[0]);\n  dstBufs[0] = NULL;\n\n  transforms[0].op = TJXOP_NONE;\n  transforms[0].options = TJXOPT_PROGRESSIVE;\n  dstSizes[0] = 0;\n\n  if (tjTransform(handle, data, size, 1, dstBufs, dstSizes, transforms,\n                  TJFLAG_LIMITSCANS) == 0) {\n    int sum = 0;\n\n    for (i = 0; i < dstSizes[0]; i++)\n      sum += dstBufs[0][i];\n\n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBufs[0]);\n  if (handle) tjDestroy(handle);\n", "Selected Statement": "if (!dstBufs[0])", "Function Input": {"data": {"value": "0x1069b00 \"\\360\\237\\006\\001\""}, "size": {"value": "17215488"}}, "Variable Values Before Statement": {"dstBufs": "ARRAY"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBuf = NULL, *yuvBuf = NULL;\n  int width = 0, height = 0, jpegSubsamp, jpegColorspace, pfi;\n  \n  enum TJPF pixelFormats[NUMPF] =\n    { TJPF_BGR, TJPF_XRGB, TJPF_GRAY };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tjInitDecompress()) == NULL)\n    goto bailout;\n\n  if (tjDecompressHeader3(handle, data, size, &width, &height, &jpegSubsamp,\n                          &jpegColorspace) < 0)\n    goto bailout;\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  for (pfi = 0; pfi < NUMPF; pfi++) {\n    int pf = pixelFormats[pfi], flags = TJFLAG_LIMITSCANS, i, sum = 0;\n    int w = width, h = height;\n\n    \n    if (pfi == 0)\n      flags |= TJFLAG_BOTTOMUP | TJFLAG_FASTUPSAMPLE | TJFLAG_FASTDCT;\n    \n    else if (pfi == 1) {\n      w = (width + 3) / 4;\n      h = (height + 3) / 4;\n    }\n\n    if ((dstBuf = (unsigned char *)malloc(w * h * tjPixelSize[pf])) == NULL)\n      goto bailout;\n    if ((yuvBuf =\n         (unsigned char *)malloc(tjBufSizeYUV2(w, 1, h, jpegSubsamp))) == NULL)\n      goto bailout;\n\n    if (tjDecompressToYUV2(handle, data, size, yuvBuf, w, 1, h, flags) == 0 &&\n        tjDecodeYUV(handle, yuvBuf, 1, jpegSubsamp, dstBuf, w, 0, h, pf,\n                    flags) == 0) {\n      \n      for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n        sum += dstBuf[i];\n    } else\n      goto bailout;\n\n    free(dstBuf);\n    dstBuf = NULL;\n    free(yuvBuf);\n    yuvBuf = NULL;\n\n    \n    if (sum > 255 * 1048576 * tjPixelSize[pf])\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  free(yuvBuf);\n  if (handle) tjDestroy(handle);\n", "Selected Statement": "if ((dstBuf = (unsigned char *)malloc(w * h * tjPixelSize[pf])) == NULL)", "Function Input": {"data": {"value": "0x106b080 \"\""}, "size": {"value": "6760448"}}, "Variable Values Before Statement": {"dstBuf": "NULL", "malloc": "NULL", "w": "NULL", "h": "NULL", "tjPixelSize": "int", "pf": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBuf = NULL, *yuvBuf = NULL;\n  int width = 0, height = 0, jpegSubsamp, jpegColorspace, pfi;\n  \n  enum TJPF pixelFormats[NUMPF] =\n    { TJPF_BGR, TJPF_XRGB, TJPF_GRAY };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tjInitDecompress()) == NULL)\n    goto bailout;\n\n  if (tjDecompressHeader3(handle, data, size, &width, &height, &jpegSubsamp,\n                          &jpegColorspace) < 0)\n    goto bailout;\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  for (pfi = 0; pfi < NUMPF; pfi++) {\n    int pf = pixelFormats[pfi], flags = TJFLAG_LIMITSCANS, i, sum = 0;\n    int w = width, h = height;\n\n    \n    if (pfi == 0)\n      flags |= TJFLAG_BOTTOMUP | TJFLAG_FASTUPSAMPLE | TJFLAG_FASTDCT;\n    \n    else if (pfi == 1) {\n      w = (width + 3) / 4;\n      h = (height + 3) / 4;\n    }\n\n    if ((dstBuf = (unsigned char *)malloc(w * h * tjPixelSize[pf])) == NULL)\n      goto bailout;\n    if ((yuvBuf =\n         (unsigned char *)malloc(tjBufSizeYUV2(w, 1, h, jpegSubsamp))) == NULL)\n      goto bailout;\n\n    if (tjDecompressToYUV2(handle, data, size, yuvBuf, w, 1, h, flags) == 0 &&\n        tjDecodeYUV(handle, yuvBuf, 1, jpegSubsamp, dstBuf, w, 0, h, pf,\n                    flags) == 0) {\n      \n      for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n        sum += dstBuf[i];\n    } else\n      goto bailout;\n\n    free(dstBuf);\n    dstBuf = NULL;\n    free(yuvBuf);\n    yuvBuf = NULL;\n\n    \n    if (sum > 255 * 1048576 * tjPixelSize[pf])\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  free(yuvBuf);\n  if (handle) tjDestroy(handle);\n", "Selected Statement": "if (handle)", "Function Input": {"data": {"value": "0x106b080 \"\""}, "size": {"value": "6760448"}}, "Variable Values Before Statement": {"handle": "tjhandle"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBuf = NULL, *yuvBuf = NULL;\n  int width = 0, height = 0, jpegSubsamp, jpegColorspace, pfi;\n  \n  enum TJPF pixelFormats[NUMPF] =\n    { TJPF_BGR, TJPF_XRGB, TJPF_GRAY };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tjInitDecompress()) == NULL)\n    goto bailout;\n\n  if (tjDecompressHeader3(handle, data, size, &width, &height, &jpegSubsamp,\n                          &jpegColorspace) < 0)\n    goto bailout;\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  for (pfi = 0; pfi < NUMPF; pfi++) {\n    int pf = pixelFormats[pfi], flags = TJFLAG_LIMITSCANS, i, sum = 0;\n    int w = width, h = height;\n\n    \n    if (pfi == 0)\n      flags |= TJFLAG_BOTTOMUP | TJFLAG_FASTUPSAMPLE | TJFLAG_FASTDCT;\n    \n    else if (pfi == 1) {\n      w = (width + 3) / 4;\n      h = (height + 3) / 4;\n    }\n\n    if ((dstBuf = (unsigned char *)malloc(w * h * tjPixelSize[pf])) == NULL)\n      goto bailout;\n    if ((yuvBuf =\n         (unsigned char *)malloc(tjBufSizeYUV2(w, 1, h, jpegSubsamp))) == NULL)\n      goto bailout;\n\n    if (tjDecompressToYUV2(handle, data, size, yuvBuf, w, 1, h, flags) == 0 &&\n        tjDecodeYUV(handle, yuvBuf, 1, jpegSubsamp, dstBuf, w, 0, h, pf,\n                    flags) == 0) {\n      \n      for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n        sum += dstBuf[i];\n    } else\n      goto bailout;\n\n    free(dstBuf);\n    dstBuf = NULL;\n    free(yuvBuf);\n    yuvBuf = NULL;\n\n    \n    if (sum > 255 * 1048576 * tjPixelSize[pf])\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  free(yuvBuf);\n  if (handle) tjDestroy(handle);\n", "Selected Statement": "if ((handle = tjInitDecompress()) == NULL)", "Function Input": {"data": {"value": "0x106b080 \"\""}, "size": {"value": "6760448"}}, "Variable Values Before Statement": {"handle": "tjhandle", "tjInitDecompress": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBuf = NULL, *yuvBuf = NULL;\n  int width = 0, height = 0, jpegSubsamp, pfi;\n  \n  enum TJPF pixelFormats[NUMPF] =\n    { TJPF_BGR, TJPF_XRGB, TJPF_GRAY };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tj3Init(TJINIT_DECOMPRESS)) == NULL)\n    goto bailout;\n\n  \n  tj3DecompressHeader(handle, data, size);\n  width = tj3Get(handle, TJPARAM_JPEGWIDTH);\n  height = tj3Get(handle, TJPARAM_JPEGHEIGHT);\n  jpegSubsamp = tj3Get(handle, TJPARAM_SUBSAMP);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  tj3Set(handle, TJPARAM_SCANLIMIT, 500);\n\n  for (pfi = 0; pfi < NUMPF; pfi++) {\n    int w = width, h = height;\n    int pf = pixelFormats[pfi], i, sum = 0;\n\n    \n    if (!tj3Get(handle, TJPARAM_LOSSLESS)) {\n      tj3Set(handle, TJPARAM_BOTTOMUP, pfi == 0);\n      tj3Set(handle, TJPARAM_FASTUPSAMPLE, pfi == 0);\n      tj3Set(handle, TJPARAM_FASTDCT, pfi == 0);\n\n      \n      if (pfi == 1) {\n        tjscalingfactor sf = { 3, 4 };\n        tj3SetScalingFactor(handle, sf);\n        w = TJSCALED(width, sf);\n        h = TJSCALED(height, sf);\n      } else\n        tj3SetScalingFactor(handle, TJUNSCALED);\n    }\n\n    if ((dstBuf = (unsigned char *)malloc(w * h * tjPixelSize[pf])) == NULL)\n      goto bailout;\n    if ((yuvBuf =\n         (unsigned char *)malloc(tj3YUVBufSize(w, 1, h, jpegSubsamp))) == NULL)\n      goto bailout;\n\n    if (tj3DecompressToYUV8(handle, data, size, yuvBuf, 1) == 0 &&\n        tj3DecodeYUV8(handle, yuvBuf, 1, dstBuf, w, 0, h, pf) == 0) {\n      \n      for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n        sum += dstBuf[i];\n    } else\n      goto bailout;\n\n    free(dstBuf);\n    dstBuf = NULL;\n    free(yuvBuf);\n    yuvBuf = NULL;\n\n    \n    if (sum > 255 * 1048576 * tjPixelSize[pf])\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  free(yuvBuf);\n  tj3Destroy(handle);\n", "Selected Statement": "if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)", "Function Input": {"data": {"value": "0x1107b70 \"`\\200\\020\\001\""}, "size": {"value": "17862768"}}, "Variable Values Before Statement": {"width": "int", "height": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *dstBuf = NULL, *yuvBuf = NULL;\n  int width = 0, height = 0, jpegSubsamp, pfi;\n  \n  enum TJPF pixelFormats[NUMPF] =\n    { TJPF_BGR, TJPF_XRGB, TJPF_GRAY };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  if ((handle = tj3Init(TJINIT_DECOMPRESS)) == NULL)\n    goto bailout;\n\n  \n  tj3DecompressHeader(handle, data, size);\n  width = tj3Get(handle, TJPARAM_JPEGWIDTH);\n  height = tj3Get(handle, TJPARAM_JPEGHEIGHT);\n  jpegSubsamp = tj3Get(handle, TJPARAM_SUBSAMP);\n\n  \n  if (width < 1 || height < 1 || (uint64_t)width * height > 1048576)\n    goto bailout;\n\n  tj3Set(handle, TJPARAM_SCANLIMIT, 500);\n\n  for (pfi = 0; pfi < NUMPF; pfi++) {\n    int w = width, h = height;\n    int pf = pixelFormats[pfi], i, sum = 0;\n\n    \n    if (!tj3Get(handle, TJPARAM_LOSSLESS)) {\n      tj3Set(handle, TJPARAM_BOTTOMUP, pfi == 0);\n      tj3Set(handle, TJPARAM_FASTUPSAMPLE, pfi == 0);\n      tj3Set(handle, TJPARAM_FASTDCT, pfi == 0);\n\n      \n      if (pfi == 1) {\n        tjscalingfactor sf = { 3, 4 };\n        tj3SetScalingFactor(handle, sf);\n        w = TJSCALED(width, sf);\n        h = TJSCALED(height, sf);\n      } else\n        tj3SetScalingFactor(handle, TJUNSCALED);\n    }\n\n    if ((dstBuf = (unsigned char *)malloc(w * h * tjPixelSize[pf])) == NULL)\n      goto bailout;\n    if ((yuvBuf =\n         (unsigned char *)malloc(tj3YUVBufSize(w, 1, h, jpegSubsamp))) == NULL)\n      goto bailout;\n\n    if (tj3DecompressToYUV8(handle, data, size, yuvBuf, 1) == 0 &&\n        tj3DecodeYUV8(handle, yuvBuf, 1, dstBuf, w, 0, h, pf) == 0) {\n      \n      for (i = 0; i < w * h * tjPixelSize[pf]; i++)\n        sum += dstBuf[i];\n    } else\n      goto bailout;\n\n    free(dstBuf);\n    dstBuf = NULL;\n    free(yuvBuf);\n    yuvBuf = NULL;\n\n    \n    if (sum > 255 * 1048576 * tjPixelSize[pf])\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  free(yuvBuf);\n  tj3Destroy(handle);\n", "Selected Statement": "if (!tj3Get(handle, TJPARAM_LOSSLESS))", "Function Input": {"data": {"value": "0x1107b70 \"`\\200\\020\\001\""}, "size": {"value": "17862768"}}, "Variable Values Before Statement": {"tj3Get": "NULL", "handle": "tjhandle", "TJPARAM_LOSSLESS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *srcBuf = NULL, *dstBuf = NULL, *yuvBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_XBGR, TJSAMP_444, 100 },\n    { TJPF_XRGB, TJSAMP_422, 90 },\n    { TJPF_BGR, TJSAMP_420, 80 },\n    { TJPF_RGB, TJSAMP_411, 70 },\n    { TJPF_BGR, TJSAMP_GRAY, 60 },\n    { TJPF_GRAY, TJSAMP_GRAY, 50 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_yuv_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_FASTDCT, ti == 1);\n    tj3Set(handle, TJPARAM_OPTIMIZE, ti == 4);\n    tj3Set(handle, TJPARAM_PROGRESSIVE, ti == 1 || ti == 3);\n    tj3Set(handle, TJPARAM_ARITHMETIC, ti == 2 || ti == 3);\n    tj3Set(handle, TJPARAM_NOREALLOC, 1);\n    tj3Set(handle, TJPARAM_RESTARTBLOCKS, ti == 3 || ti == 4 ? 4 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage8(handle, filename, &width, 1, &height,\n                                &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, tests[ti].subsamp);\n    if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n      goto bailout;\n    if ((yuvBuf =\n         (unsigned char *)malloc(tj3YUVBufSize(width, 1, height,\n                                               tests[ti].subsamp))) == NULL)\n      goto bailout;\n\n    tj3Set(handle, TJPARAM_SUBSAMP, tests[ti].subsamp);\n    tj3Set(handle, TJPARAM_QUALITY, tests[ti].quality);\n    if (tj3EncodeYUV8(handle, srcBuf, width, 0, height, pf, yuvBuf, 1) == 0 &&\n        tj3CompressFromYUV8(handle, yuvBuf, width, 1, height, &dstBuf,\n                            &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    free(yuvBuf);\n    yuvBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  free(yuvBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)", "Function Input": {"data": {"value": "0x1108b70 \"`\\220\\020\\001\""}, "size": {"value": "17866864"}}, "Variable Values Before Statement": {"handle": "tjhandle", "tj3Init": "NULL", "TJINIT_COMPRESS": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *srcBuf = NULL, *dstBuf = NULL, *yuvBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_XBGR, TJSAMP_444, 100 },\n    { TJPF_XRGB, TJSAMP_422, 90 },\n    { TJPF_BGR, TJSAMP_420, 80 },\n    { TJPF_RGB, TJSAMP_411, 70 },\n    { TJPF_BGR, TJSAMP_GRAY, 60 },\n    { TJPF_GRAY, TJSAMP_GRAY, 50 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_yuv_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_FASTDCT, ti == 1);\n    tj3Set(handle, TJPARAM_OPTIMIZE, ti == 4);\n    tj3Set(handle, TJPARAM_PROGRESSIVE, ti == 1 || ti == 3);\n    tj3Set(handle, TJPARAM_ARITHMETIC, ti == 2 || ti == 3);\n    tj3Set(handle, TJPARAM_NOREALLOC, 1);\n    tj3Set(handle, TJPARAM_RESTARTBLOCKS, ti == 3 || ti == 4 ? 4 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage8(handle, filename, &width, 1, &height,\n                                &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, tests[ti].subsamp);\n    if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n      goto bailout;\n    if ((yuvBuf =\n         (unsigned char *)malloc(tj3YUVBufSize(width, 1, height,\n                                               tests[ti].subsamp))) == NULL)\n      goto bailout;\n\n    tj3Set(handle, TJPARAM_SUBSAMP, tests[ti].subsamp);\n    tj3Set(handle, TJPARAM_QUALITY, tests[ti].quality);\n    if (tj3EncodeYUV8(handle, srcBuf, width, 0, height, pf, yuvBuf, 1) == 0 &&\n        tj3CompressFromYUV8(handle, yuvBuf, width, 1, height, &dstBuf,\n                            &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    free(yuvBuf);\n    yuvBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  free(yuvBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (strlen(filename) > 0)", "Function Input": {"data": {"value": "0x1108b70 \"`\\220\\020\\001\""}, "size": {"value": "17866864"}}, "Variable Values Before Statement": {"strlen": "NULL", "filename": "\"/tmp/libjpeg-turbo_compress_yuv_fuzz.ZbXg}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *srcBuf = NULL, *dstBuf = NULL, *yuvBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_XBGR, TJSAMP_444, 100 },\n    { TJPF_XRGB, TJSAMP_422, 90 },\n    { TJPF_BGR, TJSAMP_420, 80 },\n    { TJPF_RGB, TJSAMP_411, 70 },\n    { TJPF_BGR, TJSAMP_GRAY, 60 },\n    { TJPF_GRAY, TJSAMP_GRAY, 50 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_yuv_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_FASTDCT, ti == 1);\n    tj3Set(handle, TJPARAM_OPTIMIZE, ti == 4);\n    tj3Set(handle, TJPARAM_PROGRESSIVE, ti == 1 || ti == 3);\n    tj3Set(handle, TJPARAM_ARITHMETIC, ti == 2 || ti == 3);\n    tj3Set(handle, TJPARAM_NOREALLOC, 1);\n    tj3Set(handle, TJPARAM_RESTARTBLOCKS, ti == 3 || ti == 4 ? 4 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage8(handle, filename, &width, 1, &height,\n                                &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, tests[ti].subsamp);\n    if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n      goto bailout;\n    if ((yuvBuf =\n         (unsigned char *)malloc(tj3YUVBufSize(width, 1, height,\n                                               tests[ti].subsamp))) == NULL)\n      goto bailout;\n\n    tj3Set(handle, TJPARAM_SUBSAMP, tests[ti].subsamp);\n    tj3Set(handle, TJPARAM_QUALITY, tests[ti].quality);\n    if (tj3EncodeYUV8(handle, srcBuf, width, 0, height, pf, yuvBuf, 1) == 0 &&\n        tj3CompressFromYUV8(handle, yuvBuf, width, 1, height, &dstBuf,\n                            &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    free(yuvBuf);\n    yuvBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  free(yuvBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (fd >= 0)", "Function Input": {"data": {"value": "0x1108b70 \"`\\220\\020\\001\""}, "size": {"value": "17866864"}}, "Variable Values Before Statement": {"fd": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *srcBuf = NULL, *dstBuf = NULL, *yuvBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_XBGR, TJSAMP_444, 100 },\n    { TJPF_XRGB, TJSAMP_422, 90 },\n    { TJPF_BGR, TJSAMP_420, 80 },\n    { TJPF_RGB, TJSAMP_411, 70 },\n    { TJPF_BGR, TJSAMP_GRAY, 60 },\n    { TJPF_GRAY, TJSAMP_GRAY, 50 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_yuv_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_FASTDCT, ti == 1);\n    tj3Set(handle, TJPARAM_OPTIMIZE, ti == 4);\n    tj3Set(handle, TJPARAM_PROGRESSIVE, ti == 1 || ti == 3);\n    tj3Set(handle, TJPARAM_ARITHMETIC, ti == 2 || ti == 3);\n    tj3Set(handle, TJPARAM_NOREALLOC, 1);\n    tj3Set(handle, TJPARAM_RESTARTBLOCKS, ti == 3 || ti == 4 ? 4 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage8(handle, filename, &width, 1, &height,\n                                &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, tests[ti].subsamp);\n    if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n      goto bailout;\n    if ((yuvBuf =\n         (unsigned char *)malloc(tj3YUVBufSize(width, 1, height,\n                                               tests[ti].subsamp))) == NULL)\n      goto bailout;\n\n    tj3Set(handle, TJPARAM_SUBSAMP, tests[ti].subsamp);\n    tj3Set(handle, TJPARAM_QUALITY, tests[ti].quality);\n    if (tj3EncodeYUV8(handle, srcBuf, width, 0, height, pf, yuvBuf, 1) == 0 &&\n        tj3CompressFromYUV8(handle, yuvBuf, width, 1, height, &dstBuf,\n                            &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    free(yuvBuf);\n    yuvBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  free(yuvBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (sum > 255 * maxBufSize)", "Function Input": {"data": {"value": "0x1108b70 \"`\\220\\020\\001\""}, "size": {"value": "17866864"}}, "Variable Values Before Statement": {"sum": "int", "maxBufSize": "0"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *srcBuf = NULL, *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, TJSAMP_444, 100 },\n    { TJPF_BGR, TJSAMP_422, 90 },\n    { TJPF_RGBX, TJSAMP_420, 80 },\n    { TJPF_BGRA, TJSAMP_411, 70 },\n    { TJPF_XRGB, TJSAMP_GRAY, 60 },\n    { TJPF_GRAY, TJSAMP_GRAY, 50 },\n    { TJPF_CMYK, TJSAMP_440, 40 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_FASTDCT, ti == 1);\n    tj3Set(handle, TJPARAM_OPTIMIZE, ti == 6);\n    tj3Set(handle, TJPARAM_PROGRESSIVE, ti == 1 || ti == 3);\n    tj3Set(handle, TJPARAM_ARITHMETIC, ti == 2 || ti == 3);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 1 || ti == 2 ? 2 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage8(handle, filename, &width, 1, &height,\n                                &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, tests[ti].subsamp);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_SUBSAMP, tests[ti].subsamp);\n    tj3Set(handle, TJPARAM_QUALITY, tests[ti].quality);\n    if (tj3Compress8(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                     &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (tj3Get(handle, TJPARAM_NOREALLOC))", "Function Input": {"data": {"value": "0x1108b40 \"0\\220\\020\\001\""}, "size": {"value": "17866816"}}, "Variable Values Before Statement": {"tj3Get": "NULL", "handle": "tjhandle", "TJPARAM_NOREALLOC": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *srcBuf = NULL, *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, TJSAMP_444, 100 },\n    { TJPF_BGR, TJSAMP_422, 90 },\n    { TJPF_RGBX, TJSAMP_420, 80 },\n    { TJPF_BGRA, TJSAMP_411, 70 },\n    { TJPF_XRGB, TJSAMP_GRAY, 60 },\n    { TJPF_GRAY, TJSAMP_GRAY, 50 },\n    { TJPF_CMYK, TJSAMP_440, 40 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_FASTDCT, ti == 1);\n    tj3Set(handle, TJPARAM_OPTIMIZE, ti == 6);\n    tj3Set(handle, TJPARAM_PROGRESSIVE, ti == 1 || ti == 3);\n    tj3Set(handle, TJPARAM_ARITHMETIC, ti == 2 || ti == 3);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 1 || ti == 2 ? 2 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage8(handle, filename, &width, 1, &height,\n                                &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, tests[ti].subsamp);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_SUBSAMP, tests[ti].subsamp);\n    tj3Set(handle, TJPARAM_QUALITY, tests[ti].quality);\n    if (tj3Compress8(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                     &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (fd >= 0)", "Function Input": {"data": {"value": "0x1108b40 \"0\\220\\020\\001\""}, "size": {"value": "17866816"}}, "Variable Values Before Statement": {"fd": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n  tjhandle handle = NULL;\n  unsigned char *srcBuf = NULL, *dstBuf = NULL;\n  int width = 0, height = 0, fd = -1, i, ti;\n  char filename[FILENAME_MAX] = { 0 };\n  struct test tests[NUMTESTS] = {\n    { TJPF_RGB, TJSAMP_444, 100 },\n    { TJPF_BGR, TJSAMP_422, 90 },\n    { TJPF_RGBX, TJSAMP_420, 80 },\n    { TJPF_BGRA, TJSAMP_411, 70 },\n    { TJPF_XRGB, TJSAMP_GRAY, 60 },\n    { TJPF_GRAY, TJSAMP_GRAY, 50 },\n    { TJPF_CMYK, TJSAMP_440, 40 }\n  };\n#if defined(__has_feature) && __has_feature(memory_sanitizer)\n  char env[18] = \"JSIMD_FORCENONE=1\";\n\n  \n  putenv(env);\n#endif\n\n  snprintf(filename, FILENAME_MAX, \"/tmp/libjpeg-turbo_compress_fuzz.XXXXXX\");\n  if ((fd = mkstemp(filename)) < 0 || write(fd, data, size) < 0)\n    goto bailout;\n\n  if ((handle = tj3Init(TJINIT_COMPRESS)) == NULL)\n    goto bailout;\n\n  for (ti = 0; ti < NUMTESTS; ti++) {\n    int sum = 0, pf = tests[ti].pf;\n    size_t dstSize = 0, maxBufSize;\n\n    \n    tj3Set(handle, TJPARAM_BOTTOMUP, ti == 0);\n    tj3Set(handle, TJPARAM_FASTDCT, ti == 1);\n    tj3Set(handle, TJPARAM_OPTIMIZE, ti == 6);\n    tj3Set(handle, TJPARAM_PROGRESSIVE, ti == 1 || ti == 3);\n    tj3Set(handle, TJPARAM_ARITHMETIC, ti == 2 || ti == 3);\n    tj3Set(handle, TJPARAM_NOREALLOC, ti != 2);\n    tj3Set(handle, TJPARAM_RESTARTROWS, ti == 1 || ti == 2 ? 2 : 0);\n\n    tj3Set(handle, TJPARAM_MAXPIXELS, 1048576);\n    \n    if ((srcBuf = tj3LoadImage8(handle, filename, &width, 1, &height,\n                                &pf)) == NULL)\n      continue;\n\n    maxBufSize = tj3JPEGBufSize(width, height, tests[ti].subsamp);\n    if (tj3Get(handle, TJPARAM_NOREALLOC)) {\n      if ((dstBuf = (unsigned char *)malloc(maxBufSize)) == NULL)\n        goto bailout;\n    } else\n      dstBuf = NULL;\n\n    tj3Set(handle, TJPARAM_SUBSAMP, tests[ti].subsamp);\n    tj3Set(handle, TJPARAM_QUALITY, tests[ti].quality);\n    if (tj3Compress8(handle, srcBuf, width, 0, height, pf, &dstBuf,\n                     &dstSize) == 0) {\n      \n      for (i = 0; i < dstSize; i++)\n        sum += dstBuf[i];\n    }\n\n    free(dstBuf);\n    dstBuf = NULL;\n    tj3Free(srcBuf);\n    srcBuf = NULL;\n\n    \n    if (sum > 255 * maxBufSize)\n      goto bailout;\n  }\n\nbailout:\n  free(dstBuf);\n  tj3Free(srcBuf);\n  if (fd >= 0) {\n    close(fd);\n    if (strlen(filename) > 0) unlink(filename);\n  }\n  tj3Destroy(handle);\n", "Selected Statement": "if (strlen(filename) > 0)", "Function Input": {"data": {"value": "0x1108b40 \"0\\220\\020\\001\""}, "size": {"value": "17866816"}}, "Variable Values Before Statement": {"strlen": "NULL", "filename": "\"/tmp/libjpeg-turbo_compress_fuzz.DFv}, "Value After Statement Execution": "Yes", "Project Information": "libjpeg-turbo"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid empty_log(int level, const char *msg, void *usrptr) {}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\tint fd, r;\n\tstruct crypt_device *cd = NULL;\n\tchar name[] = \"/tmp/test-script-fuzz.XXXXXX\";\n\n\tfd = mkostemp(name, O_RDWR | O_CREAT | O_EXCL | O_CLOEXEC);\n\tif (fd == -1)\n\t\terr(EXIT_FAILURE, \"mkostemp() failed\");\n\n\t\n\tif (ftruncate(fd, FILESIZE) == -1)\n\t\tgoto out;\n\n\tif (write_buffer(fd, data, size) != (ssize_t) size)\n\t\tgoto out;\n\n\tcrypt_set_log_callback(NULL, empty_log, NULL);\n\n\tif (crypt_init(&cd, name) == 0) {\n\t\tr = crypt_load(cd, CRYPT_LUKS1, NULL);\n\t\tif (r == 0)\n\t\t\tgoto out;\n\n\t\tr = crypt_load(cd, CRYPT_FVAULT2, NULL);\n\t\tif (r == 0)\n\t\t\tgoto out;\n\n\t\t(void) crypt_load(cd, CRYPT_BITLK, NULL);\n\t}\nout:\n\tcrypt_free(cd);\n\tclose(fd);\n\tunlink(name);\n", "Selected Statement": "if (write_buffer(fd, data, size) != (ssize_t) size)", "Function Input": {}, "Variable Values Before Statement": {"write_buffer": "NULL", "fd": "int", "data": "0x18266a0 \"\"", "size": "0"}, "Value After Statement Execution": "Yes", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid empty_log(int level, const char *msg, void *usrptr) {}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\tint fd, r;\n\tstruct crypt_device *cd = NULL;\n\tchar name[] = \"/tmp/test-script-fuzz.XXXXXX\";\n\n\tfd = mkostemp(name, O_RDWR | O_CREAT | O_EXCL | O_CLOEXEC);\n\tif (fd == -1)\n\t\terr(EXIT_FAILURE, \"mkostemp() failed\");\n\n\t\n\tif (ftruncate(fd, FILESIZE) == -1)\n\t\tgoto out;\n\n\tif (write_buffer(fd, data, size) != (ssize_t) size)\n\t\tgoto out;\n\n\tcrypt_set_log_callback(NULL, empty_log, NULL);\n\n\tif (crypt_init(&cd, name) == 0) {\n\t\tr = crypt_load(cd, CRYPT_LUKS1, NULL);\n\t\tif (r == 0)\n\t\t\tgoto out;\n\n\t\tr = crypt_load(cd, CRYPT_FVAULT2, NULL);\n\t\tif (r == 0)\n\t\t\tgoto out;\n\n\t\t(void) crypt_load(cd, CRYPT_BITLK, NULL);\n\t}\nout:\n\tcrypt_free(cd);\n\tclose(fd);\n\tunlink(name);\n", "Selected Statement": "if (ftruncate(fd, FILESIZE) == -1)", "Function Input": {}, "Variable Values Before Statement": {"ftruncate": "NULL", "fd": "int", "FILESIZE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid empty_log(int level, const char *msg, void *usrptr) {}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\tint fd, r;\n\tstruct crypt_device *cd = NULL;\n\tchar name[] = \"/tmp/test-script-fuzz.XXXXXX\";\n\n\tfd = mkostemp(name, O_RDWR | O_CREAT | O_EXCL | O_CLOEXEC);\n\tif (fd == -1)\n\t\terr(EXIT_FAILURE, \"mkostemp() failed\");\n\n\t\n\tif (ftruncate(fd, FILESIZE) == -1)\n\t\tgoto out;\n\n\tif (write_buffer(fd, data, size) != (ssize_t) size)\n\t\tgoto out;\n\n\tcrypt_set_log_callback(NULL, empty_log, NULL);\n\n\tif (crypt_init(&cd, name) == 0) {\n\t\tr = crypt_load(cd, CRYPT_LUKS1, NULL);\n\t\tif (r == 0)\n\t\t\tgoto out;\n\n\t\tr = crypt_load(cd, CRYPT_FVAULT2, NULL);\n\t\tif (r == 0)\n\t\t\tgoto out;\n\n\t\t(void) crypt_load(cd, CRYPT_BITLK, NULL);\n\t}\nout:\n\tcrypt_free(cd);\n\tclose(fd);\n\tunlink(name);\n", "Selected Statement": "if (fd == -1)", "Function Input": {}, "Variable Values Before Statement": {"fd": "int"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nssize_t write_buffer(int fd, const void *buf, size_t length)\n{\n", "Selected Statement": "if (posix_memalign(&hangover_buf, alignment, bsize))", "Function Input": {"buf": {"value": null}, "fd": {"value": "32767"}, "length": {"value": "140737488347079"}}, "Variable Values Before Statement": {"posix_memalign": "NULL", "hangover_buf": "NULL", "alignment": "NULL", "bsize": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nssize_t write_buffer(int fd, const void *buf, size_t length)\n{\n", "Selected Statement": "if (lseek(fd, -(off_t)r, SEEK_CUR) < 0)", "Function Input": {"buf": {"value": null}, "fd": {"value": "32767"}, "length": {"value": "140737488347079"}}, "Variable Values Before Statement": {"lseek": "NULL", "fd": "int", "r": "NULL", "SEEK_CUR": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\treturn r ? 0 : 1;\n}\n\nvoid crypt_free(struct crypt_device *cd)\n{\n\tif (!cd)\n\t\treturn;\n\n\tlog_dbg(cd, \"Releasing crypt device %s context.\", mdata_device_path(cd) ?: \"empty\");\n\n\tdm_backend_exit(cd);\n\tcrypt_free_volume_key(cd->volume_key);\n\n\tcrypt_free_type(cd, NULL);\n\n\tdevice_free(cd, cd->device);\n\tdevice_free(cd, cd->metadata_device);\n\n\tfree(CONST_CAST(void*)cd->pbkdf.type);\n\tfree(CONST_CAST(void*)cd->pbkdf.hash);\n\tfree(CONST_CAST(void*)cd->user_key_name1);\n\tfree(CONST_CAST(void*)cd->user_key_name2);\n\n\t\n\tcrypt_safe_memzero(cd, sizeof(*cd));\n", "Selected Statement": "if (!str)", "Function Input": {}, "Variable Values Before Statement": {"str": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\treturn r ? 0 : 1;\n}\n\nvoid crypt_free(struct crypt_device *cd)\n{\n\tif (!cd)\n\t\treturn;\n\n\tlog_dbg(cd, \"Releasing crypt device %s context.\", mdata_device_path(cd) ?: \"empty\");\n\n\tdm_backend_exit(cd);\n\tcrypt_free_volume_key(cd->volume_key);\n\n\tcrypt_free_type(cd, NULL);\n\n\tdevice_free(cd, cd->device);\n\tdevice_free(cd, cd->metadata_device);\n\n\tfree(CONST_CAST(void*)cd->pbkdf.type);\n\tfree(CONST_CAST(void*)cd->pbkdf.hash);\n\tfree(CONST_CAST(void*)cd->user_key_name1);\n\tfree(CONST_CAST(void*)cd->user_key_name2);\n\n\t\n\tcrypt_safe_memzero(cd, sizeof(*cd));\n", "Selected Statement": "if (version == 1)", "Function Input": {}, "Variable Values Before Statement": {"version": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint device_alloc(struct crypt_device *cd, struct device **device, const char *path)\n{\n\tstruct device *dev;\n\tint r;\n\n\tr = device_alloc_no_check(&dev, path);\n\tif (r < 0)\n\t\treturn r;\n\n\tif (dev) {\n\t\tr = device_ready(cd, dev);\n\t\tif (!r) {\n\t\t\tdev->init_done = 1;\n\t\t} else if (r == -ENOTBLK) {\n\t\t\t\n\t\t} else if (r < 0) {\n\t\t\tfree(dev->path);\n\t\t\tfree(dev);\n\t\t\treturn -ENOTBLK;\n\t\t}\n\t}\n\n\t*device = dev;\n\treturn 0;\n", "Selected Statement": "if (ioctl(fd, BLKIOMIN, &min_io_size) == -1)", "Function Input": {}, "Variable Values Before Statement": {"ioctl": "NULL", "fd": "NULL", "BLKIOMIN": "NULL", "min_io_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint device_alloc(struct crypt_device *cd, struct device **device, const char *path)\n{\n\tstruct device *dev;\n\tint r;\n\n\tr = device_alloc_no_check(&dev, path);\n\tif (r < 0)\n\t\treturn r;\n\n\tif (dev) {\n\t\tr = device_ready(cd, dev);\n\t\tif (!r) {\n\t\t\tdev->init_done = 1;\n\t\t} else if (r == -ENOTBLK) {\n\t\t\t\n\t\t} else if (r < 0) {\n\t\t\tfree(dev->path);\n\t\t\tfree(dev);\n\t\t\treturn -ENOTBLK;\n\t\t}\n\t}\n\n\t*device = dev;\n\treturn 0;\n", "Selected Statement": "if (dm_name && dm_status_suspended(cd, dm_name))", "Function Input": {}, "Variable Values Before Statement": {"dm_name": "NULL", "dm_status_suspended": "NULL", "cd": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint device_alloc(struct crypt_device *cd, struct device **device, const char *path)\n{\n\tstruct device *dev;\n\tint r;\n\n\tr = device_alloc_no_check(&dev, path);\n\tif (r < 0)\n\t\treturn r;\n\n\tif (dev) {\n\t\tr = device_ready(cd, dev);\n\t\tif (!r) {\n\t\t\tdev->init_done = 1;\n\t\t} else if (r == -ENOTBLK) {\n\t\t\t\n\t\t} else if (r < 0) {\n\t\t\tfree(dev->path);\n\t\t\tfree(dev);\n\t\t\treturn -ENOTBLK;\n\t\t}\n\t}\n\n\t*device = dev;\n\treturn 0;\n", "Selected Statement": "if (dev)", "Function Input": {}, "Variable Values Before Statement": {"dev": {"path": "0x1825970 \"/tmp/test-script-fuzz.o5sGzP\"", "file_path": null, "loop_fd": "-1", "ro_dev_fd": "-1", "dev_fd": "-1", "dev_fd_excl": "-1", "lh": null, "o_direct": "1", "init_done": "0", "alignment": "4096", "block_size": "4096", "loop_block_size": "0"}}, "Value After Statement Execution": "Yes", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nconst char *dm_get_dir(void)\n{\n", "Selected Statement": "if (r < 0 && r != -ENOTBLK)", "Function Input": {}, "Variable Values Before Statement": {"r": "NULL", "ENOTBLK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nconst char *dm_get_dir(void)\n{\n", "Selected Statement": "if (r < 0 || !status_line)", "Function Input": {}, "Variable Values Before Statement": {"r": "NULL", "status_line": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nconst char *dm_dir(void)\n{\n", "Selected Statement": "if (unlink(path) < 0 && errno != ENOENT)", "Function Input": {}, "Variable Values Before Statement": {"unlink": "NULL", "path": "NULL", "errno": "NULL", "ENOENT": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nconst char *dm_dir(void)\n{\n", "Selected Statement": "if (closedir(d))", "Function Input": {}, "Variable Values Before Statement": {"closedir": "NULL", "d": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"internal.h\"\n\nsize_t crypt_getpagesize(void)\n{\n\tlong r = sysconf(_SC_PAGESIZE);\n", "Selected Statement": "if (flags & CRYPT_KEYFILE_STOP_EOL)", "Function Input": {}, "Variable Values Before Statement": {"flags": "NULL", "CRYPT_KEYFILE_STOP_EOL": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"internal.h\"\n\nsize_t crypt_getpagesize(void)\n{\n\tlong r = sysconf(_SC_PAGESIZE);\n", "Selected Statement": "if (priority)", "Function Input": {}, "Variable Values Before Statement": {"priority": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Also used in safe allocations for explicit memory wipe.\n */\nvoid crypt_safe_memzero(void *data, size_t size)\n{\n\tif (!data)\n\t\treturn;\n\n#ifdef HAVE_EXPLICIT_BZERO\n\texplicit_bzero(data, size);\n#else\n\tvolatile uint8_t *p = (volatile uint8_t *)data;\n\n\twhile(size--)\n\t\t*p++ = 0;\n#endif\n", "Selected Statement": "if (new_data && data)", "Function Input": {"data": {"value": null}, "size": {"value": "17179873280"}}, "Variable Values Before Statement": {"new_data": "NULL", "data": "VOID"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Also used in safe allocations for explicit memory wipe.\n */\nvoid crypt_safe_memzero(void *data, size_t size)\n{\n\tif (!data)\n\t\treturn;\n\n#ifdef HAVE_EXPLICIT_BZERO\n\texplicit_bzero(data, size);\n#else\n\tvolatile uint8_t *p = (volatile uint8_t *)data;\n\n\twhile(size--)\n\t\t*p++ = 0;\n#endif\n", "Selected Statement": "if (size > alloc->size)", "Function Input": {"data": {"value": null}, "size": {"value": "17179873280"}}, "Variable Values Before Statement": {"size": "512", "alloc->size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint crypt_random_default_key_rng(void)\n{\n\t\n\tif (!strcmp(DEFAULT_RNG, RANDOM_DEVICE))\n\t\treturn CRYPT_RNG_RANDOM;\n\n\t\n\tif (!strcmp(DEFAULT_RNG, URANDOM_DEVICE))\n\t\treturn CRYPT_RNG_URANDOM;\n\n\t\n\tabort();\n", "Selected Statement": "if (r == -1 && (errno != EAGAIN && errno != EWOULDBLOCK))", "Function Input": {}, "Variable Values Before Statement": {"r": "NULL", "errno": "NULL", "EAGAIN": "NULL", "EWOULDBLOCK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint crypt_random_default_key_rng(void)\n{\n\t\n\tif (!strcmp(DEFAULT_RNG, RANDOM_DEVICE))\n\t\treturn CRYPT_RNG_RANDOM;\n\n\t\n\tif (!strcmp(DEFAULT_RNG, URANDOM_DEVICE))\n\t\treturn CRYPT_RNG_URANDOM;\n\n\t\n\tabort();\n", "Selected Statement": "if (!warn_once)", "Function Input": {}, "Variable Values Before Statement": {"warn_once": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint crypt_random_default_key_rng(void)\n{\n\t\n\tif (!strcmp(DEFAULT_RNG, RANDOM_DEVICE))\n\t\treturn CRYPT_RNG_RANDOM;\n\n\t\n\tif (!strcmp(DEFAULT_RNG, URANDOM_DEVICE))\n\t\treturn CRYPT_RNG_URANDOM;\n\n\t\n\tabort();\n", "Selected Statement": "if (!strcmp(DEFAULT_RNG, URANDOM_DEVICE))", "Function Input": {}, "Variable Values Before Statement": {"strcmp": "NULL", "DEFAULT_RNG": "NULL", "URANDOM_DEVICE": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n#if !ENABLE_FIPS\n", "Selected Statement": "if (openssl_backend_init(fips))", "Function Input": {}, "Variable Values Before Statement": {"openssl_backend_init": "NULL", "fips": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n#if !ENABLE_FIPS\n", "Selected Statement": "if (!ctx->md)", "Function Input": {}, "Variable Values Before Statement": {"ctx->md": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#endif\n\nOSSL_LIB_CTX *OSSL_LIB_CTX_new(void)\n{\n    OSSL_LIB_CTX *ctx = OPENSSL_zalloc(sizeof(*ctx));\n\n", "Selected Statement": "if (ctx != NULL && !context_init(ctx))", "Function Input": {"ctx": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x5f7c32048\n", "message": "Cannot access memory at address 0x5f7c32048"}}}, "Variable Values Before Statement": {"ctx": {"lock": null, "rand_crngt_lock": null, "global": null, "property_string_data": null, "evp_method_store": null, "provider_store": null, "namemap": null, "property_defns": null, "global_properties": null, "drbg": null, "drbg_nonce": null, "provider_conf": null, "bio_core": null, "child_provider": null, "decoder_store": null, "decoder_cache": null, "encoder_store": null, "store_loader_store": null, "self_test_cb": null, "threads": null, "rand_crngt": null, "ischild": "0"}, "context_init": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#endif\n\nOSSL_LIB_CTX *OSSL_LIB_CTX_new(void)\n{\n    OSSL_LIB_CTX *ctx = OPENSSL_zalloc(sizeof(*ctx));\n\n", "Selected Statement": "if (exdata_done)", "Function Input": {"ctx": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x5f7c32048\n", "message": "Cannot access memory at address 0x5f7c32048"}}}, "Variable Values Before Statement": {"exdata_done": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid *CRYPTO_zalloc(size_t num, const char *file, int line)\n{\n    void *ret;\n\n    ret = CRYPTO_malloc(num, file, line);\n    if (ret != NULL)\n        memset(ret, 0, num);\n\n", "Selected Statement": "if (ret != NULL)", "Function Input": {}, "Variable Values Before Statement": {"ret": "VOID"}, "Value After Statement Execution": "Yes", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid *CRYPTO_zalloc(size_t num, const char *file, int line)\n{\n    void *ret;\n\n    ret = CRYPTO_malloc(num, file, line);\n    if (ret != NULL)\n        memset(ret, 0, num);\n\n", "Selected Statement": "if (num == 0)", "Function Input": {}, "Variable Values Before Statement": {"num": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid *CRYPTO_zalloc(size_t num, const char *file, int line)\n{\n    void *ret;\n\n    ret = CRYPTO_malloc(num, file, line);\n    if (ret != NULL)\n        memset(ret, 0, num);\n\n", "Selected Statement": "if (rcount != NULL)", "Function Input": {}, "Variable Values Before Statement": {"rcount": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nCRYPTO_RWLOCK *CRYPTO_THREAD_lock_new(void)\n{\n# ifdef USE_RWLOCK\n    CRYPTO_RWLOCK *lock;\n\n    if ((lock = OPENSSL_zalloc(sizeof(pthread_rwlock_t))) == NULL)\n        \n        return NULL;\n\n    if (pthread_rwlock_init(lock, NULL) != 0) {\n        OPENSSL_free(lock);\n        return NULL;\n    }\n# else\n    pthread_mutexattr_t attr;\n    CRYPTO_RWLOCK *lock;\n\n    if ((lock = OPENSSL_zalloc(sizeof(pthread_mutex_t))) == NULL)\n        \n        return NULL;\n\n    \n    pthread_mutexattr_init(&attr);\n#  if !defined (__TANDEM) && !defined (_SPT_MODEL_)\n#   if !defined(NDEBUG) && !defined(OPENSSL_NO_MUTEX_ERRORCHECK)\n    pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_ERRORCHECK);\n#   endif\n#  else\n    \n#  endif\n\n    if (pthread_mutex_init(lock, &attr) != 0) {\n        pthread_mutexattr_destroy(&attr);\n        OPENSSL_free(lock);\n        return NULL;\n    }\n\n    pthread_mutexattr_destroy(&attr);\n# endif\n\n    return lock;\n", "Selected Statement": "if (__atomic_is_lock_free(sizeof(*val), val))", "Function Input": {}, "Variable Values Before Statement": {"__atomic_is_lock_free": "NULL", "val": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nCRYPTO_RWLOCK *CRYPTO_THREAD_lock_new(void)\n{\n# ifdef USE_RWLOCK\n    CRYPTO_RWLOCK *lock;\n\n    if ((lock = OPENSSL_zalloc(sizeof(pthread_rwlock_t))) == NULL)\n        \n        return NULL;\n\n    if (pthread_rwlock_init(lock, NULL) != 0) {\n        OPENSSL_free(lock);\n        return NULL;\n    }\n# else\n    pthread_mutexattr_t attr;\n    CRYPTO_RWLOCK *lock;\n\n    if ((lock = OPENSSL_zalloc(sizeof(pthread_mutex_t))) == NULL)\n        \n        return NULL;\n\n    \n    pthread_mutexattr_init(&attr);\n#  if !defined (__TANDEM) && !defined (_SPT_MODEL_)\n#   if !defined(NDEBUG) && !defined(OPENSSL_NO_MUTEX_ERRORCHECK)\n    pthread_mutexattr_settype(&attr, PTHREAD_MUTEX_ERRORCHECK);\n#   endif\n#  else\n    \n#  endif\n\n    if (pthread_mutex_init(lock, &attr) != 0) {\n        pthread_mutexattr_destroy(&attr);\n        OPENSSL_free(lock);\n        return NULL;\n    }\n\n    pthread_mutexattr_destroy(&attr);\n# endif\n\n    return lock;\n", "Selected Statement": "if (pthread_setspecific(*key, val) != 0)", "Function Input": {}, "Variable Values Before Statement": {"pthread_setspecific": "NULL", "key": "NULL", "val": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * for computation\n */\nOSSL_METHOD_STORE *ossl_method_store_new(OSSL_LIB_CTX *ctx)\n{\n    OSSL_METHOD_STORE *res;\n\n    res = OPENSSL_zalloc(sizeof(*res));\n    if (res != NULL) {\n        res->ctx = ctx;\n        if ((res->algs = ossl_sa_ALGORITHM_new()) == NULL\n            || (res->lock = CRYPTO_THREAD_lock_new()) == NULL\n            || (res->biglock = CRYPTO_THREAD_lock_new()) == NULL) {\n            ossl_method_store_free(res);\n            return NULL;\n        }\n    }\n    return res;\n", "Selected Statement": "if (res != NULL)", "Function Input": {}, "Variable Values Before Statement": {"res": {"ctx": null, "algs": null, "lock": null, "biglock": null, "cache_nelem": "0", "cache_need_flush": "0"}}, "Value After Statement Execution": "Yes", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * for computation\n */\nOSSL_METHOD_STORE *ossl_method_store_new(OSSL_LIB_CTX *ctx)\n{\n    OSSL_METHOD_STORE *res;\n\n    res = OPENSSL_zalloc(sizeof(*res));\n    if (res != NULL) {\n        res->ctx = ctx;\n        if ((res->algs = ossl_sa_ALGORITHM_new()) == NULL\n            || (res->lock = CRYPTO_THREAD_lock_new()) == NULL\n            || (res->biglock = CRYPTO_THREAD_lock_new()) == NULL) {\n            ossl_method_store_free(res);\n            return NULL;\n        }\n    }\n    return res;\n", "Selected Statement": "if (loadconfig && !OPENSSL_init_crypto(OPENSSL_INIT_LOAD_CONFIG, NULL))", "Function Input": {}, "Variable Values Before Statement": {"loadconfig": "NULL", "OPENSSL_init_crypto": "NULL", "OPENSSL_INIT_LOAD_CONFIG": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * for computation\n */\nOSSL_METHOD_STORE *ossl_method_store_new(OSSL_LIB_CTX *ctx)\n{\n    OSSL_METHOD_STORE *res;\n\n    res = OPENSSL_zalloc(sizeof(*res));\n    if (res != NULL) {\n        res->ctx = ctx;\n        if ((res->algs = ossl_sa_ALGORITHM_new()) == NULL\n            || (res->lock = CRYPTO_THREAD_lock_new()) == NULL\n            || (res->biglock = CRYPTO_THREAD_lock_new()) == NULL) {\n            ossl_method_store_free(res);\n            return NULL;\n        }\n    }\n    return res;\n", "Selected Statement": "if (alg != NULL)", "Function Input": {}, "Variable Values Before Statement": {"alg": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "};\n\nOPENSSL_SA *ossl_sa_new(void)\n{\n    OPENSSL_SA *res = OPENSSL_zalloc(sizeof(*res));\n\n", "Selected Statement": "if (p[i] == NULL && (p[i] = alloc_node()) == NULL)", "Function Input": {}, "Variable Values Before Statement": {"p": "NULL", "i": "NULL", "alloc_node": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "};\n\nOPENSSL_SA *ossl_sa_new(void)\n{\n    OPENSSL_SA *res = OPENSSL_zalloc(sizeof(*res));\n\n", "Selected Statement": "if (val == NULL && *p != NULL)", "Function Input": {}, "Variable Values Before Statement": {"val": "NULL", "p": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "} PROVIDER_CONF_GLOBAL;\n\nvoid *ossl_prov_conf_ctx_new(OSSL_LIB_CTX *libctx)\n{\n    PROVIDER_CONF_GLOBAL *pcgbl = OPENSSL_zalloc(sizeof(*pcgbl));\n\n    if (pcgbl == NULL)\n        return NULL;\n\n    pcgbl->lock = CRYPTO_THREAD_lock_new();\n    if (pcgbl->lock == NULL) {\n        OPENSSL_free(pcgbl);\n        return NULL;\n    }\n\n    return pcgbl;\n", "Selected Statement": "if (ok && path != NULL)", "Function Input": {}, "Variable Values Before Statement": {"ok": "NULL", "path": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "} PROVIDER_CONF_GLOBAL;\n\nvoid *ossl_prov_conf_ctx_new(OSSL_LIB_CTX *libctx)\n{\n    PROVIDER_CONF_GLOBAL *pcgbl = OPENSSL_zalloc(sizeof(*pcgbl));\n\n    if (pcgbl == NULL)\n        return NULL;\n\n    pcgbl->lock = CRYPTO_THREAD_lock_new();\n    if (pcgbl->lock == NULL) {\n        OPENSSL_free(pcgbl);\n        return NULL;\n    }\n\n    return pcgbl;\n", "Selected Statement": "if (!ecmds)", "Function Input": {}, "Variable Values Before Statement": {"ecmds": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns the allocated global data on success or NULL on failure.\n */\nvoid *ossl_rand_ctx_new(OSSL_LIB_CTX *libctx)\n{\n    RAND_GLOBAL *dgbl = OPENSSL_zalloc(sizeof(*dgbl));\n\n    if (dgbl == NULL)\n        return NULL;\n\n#ifndef FIPS_MODULE\n    \n", "Selected Statement": "if (dgbl == NULL)", "Function Input": {}, "Variable Values Before Statement": {"dgbl": {"lock": null, "seed": null, "primary": null, "public": "0", "private": "0", "rng_name": null, "rng_cipher": null, "rng_digest": null, "rng_propq": null, "seed_name": null, "seed_propq": null}}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns the allocated global data on success or NULL on failure.\n */\nvoid *ossl_rand_ctx_new(OSSL_LIB_CTX *libctx)\n{\n    RAND_GLOBAL *dgbl = OPENSSL_zalloc(sizeof(*dgbl));\n\n    if (dgbl == NULL)\n        return NULL;\n\n#ifndef FIPS_MODULE\n    \n", "Selected Statement": "if (dgbl == NULL)", "Function Input": {}, "Variable Values Before Statement": {"dgbl": {"lock": null, "seed": null, "primary": null, "public": "0", "private": "0", "rng_name": null, "rng_cipher": null, "rng_digest": null, "rng_propq": null, "seed_name": null, "seed_propq": null}}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * i.e. passing a non-null settings value is assumed to be single-threaded.\n */\nint OPENSSL_init_crypto(uint64_t opts, const OPENSSL_INIT_SETTINGS *settings)\n{\n    uint64_t tmp;\n    int aloaddone = 0;\n\n   \n    if (stopped) {\n        if (!(opts & OPENSSL_INIT_BASE_ONLY))\n            ERR_raise(ERR_LIB_CRYPTO, ERR_R_INIT_FAIL);\n        return 0;\n    }\n\n    \n    if (CRYPTO_atomic_load(&optsdone, &tmp, NULL)) {\n        if ((tmp & opts) == opts)\n            return 1;\n        aloaddone = 1;\n    }\n\n    \n", "Selected Statement": "if (CRYPTO_atomic_load(&optsdone, &tmp, NULL))", "Function Input": {}, "Variable Values Before Statement": {"CRYPTO_atomic_load": "NULL", "optsdone": "0", "tmp": "0"}, "Value After Statement Execution": "Yes", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * i.e. passing a non-null settings value is assumed to be single-threaded.\n */\nint OPENSSL_init_crypto(uint64_t opts, const OPENSSL_INIT_SETTINGS *settings)\n{\n    uint64_t tmp;\n    int aloaddone = 0;\n\n   \n    if (stopped) {\n        if (!(opts & OPENSSL_INIT_BASE_ONLY))\n            ERR_raise(ERR_LIB_CRYPTO, ERR_R_INIT_FAIL);\n        return 0;\n    }\n\n    \n    if (CRYPTO_atomic_load(&optsdone, &tmp, NULL)) {\n        if ((tmp & opts) == opts)\n            return 1;\n        aloaddone = 1;\n    }\n\n    \n", "Selected Statement": "if (opts & OPENSSL_INIT_BASE_ONLY)", "Function Input": {}, "Variable Values Before Statement": {"opts": "262144", "OPENSSL_INIT_BASE_ONLY": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * i.e. passing a non-null settings value is assumed to be single-threaded.\n */\nint OPENSSL_init_crypto(uint64_t opts, const OPENSSL_INIT_SETTINGS *settings)\n{\n    uint64_t tmp;\n    int aloaddone = 0;\n\n   \n    if (stopped) {\n        if (!(opts & OPENSSL_INIT_BASE_ONLY))\n            ERR_raise(ERR_LIB_CRYPTO, ERR_R_INIT_FAIL);\n        return 0;\n    }\n\n    \n    if (CRYPTO_atomic_load(&optsdone, &tmp, NULL)) {\n        if ((tmp & opts) == opts)\n            return 1;\n        aloaddone = 1;\n    }\n\n    \n", "Selected Statement": "if ((tmp & opts) == opts)", "Function Input": {}, "Variable Values Before Statement": {"tmp": "0", "opts": "262144"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#ifndef OPENSSL_CPUID_OBJ\n# ifndef OPENSSL_CPUID_SETUP\nvoid OPENSSL_cpuid_setup(void)\n{\n", "Selected Statement": "if (*str == '0')", "Function Input": {}, "Variable Values Before Statement": {"str": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#ifndef OPENSSL_CPUID_OBJ\n# ifndef OPENSSL_CPUID_SETUP\nvoid OPENSSL_cpuid_setup(void)\n{\n", "Selected Statement": "if (trigger)", "Function Input": {}, "Variable Values Before Statement": {"trigger": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint ossl_init_thread(void)\n{\n    if (!CRYPTO_THREAD_init_local(&destructor_key.value,\n                                  init_thread_destructor))\n        return 0;\n\n    return 1;\n", "Selected Statement": "if (hand == NULL)", "Function Input": {}, "Variable Values Before Statement": {"hand": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint ossl_init_thread(void)\n{\n    if (!CRYPTO_THREAD_init_local(&destructor_key.value,\n                                  init_thread_destructor))\n        return 0;\n\n    return 1;\n", "Selected Statement": "if (all)", "Function Input": {}, "Variable Values Before Statement": {"all": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n{\n\tint fd, r = EXIT_FAILURE;\n\tstruct crypt_device *cd = NULL;\n\tchar name[] = \"/tmp/test-script-fuzz.XXXXXX\";\n\tstruct luks2_hdr_disk hdr_rw;\n\tsize_t modified_data_size;\n\n\t\n\tif (size >= sizeof(hdr_rw) && calculate_checksum((const char *)data, size, &hdr_rw))\n\t\tmodified_data_size = sizeof(hdr_rw);\n\telse\n\t\tmodified_data_size = 0;\n\n\t\n\tfd = mkostemp(name, O_RDWR|O_CREAT|O_EXCL|O_CLOEXEC);\n\tif (fd == -1)\n\t\treturn r;\n\n\t\n\tif (ftruncate(fd, FILESIZE) == -1)\n\t\tgoto out;\n\n\tif (modified_data_size &&\n\t    write_buffer(fd, &hdr_rw, modified_data_size) != (ssize_t)modified_data_size)\n\t\tgoto out;\n\n\tif (write_buffer(fd, data + modified_data_size, size - modified_data_size) != (ssize_t)size)\n\t\tgoto out;\n\n\t\n\tif (crypt_init(&cd, name) == 0)\n\t\t(void)crypt_load(cd, CRYPT_LUKS2, NULL);\n\tcrypt_free(cd);\n\tr = 0;\nout:\n\tclose(fd);\n\tunlink(name);\n\n\treturn r;\n", "Selected Statement": "if (sizeof(*hdr_rw) > size)", "Function Input": {"data": {"value": "0x1824d50 \"\""}}, "Variable Values Before Statement": {"hdr_rw": "NULL", "size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n{\n\tint fd, r = EXIT_FAILURE;\n\tstruct crypt_device *cd = NULL;\n\tchar name[] = \"/tmp/test-script-fuzz.XXXXXX\";\n\tstruct luks2_hdr_disk hdr_rw;\n\tsize_t modified_data_size;\n\n\t\n\tif (size >= sizeof(hdr_rw) && calculate_checksum((const char *)data, size, &hdr_rw))\n\t\tmodified_data_size = sizeof(hdr_rw);\n\telse\n\t\tmodified_data_size = 0;\n\n\t\n\tfd = mkostemp(name, O_RDWR|O_CREAT|O_EXCL|O_CLOEXEC);\n\tif (fd == -1)\n\t\treturn r;\n\n\t\n\tif (ftruncate(fd, FILESIZE) == -1)\n\t\tgoto out;\n\n\tif (modified_data_size &&\n\t    write_buffer(fd, &hdr_rw, modified_data_size) != (ssize_t)modified_data_size)\n\t\tgoto out;\n\n\tif (write_buffer(fd, data + modified_data_size, size - modified_data_size) != (ssize_t)size)\n\t\tgoto out;\n\n\t\n\tif (crypt_init(&cd, name) == 0)\n\t\t(void)crypt_load(cd, CRYPT_LUKS2, NULL);\n\tcrypt_free(cd);\n\tr = 0;\nout:\n\tclose(fd);\n\tunlink(name);\n\n\treturn r;\n", "Selected Statement": "if (size >= sizeof(hdr_rw) && calculate_checksum((const char *)data, size, &hdr_rw))", "Function Input": {"data": {"value": "0x1824d50 \"\""}}, "Variable Values Before Statement": {"size": "0", "hdr_rw": {"magic": "\"\\000\\000\\000\\000\\000\"", "version": "0", "hdr_size": "0", "seqid": "0", "label": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "checksum_alg": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "salt": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "uuid": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "subsystem": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "hdr_offset": "0", "_padding`\\213\\212S\\354Dkc\\230\\033\\272\"", "csum": "\"7<\\240\\312\\004\\000\\000\\000\\020\\000\\000\\000\\001\\000\\000\\000GNU\\000\\000\\000\\000\\000\\003\\000\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\003\\000\\000\\000\\000\\000\\000\"", "_padding4096": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\220\\325\\377\\377\\377\\177\\000\\0000I\\374\\367\\377\\177\\000\\000\\2404\\377\\367\\377\\177\\000\\000\\320\\323\\377\\377\\377\\177\\000\\000\\300\\321\\377\\377\\377\\177\\000\\000@\\330\\377\\377\\377\\177\\000\\000#l\\375\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000 \\002\\000\\000\\000\\000\\000\\350\\024\\002\\000\\000\\000\\000\\000\\350\\024\\002\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\000 \\002\\000\\000\\000\\000\\000\\000\\240\\031\\000\\000\\000\\000\\000d\\230\\031\\000\\000\\000\\000\\000d\\230\\031\\000\\000\\000\\000\\000\\000 \\002\\000\\000\\000\\000\\000\\005\\000\\000\\000\\000\\000\\000\\000\\000\\240\\031\\000\\000\\000\\000\\000\\\\\\244\\375\\367\\377\\177\\000\\0000I\\374\\367\\377\\177\\000\\0000\\270\\202\\r\\000\\000\\000\\000\\2603@\\000\\000\\000\\000\\0000 \\303\\367\\377\\177\\000\\000`i\\303\\367\\377\\177\\000\\000\\212\\250\\375\\367\\377\\177\\000\\000\\177\\003\\000\\000\\000\\000\\000\\000\\\\\\244\\375\\367\\377\\177\\000\\0000I\\374\\367\\377\\177\\000\\000\\355\\336\\223\\034\\000\\000\\000\\000\\360\\032@\\000\\000\\000\\000\\0000 \\303\\367\\377\\177\\000\\000Hf\\303\\367\\377\\177\\000\\000\\212\\250\\375\\367\\377\\177\\000\\000\\271\\002\\000\\000\\000\\000\\000\\000\\\\\\244\\375\\367\\377\\177\\000\\0000I\\374\\367\\377\\177\\000\\000\\332\\367\\000^\\000\\000\\000\\000p%@\\000\\000\\000\\000\\0000 \\303\\367\\377\\177\\000\\000Xa\\303\\367\\377\\177\\000\\000\\212\\250\\375\\367\\377\\177\\000\\000}\\001\\000\\000\\000\\000\\000\\000\\240^\\304\\367\\377\\177\\000\\0000I\\374\\367\\377\\177\\000\\000\\b\\323\\377\\377\\377\\177\\000\\000\\004\\323\\377\\377\\377\\177\\000\\000\\304\\322\\377\\377\\377\\177\\000\\000\\240^\\304\\367\\377\\177\\000\\000\\220\\323\\377\\377\\377\\177\\000\\000\\360\\032@\\000\\000\\000\\000\\000p\\200\\303\\367\\377\\177\\000\\000\\002<@\\000\\000\\000\\000\\000\\332\\367\\000^\\000\\000\\000\\000\\337\\003x\\001\\000\\000\\000\\000\\004\\323\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\320\\323\\377\\377\\377\\177\\000\\000p%@\\000\\000\\000\\000\\000\\300\\323\\377\\377\\377\\177\\000\\0000I\\374\\367\\000\\000\\000\\000\\250O\\374\\367\\377\\177\\000\\000\\b\\000\\000\\000\\000\\000\\000\\000\\340%\\303\\367\\377\\177\\000\\000\\000u\\303\\367\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000g\\006\\000\\000\\000\\000\\000\\000\\332\\367\\000^\\000\\000\\000\\000\\370\\344\\377\\367\\377\\177\\000\\000hb\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\377\\177\\000\\000\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000(\\244\\303\\367\\377\\177\\000\\0000I\\374\\367\\377\\177\\000\\000\\0005\\374\\367\\377\\177\\000\\000u\\273D\\274\\000\\000\\000\\000(\\\"@\\000\\000\\000\\000\\000H \\303\\367\\377\\177\\000\\000\\000\\036\\345\\367\\377\\177\\000\\000\\212\\250\\375\\367\\377\\177\\000\\000\\276\\000\\000\\000\\000\\000\\000\\000p\\t\\314\\000\\000\\000\\000\\000\\300\\337\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000(\\000\\000\\000\\000\\000\\000\\000\\360\\337\\377\\377\\377\\177\\000\\0000\\202\\202\\001\\000\\000\\000\\000\\227\\001\\376\\367\\377\\177\\000\\000\\005\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000}7@\\000\\000\\000\\000\\000(\\244\\303\\367\\377\\177\\000\\000\\240\\336\\377\\377\\377\\177\\000\\000>|\\376\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\273\\\"\\321\\367\\377\\177\\000\\000\\000\\200\\000\\000\\000\\000\\000\\000`\\202\\202\\001\\000\\000\\000\\0000\\202\\202\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\026@\\202\\001\\000\\000\\000\\000\\001\\000\\000\\000\\377\\177\\000\\000\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\370\\337\\303\\367\\377\\177\\000\\000\\200\\037\\000\\000\\377\\377\\000\\000\\370\\344\\377\\367\\377\\177\\000\\000(\\326\\377\\377\\377\\177\\000\\000}testcase/e0057934e3d5b3bbcfb292\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000p\\023\\342\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\340\\v\\342\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000eaks=0.\\n\\n\\000Custom\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\327\\037\\366\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\327\\037\\366\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000G\\000\\000\\000H\\000\\000\\000M\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\000\\200\\037\\000\\000\\377\\377\\000\\000eaks=0.\\n\\n\\000Customdeaks=0.\\n\\n\\000Customr\\000\\000\\000\\000\\b{\\260\\000\\000\\000\\000\\000`\\337\\377\\377\\377\\177\\000\\000$\\255\\312\\367\\377\\177\\000\\000\\202\\035\\376\\003\\000\\000\\000\\000\\204\\331\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000P\\332\\377\\377\\377\\177\\000\\000\\260\\036@\\000\\000\\000\\000\\000@\\332\\377\\377\\377\\177\\000\\000\\370\\344\\377\\367\\000\\000\\000\\000\\250O\\374\\367\\377\\177\\000\\000\\bp\\340\\377\\377\\377\\177\\000\\000$\\255\\312\\367\\377\\177\\000\\000\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\250\\002\\304\\367\\377\\177\\000\\0000I\\374\\367\\377\\177\\000\\000`\\345\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000(j\\315\\000\\000\\000\\000\\000\\000p\\315\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\227\\001\\376\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000H\\a\\314\\000\\000\\000\\000\\000p\\345\\377\\377\\377\\177\\000\\000\\a\\000\\000\\000\\000\\000\\000\\000\\250\\346\\377\\377\\377\\177\\000\\000\\350\\346\\377\\377\\377\\177\\000\\000@ \\306\\000\\000\\000\\000\\000\\227\\001\\376\\367\\377\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\370\\001\\000\\000\\000\\000\\000\\000\\250\\002\\304\\367\\377\\177\\000\\000\\000\\000\\000\\000\\377\\177\\000\\000>|\\376\\367\\377\\177\\000\\000p\\345\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\350\\346\\377\\377\\377\\177\\000\\000\\250\\346\\377\\377\\377\\177\\000\\000\\b`\\264\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\001\\r\\376\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\200\\037\\000\\000\\377\\377\\000\\000\\a\\000\\000\\000\\000\\000\\000\\000\\250\\346\\377\\377\\377\\177\\000\\000\\350\\346\\377\\377\\377\\177\\000\\000\\220\\341\\377\\367\\377\\177\\000\\000@ \\306\\000\\000\\000\\000\\000\\227\\001\\376\\367\\377\\177\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000/out/crypt2_load\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\377\\000\\000\\000\\377\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\222\\342\\000\\000\\000\\000\\000h\\v\\314\\000\\000\\000\\000\\000/out/crypt2_load\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\377\\000\\000\\000\\377\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000////////////////\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000mory\\000: \\000%s%s%s\\000%\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\020\\000\\000\\000\\000\\000\\000c\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000@\\000\\000\\000\\000\\000\\000\\000\\221\\205\\324\\367\\377\\177\\000\\000\\200\\v\\342\\367\\377\\177\\000\\000\\221\\205\\324\\367\\377\\177\\000\\000\\200\\v\\342\\367\\377\\177\\000\\000P\\000\\000\\000\\000\\000\\000\\000@\\000\\000\\000\\000\\000\\000\\000\\215\\v\\315\\367\\377\\177\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000u\\265\\314\\367\\377\\177\\000\\000\\000`\\206\\001\\000\\000\\000\\000\\377\\017\\000\\000\\000\\000\\000\\000\\000\\320\\213\\001\\000\\000\\000\\000\\000\\360\\377\\377\\377\\377\\377\\377\\000\\020\\000\\000\\000\\000\\000\\000v\\000\\000\\000\\000\\000\\000\\000 \\200\\202\\001\\000\\000\\000\\000\\200\\v\\342\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\200\\v\\342\\367\\377\\177\\000\\000@\\000\\000\\000\\000\\000\\000\\000x\\377\\377\\377\\377\\377\\377\\377P\\000\\000\\000\\000\\000\\000\\000x\\377\\377\\377\\377\\377\\377\\377\\003\\000\\000\\000\\000\\000\\000\\000\\223\\307\\314\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000P\\000\\000\\000\\000\\000\\000\\000\\340\\v\\342\\367\\377\\177\\000\\000\\026@\\202\\001\\000\\000\\000\\000@\\000\\000\\000\\000\\000\\000\\000\\005\\000\\000\\000w\\000\\000\\000@\\000\\000\\000\\000\\000\\000\\000@\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\005\\000\\000\\0001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\221\\205\\324\\367\\377\\177\\000\\000\\200\\v\\342\\367\\377\\177\\000\\000P\\000\\000\\000\\000\\000\\000\\0000\\000\\000\\000\\000\\000\\000\\000\\215\\v\\315\\367\\377\\177\\000\\000\\020\\000\\004\\000\\000\\000\\000\\000u\\265\\314\\367\\377\\177\\000\\000@\\000\\000\\000\\000\\000\\000\\000\\377\\017\\000\\000\\000\\000\\000\\000\\000\\340\\224\\001\\000\\000\\000\\000|\\232\\314\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\340\\v\\342\\367\\377\\177\\000\\000@\\000\\000\\000\\000\\000\\000\\000\\200\\v\\342\\367\\377\\177\\000\\000\\000\\000\\002\\000\\000\\000\\000\\000\\000\\325\\376\\025\\223\\355\\324\\216\\020\\000\\002\\000\\000\\000\\000\\000\\300\\025\\342\\367\\377\\177\\000\\000\\240\\324\\341\\367\\377\\177\\000\\000\\306c\\313\\367\\377\\177\\000\\000\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000\\002\\000\\000\\000\\000\\000\\200\\337\\377\\377\\377\\177\\000\\000\\333JB\\000\\000\\000\\000\\000\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000\\002\\000\\000\\000\\000\\000\\200\\v\\342\\367\\377\\177\\000\\000`\\033\\203\\001\\000\\000\\000\\000\\n\\330\\374\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\0008\\337\\377\\377\\377\\177\\000\\000\\000\\222\\342\\000\\000\\000\\000\""}, "calculate_checksum": "NULL", "data": "0x1824d50 \"\""}, "Value After Statement Execution": "No", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint LLVMFuzzerTestOneInput(const uint8_t* data, size_t size)\n{\n\tint fd, r = EXIT_FAILURE;\n\tstruct crypt_device *cd = NULL;\n\tchar name[] = \"/tmp/test-script-fuzz.XXXXXX\";\n\tstruct luks2_hdr_disk hdr_rw;\n\tsize_t modified_data_size;\n\n\t\n\tif (size >= sizeof(hdr_rw) && calculate_checksum((const char *)data, size, &hdr_rw))\n\t\tmodified_data_size = sizeof(hdr_rw);\n\telse\n\t\tmodified_data_size = 0;\n\n\t\n\tfd = mkostemp(name, O_RDWR|O_CREAT|O_EXCL|O_CLOEXEC);\n\tif (fd == -1)\n\t\treturn r;\n\n\t\n\tif (ftruncate(fd, FILESIZE) == -1)\n\t\tgoto out;\n\n\tif (modified_data_size &&\n\t    write_buffer(fd, &hdr_rw, modified_data_size) != (ssize_t)modified_data_size)\n\t\tgoto out;\n\n\tif (write_buffer(fd, data + modified_data_size, size - modified_data_size) != (ssize_t)size)\n\t\tgoto out;\n\n\t\n\tif (crypt_init(&cd, name) == 0)\n\t\t(void)crypt_load(cd, CRYPT_LUKS2, NULL);\n\tcrypt_free(cd);\n\tr = 0;\nout:\n\tclose(fd);\n\tunlink(name);\n\n\treturn r;\n", "Selected Statement": "if (write_buffer(fd, data + modified_data_size, size - modified_data_size) != (ssize_t)size)", "Function Input": {"data": {"value": "0x1824d50 \"\""}}, "Variable Values Before Statement": {"write_buffer": "NULL", "fd": "int", "data": "0x1824d50 \"\"", "modified_data_size": "0", "size": "0"}, "Value After Statement Execution": "Yes", "Project Information": "cryptsetup"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid    msg_vstream_init(const char *name, VSTREAM *vp)\n{\n    static int first_call = 1;\n\n    msg_tag = name;\n    msg_stream = vp;\n    if (first_call) {\n\tfirst_call = 0;\n\tmsg_output(msg_vstream_print);\n    }\n", "Selected Statement": "if (level == MSG_INFO)", "Function Input": {}, "Variable Values Before Statement": {"level": "NULL", "MSG_INFO": "NULL"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid    msg_vstream_init(const char *name, VSTREAM *vp)\n{\n    static int first_call = 1;\n\n    msg_tag = name;\n    msg_stream = vp;\n    if (first_call) {\n\tfirst_call = 0;\n\tmsg_output(msg_vstream_print);\n    }\n", "Selected Statement": "if (first_call)", "Function Input": {}, "Variable Values Before Statement": {"first_call": "int"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\t\t\t             MIME_STATE_ANY_END body_end,\n\t\t\t             MIME_STATE_ERR_PRINT err_print,\n\t\t\t             void *context)\n{\n    MIME_STATE *state;\n\n    state = (MIME_STATE *) mymalloc(sizeof(*state));\n\n    \n    state->err_flags = 0;\n    state->body_offset = 0;\t\t\t\n    SET_MIME_STATE(state, MIME_STATE_PRIMARY,\n\t\t   MIME_CTYPE_TEXT, MIME_STYPE_PLAIN,\n\t\t   MIME_ENC_7BIT, MIME_ENC_7BIT);\n    state->output_buffer = vstring_alloc(100);\n    state->prev_rec_type = 0;\n    state->stack = 0;\n    state->token_buffer = vstring_alloc(1);\n    state->nesting_level = -1;\t\t\t\n\n    \n    state->static_flags = flags;\n    state->head_out = head_out;\n    state->head_end = head_end;\n    state->body_out = body_out;\n    state->body_end = body_end;\n    state->err_print = err_print;\n    state->app_context = context;\n", "Selected Statement": "if (msg_verbose)", "Function Input": {}, "Variable Values Before Statement": {"msg_verbose": "NULL"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid   *mymalloc(ssize_t len)\n{\n    void   *ptr;\n    MBLOCK *real_ptr;\n\n    \n    if (len < 1)\n\tmsg_panic(\"mymalloc: requested length %ld\", (long) len);\n#ifdef MYMALLOC_FUZZ\n    len += MYMALLOC_FUZZ;\n#endif\n    if ((real_ptr = (MBLOCK *) malloc(SPACE_FOR(len))) == 0)\n\tmsg_fatal(\"mymalloc: insufficient memory for %ld bytes: %m\",\n\t\t  (long) len);\n    CHECK_OUT_PTR(ptr, real_ptr, len);\n    memset(ptr, FILLER, len);\n", "Selected Statement": "if (*str == 0)", "Function Input": {}, "Variable Values Before Statement": {"str": "NULL"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid   *mymalloc(ssize_t len)\n{\n    void   *ptr;\n    MBLOCK *real_ptr;\n\n    \n    if (len < 1)\n\tmsg_panic(\"mymalloc: requested length %ld\", (long) len);\n#ifdef MYMALLOC_FUZZ\n    len += MYMALLOC_FUZZ;\n#endif\n    if ((real_ptr = (MBLOCK *) malloc(SPACE_FOR(len))) == 0)\n\tmsg_fatal(\"mymalloc: insufficient memory for %ld bytes: %m\",\n\t\t  (long) len);\n    CHECK_OUT_PTR(ptr, real_ptr, len);\n    memset(ptr, FILLER, len);\n", "Selected Statement": "if (ptr == 0)", "Function Input": {}, "Variable Values Before Statement": {"ptr": "VOID"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nVSTRING *vstring_alloc(ssize_t len)\n{\n    VSTRING *vp;\n\n    \n    if (len < 1 || len > SSIZE_T_MAX - 1)\n\tmsg_panic(\"vstring_alloc: bad length %ld\", (long) len);\n    vp = (VSTRING *) mymalloc(sizeof(*vp));\n    vp->vbuf.flags = 0;\n    vp->vbuf.len = 0;\n    vp->vbuf.data = (unsigned char *) mymalloc(len + 1);\n    vp->vbuf.data[len] = 0;\n    vp->vbuf.len = len;\n    VSTRING_RESET(vp);\n    vp->vbuf.data[0] = 0;\n    vp->vbuf.get_ready = vstring_buf_get_ready;\n    vp->vbuf.put_ready = vstring_buf_put_ready;\n    vp->vbuf.space = vstring_buf_space;\n", "Selected Statement": "if (start < 0 || start >= VSTRING_LEN(vp))", "Function Input": {}, "Variable Values Before Statement": {"start": "NULL", "VSTRING_LEN": "NULL", "vp": {"vbuf": null}}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nVSTRING *vstring_alloc(ssize_t len)\n{\n    VSTRING *vp;\n\n    \n    if (len < 1 || len > SSIZE_T_MAX - 1)\n\tmsg_panic(\"vstring_alloc: bad length %ld\", (long) len);\n    vp = (VSTRING *) mymalloc(sizeof(*vp));\n    vp->vbuf.flags = 0;\n    vp->vbuf.len = 0;\n    vp->vbuf.data = (unsigned char *) mymalloc(len + 1);\n    vp->vbuf.data[len] = 0;\n    vp->vbuf.len = len;\n    VSTRING_RESET(vp);\n    vp->vbuf.data[0] = 0;\n    vp->vbuf.get_ready = vstring_buf_get_ready;\n    vp->vbuf.put_ready = vstring_buf_put_ready;\n    vp->vbuf.space = vstring_buf_space;\n", "Selected Statement": "if (len < 1 || len > SSIZE_T_MAX - 1)", "Function Input": {}, "Variable Values Before Statement": {"len": "100", "SSIZE_T_MAX": "NULL"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nssize_t is_header_buf(const char *str, ssize_t str_len)\n{\n    const unsigned char *cp;\n    int     state;\n    int     c;\n    ssize_t len;\n\n#define INIT\t\t0\n#define IN_CHAR\t\t1\n#define IN_CHAR_SPACE\t2\n#define CU_CHAR_PTR(x)\t((const unsigned char *) (x))\n\n    \n    for (len = 0, state = INIT, cp = CU_CHAR_PTR(str); ; cp++) {\n\tif (str_len != IS_HEADER_NULL_TERMINATED && str_len-- <= 0)\n\t    return (0);\n\tswitch (c = *cp) {\n\tdefault:\n\t    if (c == 0 || !ISASCII(c) || ISCNTRL(c))\n\t\treturn (0);\n\t    if (state == INIT)\n\t\tstate = IN_CHAR;\n\t    if (state == IN_CHAR) {\n\t\tlen++;\n\t\tcontinue;\n\t    }\n\t    return (0);\n\tcase ' ':\n\tcase '\\t':\n\t    if (state == IN_CHAR)\n\t\tstate = IN_CHAR_SPACE;\n\t    if (state == IN_CHAR_SPACE)\n\t\tcontinue;\n\t    return (0);\n\tcase ':':\n\t    return ((state == IN_CHAR || state == IN_CHAR_SPACE) ? len : 0);\n\t}\n    }\n    \n    return (0);\n", "Selected Statement": "if (str_len != IS_HEADER_NULL_TERMINATED && str_len-- <= 0)", "Function Input": {"str": {"value": "<optimized out>"}, "str_len": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"str_len": "0", "IS_HEADER_NULL_TERMINATED": "NULL"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nssize_t is_header_buf(const char *str, ssize_t str_len)\n{\n    const unsigned char *cp;\n    int     state;\n    int     c;\n    ssize_t len;\n\n#define INIT\t\t0\n#define IN_CHAR\t\t1\n#define IN_CHAR_SPACE\t2\n#define CU_CHAR_PTR(x)\t((const unsigned char *) (x))\n\n    \n    for (len = 0, state = INIT, cp = CU_CHAR_PTR(str); ; cp++) {\n\tif (str_len != IS_HEADER_NULL_TERMINATED && str_len-- <= 0)\n\t    return (0);\n\tswitch (c = *cp) {\n\tdefault:\n\t    if (c == 0 || !ISASCII(c) || ISCNTRL(c))\n\t\treturn (0);\n\t    if (state == INIT)\n\t\tstate = IN_CHAR;\n\t    if (state == IN_CHAR) {\n\t\tlen++;\n\t\tcontinue;\n\t    }\n\t    return (0);\n\tcase ' ':\n\tcase '\\t':\n\t    if (state == IN_CHAR)\n\t\tstate = IN_CHAR_SPACE;\n\t    if (state == IN_CHAR_SPACE)\n\t\tcontinue;\n\t    return (0);\n\tcase ':':\n\t    return ((state == IN_CHAR || state == IN_CHAR_SPACE) ? len : 0);\n\t}\n    }\n    \n    return (0);\n", "Selected Statement": "if (state == IN_CHAR)", "Function Input": {"str": {"value": "<optimized out>"}, "str_len": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"state": "int", "IN_CHAR": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nssize_t is_header_buf(const char *str, ssize_t str_len)\n{\n    const unsigned char *cp;\n    int     state;\n    int     c;\n    ssize_t len;\n\n#define INIT\t\t0\n#define IN_CHAR\t\t1\n#define IN_CHAR_SPACE\t2\n#define CU_CHAR_PTR(x)\t((const unsigned char *) (x))\n\n    \n    for (len = 0, state = INIT, cp = CU_CHAR_PTR(str); ; cp++) {\n\tif (str_len != IS_HEADER_NULL_TERMINATED && str_len-- <= 0)\n\t    return (0);\n\tswitch (c = *cp) {\n\tdefault:\n\t    if (c == 0 || !ISASCII(c) || ISCNTRL(c))\n\t\treturn (0);\n\t    if (state == INIT)\n\t\tstate = IN_CHAR;\n\t    if (state == IN_CHAR) {\n\t\tlen++;\n\t\tcontinue;\n\t    }\n\t    return (0);\n\tcase ' ':\n\tcase '\\t':\n\t    if (state == IN_CHAR)\n\t\tstate = IN_CHAR_SPACE;\n\t    if (state == IN_CHAR_SPACE)\n\t\tcontinue;\n\t    return (0);\n\tcase ':':\n\t    return ((state == IN_CHAR || state == IN_CHAR_SPACE) ? len : 0);\n\t}\n    }\n    \n    return (0);\n", "Selected Statement": "if (state == IN_CHAR_SPACE)", "Function Input": {"str": {"value": "<optimized out>"}, "str_len": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"state": "int", "IN_CHAR_SPACE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nstatic void head_out(void *context, int class, const HEADER_OPTS *unused_info,\n                     VSTRING *buf, off_t offset) {}\n", "Selected Statement": "if (new_str == NULL)", "Function Input": {"context": {"value": null}}, "Variable Values Before Statement": {"new_str": "NULL"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid    msg_output(MSG_OUTPUT_FN output_fn)\n{\n    int     i;\n\n    \n    if (msg_buffers[MSG_OUT_NESTING_LIMIT - 1] == 0) {\n\tfor (i = 0; i < MSG_OUT_NESTING_LIMIT; i++)\n\t    msg_buffers[i] = vstring_alloc(100);\n    }\n\n    \n    if (msg_output_fn_count == 0)\n\tmsg_output_fn = (MSG_OUTPUT_FN *) mymalloc(sizeof(*msg_output_fn));\n    else\n\tmsg_output_fn = (MSG_OUTPUT_FN *) myrealloc((void *) msg_output_fn,\n\t\t\t(msg_output_fn_count + 1) * sizeof(*msg_output_fn));\n    msg_output_fn[msg_output_fn_count++] = output_fn;\n", "Selected Statement": "if (msg_vprintf_level < MSG_OUT_NESTING_LIMIT)", "Function Input": {"output_fn": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"msg_vprintf_level": "int", "MSG_OUT_NESTING_LIMIT": "NULL"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid    msg_output(MSG_OUTPUT_FN output_fn)\n{\n    int     i;\n\n    \n    if (msg_buffers[MSG_OUT_NESTING_LIMIT - 1] == 0) {\n\tfor (i = 0; i < MSG_OUT_NESTING_LIMIT; i++)\n\t    msg_buffers[i] = vstring_alloc(100);\n    }\n\n    \n    if (msg_output_fn_count == 0)\n\tmsg_output_fn = (MSG_OUTPUT_FN *) mymalloc(sizeof(*msg_output_fn));\n    else\n\tmsg_output_fn = (MSG_OUTPUT_FN *) myrealloc((void *) msg_output_fn,\n\t\t\t(msg_output_fn_count + 1) * sizeof(*msg_output_fn));\n    msg_output_fn[msg_output_fn_count++] = output_fn;\n", "Selected Statement": "if (msg_buffers[MSG_OUT_NESTING_LIMIT - 1] == 0)", "Function Input": {"output_fn": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"msg_buffers": "ARRAY", "MSG_OUT_NESTING_LIMIT": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid    msg_output(MSG_OUTPUT_FN output_fn)\n{\n    int     i;\n\n    \n    if (msg_buffers[MSG_OUT_NESTING_LIMIT - 1] == 0) {\n\tfor (i = 0; i < MSG_OUT_NESTING_LIMIT; i++)\n\t    msg_buffers[i] = vstring_alloc(100);\n    }\n\n    \n    if (msg_output_fn_count == 0)\n\tmsg_output_fn = (MSG_OUTPUT_FN *) mymalloc(sizeof(*msg_output_fn));\n    else\n\tmsg_output_fn = (MSG_OUTPUT_FN *) myrealloc((void *) msg_output_fn,\n\t\t\t(msg_output_fn_count + 1) * sizeof(*msg_output_fn));\n    msg_output_fn[msg_output_fn_count++] = output_fn;\n", "Selected Statement": "if (msg_output_fn_count == 0)", "Function Input": {"output_fn": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"msg_output_fn_count": "int"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid    msg_output(MSG_OUTPUT_FN output_fn)\n{\n    int     i;\n\n    \n    if (msg_buffers[MSG_OUT_NESTING_LIMIT - 1] == 0) {\n\tfor (i = 0; i < MSG_OUT_NESTING_LIMIT; i++)\n\t    msg_buffers[i] = vstring_alloc(100);\n    }\n\n    \n    if (msg_output_fn_count == 0)\n\tmsg_output_fn = (MSG_OUTPUT_FN *) mymalloc(sizeof(*msg_output_fn));\n    else\n\tmsg_output_fn = (MSG_OUTPUT_FN *) myrealloc((void *) msg_output_fn,\n\t\t\t(msg_output_fn_count + 1) * sizeof(*msg_output_fn));\n    msg_output_fn[msg_output_fn_count++] = output_fn;\n", "Selected Statement": "if (msg_output_fn_count == 0)", "Function Input": {"output_fn": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"msg_output_fn_count": "int"}, "Value After Statement Execution": "Yes", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nTOK822 *tok822_alloc(int type, const char *strval)\n{\n    TOK822 *tp;\n\n#define CONTAINER_TOKEN(x) \\\n\t((x) == TOK822_ADDR || (x) == TOK822_STARTGRP)\n\n    tp = (TOK822 *) mymalloc(sizeof(*tp));\n    tp->type = type;\n    tp->next = tp->prev = tp->head = tp->tail = tp->owner = 0;\n    tp->vstr = (type < TOK822_MINTOK || CONTAINER_TOKEN(type) ? 0 :\n\t\tstrval == 0 ? vstring_alloc(10) :\n\t\tvstring_strcpy(vstring_alloc(strlen(strval) + 1), strval));\n", "Selected Statement": "if (tp->vstr)", "Function Input": {}, "Variable Values Before Statement": {"tp->vstr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nTOK822 *tok822_cut_before(TOK822 *tp)\n{\n    TOK822 *prev = tp->prev;\n\n    if (prev) {\n\tprev->next = 0;\n\ttp->prev = 0;\n    }\n", "Selected Statement": "if (next)", "Function Input": {}, "Variable Values Before Statement": {"next": "NULL"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nTOK822 *tok822_cut_before(TOK822 *tp)\n{\n    TOK822 *prev = tp->prev;\n\n    if (prev) {\n\tprev->next = 0;\n\ttp->prev = 0;\n    }\n", "Selected Statement": "if ((result = action(tp)) != 0)", "Function Input": {}, "Variable Values Before Statement": {"result": "NULL", "action": "NULL", "tp": {"type": "0", "vstr": null, "prev": null, "next": null, "head": null, "tail": null, "owner": null}}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nTOK822 *tok822_cut_before(TOK822 *tp)\n{\n    TOK822 *prev = tp->prev;\n\n    if (prev) {\n\tprev->next = 0;\n\ttp->prev = 0;\n    }\n", "Selected Statement": "if (prev)", "Function Input": {}, "Variable Values Before Statement": {"prev": {"type": "259", "vstr": null, "prev": null, "next": null, "head": null, "tail": null, "owner": null}}, "Value After Statement Execution": "Yes", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nVSTRING *quote_822_local_flags(VSTRING *dst, const char *mbox, int flags)\n{\n    const char *start;\t\t\t\n    const char *end;\t\t\t\n    const char *colon;\n\n    \n    if (mbox[0] == '@' && (colon = strchr(mbox, ':')) != 0)\n\tstart = colon + 1;\n    else\n\tstart = mbox;\n    if ((flags & QUOTE_FLAG_BARE_LOCALPART) != 0\n\t|| (end = strrchr(start, '@')) == 0)\n\tend = start + strlen(start);\n    if ((flags & QUOTE_FLAG_APPEND) == 0)\n\tVSTRING_RESET(dst);\n    if (is_822_dot_string(start, end, flags)) {\n\treturn (vstring_strcat(dst, mbox));\n    } else {\n\tvstring_strncat(dst, mbox, start - mbox);\n\tmake_822_quoted_string(dst, start, end, flags & QUOTE_FLAG_8BITCLEAN);\n\treturn (vstring_strcat(dst, end));\n    }\n", "Selected Statement": "if (mbox[0] == '@' && (colon = strchr(mbox, ':')) != 0)", "Function Input": {"end": {"value": "<optimized out>"}, "flags": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"mbox": "<optimized out>", "colon": "<optimized out>", "strchr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nVSTRING *quote_822_local_flags(VSTRING *dst, const char *mbox, int flags)\n{\n    const char *start;\t\t\t\n    const char *end;\t\t\t\n    const char *colon;\n\n    \n    if (mbox[0] == '@' && (colon = strchr(mbox, ':')) != 0)\n\tstart = colon + 1;\n    else\n\tstart = mbox;\n    if ((flags & QUOTE_FLAG_BARE_LOCALPART) != 0\n\t|| (end = strrchr(start, '@')) == 0)\n\tend = start + strlen(start);\n    if ((flags & QUOTE_FLAG_APPEND) == 0)\n\tVSTRING_RESET(dst);\n    if (is_822_dot_string(start, end, flags)) {\n\treturn (vstring_strcat(dst, mbox));\n    } else {\n\tvstring_strncat(dst, mbox, start - mbox);\n\tmake_822_quoted_string(dst, start, end, flags & QUOTE_FLAG_8BITCLEAN);\n\treturn (vstring_strcat(dst, end));\n    }\n", "Selected Statement": "if (strcmp(cmd, \"quote\") == 0)", "Function Input": {"end": {"value": "<optimized out>"}, "flags": {"value": "<optimized out>"}}, "Variable Values Before Statement": {"strcmp": "NULL", "cmd": "NULL"}, "Value After Statement Execution": "No", "Project Information": "postfix"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " *\n * @see ssh_finalize()\n */\nint ssh_init(void) {\n", "Selected Statement": "if (rc < 0)", "Function Input": {}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " *\n * @see ssh_finalize()\n */\nint ssh_init(void) {\n", "Selected Statement": "if (rc)", "Function Input": {}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n#if (HAVE_PTHREAD)\nvoid ssh_mutex_lock(SSH_MUTEX *mutex)\n{\n    int rc;\n\n    if (mutex == NULL) {\n        exit(EINVAL);\n    }\n\n    rc = pthread_mutex_lock(mutex);\n\n    if (rc) {\n        exit(rc);\n    }\n", "Selected Statement": "if (mutex == NULL)", "Function Input": {"mutex": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"__data": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"__lock": {"type_category": "int", "concrete_type": "int", "value": "-823458933"}, "__count": {"type_category": "int", "concrete_type": "unsigned int", "value": "8396559"}, "__owner": {"type_category": "int", "concrete_type": "int", "value": "-218103808"}, "__nusers": {"type_category": "int", "concrete_type": "unsigned int", "value": "1224351247"}, "__kind": {"type_category": "int", "concrete_type": "int", "value": "3702659"}, "__spins": {"type_category": "int", "concrete_type": "short", "value": "1396"}, "__elision": {"type_category": "int", "concrete_type": "short", "value": "4035"}, "__list": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"__prev": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7cc5e8d <_IO_doallocbuf+13>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x8b5355544100401f\n", "message": "Cannot access memory at address 0x8b5355544100401f"}}, "__next": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7cc5e95 <_IO_doallocbuf+21>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xa7402a8fb894807\n", "message": "Cannot access memory at address 0xa7402a8fb894807"}}}}}}, "__size": {"type_category": "string", "concrete_type": "string", "value": "\"\\213\\003\\353\\316\\017\\037\\200\\000\\000\\000\\000\\363\\017\\036\\372H\\203\\1778\\000t\\005\\303\\017\\037@\\000ATUS\\213\\aH\\211\\373\\250\\002t\\n\""}, "__align": {"type_category": "int", "concrete_type": "long", "value": "36062949775442827"}}}}}, "Variable Values Before Statement": {"mutex": {"__data": null, "__size": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "__align": "0"}}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n#if (HAVE_PTHREAD)\nvoid ssh_mutex_lock(SSH_MUTEX *mutex)\n{\n    int rc;\n\n    if (mutex == NULL) {\n        exit(EINVAL);\n    }\n\n    rc = pthread_mutex_lock(mutex);\n\n    if (rc) {\n        exit(rc);\n    }\n", "Selected Statement": "if (mutex == NULL)", "Function Input": {"mutex": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"__data": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"__lock": {"type_category": "int", "concrete_type": "int", "value": "-823458933"}, "__count": {"type_category": "int", "concrete_type": "unsigned int", "value": "8396559"}, "__owner": {"type_category": "int", "concrete_type": "int", "value": "-218103808"}, "__nusers": {"type_category": "int", "concrete_type": "unsigned int", "value": "1224351247"}, "__kind": {"type_category": "int", "concrete_type": "int", "value": "3702659"}, "__spins": {"type_category": "int", "concrete_type": "short", "value": "1396"}, "__elision": {"type_category": "int", "concrete_type": "short", "value": "4035"}, "__list": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"__prev": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7cc5e8d <_IO_doallocbuf+13>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x8b5355544100401f\n", "message": "Cannot access memory at address 0x8b5355544100401f"}}, "__next": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7cc5e95 <_IO_doallocbuf+21>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xa7402a8fb894807\n", "message": "Cannot access memory at address 0xa7402a8fb894807"}}}}}}, "__size": {"type_category": "string", "concrete_type": "string", "value": "\"\\213\\003\\353\\316\\017\\037\\200\\000\\000\\000\\000\\363\\017\\036\\372H\\203\\1778\\000t\\005\\303\\017\\037@\\000ATUS\\213\\aH\\211\\373\\250\\002t\\n\""}, "__align": {"type_category": "int", "concrete_type": "long", "value": "36062949775442827"}}}}}, "Variable Values Before Statement": {"mutex": {"__data": null, "__size": "\"\\001\\000\\000\\000\\000\\000\\000\\000=\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "__align": "1"}}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static int ssh_known_hosts_read_entries(const char *match,\n                                        const char *filename,\n                                        struct ssh_list **entries)\n{\n    char line[MAX_LINE_SIZE];\n    size_t lineno = 0;\n    size_t len = 0;\n    FILE *fp;\n    int rc;\n\n    fp = fopen(filename, \"r\");\n    if (fp == NULL) {\n        char err_msg[SSH_ERRNO_MSG_MAX] = {0};\n        SSH_LOG(SSH_LOG_TRACE, \"Failed to open the known_hosts file '%s': %s\",\n                filename, ssh_strerror(errno, err_msg, SSH_ERRNO_MSG_MAX));\n        \n        return SSH_OK;\n    }\n\n    if (*entries == NULL) {\n        *entries = ssh_list_new();\n        if (*entries == NULL) {\n            fclose(fp);\n            return SSH_ERROR;\n        }\n    }\n\n    for (rc = known_hosts_read_line(fp, line, sizeof(line), &len, &lineno);\n         rc == 0;\n         rc = known_hosts_read_line(fp, line, sizeof(line), &len, &lineno)) {\n        struct ssh_knownhosts_entry *entry = NULL;\n        struct ssh_iterator *it = NULL;\n        char *p = NULL;\n\n        if (line[len] != '\\n') {\n            len = strcspn(line, \"\\n\");\n        }\n        line[len] = '\\0';\n\n        \n        for (p = line; isspace((int)p[0]); p++);\n\n        \n        if (p[0] == '\\0' || p[0] == '#') {\n            continue;\n        }\n\n        \n        if (p[0] == '@') {\n            continue;\n        }\n\n        rc = ssh_known_hosts_parse_line(match,\n                                        line,\n                                        &entry);\n        if (rc == SSH_AGAIN) {\n            continue;\n        } else if (rc != SSH_OK) {\n            goto error;\n        }\n\n        \n        for (it = ssh_list_get_iterator(*entries);\n             it != NULL;\n             it = it->next) {\n            struct ssh_knownhosts_entry *entry2;\n            int cmp;\n            entry2 = ssh_iterator_value(struct ssh_knownhosts_entry *, it);\n            cmp = ssh_known_hosts_entries_compare(entry, entry2);\n            if (cmp == 0) {\n                ssh_knownhosts_entry_free(entry);\n                entry = NULL;\n                break;\n            }\n        }\n        if (entry != NULL) {\n            ssh_list_append(*entries, entry);\n        }\n    }\n\n    fclose(fp);\n    return SSH_OK;\nerror:\n    fclose(fp);\n    return SSH_ERROR;\n", "Selected Statement": "if (fp == NULL)", "Function Input": {}, "Variable Values Before Statement": {"fp": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static int ssh_known_hosts_read_entries(const char *match,\n                                        const char *filename,\n                                        struct ssh_list **entries)\n{\n    char line[MAX_LINE_SIZE];\n    size_t lineno = 0;\n    size_t len = 0;\n    FILE *fp;\n    int rc;\n\n    fp = fopen(filename, \"r\");\n    if (fp == NULL) {\n        char err_msg[SSH_ERRNO_MSG_MAX] = {0};\n        SSH_LOG(SSH_LOG_TRACE, \"Failed to open the known_hosts file '%s': %s\",\n                filename, ssh_strerror(errno, err_msg, SSH_ERRNO_MSG_MAX));\n        \n        return SSH_OK;\n    }\n\n    if (*entries == NULL) {\n        *entries = ssh_list_new();\n        if (*entries == NULL) {\n            fclose(fp);\n            return SSH_ERROR;\n        }\n    }\n\n    for (rc = known_hosts_read_line(fp, line, sizeof(line), &len, &lineno);\n         rc == 0;\n         rc = known_hosts_read_line(fp, line, sizeof(line), &len, &lineno)) {\n        struct ssh_knownhosts_entry *entry = NULL;\n        struct ssh_iterator *it = NULL;\n        char *p = NULL;\n\n        if (line[len] != '\\n') {\n            len = strcspn(line, \"\\n\");\n        }\n        line[len] = '\\0';\n\n        \n        for (p = line; isspace((int)p[0]); p++);\n\n        \n        if (p[0] == '\\0' || p[0] == '#') {\n            continue;\n        }\n\n        \n        if (p[0] == '@') {\n            continue;\n        }\n\n        rc = ssh_known_hosts_parse_line(match,\n                                        line,\n                                        &entry);\n        if (rc == SSH_AGAIN) {\n            continue;\n        } else if (rc != SSH_OK) {\n            goto error;\n        }\n\n        \n        for (it = ssh_list_get_iterator(*entries);\n             it != NULL;\n             it = it->next) {\n            struct ssh_knownhosts_entry *entry2;\n            int cmp;\n            entry2 = ssh_iterator_value(struct ssh_knownhosts_entry *, it);\n            cmp = ssh_known_hosts_entries_compare(entry, entry2);\n            if (cmp == 0) {\n                ssh_knownhosts_entry_free(entry);\n                entry = NULL;\n                break;\n            }\n        }\n        if (entry != NULL) {\n            ssh_list_append(*entries, entry);\n        }\n    }\n\n    fclose(fp);\n    return SSH_OK;\nerror:\n    fclose(fp);\n    return SSH_ERROR;\n", "Selected Statement": "if (*entries == NULL)", "Function Input": {}, "Variable Values Before Statement": {"entries": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static int ssh_known_hosts_read_entries(const char *match,\n                                        const char *filename,\n                                        struct ssh_list **entries)\n{\n    char line[MAX_LINE_SIZE];\n    size_t lineno = 0;\n    size_t len = 0;\n    FILE *fp;\n    int rc;\n\n    fp = fopen(filename, \"r\");\n    if (fp == NULL) {\n        char err_msg[SSH_ERRNO_MSG_MAX] = {0};\n        SSH_LOG(SSH_LOG_TRACE, \"Failed to open the known_hosts file '%s': %s\",\n                filename, ssh_strerror(errno, err_msg, SSH_ERRNO_MSG_MAX));\n        \n        return SSH_OK;\n    }\n\n    if (*entries == NULL) {\n        *entries = ssh_list_new();\n        if (*entries == NULL) {\n            fclose(fp);\n            return SSH_ERROR;\n        }\n    }\n\n    for (rc = known_hosts_read_line(fp, line, sizeof(line), &len, &lineno);\n         rc == 0;\n         rc = known_hosts_read_line(fp, line, sizeof(line), &len, &lineno)) {\n        struct ssh_knownhosts_entry *entry = NULL;\n        struct ssh_iterator *it = NULL;\n        char *p = NULL;\n\n        if (line[len] != '\\n') {\n            len = strcspn(line, \"\\n\");\n        }\n        line[len] = '\\0';\n\n        \n        for (p = line; isspace((int)p[0]); p++);\n\n        \n        if (p[0] == '\\0' || p[0] == '#') {\n            continue;\n        }\n\n        \n        if (p[0] == '@') {\n            continue;\n        }\n\n        rc = ssh_known_hosts_parse_line(match,\n                                        line,\n                                        &entry);\n        if (rc == SSH_AGAIN) {\n            continue;\n        } else if (rc != SSH_OK) {\n            goto error;\n        }\n\n        \n        for (it = ssh_list_get_iterator(*entries);\n             it != NULL;\n             it = it->next) {\n            struct ssh_knownhosts_entry *entry2;\n            int cmp;\n            entry2 = ssh_iterator_value(struct ssh_knownhosts_entry *, it);\n            cmp = ssh_known_hosts_entries_compare(entry, entry2);\n            if (cmp == 0) {\n                ssh_knownhosts_entry_free(entry);\n                entry = NULL;\n                break;\n            }\n        }\n        if (entry != NULL) {\n            ssh_list_append(*entries, entry);\n        }\n    }\n\n    fclose(fp);\n    return SSH_OK;\nerror:\n    fclose(fp);\n    return SSH_ERROR;\n", "Selected Statement": "if (line[len] != '\\n')", "Function Input": {}, "Variable Values Before Statement": {"linek\\303\\367\\377\\177\\000\\000\\212\\250\\375\\367\\377\\177\\000\\000\\030\\004\\000\\000\\000\\000\\000\\000\\240^\\304\\367\\377\\177\\000\\0000I\\374\\367\\377\\177\\000\\000\\b\\317\\377\\377\\377\\177\\000\\000\\004\\317\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\240^\\304\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000p\\200\\303\\367\\377\\177\\000\\000\\3436@\\000\\000\\000\\000\\000\\017\\204\\035\\346\\000\\000\\000\\000\\020v\\230\\003\\000\\000\\000\\000\\004\\317\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\320\\317\\377\\377\\377\\177\\000\\000X\\032@\\000\\000\\000\\000\\000\\300\\317\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\250O\\374\\367\\377\\177\\000\\000\\b\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\017\\204\\035\\346\\000\\000\\000\\000\\370\\344\\377\\367\\377\\177\\000\\000hc\\303\\367\\377\\177\\000\\000\\212\\250\\375\\367\\377\\177\\000\\000\\362\\001\\000\\000\\000\\000\\000\\000\\240^\\304\\367\\377\\177\\000\\0000I\\374\\367\\377\\177\\000\\000\\b\\321\\377\\377\\377\\177\\000\\000\\004\\321\\377\\377\\377\\177\\000\\000>|\\376\\367\\377\\177\\000\\000\\240^\\304\\367\\377\\177\\000\\000\\240\\332\\377\\377\\377\\177\\000\\000\\260\\333\\377\\377\\377\\177\\000\\000p\\200\\303\\367\\377\\177\\000\\000e4@\\000\\000\\000\\000\\000\\366#\\316 \\000\\000\\000\\000\\2178\\203\\000\\000\\000\\000\\000\\004\\321\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\377\\177\\000\\000\\320\\321\\377\\377\\377\\177\\000\\000\\030\\017@\\000\\000\\000\\000\\000\\300\\321\\377\\377\\377\\177\\000\\0000I\\374\\367\\000\\000\\000\\000\\250O\\374\\367\\377\\177\\000\\000\\b\\000\\000\\000\\000\\000\\000\\0000 \\303\\367\\377\\177\\000\\000\\240^\\304\\367\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\006\\005\\000\\000\\000\\000\\000\\000\\366#\\316 \\000\\000\\000\\000\\370\\344\\377\\367\\377\\177\\000\\000h\\322\\377\\377\\377\\177\\000\\000e4@\\000\\000\\000\\000\\000\\300\\321\\377\\377\\377\\177\\000\\000\\320\\321\\377\\377\\377\\177\\000\\000\\361\\261\\375\\367\\377\\177\\000\\000\\006\\000\\000\\000\\000\\000\\000\\0000 \\303\\367\\377\\177\\000\\000\\005\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\220\\341\\377\\367\\377\\177\\000\\000e\\000\\205\\000\\242\\000\\036\\0000 \\303\\367\\377\\177\\000\\000\\220\\341\\377\\367\\377\\177\\000\\000\\370\\344\\377\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\373\\250\\275YEe\\325?\\001\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000 \\257\\303\\367\\377\\177\\000\\0000I\\374\\367\\377\\177\\000\\000\\000NEW   \\000INFO: li\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\210b\\202\\000\\000\\000\\000\\000P\\336\\377\\377\\377\\177\\000\\000\\300\\270%\\001\\000\\000\\000\\000\\000p\\205\\000\\000\\000\\000\\000\\320Q%\\001\\000\\000\\000\\000P3%\\001\\000\\000\\000\\000\\227\\001\\376\\367\\377\\177\\000\\000\\005\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\370\\344\\377\\367\\377\\177\\000\\000 \\257\\303\\367\\377\\177\\000\\000\\260\\334\\377\\377\\377\\177\\000\\000>|\\376\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\004\\000\\000\\000\\000\\000\\000\\000`\\271%\\001\\000\\000\\000\\000@\\271%\\001\\000\\000\\000\\000 \\335\\377\\377\\377\\177\\000\\000\\003\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\240\\321\\341\\367\\377\\177\\000\\000`\\330\\377\\377\\377\\177\\000\\000\\200\\330\\377\\377\\377\\177\\000\\000\\020\\333\\377\\377\\377\\177\\000\\000\\000\\332\\377\\377\\377\\177\\000\\000xa\\000\\000\\000\\240\\310\\341\\367\\377\\177\\000\\000h\\rxp\\332\\377\\377\\377\\177\\000\\000x\\234r\\000\\000\\000\\000\\000\\360\\333\\377\\377\\377\\177\\000\\000d\\000\\000\\000\\000\\000\\000\\000\\346\\257\\312\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\017\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\210\\234r\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377\\000\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\n\\000\\000\\000\\000\\000\\000\\000=\\000\\000\\000\\000\\000\\000\\000 \\000\\000\\0000\\000\\000\\000\\017\\000\\000\\000\\377\\177\\000\\000\\002\\000\\000\\000\\377\\177\\000\\000\\210\\234r\\000\\000\\000\\000\\000\\021\\000\\000\\000\\000\\000\\000\\000\\021\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\a\\000\\000\\000\\240\\310\\341\\367\\377\\177\\000\\000h\\r\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\207\\234rn\\n\\000CustomCrostx\\233\\355\\002\\000\\000\\000\\000\\000\\000\\000\\300\\334\\377\\377\\377\\177\\000\\000\\300\\025\\342\\367\\377\\177\\000\\000\\206\\340o\\000\\000\\000\\000\\000\\200\\335\\377\\377\\377\\177\\000\\000$\\255\\312\\367\\377\\177\\000\\000\\000\\020\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\200\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\020\\000\\000\\000\\000\\000\\000\\000\\246\\226\\300\\tx\\233\\355\\002\\000\\000\\000\\000\\000\\000\\000 \\335\\377\\377\\377\\177\\000\\000\\300\\025\\342\\367\\377\\177\\000\\000\\305\\276o\\000\\000\\000\\000\\000\\340\\335\\377\\377\\377\\177\\000\\000$\\255\\312\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\246\\226\\300\\tx\\233\\355\\002\\000\\000\\000\\000\\000\\000\\000`\\335\\377\\377\\377\\177\\000\\000\\300\\025\\342\\367\\377\\177\\000\\000\\311\\263o\\000\\000\\000\\000\\000 \\336\\377\\377\\377\\177\\000\\000$\\255\\312\\367\\a\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\377\\177\\000\\0007\\333\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\0007\\333\\377\\377\\377\\177\\000\\000\\200\\330\\377\\377\\377\\1772c\\000\\246\\226\\300\\tx\\233\\355 \\333\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\027\\000\\000\\000\\000\\000\\000\\000\\200\\330\\377\\377\\377\\177\\000\\000\\020\\333\\377\\377\\377\\177\\000\\000\\000\\332\\377\\377\\377\\177\\000\\000 \\333\\377\\377\\377\\177\\000\\000\\232\\377\\313\\367\\377\\177\\000\\000\\004\\331\\377\\377\\377\\177\\000\\000pg\\334\\377\\377\\377\\177\\000\\000\\377\\377\\377\\377\\377\\177\\000\\000g\\334\\377\\377\\377\\177\\000\\000\\260\\331\\377\\377\\377\\17711\\240\\321\\341\\367\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\027\\000\\000\\000\\000\\000\\000\\000\\260\\331\\377\\377\\377\\177\\000\\000@\\334\\377\\377\\377\\177\\000\\0000\\333\\377\\377\\377\\177\\000\\000P\\334\\377\\377\\377\\177\\000\\000\\232\\377\\313\\367\\377\\177\\000\\0000\\000\\000\\000\\000\\000\\000\\0000\\000\\000\\000\\000\\000\\000\\000\\026\\000\\000\\000\\000\\000\\000\\000\\000\\246\\226\\300\\tx\\233\\355,\\000\\000\\000\\000\\000\\000\\000\\377\\377\\377\\377\\377\\377\\377\\377 \\333\\377\\377\\377\\177\\000\\000 \\333\\377\\377\\377\\177\\000\\000\\210\\334\\377\\377\\377\\177\\000\\000\\020\\333\\377\\377\\377\\177\\000\\000 \\335\\377\\377\\377\\177\\000\\000\\037\\336\\377\\377\\377\\177\\000\\000(\\000\\000\\0000\\000\\000\\000\\037\\336\\377\\377\\377\\177\\000\\000p\\332\\377\\377\\377\\17761\\000\\246\\226\\300\\tx\\233\\355 \\335\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\377\\000\\000\\000\\000\\000\\000\\000p\\332\\377\\377\\377\\177\\000\\000x\\234r\\000\\000\\000\\000\\000\\360\\333\\377\\377\\377\\177\\000\\000 \\335\\377\\377\\377\\177\\000\\000\\363\\305\\314\\367\\377\\177\\000\\000\\360'&\\001\\000\\000\\000\\000\\340\\v\\342\\367\\377\\177\\000\\000\\a\\000\\000\\000\\000\\000\\000\\000\\016\\\"%\\001\\000\\000\\000\\000\\000\\020\\000\\000\\000\\000\\000\\000c\\000\\000\\000\\377\\177\\000\\000\\b(%\\001\\000\\000\\000\\0000\\020\\000\\000\\000\\000\\000\\000@\\000\\000\\000\\000\\000\\000\\000\\001\\001\\000\\000p\\000\\000\\000\\b\\000\\000\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000|\\000\\000\\000w\\000\\000\\000o\\000\\000\\000c\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000@\\000\\000\\000\\200\\000\\000\\000\\377\\000\\000\\000\\000\\000\\000\\000\\000\\020\\000\\000\\000\\000\\000\\000\\200\\v\\342\\367\\377\\177\\000\\000h\\r\\000\\000\\000\\000\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000\\000(&\\001\\000\\000\\000\\000\\0008&\\001\\000\\000\\000\\000\\000\\020\\000\\000\\000\\000\\000\\000\\000\\020\\000\\000\\000\\000\\000\\000p\\276%\\001\\000\\000\\000\\000\\035]\\313\\367\\377\\177\\000\\000<\\000\\000\\000\\000\\000\\000\\000.\\030\\236\\000\\000\\000\\000\\000\\001\\000\\000\\000\\000\\000\\000\\000\\244\\201\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\020\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\236\\341\\321e\\000\\000\\000\\000\\2376\\373\\036\\000\\000\\000\\000\\236\\341\\321e\\000\\000\\000\\000\\2376\\373\\036\\000\\000\\000\\000\\236\\341\\321e\\000\\000\\000\\000\\2376\\373\\036\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\266\\001\\000\\000\\000\\000\\000\\000\\213\\256\\314\\367\\377\\177\\000\\000p\\276%\\001\\000\\000\\000\\000\\344\\\"\\324\\367\\377\\177\\000\\000\\322\\0259\\001\\000\\000\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000\\000(&\\001\\000\\000\\000\\000\\002\\000\\000\\000\\000\\000\\000\\000p\\276%\\001\\000\\000\\000\\000\\000\\246\\226\\300\\tx\\233\\355`\\334\\377\\377\\377\\177\\000\\000x\\314P\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000(\\320$\\001\\000\\000\\000\\000`\\334\\377\\377\\377\\177\\000\\000P3%\\001\\000\\000\\000\\000(\\320$\\001\\000\\000\\000\\000\\240\\334\\377\\377\\377\\177\\000\\000\\035\\366L\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\240\\324\\341\\367\\377\\177\\000\\000p\\276%\\001\\002\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\240\\334\\377\\377\\377\\177\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "len": "2"}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static int ssh_known_hosts_read_entries(const char *match,\n                                        const char *filename,\n                                        struct ssh_list **entries)\n{\n    char line[MAX_LINE_SIZE];\n    size_t lineno = 0;\n    size_t len = 0;\n    FILE *fp;\n    int rc;\n\n    fp = fopen(filename, \"r\");\n    if (fp == NULL) {\n        char err_msg[SSH_ERRNO_MSG_MAX] = {0};\n        SSH_LOG(SSH_LOG_TRACE, \"Failed to open the known_hosts file '%s': %s\",\n                filename, ssh_strerror(errno, err_msg, SSH_ERRNO_MSG_MAX));\n        \n        return SSH_OK;\n    }\n\n    if (*entries == NULL) {\n        *entries = ssh_list_new();\n        if (*entries == NULL) {\n            fclose(fp);\n            return SSH_ERROR;\n        }\n    }\n\n    for (rc = known_hosts_read_line(fp, line, sizeof(line), &len, &lineno);\n         rc == 0;\n         rc = known_hosts_read_line(fp, line, sizeof(line), &len, &lineno)) {\n        struct ssh_knownhosts_entry *entry = NULL;\n        struct ssh_iterator *it = NULL;\n        char *p = NULL;\n\n        if (line[len] != '\\n') {\n            len = strcspn(line, \"\\n\");\n        }\n        line[len] = '\\0';\n\n        \n        for (p = line; isspace((int)p[0]); p++);\n\n        \n        if (p[0] == '\\0' || p[0] == '#') {\n            continue;\n        }\n\n        \n        if (p[0] == '@') {\n            continue;\n        }\n\n        rc = ssh_known_hosts_parse_line(match,\n                                        line,\n                                        &entry);\n        if (rc == SSH_AGAIN) {\n            continue;\n        } else if (rc != SSH_OK) {\n            goto error;\n        }\n\n        \n        for (it = ssh_list_get_iterator(*entries);\n             it != NULL;\n             it = it->next) {\n            struct ssh_knownhosts_entry *entry2;\n            int cmp;\n            entry2 = ssh_iterator_value(struct ssh_knownhosts_entry *, it);\n            cmp = ssh_known_hosts_entries_compare(entry, entry2);\n            if (cmp == 0) {\n                ssh_knownhosts_entry_free(entry);\n                entry = NULL;\n                break;\n            }\n        }\n        if (entry != NULL) {\n            ssh_list_append(*entries, entry);\n        }\n    }\n\n    fclose(fp);\n    return SSH_OK;\nerror:\n    fclose(fp);\n    return SSH_ERROR;\n", "Selected Statement": "if (e == NULL)", "Function Input": {}, "Variable Values Before Statement": {"e": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstruct ssh_list *ssh_list_new(void)\n{\n    struct ssh_list *ret = malloc(sizeof(struct ssh_list));\n    if (ret == NULL) {\n        return NULL;\n    }\n    ret->root = ret->end = NULL;\n    return ret;\n", "Selected Statement": "if (fd < 0 || buf == NULL || nbytes == 0)", "Function Input": {}, "Variable Values Before Statement": {"fd": "NULL", "buf": "NULL", "nbytes": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstruct ssh_list *ssh_list_new(void)\n{\n    struct ssh_list *ret = malloc(sizeof(struct ssh_list));\n    if (ret == NULL) {\n        return NULL;\n    }\n    ret->root = ret->end = NULL;\n    return ret;\n", "Selected Statement": "if (!rc)", "Function Input": {}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns -1 if negation matches, 1 if there is a positive match, 0 if there\n * is no match at all.\n */\nint match_hostname(const char *host, const char *pattern, unsigned int len) {\n", "Selected Statement": "if (match_pattern(string, sub, MAX_MATCH_RECURSION))", "Function Input": {"pattern": {"value": "0x7fffffffb7f0 \"\\300\\334\\377\\377\\377\\177\""}}, "Variable Values Before Statement": {"match_pattern": "NULL", "string": "NULL", "sub": "NULL", "MAX_MATCH_RECURSION": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * Returns -1 if negation matches, 1 if there is a positive match, 0 if there\n * is no match at all.\n */\nint match_hostname(const char *host, const char *pattern, unsigned int len) {\n", "Selected Statement": "if (pattern[i] == '!')", "Function Input": {"pattern": {"value": "0x7fffffffb7f0 \"\\300\\334\\377\\377\\377\\177\""}}, "Variable Values Before Statement": {"pattern": "NULL", "i": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @param[in] key ssh_key handle to free\n */\nvoid ssh_key_free (ssh_key key)\n{\n    if (key) {\n        ssh_key_clean(key);\n        SAFE_FREE(key);\n    }\n", "Selected Statement": "if (privkey == NULL || !ssh_key_is_private(privkey))", "Function Input": {}, "Variable Values Before Statement": {"privkey": "NULL", "ssh_key_is_private": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @param[in] key ssh_key handle to free\n */\nvoid ssh_key_free (ssh_key key)\n{\n    if (key) {\n        ssh_key_clean(key);\n        SAFE_FREE(key);\n    }\n", "Selected Statement": "if (privkey == NULL || !ssh_key_is_private(privkey))", "Function Input": {}, "Variable Values Before Statement": {"privkey": "NULL", "ssh_key_is_private": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @returns A buffer containing the decoded string, NULL if something went\n *          wrong (e.g. incorrect char).\n */\nssh_buffer base64_to_bin(const char *source) {\n  ssh_buffer buffer = NULL;\n  unsigned char block[3];\n  char *base64;\n  char *ptr;\n  size_t len;\n  int equals;\n\n  base64 = strdup(source);\n  if (base64 == NULL) {\n    return NULL;\n  }\n  ptr = base64;\n\n  \n  equals = get_equals(ptr);\n  if (equals > 2) {\n    SAFE_FREE(base64);\n    return NULL;\n  }\n\n  buffer = ssh_buffer_new();\n  if (buffer == NULL) {\n    SAFE_FREE(base64);\n    return NULL;\n  }\n  \n  ssh_buffer_set_secure(buffer);\n\n  len = strlen(ptr);\n  while (len > 4) {\n    if (_base64_to_bin(block, ptr, 3) < 0) {\n      goto error;\n    }\n    if (ssh_buffer_add_data(buffer, block, 3) < 0) {\n      goto error;\n    }\n    len -= 4;\n    ptr += 4;\n  }\n\n  \n  switch (len) {\n    \n    case 4:\n      if (equals != 0) {\n        goto error;\n      }\n      if (_base64_to_bin(block, ptr, 3) < 0) {\n        goto error;\n      }\n      if (ssh_buffer_add_data(buffer, block, 3) < 0) {\n        goto error;\n      }\n      SAFE_FREE(base64);\n\n      return buffer;\n    \n    case 2:\n      if (equals != 2){\n        goto error;\n      }\n\n      if (_base64_to_bin(block, ptr, 1) < 0) {\n        goto error;\n      }\n      if (ssh_buffer_add_data(buffer, block, 1) < 0) {\n        goto error;\n      }\n      SAFE_FREE(base64);\n\n      return buffer;\n    \n    case 3:\n      if (equals != 1) {\n        goto error;\n      }\n      if (_base64_to_bin(block, ptr, 2) < 0) {\n        goto error;\n      }\n      if (ssh_buffer_add_data(buffer,block,2) < 0) {\n        goto error;\n      }\n      SAFE_FREE(base64);\n\n      return buffer;\n    default:\n      \n      goto error;\n  }\n\nerror:\n  SAFE_FREE(base64);\n  SSH_BUFFER_FREE(buffer);\n  return NULL;\n", "Selected Statement": "if (_base64_to_bin(block, ptr, 3) < 0)", "Function Input": {"source": {"value": "0x2 <error: Cannot access memory at address 0x2>"}}, "Variable Values Before Statement": {"_base64_to_bin": "NULL", "block": "\"\\000\\000\"", "ptr": "0x1262e10 \"\""}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @returns A buffer containing the decoded string, NULL if something went\n *          wrong (e.g. incorrect char).\n */\nssh_buffer base64_to_bin(const char *source) {\n  ssh_buffer buffer = NULL;\n  unsigned char block[3];\n  char *base64;\n  char *ptr;\n  size_t len;\n  int equals;\n\n  base64 = strdup(source);\n  if (base64 == NULL) {\n    return NULL;\n  }\n  ptr = base64;\n\n  \n  equals = get_equals(ptr);\n  if (equals > 2) {\n    SAFE_FREE(base64);\n    return NULL;\n  }\n\n  buffer = ssh_buffer_new();\n  if (buffer == NULL) {\n    SAFE_FREE(base64);\n    return NULL;\n  }\n  \n  ssh_buffer_set_secure(buffer);\n\n  len = strlen(ptr);\n  while (len > 4) {\n    if (_base64_to_bin(block, ptr, 3) < 0) {\n      goto error;\n    }\n    if (ssh_buffer_add_data(buffer, block, 3) < 0) {\n      goto error;\n    }\n    len -= 4;\n    ptr += 4;\n  }\n\n  \n  switch (len) {\n    \n    case 4:\n      if (equals != 0) {\n        goto error;\n      }\n      if (_base64_to_bin(block, ptr, 3) < 0) {\n        goto error;\n      }\n      if (ssh_buffer_add_data(buffer, block, 3) < 0) {\n        goto error;\n      }\n      SAFE_FREE(base64);\n\n      return buffer;\n    \n    case 2:\n      if (equals != 2){\n        goto error;\n      }\n\n      if (_base64_to_bin(block, ptr, 1) < 0) {\n        goto error;\n      }\n      if (ssh_buffer_add_data(buffer, block, 1) < 0) {\n        goto error;\n      }\n      SAFE_FREE(base64);\n\n      return buffer;\n    \n    case 3:\n      if (equals != 1) {\n        goto error;\n      }\n      if (_base64_to_bin(block, ptr, 2) < 0) {\n        goto error;\n      }\n      if (ssh_buffer_add_data(buffer,block,2) < 0) {\n        goto error;\n      }\n      SAFE_FREE(base64);\n\n      return buffer;\n    default:\n      \n      goto error;\n  }\n\nerror:\n  SAFE_FREE(base64);\n  SSH_BUFFER_FREE(buffer);\n  return NULL;\n", "Selected Statement": "if (equals > 2)", "Function Input": {"source": {"value": "0x2 <error: Cannot access memory at address 0x2>"}}, "Variable Values Before Statement": {"equals": "int"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @return A newly initialized SSH buffer, NULL on error.\n */\nstruct ssh_buffer_struct *ssh_buffer_new(void)\n{\n    struct ssh_buffer_struct *buf = NULL;\n    int rc;\n\n    buf = calloc(1, sizeof(struct ssh_buffer_struct));\n    if (buf == NULL) {\n        return NULL;\n    }\n\n    \n    rc = ssh_buffer_allocate_size(buf, 64 - 1);\n    if (rc != 0) {\n        SAFE_FREE(buf);\n        return NULL;\n    }\n    buffer_verify(buf);\n\n    return buf;\n", "Selected Statement": "if (argc != count)", "Function Input": {"buf": {"value": null}}, "Variable Values Before Statement": {"argc": "NULL", "count": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @return A newly initialized SSH buffer, NULL on error.\n */\nstruct ssh_buffer_struct *ssh_buffer_new(void)\n{\n    struct ssh_buffer_struct *buf = NULL;\n    int rc;\n\n    buf = calloc(1, sizeof(struct ssh_buffer_struct));\n    if (buf == NULL) {\n        return NULL;\n    }\n\n    \n    rc = ssh_buffer_allocate_size(buf, 64 - 1);\n    if (rc != 0) {\n        SAFE_FREE(buf);\n        return NULL;\n    }\n    buffer_verify(buf);\n\n    return buf;\n", "Selected Statement": "if (rc == SSH_OK)", "Function Input": {"buf": {"value": null}}, "Variable Values Before Statement": {"rc": "int", "SSH_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                                    const char *passphrase,\n                                    ssh_auth_callback auth_fn,\n                                    void *auth_data)\n{\n    BIO *mem = NULL;\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n    EC_KEY *ecdsa = NULL;\n#endif \n    uint8_t *ed25519 = NULL;\n    uint8_t *ed25519_pubkey = NULL;\n    ssh_key key = NULL;\n    enum ssh_keytypes_e type = SSH_KEYTYPE_UNKNOWN;\n    EVP_PKEY *pkey = NULL;\n\n    mem = BIO_new_mem_buf((void*)b64_key, -1);\n\n    if (passphrase == NULL) {\n        if (auth_fn) {\n            struct pem_get_password_struct pgp = { auth_fn, auth_data };\n\n            pkey = PEM_read_bio_PrivateKey(mem, NULL, pem_get_password, &pgp);\n        } else {\n            \n            pkey = PEM_read_bio_PrivateKey(mem, NULL, NULL, NULL);\n        }\n    } else {\n        pkey = PEM_read_bio_PrivateKey(mem, NULL, NULL, (void *) passphrase);\n    }\n\n    BIO_free(mem);\n\n    if (pkey == NULL) {\n        SSH_LOG(SSH_LOG_TRACE,\n                \"Error parsing private key: %s\",\n                ERR_error_string(ERR_get_error(), NULL));\n        return NULL;\n    }\n    switch (EVP_PKEY_base_id(pkey)) {\n    case EVP_PKEY_RSA:\n        type = SSH_KEYTYPE_RSA;\n        break;\n    case EVP_PKEY_EC:\n#ifdef HAVE_OPENSSL_ECC\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n        ecdsa = EVP_PKEY_get0_EC_KEY(pkey);\n        if (ecdsa == NULL) {\n            SSH_LOG(SSH_LOG_TRACE,\n\t\t    \"Error parsing private key: %s\",\n                    ERR_error_string(ERR_get_error(), NULL));\n            goto fail;\n        }\n#endif \n\n        \n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n        type = pki_key_ecdsa_to_key_type(ecdsa);\n#else\n        type = pki_key_ecdsa_to_key_type(pkey);\n#endif \n        if (type == SSH_KEYTYPE_UNKNOWN) {\n            SSH_LOG(SSH_LOG_TRACE, \"Invalid private key.\");\n            goto fail;\n        }\n\n        break;\n#endif \n    case EVP_PKEY_ED25519:\n    {\n        size_t key_len;\n        int evp_rc = 0;\n\n        \n        evp_rc = EVP_PKEY_get_raw_private_key(pkey, NULL, &key_len);\n        if (evp_rc != 1) {\n            SSH_LOG(SSH_LOG_TRACE,\n                    \"Failed to get ed25519 raw private key length:  %s\",\n                    ERR_error_string(ERR_get_error(), NULL));\n            goto fail;\n        }\n\n        if (key_len != ED25519_KEY_LEN) {\n            goto fail;\n        }\n\n        ed25519 = malloc(key_len);\n        if (ed25519 == NULL) {\n            SSH_LOG(SSH_LOG_TRACE, \"Out of memory\");\n            goto fail;\n        }\n\n        evp_rc = EVP_PKEY_get_raw_private_key(pkey, (uint8_t *)ed25519,\n                                              &key_len);\n        if (evp_rc != 1) {\n            SSH_LOG(SSH_LOG_TRACE,\n                    \"Failed to get ed25519 raw private key:  %s\",\n                    ERR_error_string(ERR_get_error(), NULL));\n            goto fail;\n        }\n\n        \n        ed25519_pubkey = malloc(ED25519_KEY_LEN);\n        if (ed25519_pubkey == NULL) {\n            SSH_LOG(SSH_LOG_TRACE, \"Out of memory\");\n            goto fail;\n        }\n\n        evp_rc = EVP_PKEY_get_raw_public_key(pkey, (uint8_t *)ed25519_pubkey,\n                                             &key_len);\n        if (evp_rc != 1) {\n            SSH_LOG(SSH_LOG_TRACE,\n                    \"Failed to get ed25519 raw public key:  %s\",\n                    ERR_error_string(ERR_get_error(), NULL));\n            goto fail;\n        }\n        type = SSH_KEYTYPE_ED25519;\n\n    }\n    break;\n    default:\n        SSH_LOG(SSH_LOG_TRACE, \"Unknown or invalid private key type %d\",\n                EVP_PKEY_base_id(pkey));\n        EVP_PKEY_free(pkey);\n        return NULL;\n    }\n\n    key = ssh_key_new();\n    if (key == NULL) {\n        goto fail;\n    }\n\n    key->type = type;\n    key->type_c = ssh_key_type_to_char(type);\n    key->flags = SSH_KEY_FLAG_PRIVATE | SSH_KEY_FLAG_PUBLIC;\n    key->key = pkey;\n    key->ed25519_privkey = ed25519;\n    key->ed25519_pubkey = ed25519_pubkey;\n#ifdef HAVE_OPENSSL_ECC\n    if (is_ecdsa_key_type(key->type)) {\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n        key->ecdsa_nid = pki_key_ecdsa_to_nid(ecdsa);\n#else\n        key->ecdsa_nid = pki_key_ecdsa_to_nid(key->key);\n#endif \n    }\n#endif \n\n    return key;\nfail:\n    EVP_PKEY_free(pkey);\n    ssh_key_free(key);\n    SAFE_FREE(ed25519);\n    SAFE_FREE(ed25519_pubkey);\n    return NULL;\n", "Selected Statement": "if (rc < 0)", "Function Input": {}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                                    const char *passphrase,\n                                    ssh_auth_callback auth_fn,\n                                    void *auth_data)\n{\n    BIO *mem = NULL;\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n    EC_KEY *ecdsa = NULL;\n#endif \n    uint8_t *ed25519 = NULL;\n    uint8_t *ed25519_pubkey = NULL;\n    ssh_key key = NULL;\n    enum ssh_keytypes_e type = SSH_KEYTYPE_UNKNOWN;\n    EVP_PKEY *pkey = NULL;\n\n    mem = BIO_new_mem_buf((void*)b64_key, -1);\n\n    if (passphrase == NULL) {\n        if (auth_fn) {\n            struct pem_get_password_struct pgp = { auth_fn, auth_data };\n\n            pkey = PEM_read_bio_PrivateKey(mem, NULL, pem_get_password, &pgp);\n        } else {\n            \n            pkey = PEM_read_bio_PrivateKey(mem, NULL, NULL, NULL);\n        }\n    } else {\n        pkey = PEM_read_bio_PrivateKey(mem, NULL, NULL, (void *) passphrase);\n    }\n\n    BIO_free(mem);\n\n    if (pkey == NULL) {\n        SSH_LOG(SSH_LOG_TRACE,\n                \"Error parsing private key: %s\",\n                ERR_error_string(ERR_get_error(), NULL));\n        return NULL;\n    }\n    switch (EVP_PKEY_base_id(pkey)) {\n    case EVP_PKEY_RSA:\n        type = SSH_KEYTYPE_RSA;\n        break;\n    case EVP_PKEY_EC:\n#ifdef HAVE_OPENSSL_ECC\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n        ecdsa = EVP_PKEY_get0_EC_KEY(pkey);\n        if (ecdsa == NULL) {\n            SSH_LOG(SSH_LOG_TRACE,\n\t\t    \"Error parsing private key: %s\",\n                    ERR_error_string(ERR_get_error(), NULL));\n            goto fail;\n        }\n#endif \n\n        \n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n        type = pki_key_ecdsa_to_key_type(ecdsa);\n#else\n        type = pki_key_ecdsa_to_key_type(pkey);\n#endif \n        if (type == SSH_KEYTYPE_UNKNOWN) {\n            SSH_LOG(SSH_LOG_TRACE, \"Invalid private key.\");\n            goto fail;\n        }\n\n        break;\n#endif \n    case EVP_PKEY_ED25519:\n    {\n        size_t key_len;\n        int evp_rc = 0;\n\n        \n        evp_rc = EVP_PKEY_get_raw_private_key(pkey, NULL, &key_len);\n        if (evp_rc != 1) {\n            SSH_LOG(SSH_LOG_TRACE,\n                    \"Failed to get ed25519 raw private key length:  %s\",\n                    ERR_error_string(ERR_get_error(), NULL));\n            goto fail;\n        }\n\n        if (key_len != ED25519_KEY_LEN) {\n            goto fail;\n        }\n\n        ed25519 = malloc(key_len);\n        if (ed25519 == NULL) {\n            SSH_LOG(SSH_LOG_TRACE, \"Out of memory\");\n            goto fail;\n        }\n\n        evp_rc = EVP_PKEY_get_raw_private_key(pkey, (uint8_t *)ed25519,\n                                              &key_len);\n        if (evp_rc != 1) {\n            SSH_LOG(SSH_LOG_TRACE,\n                    \"Failed to get ed25519 raw private key:  %s\",\n                    ERR_error_string(ERR_get_error(), NULL));\n            goto fail;\n        }\n\n        \n        ed25519_pubkey = malloc(ED25519_KEY_LEN);\n        if (ed25519_pubkey == NULL) {\n            SSH_LOG(SSH_LOG_TRACE, \"Out of memory\");\n            goto fail;\n        }\n\n        evp_rc = EVP_PKEY_get_raw_public_key(pkey, (uint8_t *)ed25519_pubkey,\n                                             &key_len);\n        if (evp_rc != 1) {\n            SSH_LOG(SSH_LOG_TRACE,\n                    \"Failed to get ed25519 raw public key:  %s\",\n                    ERR_error_string(ERR_get_error(), NULL));\n            goto fail;\n        }\n        type = SSH_KEYTYPE_ED25519;\n\n    }\n    break;\n    default:\n        SSH_LOG(SSH_LOG_TRACE, \"Unknown or invalid private key type %d\",\n                EVP_PKEY_base_id(pkey));\n        EVP_PKEY_free(pkey);\n        return NULL;\n    }\n\n    key = ssh_key_new();\n    if (key == NULL) {\n        goto fail;\n    }\n\n    key->type = type;\n    key->type_c = ssh_key_type_to_char(type);\n    key->flags = SSH_KEY_FLAG_PRIVATE | SSH_KEY_FLAG_PUBLIC;\n    key->key = pkey;\n    key->ed25519_privkey = ed25519;\n    key->ed25519_pubkey = ed25519_pubkey;\n#ifdef HAVE_OPENSSL_ECC\n    if (is_ecdsa_key_type(key->type)) {\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n        key->ecdsa_nid = pki_key_ecdsa_to_nid(ecdsa);\n#else\n        key->ecdsa_nid = pki_key_ecdsa_to_nid(key->key);\n#endif \n    }\n#endif \n\n    return key;\nfail:\n    EVP_PKEY_free(pkey);\n    ssh_key_free(key);\n    SAFE_FREE(ed25519);\n    SAFE_FREE(ed25519_pubkey);\n    return NULL;\n", "Selected Statement": "if (pkey == NULL)", "Function Input": {}, "Variable Values Before Statement": {"pkey": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                                    const char *passphrase,\n                                    ssh_auth_callback auth_fn,\n                                    void *auth_data)\n{\n    BIO *mem = NULL;\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n    EC_KEY *ecdsa = NULL;\n#endif \n    uint8_t *ed25519 = NULL;\n    uint8_t *ed25519_pubkey = NULL;\n    ssh_key key = NULL;\n    enum ssh_keytypes_e type = SSH_KEYTYPE_UNKNOWN;\n    EVP_PKEY *pkey = NULL;\n\n    mem = BIO_new_mem_buf((void*)b64_key, -1);\n\n    if (passphrase == NULL) {\n        if (auth_fn) {\n            struct pem_get_password_struct pgp = { auth_fn, auth_data };\n\n            pkey = PEM_read_bio_PrivateKey(mem, NULL, pem_get_password, &pgp);\n        } else {\n            \n            pkey = PEM_read_bio_PrivateKey(mem, NULL, NULL, NULL);\n        }\n    } else {\n        pkey = PEM_read_bio_PrivateKey(mem, NULL, NULL, (void *) passphrase);\n    }\n\n    BIO_free(mem);\n\n    if (pkey == NULL) {\n        SSH_LOG(SSH_LOG_TRACE,\n                \"Error parsing private key: %s\",\n                ERR_error_string(ERR_get_error(), NULL));\n        return NULL;\n    }\n    switch (EVP_PKEY_base_id(pkey)) {\n    case EVP_PKEY_RSA:\n        type = SSH_KEYTYPE_RSA;\n        break;\n    case EVP_PKEY_EC:\n#ifdef HAVE_OPENSSL_ECC\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n        ecdsa = EVP_PKEY_get0_EC_KEY(pkey);\n        if (ecdsa == NULL) {\n            SSH_LOG(SSH_LOG_TRACE,\n\t\t    \"Error parsing private key: %s\",\n                    ERR_error_string(ERR_get_error(), NULL));\n            goto fail;\n        }\n#endif \n\n        \n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n        type = pki_key_ecdsa_to_key_type(ecdsa);\n#else\n        type = pki_key_ecdsa_to_key_type(pkey);\n#endif \n        if (type == SSH_KEYTYPE_UNKNOWN) {\n            SSH_LOG(SSH_LOG_TRACE, \"Invalid private key.\");\n            goto fail;\n        }\n\n        break;\n#endif \n    case EVP_PKEY_ED25519:\n    {\n        size_t key_len;\n        int evp_rc = 0;\n\n        \n        evp_rc = EVP_PKEY_get_raw_private_key(pkey, NULL, &key_len);\n        if (evp_rc != 1) {\n            SSH_LOG(SSH_LOG_TRACE,\n                    \"Failed to get ed25519 raw private key length:  %s\",\n                    ERR_error_string(ERR_get_error(), NULL));\n            goto fail;\n        }\n\n        if (key_len != ED25519_KEY_LEN) {\n            goto fail;\n        }\n\n        ed25519 = malloc(key_len);\n        if (ed25519 == NULL) {\n            SSH_LOG(SSH_LOG_TRACE, \"Out of memory\");\n            goto fail;\n        }\n\n        evp_rc = EVP_PKEY_get_raw_private_key(pkey, (uint8_t *)ed25519,\n                                              &key_len);\n        if (evp_rc != 1) {\n            SSH_LOG(SSH_LOG_TRACE,\n                    \"Failed to get ed25519 raw private key:  %s\",\n                    ERR_error_string(ERR_get_error(), NULL));\n            goto fail;\n        }\n\n        \n        ed25519_pubkey = malloc(ED25519_KEY_LEN);\n        if (ed25519_pubkey == NULL) {\n            SSH_LOG(SSH_LOG_TRACE, \"Out of memory\");\n            goto fail;\n        }\n\n        evp_rc = EVP_PKEY_get_raw_public_key(pkey, (uint8_t *)ed25519_pubkey,\n                                             &key_len);\n        if (evp_rc != 1) {\n            SSH_LOG(SSH_LOG_TRACE,\n                    \"Failed to get ed25519 raw public key:  %s\",\n                    ERR_error_string(ERR_get_error(), NULL));\n            goto fail;\n        }\n        type = SSH_KEYTYPE_ED25519;\n\n    }\n    break;\n    default:\n        SSH_LOG(SSH_LOG_TRACE, \"Unknown or invalid private key type %d\",\n                EVP_PKEY_base_id(pkey));\n        EVP_PKEY_free(pkey);\n        return NULL;\n    }\n\n    key = ssh_key_new();\n    if (key == NULL) {\n        goto fail;\n    }\n\n    key->type = type;\n    key->type_c = ssh_key_type_to_char(type);\n    key->flags = SSH_KEY_FLAG_PRIVATE | SSH_KEY_FLAG_PUBLIC;\n    key->key = pkey;\n    key->ed25519_privkey = ed25519;\n    key->ed25519_pubkey = ed25519_pubkey;\n#ifdef HAVE_OPENSSL_ECC\n    if (is_ecdsa_key_type(key->type)) {\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n        key->ecdsa_nid = pki_key_ecdsa_to_nid(ecdsa);\n#else\n        key->ecdsa_nid = pki_key_ecdsa_to_nid(key->key);\n#endif \n    }\n#endif \n\n    return key;\nfail:\n    EVP_PKEY_free(pkey);\n    ssh_key_free(key);\n    SAFE_FREE(ed25519);\n    SAFE_FREE(ed25519_pubkey);\n    return NULL;\n", "Selected Statement": "if (pkcs11_provider == NULL)", "Function Input": {}, "Variable Values Before Statement": {"pkcs11_provider": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void _ssh_log(int verbosity,\n              const char *function,\n              const char *format, ...)\n{\n    va_list va;\n\n    if (verbosity <= ssh_get_log_level()) {\n        va_start(va, format);\n        ssh_vlog(verbosity, function, format, &va);\n        va_end(va);\n    }\n", "Selected Statement": "if (verbosity <= common->log_verbosity)", "Function Input": {}, "Variable Values Before Statement": {"verbosity": "int", "common->log_verbosity": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "void _ssh_log(int verbosity,\n              const char *function,\n              const char *format, ...)\n{\n    va_list va;\n\n    if (verbosity <= ssh_get_log_level()) {\n        va_start(va, format);\n        ssh_vlog(verbosity, function, format, &va);\n        va_end(va);\n    }\n", "Selected Statement": "if (verbosity <= ssh_get_log_level())", "Function Input": {}, "Variable Values Before Statement": {"verbosity": "int", "ssh_get_log_level": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @return               The newly allocated string, NULL on error.\n */\nstruct ssh_string_struct *ssh_string_new(size_t size)\n{\n    struct ssh_string_struct *str = NULL;\n\n    if (size > STRING_SIZE_MAX) {\n        errno = EINVAL;\n        return NULL;\n    }\n\n    str = malloc(sizeof(struct ssh_string_struct) + size);\n    if (str == NULL) {\n        return NULL;\n    }\n\n    str->size = htonl(size);\n    str->data[0] = 0;\n\n    return str;\n", "Selected Statement": "if (s == NULL)", "Function Input": {}, "Variable Values Before Statement": {"s": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @return               The newly allocated string, NULL on error.\n */\nstruct ssh_string_struct *ssh_string_new(size_t size)\n{\n    struct ssh_string_struct *str = NULL;\n\n    if (size > STRING_SIZE_MAX) {\n        errno = EINVAL;\n        return NULL;\n    }\n\n    str = malloc(sizeof(struct ssh_string_struct) + size);\n    if (str == NULL) {\n        return NULL;\n    }\n\n    str->size = htonl(size);\n    str->data[0] = 0;\n\n    return str;\n", "Selected Statement": "if (size > STRING_SIZE_MAX)", "Function Input": {}, "Variable Values Before Statement": {"size": "0", "STRING_SIZE_MAX": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic int write_rsa_hostkey(const char *rsakey_path)\n{\n    FILE *fp = NULL;\n    size_t nwritten;\n\n    fp = fopen(rsakey_path, \"wb\");\n    if (fp == NULL) {\n        return -1;\n    }\n\n    nwritten = fwrite(kRSAPrivateKeyPEM, 1, strlen(kRSAPrivateKeyPEM), fp);\n    fclose(fp);\n\n    if (nwritten != strlen(kRSAPrivateKeyPEM)) {\n        return -1;\n    }\n\n    return 0;\n}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n    int socket_fds[2] = {-1, -1};\n    ssize_t nwritten;\n    bool no = false;\n    const char *env = NULL;\n    int rc;\n\n    \n    struct session_data_struct sdata = {\n        .channel       = NULL,\n        .auth_attempts = 0,\n        .authenticated = false,\n    };\n\n    struct ssh_server_callbacks_struct server_cb = {\n        .userdata = &sdata,\n        .auth_none_function = auth_none,\n        .channel_open_request_session_function = channel_open,\n    };\n\n    \n    if (size > 219264) {\n        return -1;\n    }\n\n    \n", "Selected Statement": "if (fp == NULL)", "Function Input": {}, "Variable Values Before Statement": {"fp": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic int write_rsa_hostkey(const char *rsakey_path)\n{\n    FILE *fp = NULL;\n    size_t nwritten;\n\n    fp = fopen(rsakey_path, \"wb\");\n    if (fp == NULL) {\n        return -1;\n    }\n\n    nwritten = fwrite(kRSAPrivateKeyPEM, 1, strlen(kRSAPrivateKeyPEM), fp);\n    fclose(fp);\n\n    if (nwritten != strlen(kRSAPrivateKeyPEM)) {\n        return -1;\n    }\n\n    return 0;\n}\n\nint LLVMFuzzerTestOneInput(const uint8_t *data, size_t size)\n{\n    int socket_fds[2] = {-1, -1};\n    ssize_t nwritten;\n    bool no = false;\n    const char *env = NULL;\n    int rc;\n\n    \n    struct session_data_struct sdata = {\n        .channel       = NULL,\n        .auth_attempts = 0,\n        .authenticated = false,\n    };\n\n    struct ssh_server_callbacks_struct server_cb = {\n        .userdata = &sdata,\n        .auth_none_function = auth_none,\n        .channel_open_request_session_function = channel_open,\n    };\n\n    \n    if (size > 219264) {\n        return -1;\n    }\n\n    \n", "Selected Statement": "if (env != NULL && strlen(env) > 0)", "Function Input": {}, "Variable Values Before Statement": {"env": "NULL", "strlen": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    return s;\n}\n\nssh_bind ssh_bind_new(void) {\n    ssh_bind ptr;\n\n    ptr = calloc(1, sizeof(struct ssh_bind_struct));\n    if (ptr == NULL) {\n        return NULL;\n    }\n    ptr->bindfd = SSH_INVALID_SOCKET;\n    ptr->bindport = 22;\n    ptr->common.log_verbosity = 0;\n\n    return ptr;\n", "Selected Statement": "if (sshbind->ed25519 != NULL)", "Function Input": {}, "Variable Values Before Statement": {"sshbind->ed25519": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @returns             A new ssh_session pointer, NULL on error.\n */\nssh_session ssh_new(void)\n{\n    ssh_session session;\n    char *id = NULL;\n    int rc;\n\n    session = calloc(1, sizeof (struct ssh_session_struct));\n    if (session == NULL) {\n        return NULL;\n    }\n\n    session->next_crypto = crypto_new();\n    if (session->next_crypto == NULL) {\n        goto err;\n    }\n\n    session->socket = ssh_socket_new(session);\n    if (session->socket == NULL) {\n        goto err;\n    }\n\n    session->out_buffer = ssh_buffer_new();\n    if (session->out_buffer == NULL) {\n        goto err;\n    }\n\n    session->in_buffer = ssh_buffer_new();\n    if (session->in_buffer == NULL) {\n        goto err;\n    }\n\n    session->out_queue = ssh_list_new();\n    if (session->out_queue == NULL) {\n        goto err;\n    }\n\n    session->alive = 0;\n    session->auth.supported_methods = 0;\n    ssh_set_blocking(session, 1);\n    session->maxchannel = FIRST_CHANNEL;\n\n    session->agent = ssh_agent_new(session);\n    if (session->agent == NULL) {\n        goto err;\n    }\n\n    \n    session->opts.StrictHostKeyChecking = 1;\n    session->opts.port = 22;\n    session->opts.fd = -1;\n    session->opts.compressionlevel = 7;\n    session->opts.nodelay = 0;\n    session->opts.identities_only = false;\n    session->opts.control_master = SSH_CONTROL_MASTER_NO;\n\n    session->opts.flags = SSH_OPT_FLAG_PASSWORD_AUTH |\n                          SSH_OPT_FLAG_PUBKEY_AUTH |\n                          SSH_OPT_FLAG_KBDINT_AUTH |\n                          SSH_OPT_FLAG_GSSAPI_AUTH;\n\n    session->opts.exp_flags = 0;\n\n    session->opts.identity = ssh_list_new();\n    if (session->opts.identity == NULL) {\n        goto err;\n    }\n    session->opts.identity_non_exp = ssh_list_new();\n    if (session->opts.identity_non_exp == NULL) {\n        goto err;\n    }\n\n    session->opts.certificate = ssh_list_new();\n    if (session->opts.certificate == NULL) {\n        goto err;\n    }\n    session->opts.certificate_non_exp = ssh_list_new();\n    if (session->opts.certificate_non_exp == NULL) {\n        goto err;\n    }\n    \n\n    id = strdup(\"%d/id_ed25519\");\n    if (id == NULL) {\n        goto err;\n    }\n\n    rc = ssh_list_append(session->opts.identity_non_exp, id);\n    if (rc == SSH_ERROR) {\n        goto err;\n    }\n\n#ifdef HAVE_ECC\n    id = strdup(\"%d/id_ecdsa\");\n    if (id == NULL) {\n        goto err;\n    }\n    rc = ssh_list_append(session->opts.identity_non_exp, id);\n    if (rc == SSH_ERROR) {\n        goto err;\n    }\n#endif\n\n    id = strdup(\"%d/id_rsa\");\n    if (id == NULL) {\n        goto err;\n    }\n    rc = ssh_list_append(session->opts.identity_non_exp, id);\n    if (rc == SSH_ERROR) {\n        goto err;\n    }\n\n    \n    session->session_state = SSH_SESSION_STATE_NONE;\n    session->pending_call_state = SSH_PENDING_CALL_NONE;\n    session->packet_state = PACKET_STATE_INIT;\n    session->dh_handshake_state = DH_STATE_INIT;\n    session->global_req_state = SSH_CHANNEL_REQ_STATE_NONE;\n\n    session->auth.state = SSH_AUTH_STATE_NONE;\n    session->auth.service_state = SSH_AUTH_SERVICE_NONE;\n\n    return session;\n\nerr:\n    free(id);\n    ssh_free(session);\n    return NULL;\n", "Selected Statement": "if (ret == SSH_ERROR)", "Function Input": {}, "Variable Values Before Statement": {"ret": "NULL", "SSH_ERROR": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstruct ssh_crypto_struct *crypto_new(void)\n{\n    struct ssh_crypto_struct *crypto;\n\n    crypto = malloc(sizeof(struct ssh_crypto_struct));\n    if (crypto == NULL) {\n        return NULL;\n    }\n    ZERO_STRUCTP(crypto);\n    return crypto;\n", "Selected Statement": "if (direction == SSH_DIRECTION_IN)", "Function Input": {}, "Variable Values Before Statement": {"direction": "NULL", "SSH_DIRECTION_IN": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstruct ssh_crypto_struct *crypto_new(void)\n{\n    struct ssh_crypto_struct *crypto;\n\n    crypto = malloc(sizeof(struct ssh_crypto_struct));\n    if (crypto == NULL) {\n        return NULL;\n    }\n    ZERO_STRUCTP(crypto);\n    return crypto;\n", "Selected Statement": "if (session->next_crypto->out_cipher->aead_encrypt != NULL)", "Function Input": {}, "Variable Values Before Statement": {"session->next_crypto->out_cipher->aead_encrypt": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * \\brief creates a new Socket object\n */\nssh_socket ssh_socket_new(ssh_session session)\n{\n    ssh_socket s;\n\n    s = calloc(1, sizeof(struct ssh_socket_struct));\n    if (s == NULL) {\n        ssh_set_error_oom(session);\n        return NULL;\n    }\n    s->fd = SSH_INVALID_SOCKET;\n    s->last_errno = -1;\n    s->fd_is_socket = 1;\n    s->session = session;\n    s->in_buffer = ssh_buffer_new();\n    if (s->in_buffer == NULL) {\n        ssh_set_error_oom(session);\n        SAFE_FREE(s);\n        return NULL;\n    }\n    s->out_buffer=ssh_buffer_new();\n    if (s->out_buffer == NULL) {\n        ssh_set_error_oom(session);\n        SSH_BUFFER_FREE(s->in_buffer);\n        SAFE_FREE(s);\n        return NULL;\n    }\n    s->read_wontblock = 0;\n    s->write_wontblock = 0;\n    s->data_except = 0;\n    s->poll_handle = NULL;\n    s->state=SSH_SOCKET_NONE;\n    return s;\n", "Selected Statement": "if (rc < 0)", "Function Input": {}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * \\brief creates a new Socket object\n */\nssh_socket ssh_socket_new(ssh_session session)\n{\n    ssh_socket s;\n\n    s = calloc(1, sizeof(struct ssh_socket_struct));\n    if (s == NULL) {\n        ssh_set_error_oom(session);\n        return NULL;\n    }\n    s->fd = SSH_INVALID_SOCKET;\n    s->last_errno = -1;\n    s->fd_is_socket = 1;\n    s->session = session;\n    s->in_buffer = ssh_buffer_new();\n    if (s->in_buffer == NULL) {\n        ssh_set_error_oom(session);\n        SAFE_FREE(s);\n        return NULL;\n    }\n    s->out_buffer=ssh_buffer_new();\n    if (s->out_buffer == NULL) {\n        ssh_set_error_oom(session);\n        SSH_BUFFER_FREE(s->in_buffer);\n        SAFE_FREE(s);\n        return NULL;\n    }\n    s->read_wontblock = 0;\n    s->write_wontblock = 0;\n    s->data_except = 0;\n    s->poll_handle = NULL;\n    s->state=SSH_SOCKET_NONE;\n    return s;\n", "Selected Statement": "if (h == NULL)", "Function Input": {}, "Variable Values Before Statement": {"h": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    }\n}\n\nssh_agent ssh_agent_new(struct ssh_session_struct *session) {\n  ssh_agent agent = NULL;\n\n  agent = malloc(sizeof(struct ssh_agent_struct));\n  if (agent == NULL) {\n    return NULL;\n  }\n  ZERO_STRUCTP(agent);\n\n  agent->count = 0;\n  agent->sock = ssh_socket_new(session);\n  if (agent->sock == NULL) {\n    SAFE_FREE(agent);\n    return NULL;\n  }\n  agent->channel = NULL;\n  return agent;\n", "Selected Statement": "if (rc < 0)", "Function Input": {"agent": {"value": "0x510b29 <ssh_set_blocking+105>"}}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "    }\n}\n\nssh_agent ssh_agent_new(struct ssh_session_struct *session) {\n  ssh_agent agent = NULL;\n\n  agent = malloc(sizeof(struct ssh_agent_struct));\n  if (agent == NULL) {\n    return NULL;\n  }\n  ZERO_STRUCTP(agent);\n\n  agent->count = 0;\n  agent->sock = ssh_socket_new(session);\n  if (agent->sock == NULL) {\n    SAFE_FREE(agent);\n    return NULL;\n  }\n  agent->channel = NULL;\n  return agent;\n", "Selected Statement": "if (atomicio(session->agent, payload, 4, 0) == 4)", "Function Input": {"agent": {"value": "0x510b29 <ssh_set_blocking+105>"}}, "Variable Values Before Statement": {"atomicio": "NULL", "session->agent": "NULL", "payload": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nchar *ssh_keep_known_algos(enum ssh_kex_types_e algo, const char *list)\n{\n    if (algo > SSH_LANG_S_C) {\n        return NULL;\n    }\n\n    return ssh_find_all_matching(supported_methods[algo], list);\n", "Selected Statement": "if (ok)", "Function Input": {}, "Variable Values Before Statement": {"ok": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nchar *ssh_keep_known_algos(enum ssh_kex_types_e algo, const char *list)\n{\n    if (algo > SSH_LANG_S_C) {\n        return NULL;\n    }\n\n    return ssh_find_all_matching(supported_methods[algo], list);\n", "Selected Statement": "if (kex_name == NULL)", "Function Input": {}, "Variable Values Before Statement": {"kex_name": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nchar *ssh_find_all_matching(const char *available_list,\n                            const char *preferred_list)\n{\n    struct ssh_tokens_st *a_tok = NULL, *p_tok = NULL;\n    int i, j;\n    char *ret = NULL;\n    size_t max, len, pos = 0;\n    int match;\n\n    if ((available_list == NULL) || (preferred_list == NULL)) {\n        return NULL;\n    }\n\n    max = MAX(strlen(available_list), strlen(preferred_list));\n\n    ret = calloc(1, max + 1);\n    if (ret == NULL) {\n        return NULL;\n    }\n\n    a_tok = ssh_tokenize(available_list, ',');\n    if (a_tok == NULL) {\n        SAFE_FREE(ret);\n        goto out;\n    }\n\n    p_tok = ssh_tokenize(preferred_list, ',');\n    if (p_tok == NULL) {\n        SAFE_FREE(ret);\n        goto out;\n    }\n\n    for (i = 0; p_tok->tokens[i] ; i++) {\n        for (j = 0; a_tok->tokens[j]; j++) {\n            match = !strcmp(a_tok->tokens[j], p_tok->tokens[i]);\n            if (match) {\n                if (pos != 0) {\n                    ret[pos] = ',';\n                    pos++;\n                }\n\n                len = strlen(a_tok->tokens[j]);\n                memcpy(&ret[pos], a_tok->tokens[j], len);\n                pos += len;\n                ret[pos] = '\\0';\n            }\n        }\n    }\n\n    if (ret[0] == '\\0') {\n        SAFE_FREE(ret);\n    }\n\nout:\n    ssh_tokens_free(a_tok);\n    ssh_tokens_free(p_tok);\n    return ret;\n", "Selected Statement": "if (match)", "Function Input": {}, "Variable Values Before Statement": {"match": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nchar *ssh_find_all_matching(const char *available_list,\n                            const char *preferred_list)\n{\n    struct ssh_tokens_st *a_tok = NULL, *p_tok = NULL;\n    int i, j;\n    char *ret = NULL;\n    size_t max, len, pos = 0;\n    int match;\n\n    if ((available_list == NULL) || (preferred_list == NULL)) {\n        return NULL;\n    }\n\n    max = MAX(strlen(available_list), strlen(preferred_list));\n\n    ret = calloc(1, max + 1);\n    if (ret == NULL) {\n        return NULL;\n    }\n\n    a_tok = ssh_tokenize(available_list, ',');\n    if (a_tok == NULL) {\n        SAFE_FREE(ret);\n        goto out;\n    }\n\n    p_tok = ssh_tokenize(preferred_list, ',');\n    if (p_tok == NULL) {\n        SAFE_FREE(ret);\n        goto out;\n    }\n\n    for (i = 0; p_tok->tokens[i] ; i++) {\n        for (j = 0; a_tok->tokens[j]; j++) {\n            match = !strcmp(a_tok->tokens[j], p_tok->tokens[i]);\n            if (match) {\n                if (pos != 0) {\n                    ret[pos] = ',';\n                    pos++;\n                }\n\n                len = strlen(a_tok->tokens[j]);\n                memcpy(&ret[pos], a_tok->tokens[j], len);\n                pos += len;\n                ret[pos] = '\\0';\n            }\n        }\n    }\n\n    if (ret[0] == '\\0') {\n        SAFE_FREE(ret);\n    }\n\nout:\n    ssh_tokens_free(a_tok);\n    ssh_tokens_free(p_tok);\n    return ret;\n", "Selected Statement": "if (tokens == NULL)", "Function Input": {}, "Variable Values Before Statement": {"tokens": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nchar *ssh_find_all_matching(const char *available_list,\n                            const char *preferred_list)\n{\n    struct ssh_tokens_st *a_tok = NULL, *p_tok = NULL;\n    int i, j;\n    char *ret = NULL;\n    size_t max, len, pos = 0;\n    int match;\n\n    if ((available_list == NULL) || (preferred_list == NULL)) {\n        return NULL;\n    }\n\n    max = MAX(strlen(available_list), strlen(preferred_list));\n\n    ret = calloc(1, max + 1);\n    if (ret == NULL) {\n        return NULL;\n    }\n\n    a_tok = ssh_tokenize(available_list, ',');\n    if (a_tok == NULL) {\n        SAFE_FREE(ret);\n        goto out;\n    }\n\n    p_tok = ssh_tokenize(preferred_list, ',');\n    if (p_tok == NULL) {\n        SAFE_FREE(ret);\n        goto out;\n    }\n\n    for (i = 0; p_tok->tokens[i] ; i++) {\n        for (j = 0; a_tok->tokens[j]; j++) {\n            match = !strcmp(a_tok->tokens[j], p_tok->tokens[i]);\n            if (match) {\n                if (pos != 0) {\n                    ret[pos] = ',';\n                    pos++;\n                }\n\n                len = strlen(a_tok->tokens[j]);\n                memcpy(&ret[pos], a_tok->tokens[j], len);\n                pos += len;\n                ret[pos] = '\\0';\n            }\n        }\n    }\n\n    if (ret[0] == '\\0') {\n        SAFE_FREE(ret);\n    }\n\nout:\n    ssh_tokens_free(a_tok);\n    ssh_tokens_free(p_tok);\n    return ret;\n", "Selected Statement": "if (list != NULL)", "Function Input": {}, "Variable Values Before Statement": {"list": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n\nint ssh_set_server_callbacks(ssh_session session, ssh_server_callbacks cb){\n\tif (session == NULL || cb == NULL) {\n\t\treturn SSH_ERROR;\n\t}\n\n    if (is_callback_valid(session, cb)) {\n        ssh_set_error(session,\n                      SSH_FATAL,\n                      \"Invalid callback passed in (badly initialized)\");\n        return SSH_ERROR;\n    };\n\tsession->server_callbacks = cb;\n\n\treturn 0;\n", "Selected Statement": "if (is_callback_valid(session, cb))", "Function Input": {}, "Variable Values Before Statement": {"is_callback_valid": "NULL", "session": "NULL", "cb": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\n\nint ssh_set_server_callbacks(ssh_session session, ssh_server_callbacks cb){\n\tif (session == NULL || cb == NULL) {\n\t\treturn SSH_ERROR;\n\t}\n\n    if (is_callback_valid(session, cb)) {\n        ssh_set_error(session,\n                      SSH_FATAL,\n                      \"Invalid callback passed in (badly initialized)\");\n        return SSH_ERROR;\n    };\n\tsession->server_callbacks = cb;\n\n\treturn 0;\n", "Selected Statement": "if (channel == NULL || cb == NULL)", "Function Input": {}, "Variable Values Before Statement": {"channel": "NULL", "cb": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nssh_poll_handle\nssh_poll_new(socket_t fd, short events, ssh_poll_callback cb, void *userdata)\n{\n    ssh_poll_handle p;\n\n    p = malloc(sizeof(struct ssh_poll_handle_struct));\n    if (p == NULL) {\n        return NULL;\n    }\n    ZERO_STRUCTP(p);\n\n    p->x.fd = fd;\n    p->events = events;\n    p->cb = cb;\n    p->cb_data = userdata;\n\n    return p;\n", "Selected Statement": "if (rc < 0)", "Function Input": {}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nssh_poll_handle\nssh_poll_new(socket_t fd, short events, ssh_poll_callback cb, void *userdata)\n{\n    ssh_poll_handle p;\n\n    p = malloc(sizeof(struct ssh_poll_handle_struct));\n    if (p == NULL) {\n        return NULL;\n    }\n    ZERO_STRUCTP(p);\n\n    p->x.fd = fd;\n    p->events = events;\n    p->cb = cb;\n    p->cb_data = userdata;\n\n    return p;\n", "Selected Statement": "if (ctx->polls_used > 0 && ctx->polls_used != i)", "Function Input": {}, "Variable Values Before Statement": {"ctx->polls_used": "NULL", "i": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static int libcrypto_initialized = 0;\n\n\nvoid ssh_reseed(void){\n#ifndef _WIN32\n    struct timeval tv;\n    gettimeofday(&tv, NULL);\n    RAND_add(&tv, sizeof(tv), 0.0);\n#endif\n", "Selected Statement": "if (!libcrypto_initialized)", "Function Input": {}, "Variable Values Before Statement": {"libcrypto_initialized": "int"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static int libcrypto_initialized = 0;\n\n\nvoid ssh_reseed(void){\n#ifndef _WIN32\n    struct timeval tv;\n    gettimeofday(&tv, NULL);\n    RAND_add(&tv, sizeof(tv), 0.0);\n#endif\n", "Selected Statement": "if (ctx == NULL)", "Function Input": {}, "Variable Values Before Statement": {"ctx": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @return 0 on success, < 0 on error.\n */\nint ssh_send_banner(ssh_session session, int server)\n{\n    const char *banner = CLIENT_BANNER_SSH2;\n    const char *terminator = \"\\r\\n\";\n    \n    char buffer[256] = {0};\n    size_t len;\n    int rc = SSH_ERROR;\n\n    if (server == 1) {\n        if (session->opts.custombanner == NULL){\n            session->serverbanner = strdup(banner);\n            if (session->serverbanner == NULL) {\n                goto end;\n            }\n        } else {\n            len = strlen(session->opts.custombanner);\n            session->serverbanner = malloc(len + 8 + 1);\n            if(session->serverbanner == NULL) {\n                goto end;\n            }\n            snprintf(session->serverbanner,\n                     len + 8 + 1,\n                     \"SSH-2.0-%s\",\n                     session->opts.custombanner);\n        }\n\n        snprintf(buffer,\n                 sizeof(buffer),\n                 \"%s%s\",\n                 session->serverbanner,\n                 terminator);\n    } else {\n        session->clientbanner = strdup(banner);\n        if (session->clientbanner == NULL) {\n            goto end;\n        }\n\n        snprintf(buffer,\n                 sizeof(buffer),\n                 \"%s%s\",\n                 session->clientbanner,\n                 terminator);\n    }\n\n    rc = ssh_socket_write(session->socket, buffer, strlen(buffer));\n    if (rc == SSH_ERROR) {\n        goto end;\n    }\n#ifdef WITH_PCAP\n    if (session->pcap_ctx != NULL) {\n        ssh_pcap_context_write(session->pcap_ctx,\n                               SSH_PCAP_DIR_OUT,\n                               buffer,\n                               strlen(buffer),\n                               strlen(buffer));\n    }\n#endif\n\n    rc = SSH_OK;\nend:\n", "Selected Statement": "if (session->opts.custombanner == NULL)", "Function Input": {}, "Variable Values Before Statement": {"session->opts.custombanner": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @return 0 on success, < 0 on error.\n */\nint ssh_send_banner(ssh_session session, int server)\n{\n    const char *banner = CLIENT_BANNER_SSH2;\n    const char *terminator = \"\\r\\n\";\n    \n    char buffer[256] = {0};\n    size_t len;\n    int rc = SSH_ERROR;\n\n    if (server == 1) {\n        if (session->opts.custombanner == NULL){\n            session->serverbanner = strdup(banner);\n            if (session->serverbanner == NULL) {\n                goto end;\n            }\n        } else {\n            len = strlen(session->opts.custombanner);\n            session->serverbanner = malloc(len + 8 + 1);\n            if(session->serverbanner == NULL) {\n                goto end;\n            }\n            snprintf(session->serverbanner,\n                     len + 8 + 1,\n                     \"SSH-2.0-%s\",\n                     session->opts.custombanner);\n        }\n\n        snprintf(buffer,\n                 sizeof(buffer),\n                 \"%s%s\",\n                 session->serverbanner,\n                 terminator);\n    } else {\n        session->clientbanner = strdup(banner);\n        if (session->clientbanner == NULL) {\n            goto end;\n        }\n\n        snprintf(buffer,\n                 sizeof(buffer),\n                 \"%s%s\",\n                 session->clientbanner,\n                 terminator);\n    }\n\n    rc = ssh_socket_write(session->socket, buffer, strlen(buffer));\n    if (rc == SSH_ERROR) {\n        goto end;\n    }\n#ifdef WITH_PCAP\n    if (session->pcap_ctx != NULL) {\n        ssh_pcap_context_write(session->pcap_ctx,\n                               SSH_PCAP_DIR_OUT,\n                               buffer,\n                               strlen(buffer),\n                               strlen(buffer));\n    }\n#endif\n\n    rc = SSH_OK;\nend:\n", "Selected Statement": "if (rc < 0)", "Function Input": {}, "Variable Values Before Statement": {"rc": "int"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @return 0 on success, < 0 on error.\n */\nint ssh_send_banner(ssh_session session, int server)\n{\n    const char *banner = CLIENT_BANNER_SSH2;\n    const char *terminator = \"\\r\\n\";\n    \n    char buffer[256] = {0};\n    size_t len;\n    int rc = SSH_ERROR;\n\n    if (server == 1) {\n        if (session->opts.custombanner == NULL){\n            session->serverbanner = strdup(banner);\n            if (session->serverbanner == NULL) {\n                goto end;\n            }\n        } else {\n            len = strlen(session->opts.custombanner);\n            session->serverbanner = malloc(len + 8 + 1);\n            if(session->serverbanner == NULL) {\n                goto end;\n            }\n            snprintf(session->serverbanner,\n                     len + 8 + 1,\n                     \"SSH-2.0-%s\",\n                     session->opts.custombanner);\n        }\n\n        snprintf(buffer,\n                 sizeof(buffer),\n                 \"%s%s\",\n                 session->serverbanner,\n                 terminator);\n    } else {\n        session->clientbanner = strdup(banner);\n        if (session->clientbanner == NULL) {\n            goto end;\n        }\n\n        snprintf(buffer,\n                 sizeof(buffer),\n                 \"%s%s\",\n                 session->clientbanner,\n                 terminator);\n    }\n\n    rc = ssh_socket_write(session->socket, buffer, strlen(buffer));\n    if (rc == SSH_ERROR) {\n        goto end;\n    }\n#ifdef WITH_PCAP\n    if (session->pcap_ctx != NULL) {\n        ssh_pcap_context_write(session->pcap_ctx,\n                               SSH_PCAP_DIR_OUT,\n                               buffer,\n                               strlen(buffer),\n                               strlen(buffer));\n    }\n#endif\n\n    rc = SSH_OK;\nend:\n", "Selected Statement": "if (server == 1)", "Function Input": {}, "Variable Values Before Statement": {"server": "int"}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @return 0 on success, < 0 on error.\n */\nint ssh_send_banner(ssh_session session, int server)\n{\n    const char *banner = CLIENT_BANNER_SSH2;\n    const char *terminator = \"\\r\\n\";\n    \n    char buffer[256] = {0};\n    size_t len;\n    int rc = SSH_ERROR;\n\n    if (server == 1) {\n        if (session->opts.custombanner == NULL){\n            session->serverbanner = strdup(banner);\n            if (session->serverbanner == NULL) {\n                goto end;\n            }\n        } else {\n            len = strlen(session->opts.custombanner);\n            session->serverbanner = malloc(len + 8 + 1);\n            if(session->serverbanner == NULL) {\n                goto end;\n            }\n            snprintf(session->serverbanner,\n                     len + 8 + 1,\n                     \"SSH-2.0-%s\",\n                     session->opts.custombanner);\n        }\n\n        snprintf(buffer,\n                 sizeof(buffer),\n                 \"%s%s\",\n                 session->serverbanner,\n                 terminator);\n    } else {\n        session->clientbanner = strdup(banner);\n        if (session->clientbanner == NULL) {\n            goto end;\n        }\n\n        snprintf(buffer,\n                 sizeof(buffer),\n                 \"%s%s\",\n                 session->clientbanner,\n                 terminator);\n    }\n\n    rc = ssh_socket_write(session->socket, buffer, strlen(buffer));\n    if (rc == SSH_ERROR) {\n        goto end;\n    }\n#ifdef WITH_PCAP\n    if (session->pcap_ctx != NULL) {\n        ssh_pcap_context_write(session->pcap_ctx,\n                               SSH_PCAP_DIR_OUT,\n                               buffer,\n                               strlen(buffer),\n                               strlen(buffer));\n    }\n#endif\n\n    rc = SSH_OK;\nend:\n", "Selected Statement": "if (session->current_crypto)", "Function Input": {}, "Variable Values Before Statement": {"session->current_crypto": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nint\nssh_get_random(void *where, int len, int strong)\n{\n#ifdef HAVE_OPENSSL_RAND_PRIV_BYTES\n    if (strong) {\n        \n        return !!RAND_priv_bytes(where, len);\n    }\n#else\n    (void)strong;\n#endif \n\n    \n", "Selected Statement": "if (strong)", "Function Input": {"len": {"value": "0"}, "strong": {"value": "19255376"}, "where": {"value": null}}, "Variable Values Before Statement": {"strong": "int"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                    int code,\n                    const char *function,\n                    const char *descr, ...)\n{\n    struct ssh_common_struct *err = error;\n    va_list va;\n\n    va_start(va, descr);\n    vsnprintf(err->error.error_buffer, ERROR_BUFFERLEN, descr, va);\n    va_end(va);\n\n    err->error.error_code = code;\n    if (ssh_get_log_level() == SSH_LOG_TRACE) {\n        ssh_log_function(SSH_LOG_TRACE,\n                         function,\n                         err->error.error_buffer);\n    }\n", "Selected Statement": "if (ssh_get_log_level() == SSH_LOG_TRACE)", "Function Input": {"code": {"value": "0"}, "descr": {"value": "0x7ffff7e1c8a0 \"\""}, "error": {"value": null}, "function": {"value": "0x733100 \"Socket exception callback: %d (%d)\""}}, "Variable Values Before Statement": {"ssh_get_log_level": "NULL", "SSH_LOG_TRACE": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid ssh_dh_cleanup(struct ssh_crypto_struct *crypto)\n{\n    if (crypto->dh_ctx != NULL) {\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n        DH_free(crypto->dh_ctx->keypair[0]);\n        DH_free(crypto->dh_ctx->keypair[1]);\n#else\n        EVP_PKEY_free(crypto->dh_ctx->keypair[0]);\n        EVP_PKEY_free(crypto->dh_ctx->keypair[1]);\n#endif \n        free(crypto->dh_ctx);\n        crypto->dh_ctx = NULL;\n    }\n", "Selected Statement": "if (rc != 1)", "Function Input": {}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid ssh_dh_cleanup(struct ssh_crypto_struct *crypto)\n{\n    if (crypto->dh_ctx != NULL) {\n#if OPENSSL_VERSION_NUMBER < 0x30000000L\n        DH_free(crypto->dh_ctx->keypair[0]);\n        DH_free(crypto->dh_ctx->keypair[1]);\n#else\n        EVP_PKEY_free(crypto->dh_ctx->keypair[0]);\n        EVP_PKEY_free(crypto->dh_ctx->keypair[1]);\n#endif \n        free(crypto->dh_ctx);\n        crypto->dh_ctx = NULL;\n    }\n", "Selected Statement": "if (priv)", "Function Input": {}, "Variable Values Before Statement": {"priv": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid ssh_agent_state_free(void *data)\n{\n    struct ssh_agent_state_struct *state = data;\n\n    if (state) {\n        SSH_STRING_FREE_CHAR(state->comment);\n        ssh_key_free(state->pubkey);\n        free (state);\n    }\n", "Selected Statement": "if (session == NULL)", "Function Input": {}, "Variable Values Before Statement": {"session": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nvoid ssh_agent_state_free(void *data)\n{\n    struct ssh_agent_state_struct *state = data;\n\n    if (state) {\n        SSH_STRING_FREE_CHAR(state->comment);\n        ssh_key_free(state->pubkey);\n        free (state);\n    }\n", "Selected Statement": "if (rc == SSH_ERROR)", "Function Input": {}, "Variable Values Before Statement": {"rc": "NULL", "SSH_ERROR": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid ssh_packet_register_socket_callback(ssh_session session, ssh_socket s)\n{\n    struct ssh_socket_callbacks_struct *callbacks = &session->socket_callbacks;\n\n    callbacks->data = ssh_packet_socket_callback;\n    callbacks->connected = NULL;\n    callbacks->controlflow = ssh_packet_socket_controlflow_callback;\n    callbacks->userdata = session;\n    ssh_socket_set_callbacks(s, callbacks);\n", "Selected Statement": "if (session->client)", "Function Input": {"session": {"value": "0x222ed1fd0aa1f200"}}, "Variable Values Before Statement": {"session->client": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid ssh_packet_register_socket_callback(ssh_session session, ssh_socket s)\n{\n    struct ssh_socket_callbacks_struct *callbacks = &session->socket_callbacks;\n\n    callbacks->data = ssh_packet_socket_callback;\n    callbacks->connected = NULL;\n    callbacks->controlflow = ssh_packet_socket_controlflow_callback;\n    callbacks->userdata = session;\n    ssh_socket_set_callbacks(s, callbacks);\n", "Selected Statement": "if (rc < 0)", "Function Input": {"session": {"value": "0x222ed1fd0aa1f200"}}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nunsigned char *ssh_packet_encrypt(ssh_session session, void *data, size_t len)\n{\n  struct ssh_crypto_struct *crypto = NULL;\n  struct ssh_cipher_struct *cipher = NULL;\n  HMACCTX ctx = NULL;\n  char *out = NULL;\n  int etm_packet_offset = 0, rc;\n  unsigned int blocksize;\n  size_t finallen = DIGEST_MAX_LEN;\n  uint32_t seq, lenfield_blocksize;\n  enum ssh_hmac_e type;\n  bool etm;\n\n  assert(len);\n\n  crypto = ssh_packet_get_current_crypto(session, SSH_DIRECTION_OUT);\n  if (crypto == NULL) {\n      return NULL; \n  }\n\n  blocksize = crypto->out_cipher->blocksize;\n  lenfield_blocksize = crypto->out_cipher->lenfield_blocksize;\n\n  type = crypto->out_hmac;\n  etm = crypto->out_hmac_etm;\n\n  if (etm) {\n      etm_packet_offset = sizeof(uint32_t);\n  }\n\n  if ((len - lenfield_blocksize - etm_packet_offset) % blocksize != 0) {\n      ssh_set_error(session, SSH_FATAL, \"Cryptographic functions must be set\"\n                    \" on at least one blocksize (received %zu)\", len);\n      return NULL;\n  }\n  out = calloc(1, len);\n  if (out == NULL) {\n    return NULL;\n  }\n\n  seq = ntohl(session->send_seq);\n  cipher = crypto->out_cipher;\n\n  if (cipher->aead_encrypt != NULL) {\n      cipher->aead_encrypt(cipher, data, out, len,\n            crypto->hmacbuf, session->send_seq);\n      memcpy(data, out, len);\n  } else {\n      if (type != SSH_HMAC_NONE) {\n          ctx = hmac_init(crypto->encryptMAC, hmac_digest_len(type), type);\n          if (ctx == NULL) {\n              SAFE_FREE(out);\n              return NULL;\n          }\n\n          if (!etm) {\n              rc = hmac_update(ctx, (unsigned char *)&seq, sizeof(uint32_t));\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n              rc = hmac_update(ctx, data, len);\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n              rc = hmac_final(ctx, crypto->hmacbuf, &finallen);\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n          }\n      }\n\n      cipher->encrypt(cipher, (uint8_t*)data + etm_packet_offset, out, len - etm_packet_offset);\n      memcpy((uint8_t*)data + etm_packet_offset, out, len - etm_packet_offset);\n\n      if (type != SSH_HMAC_NONE) {\n          if (etm) {\n              PUSH_BE_U32(data, 0, len - etm_packet_offset);\n              rc = hmac_update(ctx, (unsigned char *)&seq, sizeof(uint32_t));\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n              rc = hmac_update(ctx, data, len);\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n              rc = hmac_final(ctx, crypto->hmacbuf, &finallen);\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n          }\n#ifdef DEBUG_CRYPTO\n          ssh_log_hexdump(\"mac: \", data, len);\n          if (finallen != hmac_digest_len(type)) {\n              printf(\"Final len is %zu\\n\", finallen);\n          }\n          ssh_log_hexdump(\"Packet hmac\", crypto->hmacbuf, hmac_digest_len(type));\n#endif\n      }\n  }\n  explicit_bzero(out, len);\n  SAFE_FREE(out);\n\n  return crypto->hmacbuf;\n", "Selected Statement": "if (cipher->aead_encrypt != NULL)", "Function Input": {"session": {"value": "0x7fffffffd4a0"}}, "Variable Values Before Statement": {"cipher->aead_encrypt": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nunsigned char *ssh_packet_encrypt(ssh_session session, void *data, size_t len)\n{\n  struct ssh_crypto_struct *crypto = NULL;\n  struct ssh_cipher_struct *cipher = NULL;\n  HMACCTX ctx = NULL;\n  char *out = NULL;\n  int etm_packet_offset = 0, rc;\n  unsigned int blocksize;\n  size_t finallen = DIGEST_MAX_LEN;\n  uint32_t seq, lenfield_blocksize;\n  enum ssh_hmac_e type;\n  bool etm;\n\n  assert(len);\n\n  crypto = ssh_packet_get_current_crypto(session, SSH_DIRECTION_OUT);\n  if (crypto == NULL) {\n      return NULL; \n  }\n\n  blocksize = crypto->out_cipher->blocksize;\n  lenfield_blocksize = crypto->out_cipher->lenfield_blocksize;\n\n  type = crypto->out_hmac;\n  etm = crypto->out_hmac_etm;\n\n  if (etm) {\n      etm_packet_offset = sizeof(uint32_t);\n  }\n\n  if ((len - lenfield_blocksize - etm_packet_offset) % blocksize != 0) {\n      ssh_set_error(session, SSH_FATAL, \"Cryptographic functions must be set\"\n                    \" on at least one blocksize (received %zu)\", len);\n      return NULL;\n  }\n  out = calloc(1, len);\n  if (out == NULL) {\n    return NULL;\n  }\n\n  seq = ntohl(session->send_seq);\n  cipher = crypto->out_cipher;\n\n  if (cipher->aead_encrypt != NULL) {\n      cipher->aead_encrypt(cipher, data, out, len,\n            crypto->hmacbuf, session->send_seq);\n      memcpy(data, out, len);\n  } else {\n      if (type != SSH_HMAC_NONE) {\n          ctx = hmac_init(crypto->encryptMAC, hmac_digest_len(type), type);\n          if (ctx == NULL) {\n              SAFE_FREE(out);\n              return NULL;\n          }\n\n          if (!etm) {\n              rc = hmac_update(ctx, (unsigned char *)&seq, sizeof(uint32_t));\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n              rc = hmac_update(ctx, data, len);\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n              rc = hmac_final(ctx, crypto->hmacbuf, &finallen);\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n          }\n      }\n\n      cipher->encrypt(cipher, (uint8_t*)data + etm_packet_offset, out, len - etm_packet_offset);\n      memcpy((uint8_t*)data + etm_packet_offset, out, len - etm_packet_offset);\n\n      if (type != SSH_HMAC_NONE) {\n          if (etm) {\n              PUSH_BE_U32(data, 0, len - etm_packet_offset);\n              rc = hmac_update(ctx, (unsigned char *)&seq, sizeof(uint32_t));\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n              rc = hmac_update(ctx, data, len);\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n              rc = hmac_final(ctx, crypto->hmacbuf, &finallen);\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n          }\n#ifdef DEBUG_CRYPTO\n          ssh_log_hexdump(\"mac: \", data, len);\n          if (finallen != hmac_digest_len(type)) {\n              printf(\"Final len is %zu\\n\", finallen);\n          }\n          ssh_log_hexdump(\"Packet hmac\", crypto->hmacbuf, hmac_digest_len(type));\n#endif\n      }\n  }\n  explicit_bzero(out, len);\n  SAFE_FREE(out);\n\n  return crypto->hmacbuf;\n", "Selected Statement": "if (crypto == NULL)", "Function Input": {"session": {"value": "0x7fffffffd4a0"}}, "Variable Values Before Statement": {"crypto": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nunsigned char *ssh_packet_encrypt(ssh_session session, void *data, size_t len)\n{\n  struct ssh_crypto_struct *crypto = NULL;\n  struct ssh_cipher_struct *cipher = NULL;\n  HMACCTX ctx = NULL;\n  char *out = NULL;\n  int etm_packet_offset = 0, rc;\n  unsigned int blocksize;\n  size_t finallen = DIGEST_MAX_LEN;\n  uint32_t seq, lenfield_blocksize;\n  enum ssh_hmac_e type;\n  bool etm;\n\n  assert(len);\n\n  crypto = ssh_packet_get_current_crypto(session, SSH_DIRECTION_OUT);\n  if (crypto == NULL) {\n      return NULL; \n  }\n\n  blocksize = crypto->out_cipher->blocksize;\n  lenfield_blocksize = crypto->out_cipher->lenfield_blocksize;\n\n  type = crypto->out_hmac;\n  etm = crypto->out_hmac_etm;\n\n  if (etm) {\n      etm_packet_offset = sizeof(uint32_t);\n  }\n\n  if ((len - lenfield_blocksize - etm_packet_offset) % blocksize != 0) {\n      ssh_set_error(session, SSH_FATAL, \"Cryptographic functions must be set\"\n                    \" on at least one blocksize (received %zu)\", len);\n      return NULL;\n  }\n  out = calloc(1, len);\n  if (out == NULL) {\n    return NULL;\n  }\n\n  seq = ntohl(session->send_seq);\n  cipher = crypto->out_cipher;\n\n  if (cipher->aead_encrypt != NULL) {\n      cipher->aead_encrypt(cipher, data, out, len,\n            crypto->hmacbuf, session->send_seq);\n      memcpy(data, out, len);\n  } else {\n      if (type != SSH_HMAC_NONE) {\n          ctx = hmac_init(crypto->encryptMAC, hmac_digest_len(type), type);\n          if (ctx == NULL) {\n              SAFE_FREE(out);\n              return NULL;\n          }\n\n          if (!etm) {\n              rc = hmac_update(ctx, (unsigned char *)&seq, sizeof(uint32_t));\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n              rc = hmac_update(ctx, data, len);\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n              rc = hmac_final(ctx, crypto->hmacbuf, &finallen);\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n          }\n      }\n\n      cipher->encrypt(cipher, (uint8_t*)data + etm_packet_offset, out, len - etm_packet_offset);\n      memcpy((uint8_t*)data + etm_packet_offset, out, len - etm_packet_offset);\n\n      if (type != SSH_HMAC_NONE) {\n          if (etm) {\n              PUSH_BE_U32(data, 0, len - etm_packet_offset);\n              rc = hmac_update(ctx, (unsigned char *)&seq, sizeof(uint32_t));\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n              rc = hmac_update(ctx, data, len);\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n              rc = hmac_final(ctx, crypto->hmacbuf, &finallen);\n              if (rc != 1) {\n                  SAFE_FREE(out);\n                  return NULL;\n              }\n          }\n#ifdef DEBUG_CRYPTO\n          ssh_log_hexdump(\"mac: \", data, len);\n          if (finallen != hmac_digest_len(type)) {\n              printf(\"Final len is %zu\\n\", finallen);\n          }\n          ssh_log_hexdump(\"Packet hmac\", crypto->hmacbuf, hmac_digest_len(type));\n#endif\n      }\n  }\n  explicit_bzero(out, len);\n  SAFE_FREE(out);\n\n  return crypto->hmacbuf;\n", "Selected Statement": "if (rc != 1)", "Function Input": {"session": {"value": "0x7fffffffd4a0"}}, "Variable Values Before Statement": {"rc": "int"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                         char **hostname,\n                         char **port,\n                         bool ignore_port)\n{\n    char *endp = NULL;\n    long port_n;\n    int rc;\n\n    \n    if (username != NULL) {\n        *username = NULL;\n    }\n    if (hostname != NULL) {\n        *hostname = NULL;\n    }\n    if (port != NULL) {\n        *port = NULL;\n    }\n\n    \n    endp = strrchr(tok, '@');\n    if (endp != NULL) {\n        \n        if (tok == endp) {\n            goto error;\n        }\n        if (username != NULL) {\n            *username = strndup(tok, endp - tok);\n            if (*username == NULL) {\n                goto error;\n            }\n            rc = ssh_check_username_syntax(*username);\n            if (rc != SSH_OK) {\n                goto error;\n            }\n        }\n        tok = endp + 1;\n        \n        endp = strchr(tok, '@');\n        if (endp != NULL) {\n            goto error;\n        }\n    }\n\n    \n    if (*tok == '[') {\n        \n        tok++;\n        endp = strchr(tok, ']');\n        if (endp == NULL) {\n            goto error;\n        }\n    } else if (!ignore_port) {\n        \n        endp = strrchr(tok, ':');\n        if (endp == NULL) {\n            endp = strchr(tok, '\\0');\n        }\n    } else {\n        \n        endp = strchr(tok, '\\0');\n    }\n    if (tok == endp) {\n        \n        goto error;\n    }\n    if (hostname != NULL) {\n        *hostname = strndup(tok, endp - tok);\n        if (*hostname == NULL) {\n            goto error;\n        }\n        \n        rc = ssh_is_ipaddr(*hostname);\n        if (rc == 0) {\n            rc = ssh_check_hostname_syntax(*hostname);\n            if (rc != SSH_OK) {\n                goto error;\n            }\n        }\n    }\n    \n    if (*endp == ']') {\n        endp++;\n    }\n\n    \n    if (*endp != '\\0') {\n        char *port_end = NULL;\n\n        \n        port_n = strtol(endp + 1, &port_end, 10);\n        if (port_n < 1 || *port_end != '\\0') {\n            SSH_LOG(SSH_LOG_TRACE, \"Failed to parse port number.\"\n                    \" The value '%ld' is invalid or there are some\"\n                    \" trailing characters: '%s'\", port_n, port_end);\n            goto error;\n        }\n        if (port != NULL) {\n            *port = strdup(endp + 1);\n            if (*port == NULL) {\n                goto error;\n            }\n        }\n    }\n\n    return SSH_OK;\n\nerror:\n    if (username != NULL) {\n        SAFE_FREE(*username);\n    }\n    if (hostname != NULL) {\n        SAFE_FREE(*hostname);\n    }\n    if (port != NULL) {\n        SAFE_FREE(*port);\n    }\n    return SSH_ERROR;\n", "Selected Statement": "if (username != NULL)", "Function Input": {}, "Variable Values Before Statement": {"username": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                         char **hostname,\n                         char **port,\n                         bool ignore_port)\n{\n    char *endp = NULL;\n    long port_n;\n    int rc;\n\n    \n    if (username != NULL) {\n        *username = NULL;\n    }\n    if (hostname != NULL) {\n        *hostname = NULL;\n    }\n    if (port != NULL) {\n        *port = NULL;\n    }\n\n    \n    endp = strrchr(tok, '@');\n    if (endp != NULL) {\n        \n        if (tok == endp) {\n            goto error;\n        }\n        if (username != NULL) {\n            *username = strndup(tok, endp - tok);\n            if (*username == NULL) {\n                goto error;\n            }\n            rc = ssh_check_username_syntax(*username);\n            if (rc != SSH_OK) {\n                goto error;\n            }\n        }\n        tok = endp + 1;\n        \n        endp = strchr(tok, '@');\n        if (endp != NULL) {\n            goto error;\n        }\n    }\n\n    \n    if (*tok == '[') {\n        \n        tok++;\n        endp = strchr(tok, ']');\n        if (endp == NULL) {\n            goto error;\n        }\n    } else if (!ignore_port) {\n        \n        endp = strrchr(tok, ':');\n        if (endp == NULL) {\n            endp = strchr(tok, '\\0');\n        }\n    } else {\n        \n        endp = strchr(tok, '\\0');\n    }\n    if (tok == endp) {\n        \n        goto error;\n    }\n    if (hostname != NULL) {\n        *hostname = strndup(tok, endp - tok);\n        if (*hostname == NULL) {\n            goto error;\n        }\n        \n        rc = ssh_is_ipaddr(*hostname);\n        if (rc == 0) {\n            rc = ssh_check_hostname_syntax(*hostname);\n            if (rc != SSH_OK) {\n                goto error;\n            }\n        }\n    }\n    \n    if (*endp == ']') {\n        endp++;\n    }\n\n    \n    if (*endp != '\\0') {\n        char *port_end = NULL;\n\n        \n        port_n = strtol(endp + 1, &port_end, 10);\n        if (port_n < 1 || *port_end != '\\0') {\n            SSH_LOG(SSH_LOG_TRACE, \"Failed to parse port number.\"\n                    \" The value '%ld' is invalid or there are some\"\n                    \" trailing characters: '%s'\", port_n, port_end);\n            goto error;\n        }\n        if (port != NULL) {\n            *port = strdup(endp + 1);\n            if (*port == NULL) {\n                goto error;\n            }\n        }\n    }\n\n    return SSH_OK;\n\nerror:\n    if (username != NULL) {\n        SAFE_FREE(*username);\n    }\n    if (hostname != NULL) {\n        SAFE_FREE(*hostname);\n    }\n    if (port != NULL) {\n        SAFE_FREE(*port);\n    }\n    return SSH_ERROR;\n", "Selected Statement": "if (username != NULL)", "Function Input": {}, "Variable Values Before Statement": {"username": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                         char **hostname,\n                         char **port,\n                         bool ignore_port)\n{\n    char *endp = NULL;\n    long port_n;\n    int rc;\n\n    \n    if (username != NULL) {\n        *username = NULL;\n    }\n    if (hostname != NULL) {\n        *hostname = NULL;\n    }\n    if (port != NULL) {\n        *port = NULL;\n    }\n\n    \n    endp = strrchr(tok, '@');\n    if (endp != NULL) {\n        \n        if (tok == endp) {\n            goto error;\n        }\n        if (username != NULL) {\n            *username = strndup(tok, endp - tok);\n            if (*username == NULL) {\n                goto error;\n            }\n            rc = ssh_check_username_syntax(*username);\n            if (rc != SSH_OK) {\n                goto error;\n            }\n        }\n        tok = endp + 1;\n        \n        endp = strchr(tok, '@');\n        if (endp != NULL) {\n            goto error;\n        }\n    }\n\n    \n    if (*tok == '[') {\n        \n        tok++;\n        endp = strchr(tok, ']');\n        if (endp == NULL) {\n            goto error;\n        }\n    } else if (!ignore_port) {\n        \n        endp = strrchr(tok, ':');\n        if (endp == NULL) {\n            endp = strchr(tok, '\\0');\n        }\n    } else {\n        \n        endp = strchr(tok, '\\0');\n    }\n    if (tok == endp) {\n        \n        goto error;\n    }\n    if (hostname != NULL) {\n        *hostname = strndup(tok, endp - tok);\n        if (*hostname == NULL) {\n            goto error;\n        }\n        \n        rc = ssh_is_ipaddr(*hostname);\n        if (rc == 0) {\n            rc = ssh_check_hostname_syntax(*hostname);\n            if (rc != SSH_OK) {\n                goto error;\n            }\n        }\n    }\n    \n    if (*endp == ']') {\n        endp++;\n    }\n\n    \n    if (*endp != '\\0') {\n        char *port_end = NULL;\n\n        \n        port_n = strtol(endp + 1, &port_end, 10);\n        if (port_n < 1 || *port_end != '\\0') {\n            SSH_LOG(SSH_LOG_TRACE, \"Failed to parse port number.\"\n                    \" The value '%ld' is invalid or there are some\"\n                    \" trailing characters: '%s'\", port_n, port_end);\n            goto error;\n        }\n        if (port != NULL) {\n            *port = strdup(endp + 1);\n            if (*port == NULL) {\n                goto error;\n            }\n        }\n    }\n\n    return SSH_OK;\n\nerror:\n    if (username != NULL) {\n        SAFE_FREE(*username);\n    }\n    if (hostname != NULL) {\n        SAFE_FREE(*hostname);\n    }\n    if (port != NULL) {\n        SAFE_FREE(*port);\n    }\n    return SSH_ERROR;\n", "Selected Statement": "if (hostname != NULL)", "Function Input": {}, "Variable Values Before Statement": {"hostname": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "                         char **hostname,\n                         char **port,\n                         bool ignore_port)\n{\n    char *endp = NULL;\n    long port_n;\n    int rc;\n\n    \n    if (username != NULL) {\n        *username = NULL;\n    }\n    if (hostname != NULL) {\n        *hostname = NULL;\n    }\n    if (port != NULL) {\n        *port = NULL;\n    }\n\n    \n    endp = strrchr(tok, '@');\n    if (endp != NULL) {\n        \n        if (tok == endp) {\n            goto error;\n        }\n        if (username != NULL) {\n            *username = strndup(tok, endp - tok);\n            if (*username == NULL) {\n                goto error;\n            }\n            rc = ssh_check_username_syntax(*username);\n            if (rc != SSH_OK) {\n                goto error;\n            }\n        }\n        tok = endp + 1;\n        \n        endp = strchr(tok, '@');\n        if (endp != NULL) {\n            goto error;\n        }\n    }\n\n    \n    if (*tok == '[') {\n        \n        tok++;\n        endp = strchr(tok, ']');\n        if (endp == NULL) {\n            goto error;\n        }\n    } else if (!ignore_port) {\n        \n        endp = strrchr(tok, ':');\n        if (endp == NULL) {\n            endp = strchr(tok, '\\0');\n        }\n    } else {\n        \n        endp = strchr(tok, '\\0');\n    }\n    if (tok == endp) {\n        \n        goto error;\n    }\n    if (hostname != NULL) {\n        *hostname = strndup(tok, endp - tok);\n        if (*hostname == NULL) {\n            goto error;\n        }\n        \n        rc = ssh_is_ipaddr(*hostname);\n        if (rc == 0) {\n            rc = ssh_check_hostname_syntax(*hostname);\n            if (rc != SSH_OK) {\n                goto error;\n            }\n        }\n    }\n    \n    if (*endp == ']') {\n        endp++;\n    }\n\n    \n    if (*endp != '\\0') {\n        char *port_end = NULL;\n\n        \n        port_n = strtol(endp + 1, &port_end, 10);\n        if (port_n < 1 || *port_end != '\\0') {\n            SSH_LOG(SSH_LOG_TRACE, \"Failed to parse port number.\"\n                    \" The value '%ld' is invalid or there are some\"\n                    \" trailing characters: '%s'\", port_n, port_end);\n            goto error;\n        }\n        if (port != NULL) {\n            *port = strdup(endp + 1);\n            if (*port == NULL) {\n                goto error;\n            }\n        }\n    }\n\n    return SSH_OK;\n\nerror:\n    if (username != NULL) {\n        SAFE_FREE(*username);\n    }\n    if (hostname != NULL) {\n        SAFE_FREE(*hostname);\n    }\n    if (port != NULL) {\n        SAFE_FREE(*port);\n    }\n    return SSH_ERROR;\n", "Selected Statement": "if (port != NULL)", "Function Input": {}, "Variable Values Before Statement": {"port": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " *             SSH_ERROR on error\n */\nint ssh_config_parse_string(ssh_session session, const char *input)\n{\n    char line[MAX_LINE_SIZE] = {0};\n    const char *c = input, *line_start = input;\n    unsigned int line_num = 0, line_len;\n    int parsing, rv;\n\n    SSH_LOG(SSH_LOG_DEBUG, \"Reading configuration data from string:\");\n    SSH_LOG(SSH_LOG_DEBUG, \"START\\n%s\\nEND\", input);\n\n    parsing = 1;\n    while (1) {\n        line_num++;\n        line_start = c;\n        c = strchr(line_start, '\\n');\n        if (c == NULL) {\n            \n            c = strchr(line_start, '\\0');\n        }\n        if (c == NULL) {\n            \n            SSH_LOG(SSH_LOG_TRACE, \"No trailing '\\\\0' in config string\");\n            return SSH_ERROR;\n        }\n        line_len = c - line_start;\n        if (line_len > MAX_LINE_SIZE - 1) {\n            SSH_LOG(SSH_LOG_TRACE, \"Line %u too long: %u characters\",\n                    line_num, line_len);\n            return SSH_ERROR;\n        }\n        memcpy(line, line_start, line_len);\n        line[line_len] = '\\0';\n        SSH_LOG(SSH_LOG_DEBUG, \"Line %u: %s\", line_num, line);\n        rv = ssh_config_parse_line(session, line, line_num, &parsing, 0, false);\n        if (rv < 0) {\n            return SSH_ERROR;\n        }\n        if (*c == '\\0') {\n            break;\n        }\n        c++;\n    }\n\n    return SSH_OK;\n", "Selected Statement": "if (*c == '\\0')", "Function Input": {}, "Variable Values Before Statement": {"c": "0x12548a0 \"\""}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " *             SSH_ERROR on error\n */\nint ssh_config_parse_string(ssh_session session, const char *input)\n{\n    char line[MAX_LINE_SIZE] = {0};\n    const char *c = input, *line_start = input;\n    unsigned int line_num = 0, line_len;\n    int parsing, rv;\n\n    SSH_LOG(SSH_LOG_DEBUG, \"Reading configuration data from string:\");\n    SSH_LOG(SSH_LOG_DEBUG, \"START\\n%s\\nEND\", input);\n\n    parsing = 1;\n    while (1) {\n        line_num++;\n        line_start = c;\n        c = strchr(line_start, '\\n');\n        if (c == NULL) {\n            \n            c = strchr(line_start, '\\0');\n        }\n        if (c == NULL) {\n            \n            SSH_LOG(SSH_LOG_TRACE, \"No trailing '\\\\0' in config string\");\n            return SSH_ERROR;\n        }\n        line_len = c - line_start;\n        if (line_len > MAX_LINE_SIZE - 1) {\n            SSH_LOG(SSH_LOG_TRACE, \"Line %u too long: %u characters\",\n                    line_num, line_len);\n            return SSH_ERROR;\n        }\n        memcpy(line, line_start, line_len);\n        line[line_len] = '\\0';\n        SSH_LOG(SSH_LOG_DEBUG, \"Line %u: %s\", line_num, line);\n        rv = ssh_config_parse_line(session, line, line_num, &parsing, 0, false);\n        if (rv < 0) {\n            return SSH_ERROR;\n        }\n        if (*c == '\\0') {\n            break;\n        }\n        c++;\n    }\n\n    return SSH_OK;\n", "Selected Statement": "if (p && *parsing)", "Function Input": {}, "Variable Values Before Statement": {"p": "NULL", "parsing": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " *             SSH_ERROR on error\n */\nint ssh_config_parse_string(ssh_session session, const char *input)\n{\n    char line[MAX_LINE_SIZE] = {0};\n    const char *c = input, *line_start = input;\n    unsigned int line_num = 0, line_len;\n    int parsing, rv;\n\n    SSH_LOG(SSH_LOG_DEBUG, \"Reading configuration data from string:\");\n    SSH_LOG(SSH_LOG_DEBUG, \"START\\n%s\\nEND\", input);\n\n    parsing = 1;\n    while (1) {\n        line_num++;\n        line_start = c;\n        c = strchr(line_start, '\\n');\n        if (c == NULL) {\n            \n            c = strchr(line_start, '\\0');\n        }\n        if (c == NULL) {\n            \n            SSH_LOG(SSH_LOG_TRACE, \"No trailing '\\\\0' in config string\");\n            return SSH_ERROR;\n        }\n        line_len = c - line_start;\n        if (line_len > MAX_LINE_SIZE - 1) {\n            SSH_LOG(SSH_LOG_TRACE, \"Line %u too long: %u characters\",\n                    line_num, line_len);\n            return SSH_ERROR;\n        }\n        memcpy(line, line_start, line_len);\n        line[line_len] = '\\0';\n        SSH_LOG(SSH_LOG_DEBUG, \"Line %u: %s\", line_num, line);\n        rv = ssh_config_parse_line(session, line, line_num, &parsing, 0, false);\n        if (rv < 0) {\n            return SSH_ERROR;\n        }\n        if (*c == '\\0') {\n            break;\n        }\n        c++;\n    }\n\n    return SSH_OK;\n", "Selected Statement": "if (p && *parsing)", "Function Input": {}, "Variable Values Before Statement": {"p": "NULL", "parsing": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " *             SSH_ERROR on error\n */\nint ssh_bind_config_parse_string(ssh_bind bind, const char *input)\n{\n    char line[MAX_LINE_SIZE] = {0};\n    const char *c = input, *line_start = input;\n    unsigned int line_num = 0, line_len;\n    uint32_t parser_flags;\n    int rv;\n\n    \n    uint8_t seen[BIND_CFG_MAX] = {0};\n\n    SSH_LOG(SSH_LOG_DEBUG, \"Reading bind configuration data from string:\");\n    SSH_LOG(SSH_LOG_DEBUG, \"START\\n%s\\nEND\", input);\n\n    parser_flags = PARSING;\n    while (1) {\n        line_num++;\n        line_start = c;\n        c = strchr(line_start, '\\n');\n        if (c == NULL) {\n            \n            c = strchr(line_start, '\\0');\n        }\n        if (c == NULL) {\n            \n            SSH_LOG(SSH_LOG_WARN, \"No trailing '\\\\0' in config string\");\n            return SSH_ERROR;\n        }\n        line_len = c - line_start;\n        if (line_len > MAX_LINE_SIZE - 1) {\n            SSH_LOG(SSH_LOG_WARN, \"Line %u too long: %u characters\",\n                    line_num, line_len);\n            return SSH_ERROR;\n        }\n        memcpy(line, line_start, line_len);\n        line[line_len] = '\\0';\n        SSH_LOG(SSH_LOG_DEBUG, \"Line %u: %s\", line_num, line);\n        rv = ssh_bind_config_parse_line(bind, line, line_num, &parser_flags, seen, 0);\n        if (rv < 0) {\n            return SSH_ERROR;\n        }\n        if (*c == '\\0') {\n            break;\n        }\n        c++;\n    }\n\n    return SSH_OK;\n", "Selected Statement": "if (value != -1)", "Function Input": {"parser_flags": {"value": "8347536"}}, "Variable Values Before Statement": {"value": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " *             SSH_ERROR on error\n */\nint ssh_bind_config_parse_string(ssh_bind bind, const char *input)\n{\n    char line[MAX_LINE_SIZE] = {0};\n    const char *c = input, *line_start = input;\n    unsigned int line_num = 0, line_len;\n    uint32_t parser_flags;\n    int rv;\n\n    \n    uint8_t seen[BIND_CFG_MAX] = {0};\n\n    SSH_LOG(SSH_LOG_DEBUG, \"Reading bind configuration data from string:\");\n    SSH_LOG(SSH_LOG_DEBUG, \"START\\n%s\\nEND\", input);\n\n    parser_flags = PARSING;\n    while (1) {\n        line_num++;\n        line_start = c;\n        c = strchr(line_start, '\\n');\n        if (c == NULL) {\n            \n            c = strchr(line_start, '\\0');\n        }\n        if (c == NULL) {\n            \n            SSH_LOG(SSH_LOG_WARN, \"No trailing '\\\\0' in config string\");\n            return SSH_ERROR;\n        }\n        line_len = c - line_start;\n        if (line_len > MAX_LINE_SIZE - 1) {\n            SSH_LOG(SSH_LOG_WARN, \"Line %u too long: %u characters\",\n                    line_num, line_len);\n            return SSH_ERROR;\n        }\n        memcpy(line, line_start, line_len);\n        line[line_len] = '\\0';\n        SSH_LOG(SSH_LOG_DEBUG, \"Line %u: %s\", line_num, line);\n        rv = ssh_bind_config_parse_line(bind, line, line_num, &parser_flags, seen, 0);\n        if (rv < 0) {\n            return SSH_ERROR;\n        }\n        if (*c == '\\0') {\n            break;\n        }\n        c++;\n    }\n\n    return SSH_OK;\n", "Selected Statement": "if (rc != 0)", "Function Input": {"parser_flags": {"value": "8347536"}}, "Variable Values Before Statement": {"rc": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " *             SSH_ERROR on error\n */\nint ssh_bind_config_parse_string(ssh_bind bind, const char *input)\n{\n    char line[MAX_LINE_SIZE] = {0};\n    const char *c = input, *line_start = input;\n    unsigned int line_num = 0, line_len;\n    uint32_t parser_flags;\n    int rv;\n\n    \n    uint8_t seen[BIND_CFG_MAX] = {0};\n\n    SSH_LOG(SSH_LOG_DEBUG, \"Reading bind configuration data from string:\");\n    SSH_LOG(SSH_LOG_DEBUG, \"START\\n%s\\nEND\", input);\n\n    parser_flags = PARSING;\n    while (1) {\n        line_num++;\n        line_start = c;\n        c = strchr(line_start, '\\n');\n        if (c == NULL) {\n            \n            c = strchr(line_start, '\\0');\n        }\n        if (c == NULL) {\n            \n            SSH_LOG(SSH_LOG_WARN, \"No trailing '\\\\0' in config string\");\n            return SSH_ERROR;\n        }\n        line_len = c - line_start;\n        if (line_len > MAX_LINE_SIZE - 1) {\n            SSH_LOG(SSH_LOG_WARN, \"Line %u too long: %u characters\",\n                    line_num, line_len);\n            return SSH_ERROR;\n        }\n        memcpy(line, line_start, line_len);\n        line[line_len] = '\\0';\n        SSH_LOG(SSH_LOG_DEBUG, \"Line %u: %s\", line_num, line);\n        rv = ssh_bind_config_parse_line(bind, line, line_num, &parser_flags, seen, 0);\n        if (rv < 0) {\n            return SSH_ERROR;\n        }\n        if (*c == '\\0') {\n            break;\n        }\n        c++;\n    }\n\n    return SSH_OK;\n", "Selected Statement": "if (*c == '\\0')", "Function Input": {"parser_flags": {"value": "8347536"}}, "Variable Values Before Statement": {"c": "0x12578a0 \"\""}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nconst char *ssh_threads_get_type(void)\n{\n    if (user_callbacks != NULL) {\n        return user_callbacks->type;\n    }\n    return NULL;\n", "Selected Statement": "if (user_callbacks != NULL)", "Function Input": {}, "Variable Values Before Statement": {"user_callbacks": {"type": "0x73269d \"threads_pthread\"", "mutex_init": "0x531b30 <ssh_pthread_mutex_init>", "mutex_destroy": "0x531c60 <ssh_pthread_mutex_destroy>", "mutex_lock": "0x531d20 <ssh_pthread_mutex_lock>", "mutex_unlock": "0x531d80 <ssh_pthread_mutex_unlock>", "thread_id": "0x531de0 <ssh_pthread_thread_id>"}}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nconst char *ssh_threads_get_type(void)\n{\n    if (user_callbacks != NULL) {\n        return user_callbacks->type;\n    }\n    return NULL;\n", "Selected Statement": "if (user_callbacks == NULL)", "Function Input": {}, "Variable Values Before Statement": {"user_callbacks": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nconst char *ssh_threads_get_type(void)\n{\n    if (user_callbacks != NULL) {\n        return user_callbacks->type;\n    }\n    return NULL;\n", "Selected Statement": "if (rc == SSH_OK)", "Function Input": {}, "Variable Values Before Statement": {"rc": "NULL", "SSH_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @warning Any data unread on this channel will be lost.\n */\nvoid ssh_channel_free(ssh_channel channel)\n{\n    ssh_session session;\n\n    if (channel == NULL) {\n        return;\n    }\n\n    session = channel->session;\n    if (session->alive) {\n        bool send_close = false;\n\n        switch (channel->state) {\n        case SSH_CHANNEL_STATE_OPEN:\n            send_close = true;\n            break;\n        case SSH_CHANNEL_STATE_CLOSED:\n            if (channel->flags & SSH_CHANNEL_FLAG_CLOSED_REMOTE) {\n                send_close = true;\n            }\n            if (channel->flags & SSH_CHANNEL_FLAG_CLOSED_LOCAL) {\n                send_close = false;\n            }\n            break;\n        default:\n            send_close = false;\n            break;\n        }\n\n        if (send_close) {\n            ssh_channel_close(channel);\n        }\n    }\n    channel->flags |= SSH_CHANNEL_FLAG_FREED_LOCAL;\n\n    \n    if ((channel->flags & SSH_CHANNEL_FLAG_CLOSED_REMOTE) ||\n        (channel->flags & SSH_CHANNEL_FLAG_NOT_BOUND)) {\n        ssh_channel_do_free(channel);\n    }\n", "Selected Statement": "if (err != SSH_OK)", "Function Input": {"session": {"value": "0x125d410"}}, "Variable Values Before Statement": {"err": "NULL", "SSH_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @warning Any data unread on this channel will be lost.\n */\nvoid ssh_channel_free(ssh_channel channel)\n{\n    ssh_session session;\n\n    if (channel == NULL) {\n        return;\n    }\n\n    session = channel->session;\n    if (session->alive) {\n        bool send_close = false;\n\n        switch (channel->state) {\n        case SSH_CHANNEL_STATE_OPEN:\n            send_close = true;\n            break;\n        case SSH_CHANNEL_STATE_CLOSED:\n            if (channel->flags & SSH_CHANNEL_FLAG_CLOSED_REMOTE) {\n                send_close = true;\n            }\n            if (channel->flags & SSH_CHANNEL_FLAG_CLOSED_LOCAL) {\n                send_close = false;\n            }\n            break;\n        default:\n            send_close = false;\n            break;\n        }\n\n        if (send_close) {\n            ssh_channel_close(channel);\n        }\n    }\n    channel->flags |= SSH_CHANNEL_FLAG_FREED_LOCAL;\n\n    \n    if ((channel->flags & SSH_CHANNEL_FLAG_CLOSED_REMOTE) ||\n        (channel->flags & SSH_CHANNEL_FLAG_NOT_BOUND)) {\n        ssh_channel_do_free(channel);\n    }\n", "Selected Statement": "if (channel->flags & SSH_CHANNEL_FLAG_CLOSED_LOCAL)", "Function Input": {"session": {"value": "0x125d410"}}, "Variable Values Before Statement": {"channel->flags": "NULL", "SSH_CHANNEL_FLAG_CLOSED_LOCAL": "NULL"}, "Value After Statement Execution": "No", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " * @warning Any data unread on this channel will be lost.\n */\nvoid ssh_channel_free(ssh_channel channel)\n{\n    ssh_session session;\n\n    if (channel == NULL) {\n        return;\n    }\n\n    session = channel->session;\n    if (session->alive) {\n        bool send_close = false;\n\n        switch (channel->state) {\n        case SSH_CHANNEL_STATE_OPEN:\n            send_close = true;\n            break;\n        case SSH_CHANNEL_STATE_CLOSED:\n            if (channel->flags & SSH_CHANNEL_FLAG_CLOSED_REMOTE) {\n                send_close = true;\n            }\n            if (channel->flags & SSH_CHANNEL_FLAG_CLOSED_LOCAL) {\n                send_close = false;\n            }\n            break;\n        default:\n            send_close = false;\n            break;\n        }\n\n        if (send_close) {\n            ssh_channel_close(channel);\n        }\n    }\n    channel->flags |= SSH_CHANNEL_FLAG_FREED_LOCAL;\n\n    \n    if ((channel->flags & SSH_CHANNEL_FLAG_CLOSED_REMOTE) ||\n        (channel->flags & SSH_CHANNEL_FLAG_NOT_BOUND)) {\n        ssh_channel_do_free(channel);\n    }\n", "Selected Statement": "if (channel == NULL)", "Function Input": {"session": {"value": "0x125d410"}}, "Variable Values Before Statement": {"channel": "ssh_channel"}, "Value After Statement Execution": "Yes", "Project Information": "libssh"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nkrb5_error_code KRB5_CALLCONV\nkrb5_init_context(krb5_context *context)\n{\n    \n    int my_zero = (krb5_brand[0] == 0);\n\n", "Selected Statement": "if (retval)", "Function Input": {}, "Variable Values Before Statement": {"retval": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nkrb5_error_code KRB5_CALLCONV\nkrb5_init_context(krb5_context *context)\n{\n    \n    int my_zero = (krb5_brand[0] == 0);\n\n", "Selected Statement": "if (list == NULL || (!allow_weak && krb5int_c_weak_enctype(etype)))", "Function Input": {}, "Variable Values Before Statement": {"list": "NULL", "allow_weak": "NULL", "krb5int_c_weak_enctype": "NULL", "etype": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nkrb5_error_code krb5int_initialize_library (void)\n{\n", "Selected Statement": "if (!INITIALIZER_RAN(krb5int_lib_init) || PROGRAM_EXITING())", "Function Input": {}, "Variable Values Before Statement": {"INITIALIZER_RAN": "NULL", "krb5int_lib_init": "NULL", "PROGRAM_EXITING": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nkrb5_error_code krb5int_initialize_library (void)\n{\n", "Selected Statement": "if (err)", "Function Input": {}, "Variable Values Before Statement": {"err": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\nk5_once(k5_once_t *once, void (*fn)(void))\n{\n", "Selected Statement": "if (err)", "Function Input": {}, "Variable Values Before Statement": {"err": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\nk5_once(k5_once_t *once, void (*fn)(void))\n{\n", "Selected Statement": "if (err)", "Function Input": {}, "Variable Values Before Statement": {"err": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nerrcode_t KRB5_CALLCONV\nadd_error_table(const struct error_table *et)\n{\n    struct et_list *e;\n\n", "Selected Statement": "if (table->msgs[table->n_msgs] != NULL)", "Function Input": {}, "Variable Values Before Statement": {"table->msgs": "NULL", "table->n_msgs": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nerrcode_t KRB5_CALLCONV\nadd_error_table(const struct error_table *et)\n{\n    struct et_list *e;\n\n", "Selected Statement": "if (code >= WSABASEERR && code < WSABASEERR + 1100)", "Function Input": {}, "Variable Values Before Statement": {"code": "NULL", "WSABASEERR": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nkrb5_error_code\nndr_dec_delegation_info(krb5_data *data, struct pac_s4u_delegation_info **out)\n{\n    krb5_error_code ret;\n    struct pac_s4u_delegation_info *di = NULL;\n    struct k5input in;\n    uint32_t i, object_buffer_length, nservices;\n    uint8_t version, endianness, common_header_length;\n\n    *out = NULL;\n\n    di = k5alloc(sizeof(*di), &ret);\n    if (di == NULL)\n        return ret;\n\n    k5_input_init(&in, data->data, data->length);\n\n    \n    version = k5_input_get_byte(&in);\n    endianness = k5_input_get_byte(&in);\n    common_header_length = k5_input_get_uint16_le(&in);\n    (void)k5_input_get_uint32_le(&in); \n    if (version != 1 || endianness != 0x10 || common_header_length != 8) {\n        ret = EINVAL;\n        goto error;\n    }\n\n    \n    object_buffer_length = k5_input_get_uint32_le(&in);\n    if (data->length < 16 || object_buffer_length != data->length - 16) {\n        ret = EINVAL;\n        goto error;\n    }\n\n    (void)k5_input_get_uint32_le(&in); \n\n    \n\n    \n    (void)k5_input_get_uint32_le(&in);\n    \n    (void)k5_input_get_uint16_le(&in);\n    \n    (void)k5_input_get_uint16_le(&in);\n    \n    (void)k5_input_get_uint32_le(&in);\n\n    \n    (void)k5_input_get_uint32_le(&in);\n\n    \n    (void)k5_input_get_uint32_le(&in);\n\n    ret = dec_wchar_pointer(&in, &di->proxy_target);\n    if (ret)\n        goto error;\n    nservices = k5_input_get_uint32_le(&in);\n\n    \n    if (nservices > data->length / 8) {\n        ret = ERANGE;\n        goto error;\n    }\n    (void)k5_input_get_bytes(&in, 8 * nservices);\n\n    \n    di->transited_services = k5calloc(nservices + 1, sizeof(char *), &ret);\n    if (di->transited_services == NULL)\n        goto error;\n\n    for (i = 0; i < nservices; i++) {\n        ret = dec_wchar_pointer(&in, &di->transited_services[i]);\n        if (ret)\n            goto error;\n        di->transited_services_length++;\n    }\n\n    ret = in.status;\n    if (ret)\n        goto error;\n\n    *out = di;\n    return 0;\n\nerror:\n    ndr_free_delegation_info(di);\n    return ret;\n", "Selected Statement": "if (ret)", "Function Input": {"in": {"value": {"ptr": {"type_category": "string", "concrete_type": "NULL"}, "len": {"type_category": "unknown", "concrete_type": "size_t", "value": "4242681"}, "status": {"type_category": "unknown", "concrete_type": "int32_t", "value": "5350024"}}}, "out": {"value": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf3bbe0", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1332bcc00081001\n", "message": "Cannot access memory at address 0x1332bcc00081001"}}}}, "Variable Values Before Statement": {"ret": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nkrb5_error_code\nndr_dec_delegation_info(krb5_data *data, struct pac_s4u_delegation_info **out)\n{\n    krb5_error_code ret;\n    struct pac_s4u_delegation_info *di = NULL;\n    struct k5input in;\n    uint32_t i, object_buffer_length, nservices;\n    uint8_t version, endianness, common_header_length;\n\n    *out = NULL;\n\n    di = k5alloc(sizeof(*di), &ret);\n    if (di == NULL)\n        return ret;\n\n    k5_input_init(&in, data->data, data->length);\n\n    \n    version = k5_input_get_byte(&in);\n    endianness = k5_input_get_byte(&in);\n    common_header_length = k5_input_get_uint16_le(&in);\n    (void)k5_input_get_uint32_le(&in); \n    if (version != 1 || endianness != 0x10 || common_header_length != 8) {\n        ret = EINVAL;\n        goto error;\n    }\n\n    \n    object_buffer_length = k5_input_get_uint32_le(&in);\n    if (data->length < 16 || object_buffer_length != data->length - 16) {\n        ret = EINVAL;\n        goto error;\n    }\n\n    (void)k5_input_get_uint32_le(&in); \n\n    \n\n    \n    (void)k5_input_get_uint32_le(&in);\n    \n    (void)k5_input_get_uint16_le(&in);\n    \n    (void)k5_input_get_uint16_le(&in);\n    \n    (void)k5_input_get_uint32_le(&in);\n\n    \n    (void)k5_input_get_uint32_le(&in);\n\n    \n    (void)k5_input_get_uint32_le(&in);\n\n    ret = dec_wchar_pointer(&in, &di->proxy_target);\n    if (ret)\n        goto error;\n    nservices = k5_input_get_uint32_le(&in);\n\n    \n    if (nservices > data->length / 8) {\n        ret = ERANGE;\n        goto error;\n    }\n    (void)k5_input_get_bytes(&in, 8 * nservices);\n\n    \n    di->transited_services = k5calloc(nservices + 1, sizeof(char *), &ret);\n    if (di->transited_services == NULL)\n        goto error;\n\n    for (i = 0; i < nservices; i++) {\n        ret = dec_wchar_pointer(&in, &di->transited_services[i]);\n        if (ret)\n            goto error;\n        di->transited_services_length++;\n    }\n\n    ret = in.status;\n    if (ret)\n        goto error;\n\n    *out = di;\n    return 0;\n\nerror:\n    ndr_free_delegation_info(di);\n    return ret;\n", "Selected Statement": "if (actual_count % 2 == 1)", "Function Input": {"in": {"value": {"ptr": {"type_category": "string", "concrete_type": "NULL"}, "len": {"type_category": "unknown", "concrete_type": "size_t", "value": "4242681"}, "status": {"type_category": "unknown", "concrete_type": "int32_t", "value": "5350024"}}}, "out": {"value": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf3bbe0", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1332bcc00081001\n", "message": "Cannot access memory at address 0x1332bcc00081001"}}}}, "Variable Values Before Statement": {"actual_count": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": " */\nkrb5_error_code\nndr_dec_delegation_info(krb5_data *data, struct pac_s4u_delegation_info **out)\n{\n    krb5_error_code ret;\n    struct pac_s4u_delegation_info *di = NULL;\n    struct k5input in;\n    uint32_t i, object_buffer_length, nservices;\n    uint8_t version, endianness, common_header_length;\n\n    *out = NULL;\n\n    di = k5alloc(sizeof(*di), &ret);\n    if (di == NULL)\n        return ret;\n\n    k5_input_init(&in, data->data, data->length);\n\n    \n    version = k5_input_get_byte(&in);\n    endianness = k5_input_get_byte(&in);\n    common_header_length = k5_input_get_uint16_le(&in);\n    (void)k5_input_get_uint32_le(&in); \n    if (version != 1 || endianness != 0x10 || common_header_length != 8) {\n        ret = EINVAL;\n        goto error;\n    }\n\n    \n    object_buffer_length = k5_input_get_uint32_le(&in);\n    if (data->length < 16 || object_buffer_length != data->length - 16) {\n        ret = EINVAL;\n        goto error;\n    }\n\n    (void)k5_input_get_uint32_le(&in); \n\n    \n\n    \n    (void)k5_input_get_uint32_le(&in);\n    \n    (void)k5_input_get_uint16_le(&in);\n    \n    (void)k5_input_get_uint16_le(&in);\n    \n    (void)k5_input_get_uint32_le(&in);\n\n    \n    (void)k5_input_get_uint32_le(&in);\n\n    \n    (void)k5_input_get_uint32_le(&in);\n\n    ret = dec_wchar_pointer(&in, &di->proxy_target);\n    if (ret)\n        goto error;\n    nservices = k5_input_get_uint32_le(&in);\n\n    \n    if (nservices > data->length / 8) {\n        ret = ERANGE;\n        goto error;\n    }\n    (void)k5_input_get_bytes(&in, 8 * nservices);\n\n    \n    di->transited_services = k5calloc(nservices + 1, sizeof(char *), &ret);\n    if (di->transited_services == NULL)\n        goto error;\n\n    for (i = 0; i < nservices; i++) {\n        ret = dec_wchar_pointer(&in, &di->transited_services[i]);\n        if (ret)\n            goto error;\n        di->transited_services_length++;\n    }\n\n    ret = in.status;\n    if (ret)\n        goto error;\n\n    *out = di;\n    return 0;\n\nerror:\n    ndr_free_delegation_info(di);\n    return ret;\n", "Selected Statement": "if (nservices > data->length / 8)", "Function Input": {"in": {"value": {"ptr": {"type_category": "string", "concrete_type": "NULL"}, "len": {"type_category": "unknown", "concrete_type": "size_t", "value": "4242681"}, "status": {"type_category": "unknown", "concrete_type": "int32_t", "value": "5350024"}}}, "out": {"value": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf3bbe0", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1332bcc00081001\n", "message": "Cannot access memory at address 0x1332bcc00081001"}}}}, "Variable Values Before Statement": {"nservices": "1392508930", "data->length": "101"}, "Value After Statement Execution": "Yes", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\nk5_utf16le_to_utf8(const uint8_t *utf16bytes, size_t nbytes, char **utf8_out)\n{\n    struct k5buf buf;\n    struct k5input in;\n    uint16_t ch1, ch2;\n    krb5_ucs4 ch;\n    size_t chlen;\n    void *p;\n\n    *utf8_out = NULL;\n\n    if (nbytes % 2 != 0)\n        return EINVAL;\n\n    k5_buf_init_dynamic(&buf);\n    k5_input_init(&in, utf16bytes, nbytes);\n    while (!in.status && in.len > 0) {\n        \n        ch1 = k5_input_get_uint16_le(&in);\n        if (IS_LOW_SURROGATE(ch1))\n            goto invalid;\n        if (IS_HIGH_SURROGATE(ch1)) {\n            \n            ch2 = k5_input_get_uint16_le(&in);\n            if (!IS_LOW_SURROGATE(ch2))\n                goto invalid;\n            ch = COMPOSE(ch1, ch2);\n        } else {\n            ch = ch1;\n        }\n\n        chlen = krb5int_ucs4_to_utf8(ch, NULL);\n        p = k5_buf_get_space(&buf, chlen);\n        if (p == NULL)\n            return ENOMEM;\n        (void)krb5int_ucs4_to_utf8(ch, p);\n    }\n\n    if (in.status)\n        goto invalid;\n\n    *utf8_out = k5_buf_cstring(&buf);\n    return (*utf8_out == NULL) ? ENOMEM : 0;\n\ninvalid:\n    k5_buf_free(&buf);\n    return EINVAL;\n", "Selected Statement": "if (in.status)", "Function Input": {}, "Variable Values Before Statement": {"in.status": "0"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nint\nk5_utf16le_to_utf8(const uint8_t *utf16bytes, size_t nbytes, char **utf8_out)\n{\n    struct k5buf buf;\n    struct k5input in;\n    uint16_t ch1, ch2;\n    krb5_ucs4 ch;\n    size_t chlen;\n    void *p;\n\n    *utf8_out = NULL;\n\n    if (nbytes % 2 != 0)\n        return EINVAL;\n\n    k5_buf_init_dynamic(&buf);\n    k5_input_init(&in, utf16bytes, nbytes);\n    while (!in.status && in.len > 0) {\n        \n        ch1 = k5_input_get_uint16_le(&in);\n        if (IS_LOW_SURROGATE(ch1))\n            goto invalid;\n        if (IS_HIGH_SURROGATE(ch1)) {\n            \n            ch2 = k5_input_get_uint16_le(&in);\n            if (!IS_LOW_SURROGATE(ch2))\n                goto invalid;\n            ch = COMPOSE(ch1, ch2);\n        } else {\n            ch = ch1;\n        }\n\n        chlen = krb5int_ucs4_to_utf8(ch, NULL);\n        p = k5_buf_get_space(&buf, chlen);\n        if (p == NULL)\n            return ENOMEM;\n        (void)krb5int_ucs4_to_utf8(ch, p);\n    }\n\n    if (in.status)\n        goto invalid;\n\n    *utf8_out = k5_buf_cstring(&buf);\n    return (*utf8_out == NULL) ? ENOMEM : 0;\n\ninvalid:\n    k5_buf_free(&buf);\n    return EINVAL;\n", "Selected Statement": "if (IS_HIGH_SURROGATE(ch1))", "Function Input": {}, "Variable Values Before Statement": {"IS_HIGH_SURROGATE": "NULL", "ch1": "12"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nk5_buf_init_dynamic(struct k5buf *buf)\n{\n    buf->buftype = K5BUF_DYNAMIC;\n    buf->space = 128;\n    buf->data = malloc(buf->space);\n    if (buf->data == NULL) {\n        set_error(buf);\n        return;\n    }\n    buf->len = 0;\n", "Selected Statement": "if (buf->buftype == K5BUF_DYNAMIC_ZAP)", "Function Input": {"buf": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x65cc6ead\n", "message": "Cannot access memory at address 0x65cc6ead"}}}, "Variable Values Before Statement": {"buf->buftype": "NULL", "K5BUF_DYNAMIC_ZAP": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nvoid\nk5_buf_init_dynamic(struct k5buf *buf)\n{\n    buf->buftype = K5BUF_DYNAMIC;\n    buf->space = 128;\n    buf->data = malloc(buf->space);\n    if (buf->data == NULL) {\n        set_error(buf);\n        return;\n    }\n    buf->len = 0;\n", "Selected Statement": "if (r < 0)", "Function Input": {"buf": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x65cc6ead\n", "message": "Cannot access memory at address 0x65cc6ead"}}}, "Variable Values Before Statement": {"r": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nsize_t krb5int_ucs4_to_utf8(krb5_ucs4 c, char *buf)\n{\n    size_t len = 0;\n    unsigned char *p = (unsigned char *) buf;\n\n    \n    if (c > 0x10ffff)\n        return 0;\n\n    \n    if (buf == NULL) {\n        if (c < 0x80) return 1;\n        else if (c < 0x800) return 2;\n        else if (c < 0x10000) return 3;\n        else return 4;\n    }\n\n    if (c < 0x80) {\n        p[len++] = c;\n    } else if (c < 0x800) {\n        p[len++] = 0xc0 | ( c >> 6 );\n        p[len++] = 0x80 | ( c & 0x3f );\n    } else if (c < 0x10000) {\n        p[len++] = 0xe0 | ( c >> 12 );\n        p[len++] = 0x80 | ( (c >> 6) & 0x3f );\n        p[len++] = 0x80 | ( c & 0x3f );\n    } else  {\n        p[len++] = 0xf0 | ( c >> 18 );\n        p[len++] = 0x80 | ( (c >> 12) & 0x3f );\n        p[len++] = 0x80 | ( (c >> 6) & 0x3f );\n        p[len++] = 0x80 | ( c & 0x3f );\n    }\n\n    return len;\n", "Selected Statement": "if (c < 0x80)", "Function Input": {"p": {"value": "0x73004c1cdf <error: Cannot access memory at address 0x73004c1cdf>"}}, "Variable Values Before Statement": {"c": "krb5_ucs4"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nsize_t krb5int_ucs4_to_utf8(krb5_ucs4 c, char *buf)\n{\n    size_t len = 0;\n    unsigned char *p = (unsigned char *) buf;\n\n    \n    if (c > 0x10ffff)\n        return 0;\n\n    \n    if (buf == NULL) {\n        if (c < 0x80) return 1;\n        else if (c < 0x800) return 2;\n        else if (c < 0x10000) return 3;\n        else return 4;\n    }\n\n    if (c < 0x80) {\n        p[len++] = c;\n    } else if (c < 0x800) {\n        p[len++] = 0xc0 | ( c >> 6 );\n        p[len++] = 0x80 | ( c & 0x3f );\n    } else if (c < 0x10000) {\n        p[len++] = 0xe0 | ( c >> 12 );\n        p[len++] = 0x80 | ( (c >> 6) & 0x3f );\n        p[len++] = 0x80 | ( c & 0x3f );\n    } else  {\n        p[len++] = 0xf0 | ( c >> 18 );\n        p[len++] = 0x80 | ( (c >> 12) & 0x3f );\n        p[len++] = 0x80 | ( (c >> 6) & 0x3f );\n        p[len++] = 0x80 | ( c & 0x3f );\n    }\n\n    return len;\n", "Selected Statement": "if ((c[i] & 0xc0) != 0x80)", "Function Input": {"p": {"value": "0x73004c1cdf <error: Cannot access memory at address 0x73004c1cdf>"}}, "Variable Values Before Statement": {"c": "NULL", "i": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\n\nsize_t krb5int_ucs4_to_utf8(krb5_ucs4 c, char *buf)\n{\n    size_t len = 0;\n    unsigned char *p = (unsigned char *) buf;\n\n    \n    if (c > 0x10ffff)\n        return 0;\n\n    \n    if (buf == NULL) {\n        if (c < 0x80) return 1;\n        else if (c < 0x800) return 2;\n        else if (c < 0x10000) return 3;\n        else return 4;\n    }\n\n    if (c < 0x80) {\n        p[len++] = c;\n    } else if (c < 0x800) {\n        p[len++] = 0xc0 | ( c >> 6 );\n        p[len++] = 0x80 | ( c & 0x3f );\n    } else if (c < 0x10000) {\n        p[len++] = 0xe0 | ( c >> 12 );\n        p[len++] = 0x80 | ( (c >> 6) & 0x3f );\n        p[len++] = 0x80 | ( c & 0x3f );\n    } else  {\n        p[len++] = 0xf0 | ( c >> 18 );\n        p[len++] = 0x80 | ( (c >> 12) & 0x3f );\n        p[len++] = 0x80 | ( (c >> 6) & 0x3f );\n        p[len++] = 0x80 | ( c & 0x3f );\n    }\n\n    return len;\n", "Selected Statement": "if (buf == NULL)", "Function Input": {"p": {"value": "0x73004c1cdf <error: Cannot access memory at address 0x73004c1cdf>"}}, "Variable Values Before Statement": {"buf": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nOM_uint32 KRB5_CALLCONV\ngss_release_name(OM_uint32 *minor_status, gss_name_t *input_name)\n{\n    gss_union_name_t\tunion_name;\n\n    if (minor_status == NULL)\n\treturn (GSS_S_CALL_INACCESSIBLE_WRITE);\n    *minor_status = 0;\n\n    \n    if (input_name == NULL)\n\treturn (GSS_S_CALL_INACCESSIBLE_READ | GSS_S_BAD_NAME);\n\n    if (*input_name == GSS_C_NO_NAME)\n\treturn GSS_S_COMPLETE;\n\n    \n\n    union_name = (gss_union_name_t) *input_name;\n    if (GSSINT_CHK_LOOP(union_name))\n\treturn (GSS_S_CALL_INACCESSIBLE_READ | GSS_S_BAD_NAME);\n    *input_name = 0;\n    *minor_status = 0;\n\n    if (union_name->name_type != GSS_C_NO_OID)\n\tgss_release_oid(minor_status, &union_name->name_type);\n\n    if (union_name->external_name != GSS_C_NO_BUFFER) {\n\tif (union_name->external_name->value != NULL)\n\t    gssalloc_free(union_name->external_name->value);\n\tfree(union_name->external_name);\n    }\n\n    if (union_name->mech_type) {\n\tgssint_release_internal_name(minor_status, union_name->mech_type,\n\t\t\t\t     &union_name->mech_name);\n\tgss_release_oid(minor_status, &union_name->mech_type);\n    }\n\n    free(union_name);\n\n    return(GSS_S_COMPLETE);\n", "Selected Statement": "if (*input_name == GSS_C_NO_NAME)", "Function Input": {"input_name": {"value": {"type_category": "unknown", "concrete_type": "gss_name_t"}}, "minor_status": {"value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1000\n", "message": "Cannot access memory at address 0x1000"}}}, "Variable Values Before Statement": {"input_name": "NULL", "GSS_C_NO_NAME": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nOM_uint32 KRB5_CALLCONV\ngss_release_name(OM_uint32 *minor_status, gss_name_t *input_name)\n{\n    gss_union_name_t\tunion_name;\n\n    if (minor_status == NULL)\n\treturn (GSS_S_CALL_INACCESSIBLE_WRITE);\n    *minor_status = 0;\n\n    \n    if (input_name == NULL)\n\treturn (GSS_S_CALL_INACCESSIBLE_READ | GSS_S_BAD_NAME);\n\n    if (*input_name == GSS_C_NO_NAME)\n\treturn GSS_S_COMPLETE;\n\n    \n\n    union_name = (gss_union_name_t) *input_name;\n    if (GSSINT_CHK_LOOP(union_name))\n\treturn (GSS_S_CALL_INACCESSIBLE_READ | GSS_S_BAD_NAME);\n    *input_name = 0;\n    *minor_status = 0;\n\n    if (union_name->name_type != GSS_C_NO_OID)\n\tgss_release_oid(minor_status, &union_name->name_type);\n\n    if (union_name->external_name != GSS_C_NO_BUFFER) {\n\tif (union_name->external_name->value != NULL)\n\t    gssalloc_free(union_name->external_name->value);\n\tfree(union_name->external_name);\n    }\n\n    if (union_name->mech_type) {\n\tgssint_release_internal_name(minor_status, union_name->mech_type,\n\t\t\t\t     &union_name->mech_name);\n\tgss_release_oid(minor_status, &union_name->mech_type);\n    }\n\n    free(union_name);\n\n    return(GSS_S_COMPLETE);\n", "Selected Statement": "if (GSSINT_CHK_LOOP(union_name))", "Function Input": {"input_name": {"value": {"type_category": "unknown", "concrete_type": "gss_name_t"}}, "minor_status": {"value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1000\n", "message": "Cannot access memory at address 0x1000"}}}, "Variable Values Before Statement": {"GSSINT_CHK_LOOP": "NULL", "union_name": "gss_union_name_t"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nOM_uint32 KRB5_CALLCONV\ngss_release_name(OM_uint32 *minor_status, gss_name_t *input_name)\n{\n    gss_union_name_t\tunion_name;\n\n    if (minor_status == NULL)\n\treturn (GSS_S_CALL_INACCESSIBLE_WRITE);\n    *minor_status = 0;\n\n    \n    if (input_name == NULL)\n\treturn (GSS_S_CALL_INACCESSIBLE_READ | GSS_S_BAD_NAME);\n\n    if (*input_name == GSS_C_NO_NAME)\n\treturn GSS_S_COMPLETE;\n\n    \n\n    union_name = (gss_union_name_t) *input_name;\n    if (GSSINT_CHK_LOOP(union_name))\n\treturn (GSS_S_CALL_INACCESSIBLE_READ | GSS_S_BAD_NAME);\n    *input_name = 0;\n    *minor_status = 0;\n\n    if (union_name->name_type != GSS_C_NO_OID)\n\tgss_release_oid(minor_status, &union_name->name_type);\n\n    if (union_name->external_name != GSS_C_NO_BUFFER) {\n\tif (union_name->external_name->value != NULL)\n\t    gssalloc_free(union_name->external_name->value);\n\tfree(union_name->external_name);\n    }\n\n    if (union_name->mech_type) {\n\tgssint_release_internal_name(minor_status, union_name->mech_type,\n\t\t\t\t     &union_name->mech_name);\n\tgss_release_oid(minor_status, &union_name->mech_type);\n    }\n\n    free(union_name);\n\n    return(GSS_S_COMPLETE);\n", "Selected Statement": "if (union_name->name_type != GSS_C_NO_OID)", "Function Input": {"input_name": {"value": {"type_category": "unknown", "concrete_type": "gss_name_t"}}, "minor_status": {"value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1000\n", "message": "Cannot access memory at address 0x1000"}}}, "Variable Values Before Statement": {"union_name->name_type": "NULL", "GSS_C_NO_OID": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nOM_uint32 KRB5_CALLCONV\ngss_release_cred(OM_uint32 *minor_status, gss_cred_id_t *cred_handle)\n{\n    OM_uint32\t\tstatus, temp_status;\n    int\t\t\tj;\n    gss_union_cred_t\tunion_cred;\n    gss_mechanism\tmech;\n\n    if (minor_status == NULL)\n\treturn (GSS_S_CALL_INACCESSIBLE_WRITE);\n\n    *minor_status = 0;\n\n    if (cred_handle == NULL)\n\treturn (GSS_S_NO_CRED | GSS_S_CALL_INACCESSIBLE_READ);\n\n    \n\n    union_cred = (gss_union_cred_t) *cred_handle;\n    if (union_cred == (gss_union_cred_t)GSS_C_NO_CREDENTIAL)\n\treturn (GSS_S_COMPLETE);\n\n    if (GSSINT_CHK_LOOP(union_cred))\n\treturn (GSS_S_NO_CRED | GSS_S_CALL_INACCESSIBLE_READ);\n    *cred_handle = NULL;\n\n    status = GSS_S_COMPLETE;\n\n    for(j=0; j < union_cred->count; j++) {\n\n\tmech = gssint_get_mechanism (&union_cred->mechs_array[j]);\n\n\tif (union_cred->mechs_array[j].elements)\n\t\tfree(union_cred->mechs_array[j].elements);\n\tif (mech) {\n\t    if (mech->gss_release_cred) {\n\t\ttemp_status = mech->gss_release_cred\n\t\t    (\n\t\t     minor_status,\n\t\t     &union_cred->cred_array[j]);\n\n\t\tif (temp_status != GSS_S_COMPLETE) {\n\t\t    map_error(minor_status, mech);\n\t\t    status = GSS_S_NO_CRED;\n\t\t}\n\n\t    } else\n\t\tstatus = GSS_S_UNAVAILABLE;\n\t} else\n\t    status = GSS_S_DEFECTIVE_CREDENTIAL;\n    }\n\n    free(union_cred->cred_array);\n    free(union_cred->mechs_array);\n    free(union_cred);\n\n    return(status);\n", "Selected Statement": "if (union_cred == (gss_union_cred_t)GSS_C_NO_CREDENTIAL)", "Function Input": {"cred_handle": {"value": {"type_category": "unknown", "concrete_type": "gss_cred_id_t"}}, "minor_status": {"value": {"type_category": "unknown", "concrete_type": "OM_uint32", "value": "0"}}}, "Variable Values Before Statement": {"union_cred": "gss_union_cred_t", "GSS_C_NO_CREDENTIAL": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nOM_uint32 KRB5_CALLCONV\ngss_release_cred(OM_uint32 *minor_status, gss_cred_id_t *cred_handle)\n{\n    OM_uint32\t\tstatus, temp_status;\n    int\t\t\tj;\n    gss_union_cred_t\tunion_cred;\n    gss_mechanism\tmech;\n\n    if (minor_status == NULL)\n\treturn (GSS_S_CALL_INACCESSIBLE_WRITE);\n\n    *minor_status = 0;\n\n    if (cred_handle == NULL)\n\treturn (GSS_S_NO_CRED | GSS_S_CALL_INACCESSIBLE_READ);\n\n    \n\n    union_cred = (gss_union_cred_t) *cred_handle;\n    if (union_cred == (gss_union_cred_t)GSS_C_NO_CREDENTIAL)\n\treturn (GSS_S_COMPLETE);\n\n    if (GSSINT_CHK_LOOP(union_cred))\n\treturn (GSS_S_NO_CRED | GSS_S_CALL_INACCESSIBLE_READ);\n    *cred_handle = NULL;\n\n    status = GSS_S_COMPLETE;\n\n    for(j=0; j < union_cred->count; j++) {\n\n\tmech = gssint_get_mechanism (&union_cred->mechs_array[j]);\n\n\tif (union_cred->mechs_array[j].elements)\n\t\tfree(union_cred->mechs_array[j].elements);\n\tif (mech) {\n\t    if (mech->gss_release_cred) {\n\t\ttemp_status = mech->gss_release_cred\n\t\t    (\n\t\t     minor_status,\n\t\t     &union_cred->cred_array[j]);\n\n\t\tif (temp_status != GSS_S_COMPLETE) {\n\t\t    map_error(minor_status, mech);\n\t\t    status = GSS_S_NO_CRED;\n\t\t}\n\n\t    } else\n\t\tstatus = GSS_S_UNAVAILABLE;\n\t} else\n\t    status = GSS_S_DEFECTIVE_CREDENTIAL;\n    }\n\n    free(union_cred->cred_array);\n    free(union_cred->mechs_array);\n    free(union_cred);\n\n    return(status);\n", "Selected Statement": "if (mech->gss_release_cred)", "Function Input": {"cred_handle": {"value": {"type_category": "unknown", "concrete_type": "gss_cred_id_t"}}, "minor_status": {"value": {"type_category": "unknown", "concrete_type": "OM_uint32", "value": "0"}}}, "Variable Values Before Statement": {"mech->gss_release_cred": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nOM_uint32 KRB5_CALLCONV\ngss_release_cred(OM_uint32 *minor_status, gss_cred_id_t *cred_handle)\n{\n    OM_uint32\t\tstatus, temp_status;\n    int\t\t\tj;\n    gss_union_cred_t\tunion_cred;\n    gss_mechanism\tmech;\n\n    if (minor_status == NULL)\n\treturn (GSS_S_CALL_INACCESSIBLE_WRITE);\n\n    *minor_status = 0;\n\n    if (cred_handle == NULL)\n\treturn (GSS_S_NO_CRED | GSS_S_CALL_INACCESSIBLE_READ);\n\n    \n\n    union_cred = (gss_union_cred_t) *cred_handle;\n    if (union_cred == (gss_union_cred_t)GSS_C_NO_CREDENTIAL)\n\treturn (GSS_S_COMPLETE);\n\n    if (GSSINT_CHK_LOOP(union_cred))\n\treturn (GSS_S_NO_CRED | GSS_S_CALL_INACCESSIBLE_READ);\n    *cred_handle = NULL;\n\n    status = GSS_S_COMPLETE;\n\n    for(j=0; j < union_cred->count; j++) {\n\n\tmech = gssint_get_mechanism (&union_cred->mechs_array[j]);\n\n\tif (union_cred->mechs_array[j].elements)\n\t\tfree(union_cred->mechs_array[j].elements);\n\tif (mech) {\n\t    if (mech->gss_release_cred) {\n\t\ttemp_status = mech->gss_release_cred\n\t\t    (\n\t\t     minor_status,\n\t\t     &union_cred->cred_array[j]);\n\n\t\tif (temp_status != GSS_S_COMPLETE) {\n\t\t    map_error(minor_status, mech);\n\t\t    status = GSS_S_NO_CRED;\n\t\t}\n\n\t    } else\n\t\tstatus = GSS_S_UNAVAILABLE;\n\t} else\n\t    status = GSS_S_DEFECTIVE_CREDENTIAL;\n    }\n\n    free(union_cred->cred_array);\n    free(union_cred->mechs_array);\n    free(union_cred);\n\n    return(status);\n", "Selected Statement": "if (cred_handle == NULL)", "Function Input": {"cred_handle": {"value": {"type_category": "unknown", "concrete_type": "gss_cred_id_t"}}, "minor_status": {"value": {"type_category": "unknown", "concrete_type": "OM_uint32", "value": "0"}}}, "Variable Values Before Statement": {"cred_handle": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nOM_uint32\ngssint_get_mech_type(gss_OID OID, gss_buffer_t token)\n{\n    \n    if (token->length >= sizeof(NTLMSSP_SIGNATURE) &&\n\tmemcmp(token->value, NTLMSSP_SIGNATURE,\n\t       sizeof(NTLMSSP_SIGNATURE)) == 0) {\n\t*OID = gss_ntlm_mechanism_oid_desc;\n    } else if (token->length != 0 &&\n\t       ((char *)token->value)[0] == 0x6E) {\n \t\n\t*OID = gss_krb5_mechanism_oid_desc;\n    } else if (token->length == 0) {\n\t*OID = gss_spnego_mechanism_oid_desc;\n    } else {\n\treturn gssint_get_mech_type_oid(OID, token);\n    }\n\n    return (GSS_S_COMPLETE);\n", "Selected Statement": "if (sname->mech_name == GSS_C_NO_NAME)", "Function Input": {"token": {"value": "0x7fffffffde20"}}, "Variable Values Before Statement": {"sname->mech_name": "NULL", "GSS_C_NO_NAME": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nOM_uint32\ngssint_get_mech_type(gss_OID OID, gss_buffer_t token)\n{\n    \n    if (token->length >= sizeof(NTLMSSP_SIGNATURE) &&\n\tmemcmp(token->value, NTLMSSP_SIGNATURE,\n\t       sizeof(NTLMSSP_SIGNATURE)) == 0) {\n\t*OID = gss_ntlm_mechanism_oid_desc;\n    } else if (token->length != 0 &&\n\t       ((char *)token->value)[0] == 0x6E) {\n \t\n\t*OID = gss_krb5_mechanism_oid_desc;\n    } else if (token->length == 0) {\n\t*OID = gss_spnego_mechanism_oid_desc;\n    } else {\n\treturn gssint_get_mech_type_oid(OID, token);\n    }\n\n    return (GSS_S_COMPLETE);\n", "Selected Statement": "if (g_OID_equal(mech_type, &union_cred->mechs_array[i]))", "Function Input": {"token": {"value": "0x7fffffffde20"}}, "Variable Values Before Statement": {"g_OID_equal": "NULL", "mech_type": "NULL", "union_cred->mechs_array": "NULL", "i": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nOM_uint32 KRB5_CALLCONV\ngss_release_buffer(OM_uint32 *minor_status, gss_buffer_t buffer)\n{\n    if (minor_status)\n\t*minor_status = 0;\n\n    \n\n    if(buffer == GSS_C_NO_BUFFER)\n\treturn(GSS_S_COMPLETE);\n\n    if ((buffer->length) &&\n\t(buffer->value)) {\n\t    gssalloc_free(buffer->value);\n\t    buffer->length = 0;\n\t    buffer->value = NULL;\n    }\n\n    return (GSS_S_COMPLETE);\n", "Selected Statement": "if (minor_status)", "Function Input": {"buffer": {"value": "0x3"}, "minor_status": {"value": {"type_category": "unknown", "concrete_type": "OM_uint32", "value": "1"}}}, "Variable Values Before Statement": {"minor_status": "0"}, "Value After Statement Execution": "Yes", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "OM_uint32\ngssint_select_mech_type(OM_uint32 *minor, gss_const_OID oid,\n\t\t\tgss_OID *selected_oid)\n{\n\tgss_mech_info minfo;\n\tOM_uint32 status;\n\n\t*selected_oid = GSS_C_NO_OID;\n\n", "Selected Statement": "if (oidStr)", "Function Input": {}, "Variable Values Before Statement": {"oidStr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "OM_uint32\ngssint_select_mech_type(OM_uint32 *minor, gss_const_OID oid,\n\t\t\tgss_OID *selected_oid)\n{\n\tgss_mech_info minfo;\n\tOM_uint32 status;\n\n\t*selected_oid = GSS_C_NO_OID;\n\n", "Selected Statement": "if (dl != NULL)", "Function Input": {}, "Variable Values Before Statement": {"dl": "NULL"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include <unistd.h>\n\nvoid fuzzer_init(struct fuzzer_context *fuzz_ctx)\n{\n\ti_zero(fuzz_ctx);\n\tif (!lib_is_initialized()) {\n\t\tlib_init();\n\t\tlib_signals_init();\n\t\tlib_signals_ignore(SIGPIPE, TRUE);\n\t}\n\tfuzz_ctx->fd = -1;\n", "Selected Statement": "if (!lib_is_initialized())", "Function Input": {"fuzz_ctx": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"fd": {"type_category": "int", "concrete_type": "int", "value": "-2051002043"}, "fd_pump": {"type_category": "int", "concrete_type": "int", "value": "-1794162240"}, "pump": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7cb63ce <fflush+142>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x800003f7d8f741c0\n", "message": "Cannot access memory at address 0x800003f7d8f741c0"}}, "ioloop": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7cb63d6 <fflush+150>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x88bb8b4829750000\n", "message": "Cannot access memory at address 0x88bb8b4829750000"}}}}}}, "Variable Values Before Statement": {"lib_is_initialized": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include <unistd.h>\n\nvoid fuzzer_init(struct fuzzer_context *fuzz_ctx)\n{\n\ti_zero(fuzz_ctx);\n\tif (!lib_is_initialized()) {\n\t\tlib_init();\n\t\tlib_signals_init();\n\t\tlib_signals_ignore(SIGPIPE, TRUE);\n\t}\n\tfuzz_ctx->fd = -1;\n", "Selected Statement": "if (fuzz_ctx->fd > -1)", "Function Input": {"fuzz_ctx": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"fd": {"type_category": "int", "concrete_type": "int", "value": "-2051002043"}, "fd_pump": {"type_category": "int", "concrete_type": "int", "value": "-1794162240"}, "pump": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7cb63ce <fflush+142>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x800003f7d8f741c0\n", "message": "Cannot access memory at address 0x800003f7d8f741c0"}}, "ioloop": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7cb63d6 <fflush+150>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x88bb8b4829750000\n", "message": "Cannot access memory at address 0x88bb8b4829750000"}}}}}}, "Variable Values Before Statement": {"fuzz_ctx->fd": "-1"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include <unistd.h>\n\nvoid fuzzer_init(struct fuzzer_context *fuzz_ctx)\n{\n\ti_zero(fuzz_ctx);\n\tif (!lib_is_initialized()) {\n\t\tlib_init();\n\t\tlib_signals_init();\n\t\tlib_signals_ignore(SIGPIPE, TRUE);\n\t}\n\tfuzz_ctx->fd = -1;\n", "Selected Statement": "if (fuzz_ctx->ioloop != NULL)", "Function Input": {"fuzz_ctx": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"fd": {"type_category": "int", "concrete_type": "int", "value": "-2051002043"}, "fd_pump": {"type_category": "int", "concrete_type": "int", "value": "-1794162240"}, "pump": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7cb63ce <fflush+142>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x800003f7d8f741c0\n", "message": "Cannot access memory at address 0x800003f7d8f741c0"}}, "ioloop": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7ffff7cb63d6 <fflush+150>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x88bb8b4829750000\n", "message": "Cannot access memory at address 0x88bb8b4829750000"}}}}}}, "Variable Values Before Statement": {"fuzz_ctx->ioloop": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nbool lib_is_initialized(void)\n{\n", "Selected Statement": "if (dev_null_fd == -1)", "Function Input": {}, "Variable Values Before Statement": {"dev_null_fd": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nbool lib_is_initialized(void)\n{\n", "Selected Statement": "if (array_is_created(&atexit_callbacks))", "Function Input": {}, "Variable Values Before Statement": {"array_is_created": "NULL", "atexit_callbacks": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid random_init(void)\n{\n\t\n\tunsigned int seed = 0;\n\tconst char *env_seed;\n\n\tif (init_refcount++ > 0)\n\t\treturn;\n\n\tenv_seed = getenv(\"DOVECOT_SRAND\");\n#ifdef DEBUG\n\tif (env_seed != NULL && str_to_uint(env_seed, &seed) >= 0) {\n\t\tkiss_init(seed);\n\t\t\n\t\tgoto normal_exit;\n\t}\n#else\n\tif (env_seed != NULL && *env_seed != '\\0')\n\t\ti_warning(\"DOVECOT_SRAND is not available in non-debug builds\");\n#endif \n\n#if defined(USE_RANDOM_DEV)\n\trandom_open_urandom();\n#endif\n\t\n\trandom_fill(&seed, sizeof(seed));\n#ifdef DEBUG\n\tif (env_seed != NULL) {\n\t\tif (strcmp(env_seed, \"kiss\") != 0)\n\t\t\ti_fatal(\"DOVECOT_SRAND not a number or 'kiss'\");\n\t\tkiss_init(seed);\n\t\ti_close_fd(&urandom_fd);\n\t}\n\nnormal_exit:\n#endif\n\tsrand(seed);\n", "Selected Statement": "if (random_next_size > random_next_pos)", "Function Input": {"seed": {"value": "0"}}, "Variable Values Before Statement": {"random_next_size": "NULL", "random_next_pos": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid random_init(void)\n{\n\t\n\tunsigned int seed = 0;\n\tconst char *env_seed;\n\n\tif (init_refcount++ > 0)\n\t\treturn;\n\n\tenv_seed = getenv(\"DOVECOT_SRAND\");\n#ifdef DEBUG\n\tif (env_seed != NULL && str_to_uint(env_seed, &seed) >= 0) {\n\t\tkiss_init(seed);\n\t\t\n\t\tgoto normal_exit;\n\t}\n#else\n\tif (env_seed != NULL && *env_seed != '\\0')\n\t\ti_warning(\"DOVECOT_SRAND is not available in non-debug builds\");\n#endif \n\n#if defined(USE_RANDOM_DEV)\n\trandom_open_urandom();\n#endif\n\t\n\trandom_fill(&seed, sizeof(seed));\n#ifdef DEBUG\n\tif (env_seed != NULL) {\n\t\tif (strcmp(env_seed, \"kiss\") != 0)\n\t\t\ti_fatal(\"DOVECOT_SRAND not a number or 'kiss'\");\n\t\tkiss_init(seed);\n\t\ti_close_fd(&urandom_fd);\n\t}\n\nnormal_exit:\n#endif\n\tsrand(seed);\n", "Selected Statement": "if (strcmp(env_seed, \"kiss\") != 0)", "Function Input": {"seed": {"value": "0"}}, "Variable Values Before Statement": {"strcmp": "NULL", "env_seed": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid data_stack_init(void)\n{\n\tif (data_stack_initialized) {\n\t\t\n\t\treturn;\n\t}\n\tdata_stack_initialized = TRUE;\n\tdata_stack_frame_id = 1;\n\n\toutofmem_area.block.size = outofmem_area.block.left =\n\t\tsizeof(outofmem_area) - sizeof(outofmem_area.block);\n\toutofmem_area.block.canary = BLOCK_CANARY;\n\n\tcurrent_block = mem_block_alloc(INITIAL_STACK_SIZE);\n\tcurrent_frame = NULL;\n\n\tlast_buffer_block = NULL;\n\tlast_buffer_size = 0;\n\n\troot_frame_id = t_push(\"data_stack_init\");\n", "Selected Statement": "if (used_size - pos < requested_size)", "Function Input": {}, "Variable Values Before Statement": {"used_size": "NULL", "pos": "NULL", "requested_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid data_stack_init(void)\n{\n\tif (data_stack_initialized) {\n\t\t\n\t\treturn;\n\t}\n\tdata_stack_initialized = TRUE;\n\tdata_stack_frame_id = 1;\n\n\toutofmem_area.block.size = outofmem_area.block.left =\n\t\tsizeof(outofmem_area) - sizeof(outofmem_area.block);\n\toutofmem_area.block.canary = BLOCK_CANARY;\n\n\tcurrent_block = mem_block_alloc(INITIAL_STACK_SIZE);\n\tcurrent_frame = NULL;\n\n\tlast_buffer_block = NULL;\n\tlast_buffer_size = 0;\n\n\troot_frame_id = t_push(\"data_stack_init\");\n", "Selected Statement": "if (*p++ != CLEAR_CHR)", "Function Input": {}, "Variable Values Before Statement": {"p": "NULL", "CLEAR_CHR": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static char *my_domain = NULL;\n\nvoid hostpid_init(void)\n{\n\tstatic char pid[MAX_INT_STRLEN];\n\tchar hostname[256];\n\tconst char *value;\n\n\t\n\ti_free_and_null(my_hostname_dup);\n\ti_free_and_null(my_domain);\n\n\tvalue = getenv(MY_HOSTNAME_ENV);\n\tif (value == NULL) {\n\t\tif (gethostname(hostname, sizeof(hostname)-1) < 0)\n\t\t\ti_fatal(\"gethostname() failed: %m\");\n\t\thostname[sizeof(hostname)-1] = '\\0';\n\t\tvalue = hostname;\n\t}\n\n\tif (value[0] == '\\0' ||\n\t    strcspn(value, HOSTNAME_DISALLOWED_CHARS) != strlen(value))\n\t\ti_fatal(\"Invalid system hostname: '%s'\", value);\n\tmy_hostname_dup = i_strdup(value);\n\tmy_hostname = my_hostname_dup;\n\n\ti_snprintf(pid, sizeof(pid), \"%lld\", (long long)getpid());\n\tmy_pid = pid;\n", "Selected Statement": "if (value == NULL)", "Function Input": {}, "Variable Values Before Statement": {"value": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static char *my_domain = NULL;\n\nvoid hostpid_init(void)\n{\n\tstatic char pid[MAX_INT_STRLEN];\n\tchar hostname[256];\n\tconst char *value;\n\n\t\n\ti_free_and_null(my_hostname_dup);\n\ti_free_and_null(my_domain);\n\n\tvalue = getenv(MY_HOSTNAME_ENV);\n\tif (value == NULL) {\n\t\tif (gethostname(hostname, sizeof(hostname)-1) < 0)\n\t\t\ti_fatal(\"gethostname() failed: %m\");\n\t\thostname[sizeof(hostname)-1] = '\\0';\n\t\tvalue = hostname;\n\t}\n\n\tif (value[0] == '\\0' ||\n\t    strcspn(value, HOSTNAME_DISALLOWED_CHARS) != strlen(value))\n\t\ti_fatal(\"Invalid system hostname: '%s'\", value);\n\tmy_hostname_dup = i_strdup(value);\n\tmy_hostname = my_hostname_dup;\n\n\ti_snprintf(pid, sizeof(pid), \"%lld\", (long long)getpid());\n\tmy_pid = pid;\n", "Selected Statement": "if (gethostname(hostname, sizeof(hostname)-1) < 0)", "Function Input": {}, "Variable Values Before Statement": {"gethostname": "NULL", "hostname": "\"\\001\\000\\000\\000\\000\\000\\000\\000(\\000\\000\\000\\000\\000\\000\\000(\\000\\000\\000\\000\\000\\000\\000\\310\\f\\a\\001\\000\\000\\000\\000\\260\\335\\377\\377\\377\\177\\000\\001(\\000\\000\\000\\000\\000\\000\\000(\\200\\000\\000\\000\\000\\000\\000\\000&,\\267\\034ef\\a\\001\\000\\000\\000\\000\\325\\253]\\000\\000\\000\\000\\000\\240\\f\\a\\001\\001\\000\\000\\000P\\336\\377\\377\\377\\177\\000\\0001\\357N\\000\\000\\000\\000\""}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "static char *my_domain = NULL;\n\nvoid hostpid_init(void)\n{\n\tstatic char pid[MAX_INT_STRLEN];\n\tchar hostname[256];\n\tconst char *value;\n\n\t\n\ti_free_and_null(my_hostname_dup);\n\ti_free_and_null(my_domain);\n\n\tvalue = getenv(MY_HOSTNAME_ENV);\n\tif (value == NULL) {\n\t\tif (gethostname(hostname, sizeof(hostname)-1) < 0)\n\t\t\ti_fatal(\"gethostname() failed: %m\");\n\t\thostname[sizeof(hostname)-1] = '\\0';\n\t\tvalue = hostname;\n\t}\n\n\tif (value[0] == '\\0' ||\n\t    strcspn(value, HOSTNAME_DISALLOWED_CHARS) != strlen(value))\n\t\ti_fatal(\"Invalid system hostname: '%s'\", value);\n\tmy_hostname_dup = i_strdup(value);\n\tmy_hostname = my_hostname_dup;\n\n\ti_snprintf(pid, sizeof(pid), \"%lld\", (long long)getpid());\n\tmy_pid = pid;\n", "Selected Statement": "if (name == NULL)", "Function Input": {}, "Variable Values Before Statement": {"name": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nchar *p_strdup(pool_t pool, const char *str)\n{\n\tvoid *mem;\n\tsize_t len;\n\n\tif (str == NULL)\n                return NULL;\n\n\tlen = strlen(str) + 1;\n\tmem = p_malloc(pool, len);\n\tmemcpy(mem, str, len);\n\treturn mem;\n", "Selected Statement": "if (new_line && str_len(out) > 0)", "Function Input": {}, "Variable Values Before Statement": {"new_line": "NULL", "str_len": "NULL", "out": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nchar *p_strdup(pool_t pool, const char *str)\n{\n\tvoid *mem;\n\tsize_t len;\n\n\tif (str == NULL)\n                return NULL;\n\n\tlen = strlen(str) + 1;\n\tmem = p_malloc(pool, len);\n\tmemcpy(mem, str, len);\n\treturn mem;\n", "Selected Statement": "if (ret != 0)", "Function Input": {}, "Variable Values Before Statement": {"ret": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic void *pool_system_malloc(pool_t pool ATTR_UNUSED, size_t size)\n{\n\tvoid *mem;\n#ifdef DEBUG\n\tint old_errno = errno;\n#endif\n\n\tmem = calloc(size, 1);\n\tif (unlikely(mem == NULL)) {\n\t\ti_fatal_status(FATAL_OUTOFMEM, \"pool_system_malloc(%zu): \"\n\t\t\t       \"Out of memory\", size);\n\t}\n#ifdef DEBUG\n\t\n\ti_assert(errno == old_errno);\n#endif\n", "Selected Statement": "if (old_size < new_size)", "Function Input": {}, "Variable Values Before Statement": {"old_size": "NULL", "new_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic void *pool_system_malloc(pool_t pool ATTR_UNUSED, size_t size)\n{\n\tvoid *mem;\n#ifdef DEBUG\n\tint old_errno = errno;\n#endif\n\n\tmem = calloc(size, 1);\n\tif (unlikely(mem == NULL)) {\n\t\ti_fatal_status(FATAL_OUTOFMEM, \"pool_system_malloc(%zu): \"\n\t\t\t       \"Out of memory\", size);\n\t}\n#ifdef DEBUG\n\t\n\ti_assert(errno == old_errno);\n#endif\n", "Selected Statement": "if (unlikely(mem == NULL))", "Function Input": {}, "Variable Values Before Statement": {"unlikely": "NULL", "mem": "VOID"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nconst char *printf_format_fix_unsafe(const char *format)\n{\n\tsize_t len;\n\n", "Selected Statement": "if (*p == '%')", "Function Input": {}, "Variable Values Before Statement": {"p": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nconst char *printf_format_fix_unsafe(const char *format)\n{\n\tsize_t len;\n\n", "Selected Statement": "if (*++p == 'l')", "Function Input": {}, "Variable Values Before Statement": {"p": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include <sys/un.h>\n\nvoid fd_close_on_exec(int fd, bool set)\n{\n\tint flags;\n\n\tflags = fcntl(fd, F_GETFD, 0);\n\tif (flags < 0)\n\t\ti_fatal(\"fcntl(F_GETFD, %d) failed: %m\", fd);\n\n\tflags = set ? (flags | FD_CLOEXEC) : (flags & ~FD_CLOEXEC);\n\tif (fcntl(fd, F_SETFD, flags) < 0)\n\t\ti_fatal(\"fcntl(F_SETFD, %d) failed: %m\", fd);\n", "Selected Statement": "if (*fdp[i] == -1)", "Function Input": {"fd": {"value": "32767"}, "set": {"value": "255"}}, "Variable Values Before Statement": {"fdp": "NULL", "i": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include <sys/un.h>\n\nvoid fd_close_on_exec(int fd, bool set)\n{\n\tint flags;\n\n\tflags = fcntl(fd, F_GETFD, 0);\n\tif (flags < 0)\n\t\ti_fatal(\"fcntl(F_GETFD, %d) failed: %m\", fd);\n\n\tflags = set ? (flags | FD_CLOEXEC) : (flags & ~FD_CLOEXEC);\n\tif (fcntl(fd, F_SETFD, flags) < 0)\n\t\ti_fatal(\"fcntl(F_SETFD, %d) failed: %m\", fd);\n", "Selected Statement": "if (net_getsockname(fd, &addr, &port) == 0)", "Function Input": {"fd": {"value": "32767"}, "set": {"value": "255"}}, "Variable Values Before Statement": {"net_getsockname": "NULL", "fd": "int", "addr": "NULL", "port": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid lib_event_init(void)\n{\n\ti_array_init(&event_handlers, 4);\n\ti_array_init(&event_category_callbacks, 4);\n\ti_array_init(&event_registered_categories_internal, 16);\n\ti_array_init(&event_registered_categories_representative, 16);\n", "Selected Statement": "if (!array_is_created(&event->pointers))", "Function Input": {}, "Variable Values Before Statement": {"array_is_created": "NULL", "event->pointers": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid lib_event_init(void)\n{\n\ti_array_init(&event_handlers, 4);\n\ti_array_init(&event_category_callbacks, 4);\n\ti_array_init(&event_registered_categories_internal, 16);\n\ti_array_init(&event_registered_categories_representative, 16);\n", "Selected Statement": "if (strcmp(p->key, key) == 0)", "Function Input": {}, "Variable Values Before Statement": {"strcmp": "NULL", "p->key": "NULL", "key": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nbuffer_t *buffer_create_dynamic_max(pool_t pool, size_t init_size,\n\t\t\t\t    size_t max_size)\n{\n\tstruct real_buffer *buf;\n\n#ifdef DEBUG\n\t\n\ti_assert(init_size < SIZE_MAX);\n#endif\n\n\tbuf = p_new(pool, struct real_buffer, 1);\n\tbuf->pool = pool;\n\tbuf->dynamic = TRUE;\n\tbuf->max_size = max_size;\n\t\n\tbuffer_alloc(buf, init_size+1);\n", "Selected Statement": "if (pos >= buf->used)", "Function Input": {"buf": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x30\n", "message": "Cannot access memory at address 0x30"}}}, "Variable Values Before Statement": {"pos": "NULL", "buf->used": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "\nbuffer_t *buffer_create_dynamic_max(pool_t pool, size_t init_size,\n\t\t\t\t    size_t max_size)\n{\n\tstruct real_buffer *buf;\n\n#ifdef DEBUG\n\t\n\ti_assert(init_size < SIZE_MAX);\n#endif\n\n\tbuf = p_new(pool, struct real_buffer, 1);\n\tbuf->pool = pool;\n\tbuf->dynamic = TRUE;\n\tbuf->max_size = max_size;\n\t\n\tbuffer_alloc(buf, init_size+1);\n", "Selected Statement": "if (buf->pool != NULL)", "Function Input": {"buf": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x30\n", "message": "Cannot access memory at address 0x30"}}}, "Variable Values Before Statement": {"buf->pool": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid event_filter_init(void)\n{\n\tevent_category_register_callback(event_filter_category_registered);\n", "Selected Statement": "if (strcmp(name, event_filter_log_type_map[i].name) == 0)", "Function Input": {}, "Variable Values Before Statement": {"strcmp": "NULL", "name": "NULL", "event_filter_log_type_map[i].name": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid event_filter_init(void)\n{\n\tevent_category_register_callback(event_filter_category_registered);\n", "Selected Statement": "if (filter->named_queries_only && event->sending_name == NULL)", "Function Input": {}, "Variable Values Before Statement": {"filter->named_queries_only": "NULL", "event->sending_name": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid var_expand_extensions_init(void)\n{\n\ti_array_init(&var_expand_extensions, 32);\n\n\t\n\tfor(const struct hash_method **meth = hash_methods;\n\t    *meth != NULL;\n\t    meth++) {\n\t\tstruct var_expand_extension_func_table *func =\n\t\t\tarray_append_space(&var_expand_extensions);\n\t\tfunc->key = (*meth)->name;\n\t\tfunc->func = var_expand_hash;\n\t}\n\n\t\n\tstruct var_expand_extension_func_table *func =\n\t\tarray_append_space(&var_expand_extensions);\n\tfunc->key = \"pkcs5\";\n\tfunc->func = var_expand_hash;\n\n\t\n\tfunc = array_append_space(&var_expand_extensions);\n\tfunc->key = \"if\";\n\tfunc->func = var_expand_if;\n\n\t\n\tfunc = array_append_space(&var_expand_extensions);\n\tfunc->key = \"system\";\n\tfunc->func = var_expand_system;\n\n\t\n\tfunc = array_append_space(&var_expand_extensions);\n\tfunc->key = \"process\";\n\tfunc->func = var_expand_process;\n", "Selected Statement": "if (strcmp(key, \"env\") == 0)", "Function Input": {}, "Variable Values Before Statement": {"strcmp": "NULL", "key": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid var_expand_extensions_init(void)\n{\n\ti_array_init(&var_expand_extensions, 32);\n\n\t\n\tfor(const struct hash_method **meth = hash_methods;\n\t    *meth != NULL;\n\t    meth++) {\n\t\tstruct var_expand_extension_func_table *func =\n\t\t\tarray_append_space(&var_expand_extensions);\n\t\tfunc->key = (*meth)->name;\n\t\tfunc->func = var_expand_hash;\n\t}\n\n\t\n\tstruct var_expand_extension_func_table *func =\n\t\tarray_append_space(&var_expand_extensions);\n\tfunc->key = \"pkcs5\";\n\tfunc->func = var_expand_hash;\n\n\t\n\tfunc = array_append_space(&var_expand_extensions);\n\tfunc->key = \"if\";\n\tfunc->func = var_expand_if;\n\n\t\n\tfunc = array_append_space(&var_expand_extensions);\n\tfunc->key = \"system\";\n\tfunc->func = var_expand_system;\n\n\t\n\tfunc = array_append_space(&var_expand_extensions);\n\tfunc->key = \"process\";\n\tfunc->func = var_expand_process;\n", "Selected Statement": "if (salt->used > 0)", "Function Input": {}, "Variable Values Before Statement": {"salt->used": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid lib_signals_init(void)\n{\n\tint i;\n\n\tsignals_initialized = TRUE;\n\tio_loop_add_switch_callback(lib_signals_ioloop_switched);\n\tio_loop_add_destroy_callback(lib_signals_ioloop_destroyed);\n\n\t\n\tfor (i = 0; i < MAX_SIGNAL_VALUE; i++) {\n\t\tif (signal_handlers[i] != NULL)\n\t\t\tlib_signals_set(i, signal_handlers[i]->flags);\n\t}\n", "Selected Statement": "if (h->delayed_handler != NULL && sig_pipe_fd[0] == -1)", "Function Input": {}, "Variable Values Before Statement": {"h->delayed_handler": "NULL", "sig_pipe_fd": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid lib_signals_init(void)\n{\n\tint i;\n\n\tsignals_initialized = TRUE;\n\tio_loop_add_switch_callback(lib_signals_ioloop_switched);\n\tio_loop_add_destroy_callback(lib_signals_ioloop_destroyed);\n\n\t\n\tfor (i = 0; i < MAX_SIGNAL_VALUE; i++) {\n\t\tif (signal_handlers[i] != NULL)\n\t\t\tlib_signals_set(i, signal_handlers[i]->flags);\n\t}\n", "Selected Statement": "if (l->ioloop == ioloop)", "Function Input": {}, "Variable Values Before Statement": {"l->ioloop": "NULL", "ioloop": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid io_loop_add_switch_callback(io_switch_callback_t *callback)\n{\n\tif (!array_is_created(&io_switch_callbacks)) {\n\t\ti_array_init(&io_switch_callbacks, 4);\n\t\tlib_atexit_priority(io_switch_callbacks_free, LIB_ATEXIT_PRIORITY_LOW);\n\t}\n\tarray_push_back(&io_switch_callbacks, &callback);\n", "Selected Statement": "if (!array_is_created(&io_switch_callbacks))", "Function Input": {}, "Variable Values Before Statement": {"array_is_created": "NULL", "io_switch_callbacks": {"arr": null, "v": null, "v_modifiable": null}}, "Value After Statement Execution": "Yes", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid io_loop_add_switch_callback(io_switch_callback_t *callback)\n{\n\tif (!array_is_created(&io_switch_callbacks)) {\n\t\ti_array_init(&io_switch_callbacks, 4);\n\t\tlib_atexit_priority(io_switch_callbacks_free, LIB_ATEXIT_PRIORITY_LOW);\n\t}\n\tarray_push_back(&io_switch_callbacks, &callback);\n", "Selected Statement": "if (tv_now->tv_sec == 0)", "Function Input": {}, "Variable Values Before Statement": {"tv_now->tv_sec": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid io_loop_add_switch_callback(io_switch_callback_t *callback)\n{\n\tif (!array_is_created(&io_switch_callbacks)) {\n\t\ti_array_init(&io_switch_callbacks, 4);\n\t\tlib_atexit_priority(io_switch_callbacks_free, LIB_ATEXIT_PRIORITY_LOW);\n\t}\n\tarray_push_back(&io_switch_callbacks, &callback);\n", "Selected Statement": "if (panic_on_leak)", "Function Input": {}, "Variable Values Before Statement": {"panic_on_leak": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstruct istream *test_istream_create_data(const void *data, size_t size)\n{\n\tstruct test_istream *tstream;\n\n\ttstream = i_new(struct test_istream, 1);\n\ttstream->orig_buffer = data;\n\n\ttstream->istream.read = test_read;\n\ttstream->istream.seek = test_seek;\n\n\ttstream->istream.istream.blocking = FALSE;\n\ttstream->istream.istream.seekable = TRUE;\n\ti_stream_create(&tstream->istream, NULL, -1, 0);\n\ttstream->istream.statbuf.st_size = tstream->max_pos = size;\n\ttstream->allow_eof = TRUE;\n\ttstream->istream.max_buffer_size = SIZE_MAX;\n", "Selected Statement": "if (stream->memarea != NULL)", "Function Input": {}, "Variable Values Before Statement": {"stream->memarea": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstruct istream *test_istream_create_data(const void *data, size_t size)\n{\n\tstruct test_istream *tstream;\n\n\ttstream = i_new(struct test_istream, 1);\n\ttstream->orig_buffer = data;\n\n\ttstream->istream.read = test_read;\n\ttstream->istream.seek = test_seek;\n\n\ttstream->istream.istream.blocking = FALSE;\n\ttstream->istream.istream.seekable = TRUE;\n\ti_stream_create(&tstream->istream, NULL, -1, 0);\n\ttstream->istream.statbuf.st_size = tstream->max_pos = size;\n\ttstream->allow_eof = TRUE;\n\ttstream->istream.max_buffer_size = SIZE_MAX;\n", "Selected Statement": "if (in->real_stream->read == test_read)", "Function Input": {}, "Variable Values Before Statement": {"in->real_stream->read": "NULL", "test_read": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "struct istream *\ni_stream_create(struct istream_private *_stream, struct istream *parent, int fd,\n\t\tenum istream_create_flag flags)\n{\n\tbool noop_snapshot = (flags & ISTREAM_CREATE_FLAG_NOOP_SNAPSHOT) != 0;\n\n\t_stream->fd = fd;\n\tif (parent != NULL)\n\t\ti_stream_init_parent(_stream, parent);\n\telse if (_stream->memarea == NULL && !noop_snapshot) {\n\t\t\n\t\t_stream->memarea = memarea_init_empty();\n\t}\n\t_stream->istream.real_stream = _stream;\n\n\tif (_stream->iostream.close == NULL)\n\t\t_stream->iostream.close = i_stream_default_close;\n\tif (_stream->iostream.destroy == NULL)\n\t\t_stream->iostream.destroy = i_stream_default_destroy;\n\tif (_stream->seek == NULL) {\n\t\t_stream->seek = _stream->istream.seekable ?\n\t\t\ti_stream_default_seek_seekable :\n\t\t\ti_stream_default_seek_nonseekable;\n\t}\n\tif (_stream->stat == NULL)\n\t\t_stream->stat = i_stream_default_stat;\n\tif (_stream->get_size == NULL)\n\t\t_stream->get_size = i_stream_default_get_size;\n\tif (_stream->snapshot == NULL) {\n\t\t_stream->snapshot = noop_snapshot ?\n\t\t\ti_stream_noop_snapshot :\n\t\t\ti_stream_default_snapshot;\n\t}\n\tif (_stream->iostream.set_max_buffer_size == NULL) {\n\t\t_stream->iostream.set_max_buffer_size =\n\t\t\ti_stream_default_set_max_buffer_size;\n\t}\n\tif (_stream->init_buffer_size == 0)\n\t\t_stream->init_buffer_size = I_STREAM_MIN_SIZE;\n\n\ti_zero(&_stream->statbuf);\n\t_stream->statbuf.st_size = -1;\n\t_stream->statbuf.st_atime =\n\t\t_stream->statbuf.st_mtime =\n\t\t_stream->statbuf.st_ctime = ioloop_time;\n\t_stream->cached_stream_size = UOFF_T_MAX;\n\n\tio_stream_init(&_stream->iostream);\n\n\tif (_stream->istream.stream_errno != 0)\n\t\t_stream->istream.eof = TRUE;\n\n", "Selected Statement": "if (_stream->get_size == NULL)", "Function Input": {}, "Variable Values Before Statement": {"_stream->get_size": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "struct istream *\ni_stream_create(struct istream_private *_stream, struct istream *parent, int fd,\n\t\tenum istream_create_flag flags)\n{\n\tbool noop_snapshot = (flags & ISTREAM_CREATE_FLAG_NOOP_SNAPSHOT) != 0;\n\n\t_stream->fd = fd;\n\tif (parent != NULL)\n\t\ti_stream_init_parent(_stream, parent);\n\telse if (_stream->memarea == NULL && !noop_snapshot) {\n\t\t\n\t\t_stream->memarea = memarea_init_empty();\n\t}\n\t_stream->istream.real_stream = _stream;\n\n\tif (_stream->iostream.close == NULL)\n\t\t_stream->iostream.close = i_stream_default_close;\n\tif (_stream->iostream.destroy == NULL)\n\t\t_stream->iostream.destroy = i_stream_default_destroy;\n\tif (_stream->seek == NULL) {\n\t\t_stream->seek = _stream->istream.seekable ?\n\t\t\ti_stream_default_seek_seekable :\n\t\t\ti_stream_default_seek_nonseekable;\n\t}\n\tif (_stream->stat == NULL)\n\t\t_stream->stat = i_stream_default_stat;\n\tif (_stream->get_size == NULL)\n\t\t_stream->get_size = i_stream_default_get_size;\n\tif (_stream->snapshot == NULL) {\n\t\t_stream->snapshot = noop_snapshot ?\n\t\t\ti_stream_noop_snapshot :\n\t\t\ti_stream_default_snapshot;\n\t}\n\tif (_stream->iostream.set_max_buffer_size == NULL) {\n\t\t_stream->iostream.set_max_buffer_size =\n\t\t\ti_stream_default_set_max_buffer_size;\n\t}\n\tif (_stream->init_buffer_size == 0)\n\t\t_stream->init_buffer_size = I_STREAM_MIN_SIZE;\n\n\ti_zero(&_stream->statbuf);\n\t_stream->statbuf.st_size = -1;\n\t_stream->statbuf.st_atime =\n\t\t_stream->statbuf.st_mtime =\n\t\t_stream->statbuf.st_ctime = ioloop_time;\n\t_stream->cached_stream_size = UOFF_T_MAX;\n\n\tio_stream_init(&_stream->iostream);\n\n\tif (_stream->istream.stream_errno != 0)\n\t\t_stream->istream.eof = TRUE;\n\n", "Selected Statement": "if (io_is_pending(io))", "Function Input": {}, "Variable Values Before Statement": {"io_is_pending": "NULL", "io": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "struct istream *\ni_stream_create(struct istream_private *_stream, struct istream *parent, int fd,\n\t\tenum istream_create_flag flags)\n{\n\tbool noop_snapshot = (flags & ISTREAM_CREATE_FLAG_NOOP_SNAPSHOT) != 0;\n\n\t_stream->fd = fd;\n\tif (parent != NULL)\n\t\ti_stream_init_parent(_stream, parent);\n\telse if (_stream->memarea == NULL && !noop_snapshot) {\n\t\t\n\t\t_stream->memarea = memarea_init_empty();\n\t}\n\t_stream->istream.real_stream = _stream;\n\n\tif (_stream->iostream.close == NULL)\n\t\t_stream->iostream.close = i_stream_default_close;\n\tif (_stream->iostream.destroy == NULL)\n\t\t_stream->iostream.destroy = i_stream_default_destroy;\n\tif (_stream->seek == NULL) {\n\t\t_stream->seek = _stream->istream.seekable ?\n\t\t\ti_stream_default_seek_seekable :\n\t\t\ti_stream_default_seek_nonseekable;\n\t}\n\tif (_stream->stat == NULL)\n\t\t_stream->stat = i_stream_default_stat;\n\tif (_stream->get_size == NULL)\n\t\t_stream->get_size = i_stream_default_get_size;\n\tif (_stream->snapshot == NULL) {\n\t\t_stream->snapshot = noop_snapshot ?\n\t\t\ti_stream_noop_snapshot :\n\t\t\ti_stream_default_snapshot;\n\t}\n\tif (_stream->iostream.set_max_buffer_size == NULL) {\n\t\t_stream->iostream.set_max_buffer_size =\n\t\t\ti_stream_default_set_max_buffer_size;\n\t}\n\tif (_stream->init_buffer_size == 0)\n\t\t_stream->init_buffer_size = I_STREAM_MIN_SIZE;\n\n\ti_zero(&_stream->statbuf);\n\t_stream->statbuf.st_size = -1;\n\t_stream->statbuf.st_atime =\n\t\t_stream->statbuf.st_mtime =\n\t\t_stream->statbuf.st_ctime = ioloop_time;\n\t_stream->cached_stream_size = UOFF_T_MAX;\n\n\tio_stream_init(&_stream->iostream);\n\n\tif (_stream->istream.stream_errno != 0)\n\t\t_stream->istream.eof = TRUE;\n\n", "Selected Statement": "if (_stream->snapshot == NULL)", "Function Input": {}, "Variable Values Before Statement": {"_stream->snapshot": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "struct istream *\ni_stream_create(struct istream_private *_stream, struct istream *parent, int fd,\n\t\tenum istream_create_flag flags)\n{\n\tbool noop_snapshot = (flags & ISTREAM_CREATE_FLAG_NOOP_SNAPSHOT) != 0;\n\n\t_stream->fd = fd;\n\tif (parent != NULL)\n\t\ti_stream_init_parent(_stream, parent);\n\telse if (_stream->memarea == NULL && !noop_snapshot) {\n\t\t\n\t\t_stream->memarea = memarea_init_empty();\n\t}\n\t_stream->istream.real_stream = _stream;\n\n\tif (_stream->iostream.close == NULL)\n\t\t_stream->iostream.close = i_stream_default_close;\n\tif (_stream->iostream.destroy == NULL)\n\t\t_stream->iostream.destroy = i_stream_default_destroy;\n\tif (_stream->seek == NULL) {\n\t\t_stream->seek = _stream->istream.seekable ?\n\t\t\ti_stream_default_seek_seekable :\n\t\t\ti_stream_default_seek_nonseekable;\n\t}\n\tif (_stream->stat == NULL)\n\t\t_stream->stat = i_stream_default_stat;\n\tif (_stream->get_size == NULL)\n\t\t_stream->get_size = i_stream_default_get_size;\n\tif (_stream->snapshot == NULL) {\n\t\t_stream->snapshot = noop_snapshot ?\n\t\t\ti_stream_noop_snapshot :\n\t\t\ti_stream_default_snapshot;\n\t}\n\tif (_stream->iostream.set_max_buffer_size == NULL) {\n\t\t_stream->iostream.set_max_buffer_size =\n\t\t\ti_stream_default_set_max_buffer_size;\n\t}\n\tif (_stream->init_buffer_size == 0)\n\t\t_stream->init_buffer_size = I_STREAM_MIN_SIZE;\n\n\ti_zero(&_stream->statbuf);\n\t_stream->statbuf.st_size = -1;\n\t_stream->statbuf.st_atime =\n\t\t_stream->statbuf.st_mtime =\n\t\t_stream->statbuf.st_ctime = ioloop_time;\n\t_stream->cached_stream_size = UOFF_T_MAX;\n\n\tio_stream_init(&_stream->iostream);\n\n\tif (_stream->istream.stream_errno != 0)\n\t\t_stream->istream.eof = TRUE;\n\n", "Selected Statement": "if (buffered >= stream->data_limit)", "Function Input": {}, "Variable Values Before Statement": {"buffered": "NULL", "stream->data_limit": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstruct memarea *memarea_init_empty(void)\n{\n\ti_assert(memarea_empty.refcount > 0);\n\tmemarea_empty.refcount++;\n", "Selected Statement": "if (--area->refcount > 0)", "Function Input": {}, "Variable Values Before Statement": {"area->refcount": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid io_stream_init(struct iostream_private *stream)\n{\n\tif (stream->close == NULL)\n\t\tstream->close = io_stream_default_close;\n\tif (stream->destroy == NULL)\n\t\tstream->destroy = io_stream_default_destroy;\n\tstream->ioloop = current_ioloop;\n\n\tstream->refcount = 1;\n", "Selected Statement": "if (!array_is_created(&stream->destroy_callbacks))", "Function Input": {}, "Variable Values Before Statement": {"array_is_created": "NULL", "stream->destroy_callbacks": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid io_stream_init(struct iostream_private *stream)\n{\n\tif (stream->close == NULL)\n\t\tstream->close = io_stream_default_close;\n\tif (stream->destroy == NULL)\n\t\tstream->destroy = io_stream_default_destroy;\n\tstream->ioloop = current_ioloop;\n\n\tstream->refcount = 1;\n", "Selected Statement": "if (input != NULL && input->stream_errno != 0)", "Function Input": {}, "Variable Values Before Statement": {"input": "NULL", "input->stream_errno": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "json_istream_create(struct istream *input, enum json_istream_type type,\n\t\t    const struct json_limits *limits,\n\t\t    enum json_parser_flags parser_flags)\n{\n\tstruct json_istream *stream;\n\n\tstream = i_new(struct json_istream, 1);\n\tstream->refcount = 1;\n\tstream->type = type;\n\n\tstream->input = input; \n\tstream->parser = json_parser_init(input, limits, parser_flags,\n\t\t\t\t\t  &parser_callbacks, (void *)stream);\n\n", "Selected Statement": "if (value->content_type == JSON_CONTENT_TYPE_STREAM)", "Function Input": {"stream": {"value": null}}, "Variable Values Before Statement": {"value->content_type": "NULL", "JSON_CONTENT_TYPE_STREAM": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "json_istream_create(struct istream *input, enum json_istream_type type,\n\t\t    const struct json_limits *limits,\n\t\t    enum json_parser_flags parser_flags)\n{\n\tstruct json_istream *stream;\n\n\tstream = i_new(struct json_istream, 1);\n\tstream->refcount = 1;\n\tstream->type = type;\n\n\tstream->input = input; \n\tstream->parser = json_parser_init(input, limits, parser_flags,\n\t\t\t\t\t  &parser_callbacks, (void *)stream);\n\n", "Selected Statement": "if (stream->closed)", "Function Input": {"stream": {"value": null}}, "Variable Values Before Statement": {"stream->closed": "false"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "json_parser_init(struct istream *input, const struct json_limits *limits,\n\t\t enum json_parser_flags flags,\n\t\t const struct json_parser_callbacks *callbacks, void *context)\n{\n\tstruct json_parser *parser;\n\n\tparser = i_new(struct json_parser, 1);\n\tparser->flags = flags;\n\n\ti_array_init(&parser->level_stack, 8);\n\n\tparser->input = input;\n\ti_stream_ref(input);\n\tparser->input_offset = input->v_offset;\n\n\tif (limits != NULL)\n\t\tparser->limits = *limits;\n\tif (parser->limits.max_string_size == 0)\n\t\tparser->limits.max_string_size = JSON_DEFAULT_MAX_STRING_SIZE;\n\tif (parser->limits.max_name_size == 0)\n\t\tparser->limits.max_name_size = JSON_DEFAULT_MAX_NAME_SIZE;\n\tif (parser->limits.max_nesting == 0)\n\t\tparser->limits.max_nesting = JSON_DEFAULT_MAX_NESTING;\n\tif (parser->limits.max_list_items == 0)\n\t\tparser->limits.max_list_items = JSON_DEFAULT_MAX_LIST_ITEMS;\n\n\tparser->callbacks = callbacks;\n\tparser->context = context;\n\n\tparser->loc.line_number = 1;\n\n", "Selected Statement": "if (*p != '.')", "Function Input": {"parser": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x88\n", "message": "Cannot access memory at address 0x88"}}}, "Variable Values Before Statement": {"p": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "json_parser_init(struct istream *input, const struct json_limits *limits,\n\t\t enum json_parser_flags flags,\n\t\t const struct json_parser_callbacks *callbacks, void *context)\n{\n\tstruct json_parser *parser;\n\n\tparser = i_new(struct json_parser, 1);\n\tparser->flags = flags;\n\n\ti_array_init(&parser->level_stack, 8);\n\n\tparser->input = input;\n\ti_stream_ref(input);\n\tparser->input_offset = input->v_offset;\n\n\tif (limits != NULL)\n\t\tparser->limits = *limits;\n\tif (parser->limits.max_string_size == 0)\n\t\tparser->limits.max_string_size = JSON_DEFAULT_MAX_STRING_SIZE;\n\tif (parser->limits.max_name_size == 0)\n\t\tparser->limits.max_name_size = JSON_DEFAULT_MAX_NAME_SIZE;\n\tif (parser->limits.max_nesting == 0)\n\t\tparser->limits.max_nesting = JSON_DEFAULT_MAX_NESTING;\n\tif (parser->limits.max_list_items == 0)\n\t\tparser->limits.max_list_items = JSON_DEFAULT_MAX_LIST_ITEMS;\n\n\tparser->callbacks = callbacks;\n\tparser->context = context;\n\n\tparser->loc.line_number = 1;\n\n", "Selected Statement": "if (ret < JSON_PARSE_OK)", "Function Input": {"parser": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x88\n", "message": "Cannot access memory at address 0x88"}}}, "Variable Values Before Statement": {"ret": "NULL", "JSON_PARSE_OK": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "json_parser_init(struct istream *input, const struct json_limits *limits,\n\t\t enum json_parser_flags flags,\n\t\t const struct json_parser_callbacks *callbacks, void *context)\n{\n\tstruct json_parser *parser;\n\n\tparser = i_new(struct json_parser, 1);\n\tparser->flags = flags;\n\n\ti_array_init(&parser->level_stack, 8);\n\n\tparser->input = input;\n\ti_stream_ref(input);\n\tparser->input_offset = input->v_offset;\n\n\tif (limits != NULL)\n\t\tparser->limits = *limits;\n\tif (parser->limits.max_string_size == 0)\n\t\tparser->limits.max_string_size = JSON_DEFAULT_MAX_STRING_SIZE;\n\tif (parser->limits.max_name_size == 0)\n\t\tparser->limits.max_name_size = JSON_DEFAULT_MAX_NAME_SIZE;\n\tif (parser->limits.max_nesting == 0)\n\t\tparser->limits.max_nesting = JSON_DEFAULT_MAX_NESTING;\n\tif (parser->limits.max_list_items == 0)\n\t\tparser->limits.max_list_items = JSON_DEFAULT_MAX_LIST_ITEMS;\n\n\tparser->callbacks = callbacks;\n\tparser->context = context;\n\n\tparser->loc.line_number = 1;\n\n", "Selected Statement": "if (limits != NULL)", "Function Input": {"parser": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x88\n", "message": "Cannot access memory at address 0x88"}}}, "Variable Values Before Statement": {"limits": {"max_name_size": "1024", "max_string_size": "1024", "max_nesting": "10", "max_list_items": "1024"}}, "Value After Statement Execution": "Yes", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstruct json_tree *json_tree_create(void)\n{\n\tstruct json_tree *jtree;\n\tpool_t pool;\n\n\tpool = pool_alloconly_create(\"json tree\", 1024);\n\tjtree = json_tree_create_pool(pool);\n\tpool_unref(&pool);\n\n", "Selected Statement": "if (!json_tree_node_is_string(member))", "Function Input": {}, "Variable Values Before Statement": {"json_tree_node_is_string": "NULL", "member": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstruct json_tree *json_tree_create(void)\n{\n\tstruct json_tree *jtree;\n\tpool_t pool;\n\n\tpool = pool_alloconly_create(\"json tree\", 1024);\n\tjtree = json_tree_create_pool(pool);\n\tpool_unref(&pool);\n\n", "Selected Statement": "if (array_is_created(&jtree->subtrees))", "Function Input": {}, "Variable Values Before Statement": {"array_is_created": "NULL", "jtree->subtrees": "{arr = {buffer = 0x0, element_size = 0}, v = 0x0, v_modifiable = 0x0}"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#endif\n\npool_t pool_alloconly_create(const char *name ATTR_UNUSED, size_t size)\n{\n\tstruct alloconly_pool apool, *new_apool;\n\tsize_t min_alloc = SIZEOF_POOLBLOCK +\n\t\tMEM_ALIGN(sizeof(struct alloconly_pool) + SENTRY_COUNT);\n\n\t(void) COMPILE_ERROR_IF_TRUE(POOL_ALLOCONLY_MAX_EXTRA >\n\t\t\t\t     (SSIZE_T_MAX - POOL_MAX_ALLOC_SIZE));\n\n#ifdef DEBUG\n\tmin_alloc += MEM_ALIGN(strlen(name) + 1 + SENTRY_COUNT) +\n\t\tsizeof(size_t)*2;\n#endif\n\n\t\n\ti_zero(&apool);\n\tapool.pool = static_alloconly_pool;\n\tapool.refcount = 1;\n\n\tif (size < min_alloc)\n\t\tsize = nearest_power(size + min_alloc);\n\tblock_alloc(&apool, size);\n\n\t\n\tnew_apool = p_new(&apool.pool, struct alloconly_pool, 1);\n\t*new_apool = apool;\n#ifdef DEBUG\n\tif (str_begins(name, MEMPOOL_GROWING, &name) ||\n\t    getenv(\"DEBUG_SILENT\") != NULL)\n\t\tnew_apool->disable_warning = TRUE;\n\tnew_apool->name = p_strdup(&new_apool->pool, name);\n\n\t\n\tnew_apool->base_size = new_apool->block->size - new_apool->block->left;\n\tnew_apool->block->last_alloc_size = 0;\n#endif\n\t\n\ti_assert(new_apool->block->prev == NULL);\n\n", "Selected Statement": "if (size <= apool->block->size)", "Function Input": {}, "Variable Values Before Statement": {"size": "1024", "apool->block->size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#endif\n\npool_t pool_alloconly_create(const char *name ATTR_UNUSED, size_t size)\n{\n\tstruct alloconly_pool apool, *new_apool;\n\tsize_t min_alloc = SIZEOF_POOLBLOCK +\n\t\tMEM_ALIGN(sizeof(struct alloconly_pool) + SENTRY_COUNT);\n\n\t(void) COMPILE_ERROR_IF_TRUE(POOL_ALLOCONLY_MAX_EXTRA >\n\t\t\t\t     (SSIZE_T_MAX - POOL_MAX_ALLOC_SIZE));\n\n#ifdef DEBUG\n\tmin_alloc += MEM_ALIGN(strlen(name) + 1 + SENTRY_COUNT) +\n\t\tsizeof(size_t)*2;\n#endif\n\n\t\n\ti_zero(&apool);\n\tapool.pool = static_alloconly_pool;\n\tapool.refcount = 1;\n\n\tif (size < min_alloc)\n\t\tsize = nearest_power(size + min_alloc);\n\tblock_alloc(&apool, size);\n\n\t\n\tnew_apool = p_new(&apool.pool, struct alloconly_pool, 1);\n\t*new_apool = apool;\n#ifdef DEBUG\n\tif (str_begins(name, MEMPOOL_GROWING, &name) ||\n\t    getenv(\"DEBUG_SILENT\") != NULL)\n\t\tnew_apool->disable_warning = TRUE;\n\tnew_apool->name = p_strdup(&new_apool->pool, name);\n\n\t\n\tnew_apool->base_size = new_apool->block->size - new_apool->block->left;\n\tnew_apool->block->last_alloc_size = 0;\n#endif\n\t\n\ti_assert(new_apool->block->prev == NULL);\n\n", "Selected Statement": "if (data[i] != CLEAR_CHR)", "Function Input": {}, "Variable Values Before Statement": {"data": "NULL", "i": "NULL", "CLEAR_CHR": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid *array_idx_get_space_i(struct array *array, unsigned int idx)\n{\n\treturn buffer_get_space_unsafe(array->buffer, idx * array->element_size,\n", "Selected Statement": "if (count == 0)", "Function Input": {"array": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"buffer": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x1070010", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1\n", "message": "Cannot access memory at address 0x1"}}, "element_size": {"type_category": "unknown", "concrete_type": "size_t", "value": "1024"}}}}, "idx": {"value": "0"}}, "Variable Values Before Statement": {"count": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid *array_idx_get_space_i(struct array *array, unsigned int idx)\n{\n\treturn buffer_get_space_unsafe(array->buffer, idx * array->element_size,\n", "Selected Statement": "if (!array_is_created_i(array2))", "Function Input": {"array": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"buffer": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x1070010", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1\n", "message": "Cannot access memory at address 0x1"}}, "element_size": {"type_category": "unknown", "concrete_type": "size_t", "value": "1024"}}}}, "idx": {"value": "0"}}, "Variable Values Before Statement": {"array_is_created_i": "NULL", "array2": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid pool_external_refs_unref(pool_t pool)\n{\n\tif (array_is_created(&pool->external_refs)) {\n\t\tpool_t external_pool;\n\t\tarray_foreach_elem(&pool->external_refs, external_pool)\n\t\t\tpool_unref(&external_pool);\n\t\tarray_free(&pool->external_refs);\n\t}\n", "Selected Statement": "if (easy_size < exp_size && easy_size >= min_size)", "Function Input": {"pool": {"value": "0x17"}}, "Variable Values Before Statement": {"easy_size": "NULL", "exp_size": "NULL", "min_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid pool_external_refs_unref(pool_t pool)\n{\n\tif (array_is_created(&pool->external_refs)) {\n\t\tpool_t external_pool;\n\t\tarray_foreach_elem(&pool->external_refs, external_pool)\n\t\t\tpool_unref(&external_pool);\n\t\tarray_free(&pool->external_refs);\n\t}\n", "Selected Statement": "if (!array_is_created(&pool->external_refs))", "Function Input": {"pool": {"value": "0x17"}}, "Variable Values Before Statement": {"array_is_created": "NULL", "pool->external_refs": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid str_free(string_t **str)\n{\n\tif (str == NULL || *str == NULL)\n\t\treturn;\n\n\tbuffer_free(str);\n", "Selected Statement": "if (size <= len)", "Function Input": {"str": {"value": {"type_category": "pointer", "concrete_type": "NULL"}}}, "Variable Values Before Statement": {"size": "NULL", "len": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid str_free(string_t **str)\n{\n\tif (str == NULL || *str == NULL)\n\t\treturn;\n\n\tbuffer_free(str);\n", "Selected Statement": "if (str1->used != str2->used)", "Function Input": {"str": {"value": {"type_category": "pointer", "concrete_type": "NULL"}}}, "Variable Values Before Statement": {"str1->used": "NULL", "str2->used": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid str_free(string_t **str)\n{\n\tif (str == NULL || *str == NULL)\n\t\treturn;\n\n\tbuffer_free(str);\n", "Selected Statement": "if (str == NULL || *str == NULL)", "Function Input": {"str": {"value": {"type_category": "pointer", "concrete_type": "NULL"}}}, "Variable Values Before Statement": {"str": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid iostream_pump_destroy(struct iostream_pump **_pump)\n{\n\ti_assert(_pump != NULL);\n\tstruct iostream_pump *pump = *_pump;\n\n\tif (pump == NULL)\n\t\treturn;\n\n\t*_pump = NULL;\n\n\tiostream_pump_stop(pump);\n\to_stream_unref(&pump->output);\n\ti_stream_unref(&pump->input);\n\n\tiostream_pump_unref(&pump);\n", "Selected Statement": "if (--pump->refcount > 0)", "Function Input": {"pump": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"refcount": {"type_category": "int", "concrete_type": "int", "value": "-8368"}, "input": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdea8", "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"v_offset": {"type_category": "unknown", "concrete_type": "uoff_t", "value": "44139455137892"}, "stream_errno": {"type_category": "int", "concrete_type": "int", "value": "1300973568"}, "mmaped": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "blocking": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "closed": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "readable_fd": {"type_category": "unknown", "concrete_type": "_Bool", "value": "true"}, "seekable": {"type_category": "unknown", "concrete_type": "_Bool", "value": "true"}, "eof": {"type_category": "unknown", "concrete_type": "_Bool", "value": "true"}, "real_stream": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x4d3ae9 <LLVMFuzzerTestOneInput+649>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xc0310000000b850f\n", "message": "Cannot access memory at address 0xc0310000000b850f"}}}}}, "output": {"type_category": "pointer", "concrete_type": "NULL"}, "io": {"type_category": "pointer", "concrete_type": "NULL"}, "callback": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdec0", "value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xffffffff01001000\n", "message": "Cannot access memory at address 0xffffffff01001000"}}, "context": {"type_category": "pointer", "concrete_type": "VOID"}, "waiting_output": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "completed": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}}}}}, "Variable Values Before Statement": {"pump->refcount": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid iostream_pump_destroy(struct iostream_pump **_pump)\n{\n\ti_assert(_pump != NULL);\n\tstruct iostream_pump *pump = *_pump;\n\n\tif (pump == NULL)\n\t\treturn;\n\n\t*_pump = NULL;\n\n\tiostream_pump_stop(pump);\n\to_stream_unref(&pump->output);\n\ti_stream_unref(&pump->input);\n\n\tiostream_pump_unref(&pump);\n", "Selected Statement": "if (pump->output != NULL)", "Function Input": {"pump": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"refcount": {"type_category": "int", "concrete_type": "int", "value": "-8368"}, "input": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdea8", "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"v_offset": {"type_category": "unknown", "concrete_type": "uoff_t", "value": "44139455137892"}, "stream_errno": {"type_category": "int", "concrete_type": "int", "value": "1300973568"}, "mmaped": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "blocking": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "closed": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "readable_fd": {"type_category": "unknown", "concrete_type": "_Bool", "value": "true"}, "seekable": {"type_category": "unknown", "concrete_type": "_Bool", "value": "true"}, "eof": {"type_category": "unknown", "concrete_type": "_Bool", "value": "true"}, "real_stream": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x4d3ae9 <LLVMFuzzerTestOneInput+649>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xc0310000000b850f\n", "message": "Cannot access memory at address 0xc0310000000b850f"}}}}}, "output": {"type_category": "pointer", "concrete_type": "NULL"}, "io": {"type_category": "pointer", "concrete_type": "NULL"}, "callback": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdec0", "value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xffffffff01001000\n", "message": "Cannot access memory at address 0xffffffff01001000"}}, "context": {"type_category": "pointer", "concrete_type": "VOID"}, "waiting_output": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "completed": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}}}}}, "Variable Values Before Statement": {"pump->output": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nvoid iostream_pump_destroy(struct iostream_pump **_pump)\n{\n\ti_assert(_pump != NULL);\n\tstruct iostream_pump *pump = *_pump;\n\n\tif (pump == NULL)\n\t\treturn;\n\n\t*_pump = NULL;\n\n\tiostream_pump_stop(pump);\n\to_stream_unref(&pump->output);\n\ti_stream_unref(&pump->input);\n\n\tiostream_pump_unref(&pump);\n", "Selected Statement": "if (pump == NULL)", "Function Input": {"pump": {"value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"refcount": {"type_category": "int", "concrete_type": "int", "value": "-8368"}, "input": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdea8", "value": {"type_category": "struct", "concrete_type": "STRUCT", "value": {"v_offset": {"type_category": "unknown", "concrete_type": "uoff_t", "value": "44139455137892"}, "stream_errno": {"type_category": "int", "concrete_type": "int", "value": "1300973568"}, "mmaped": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "blocking": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "closed": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "readable_fd": {"type_category": "unknown", "concrete_type": "_Bool", "value": "true"}, "seekable": {"type_category": "unknown", "concrete_type": "_Bool", "value": "true"}, "eof": {"type_category": "unknown", "concrete_type": "_Bool", "value": "true"}, "real_stream": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x4d3ae9 <LLVMFuzzerTestOneInput+649>", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xc0310000000b850f\n", "message": "Cannot access memory at address 0xc0310000000b850f"}}}}}, "output": {"type_category": "pointer", "concrete_type": "NULL"}, "io": {"type_category": "pointer", "concrete_type": "NULL"}, "callback": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0x7fffffffdec0", "value": {"type_category": "unknown", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xffffffff01001000\n", "message": "Cannot access memory at address 0xffffffff01001000"}}, "context": {"type_category": "pointer", "concrete_type": "VOID"}, "waiting_output": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}, "completed": {"type_category": "unknown", "concrete_type": "_Bool", "value": "false"}}}}}, "Variable Values Before Statement": {"pump": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint uni_utf8_get_char_buf(const void *buffer, size_t size, unichar_t *chr_r)\n{\n", "Selected Statement": "if (*chr < uni16_decomp_keys[0])", "Function Input": {}, "Variable Values Before Statement": {"chr": "NULL", "uni16_decomp_keys": [{"type_category": "unknown", "concrete_type": "uint16_t", "value": "688"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "689"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "690"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "691"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "692"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "693"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "694"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "695"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "696"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "736"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "737"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "738"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "739"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "740"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "832"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "833"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "835"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "884"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "894"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "903"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "978"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "1012"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "1017"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "3852"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "4348"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7468"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7469"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7470"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7472"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7473"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7474"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7475"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7476"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7477"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7478"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7479"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7480"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7481"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7482"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7484"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7485"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7486"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7487"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7488"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7489"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7490"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7491"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7492"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7493"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7494"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7495"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7496"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7497"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7498"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7499"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7500"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7501"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7503"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7504"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7505"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7506"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7507"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7508"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7509"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7510"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7511"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7512"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7513"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7514"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7515"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7516"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7517"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7518"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7519"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7520"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7521"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7522"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7523"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7524"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7525"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7526"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7527"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7528"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7529"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7530"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7544"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7579"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7580"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7581"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7582"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7583"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7584"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7585"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7586"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7587"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7588"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7589"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7590"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7591"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7592"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7593"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7594"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7595"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7596"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7597"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7598"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7599"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7600"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7601"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7602"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7603"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7604"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7605"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7606"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7607"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7608"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7609"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7610"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7611"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7612"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7613"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7614"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "7615"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8123"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8137"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8139"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8147"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8155"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8163"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8171"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8174"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8175"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8185"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8187"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8189"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8192"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8193"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8194"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8195"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8196"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8197"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8198"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8199"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8200"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8201"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8202"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8209"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8228"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8239"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8287"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8304"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8305"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8308"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8309"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8310"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8311"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8312"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8313"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8314"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8315"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8316"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8317"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8318"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8319"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8320"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8321"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8322"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8323"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8324"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8325"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8326"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8327"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8328"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8329"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8330"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8331"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8332"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8333"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8334"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8336"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8337"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8338"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8339"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8340"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8341"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8342"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8343"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8344"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8345"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8346"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8347"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8348"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8450"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8455"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8458"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8459"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8460"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8461"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8462"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8463"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8464"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8465"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8466"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8467"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8469"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8473"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8474"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8475"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8476"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8477"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8484"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8486"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8488"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8490"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8491"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8492"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8493"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8495"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8496"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8497"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8499"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8500"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8501"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8502"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8503"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8504"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8505"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8508"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8509"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8510"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8511"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8512"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8517"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8518"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8519"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8520"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8521"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8544"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8548"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8553"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8556"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8557"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8558"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "8559"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9001"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9002"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9312"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9313"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9314"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9315"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9316"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9317"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9318"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9319"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9320"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9398"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9399"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9400"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9401"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9402"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9403"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9404"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9405"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9406"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9407"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9408"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9409"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9410"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9411"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9412"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9413"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9414"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9415"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9416"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9417"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9418"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9419"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9420"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9421"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9422"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9423"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "9450"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "11388"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "11389"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "11631"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "11935"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12019"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12032"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12033"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12034"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12035"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12036"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12037"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12038"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12039"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12040"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12041"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12042"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12043"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12044"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12045"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12046"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12047"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12048"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12049"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12050"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12051"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12052"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12053"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12054"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12055"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12056"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12057"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12058"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12059"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12060"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12061"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12062"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12063"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12064"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12065"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12066"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12067"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12068"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12069"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12070"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12071"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12072"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12073"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12074"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12075"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12076"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12077"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12078"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12079"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12080"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12081"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12082"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12083"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12084"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12085"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12086"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12087"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12088"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12089"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12090"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12091"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12092"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12093"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12094"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12095"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12096"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12097"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12098"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12099"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12100"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12101"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12102"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12103"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12104"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12105"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12106"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12107"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12108"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12109"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12110"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12111"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12112"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12113"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12114"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12115"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12116"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12117"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12118"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12119"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12120"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12121"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12122"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12123"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12124"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12125"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12126"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12127"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12128"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12129"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12130"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12131"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12132"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12133"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12134"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12135"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12136"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12137"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12138"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12139"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12140"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12141"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12142"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12143"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12144"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12145"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12146"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12147"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12148"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12149"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12150"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12151"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12152"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12153"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12154"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12155"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12156"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12157"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12158"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12159"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12160"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12161"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12162"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12163"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12164"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12165"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12166"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12167"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12168"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12169"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12170"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12171"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12172"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12173"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12174"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12175"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12176"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12177"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12178"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12179"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12180"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12181"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12182"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12183"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12184"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12185"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12186"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12187"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12188"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12189"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12190"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12191"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12192"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12193"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12194"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12195"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12196"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12197"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12198"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12199"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12200"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12201"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12202"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12203"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12204"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12205"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12206"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12207"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12208"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12209"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12210"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12211"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12212"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12213"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12214"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12215"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12216"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12217"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12218"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12219"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12220"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12221"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12222"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12223"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12224"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12225"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12226"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12227"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12228"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12229"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12230"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12231"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12232"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12233"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12234"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12235"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12236"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12237"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12238"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12239"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12240"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12241"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12242"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12243"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12244"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12245"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12288"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12342"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12344"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12345"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12346"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12593"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12594"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12595"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12596"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12597"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12598"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12599"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12600"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12601"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12602"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12603"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12604"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12605"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12606"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12607"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12608"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12609"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12610"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12611"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12612"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12613"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12614"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12615"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12616"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12617"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12618"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12619"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12620"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12621"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12622"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12623"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12624"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12625"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12626"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12627"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12628"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12629"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12630"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12631"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12632"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12633"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12634"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12635"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12636"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12637"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12638"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12639"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12640"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12641"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12642"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12643"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12644"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12645"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12646"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12647"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12648"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12649"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12650"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12651"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12652"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12653"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12654"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12655"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12656"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12657"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12658"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12659"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12660"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12661"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12662"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12663"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12664"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12665"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12666"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12667"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12668"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12669"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12670"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12671"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12672"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12673"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12674"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12675"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12676"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12677"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12678"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12679"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12680"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12681"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12682"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12683"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12684"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12685"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12686"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12690"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12691"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12692"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12693"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12694"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12695"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12696"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12697"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12698"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12699"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12700"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12701"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12702"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12703"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12868"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12869"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12870"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12871"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12896"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12897"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12898"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12899"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12900"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12901"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12902"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12903"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12904"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12905"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12906"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12907"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12908"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12909"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12928"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12929"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12930"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12931"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12932"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12933"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12934"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12935"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12936"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12937"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12938"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12939"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12940"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12941"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12942"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12943"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12944"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12945"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12946"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12947"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12948"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12949"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12950"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12951"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12952"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12953"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12954"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12955"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12956"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12957"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12958"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12959"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12960"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12961"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12962"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12963"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12964"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12965"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12966"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12967"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12968"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12969"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12970"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12971"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12972"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12973"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12974"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12975"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "12976"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13008"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13009"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13010"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13011"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13012"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13013"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13014"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13015"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13016"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13017"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13018"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13019"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13020"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13021"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13022"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13023"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13024"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13025"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13026"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13027"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13028"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13029"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13030"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13031"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13032"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13033"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13034"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13035"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13036"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13037"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13038"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13039"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13040"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13041"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13042"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13043"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13044"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13045"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13046"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13047"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13048"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13049"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13050"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13051"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13052"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13053"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "13054"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "42652"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "42653"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "42864"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "43000"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "43001"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "43868"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "43869"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "43870"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "43871"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63744"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63745"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63746"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63747"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63748"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63749"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63750"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63751"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63752"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63753"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63754"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63755"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63756"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63757"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63758"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63759"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63760"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63761"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63762"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63763"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63764"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63765"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63766"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63767"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63768"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63769"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63770"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63771"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63772"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63773"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63774"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63775"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63776"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63777"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63778"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63779"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63780"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63781"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63782"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63783"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63784"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63785"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63786"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63787"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63788"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63789"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63790"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63791"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63792"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63793"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63794"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63795"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63796"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63797"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63798"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63799"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63800"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63801"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63802"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63803"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63804"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63805"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63806"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63807"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63808"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63809"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63810"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63811"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63812"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63813"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63814"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63815"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63816"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63817"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63818"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63819"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63820"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63821"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63822"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63823"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63824"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63825"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63826"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63827"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63828"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63829"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63830"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63831"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63832"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63833"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63834"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63835"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63836"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63837"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63838"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63839"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63840"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63841"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63842"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63843"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63844"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63845"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63846"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63847"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63848"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63849"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63850"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63851"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63852"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63853"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63854"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63855"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63856"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63857"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63858"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63859"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63860"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63861"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63862"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63863"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63864"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63865"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63866"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63867"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63868"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63869"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63870"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63871"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63872"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63873"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63874"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63875"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63876"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63877"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63878"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63879"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63880"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63881"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63882"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63883"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63884"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63885"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63886"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63887"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63888"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63889"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63890"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63891"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63892"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63893"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63894"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63895"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63896"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63897"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63898"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63899"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63900"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63901"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63902"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63903"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63904"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63905"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63906"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63907"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63908"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63909"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63910"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63911"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63912"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63913"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63914"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63915"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63916"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63917"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63918"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63919"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63920"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63921"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63922"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63923"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63924"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63925"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63926"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63927"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63928"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63929"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63930"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63931"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63932"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63933"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63934"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63935"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63936"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63937"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63938"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63939"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63940"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63941"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63942"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63943"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63944"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63945"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63946"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63947"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63948"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63949"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63950"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63951"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63952"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63953"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63954"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63955"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63956"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63957"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63958"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63959"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63960"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63961"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63962"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63963"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63964"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63965"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63966"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63967"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63968"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63969"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63970"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63971"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63972"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63973"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63974"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63975"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63976"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63977"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63978"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63979"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63980"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63981"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63982"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63983"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63984"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63985"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63986"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63987"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63988"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63989"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63990"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63991"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63992"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63993"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63994"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63995"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63996"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63997"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63998"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "63999"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64000"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64001"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64002"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64003"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64004"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64005"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64006"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64007"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64008"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64009"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64010"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64011"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64012"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64013"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64016"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64018"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64021"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64022"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64023"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64024"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64025"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64026"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64027"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64028"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64029"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64030"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64032"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64034"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64037"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64038"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64042"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64043"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64044"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64045"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64046"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64047"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64048"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64049"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64050"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64051"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64052"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64053"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64054"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64055"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64056"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64057"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64058"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64059"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64060"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64061"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64062"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64063"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64064"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64065"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64066"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64067"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64068"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64069"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64070"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64071"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64072"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64073"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64074"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64075"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64076"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64077"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64078"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64079"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64080"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64081"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64082"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64083"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64084"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64085"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64086"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64087"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64088"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64089"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64090"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64091"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64092"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64093"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64094"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64095"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64096"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64097"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64098"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64099"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64100"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64101"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64102"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64103"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64104"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64105"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64106"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64107"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64108"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64109"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64112"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64113"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64114"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64115"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64116"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64117"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64118"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64119"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64120"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64121"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64122"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64123"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64124"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64125"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64126"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64127"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64128"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64129"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64130"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64131"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64132"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64133"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64134"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64135"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64136"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64137"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64138"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64139"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64140"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64141"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64142"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64143"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64144"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64145"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64146"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64147"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64148"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64149"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64150"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64151"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64152"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64153"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64154"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64155"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64156"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64157"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64158"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64159"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64160"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64161"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64162"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64163"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64164"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64165"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64166"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64167"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64168"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64169"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64170"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64171"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64172"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64173"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64174"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64175"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64176"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64177"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64178"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64179"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64180"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64181"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64182"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64183"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64184"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64185"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64186"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64187"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64188"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64189"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64190"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64191"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64192"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64193"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64194"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64195"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64196"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64197"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64198"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64199"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64200"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64201"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64202"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64203"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64204"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64205"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64206"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64207"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64208"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64209"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64210"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64211"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64212"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64213"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64214"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64215"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64216"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64217"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64288"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64289"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64290"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64291"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64292"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64293"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64294"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64295"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64296"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64297"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64336"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64337"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64338"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64339"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64340"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64341"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64342"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64343"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64344"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64345"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64346"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64347"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64348"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64349"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64350"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64351"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64352"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64353"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64354"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64355"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64356"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64357"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64358"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64359"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64360"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64361"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64362"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64363"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64364"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64365"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64366"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64367"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64368"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64369"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64370"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64371"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64372"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64373"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64374"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64375"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64376"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64377"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64378"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64379"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64380"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64381"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64382"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64383"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64384"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64385"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64386"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64387"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64388"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64389"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64390"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64391"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64392"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64393"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64394"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64395"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64396"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64397"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64398"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64399"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64400"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64401"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64402"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64403"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64404"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64405"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64406"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64407"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64408"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64409"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64410"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64411"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64412"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64413"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64414"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64415"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64416"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64417"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64418"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64419"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64420"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64421"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64422"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64423"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64424"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64425"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64426"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64427"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64428"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64429"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64430"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64431"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64432"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64433"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64467"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64468"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64469"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64470"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64471"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64472"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64473"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64474"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64475"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64476"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64477"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64478"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64479"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64480"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64481"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64482"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64483"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64484"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64485"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64486"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64487"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64488"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64489"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64508"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64509"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64510"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "64511"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65040"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65041"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65042"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65043"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65044"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65045"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65046"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65047"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65048"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65049"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65072"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65073"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65074"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65075"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65076"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65077"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65078"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65079"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65080"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65081"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65082"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65083"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65084"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65085"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65086"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65087"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65088"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65089"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65090"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65091"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65092"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65095"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65096"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65097"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65098"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65099"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65100"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65101"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65102"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65103"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65104"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65105"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65106"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65108"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65109"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65110"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65111"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65112"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65113"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65114"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65115"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65116"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65117"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65118"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65119"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65120"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65121"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65122"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65123"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65124"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65125"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65126"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65128"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65129"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65130"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65131"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65152"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65153"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65154"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65155"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65156"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65157"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65158"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65159"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65160"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65161"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65162"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65163"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65164"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65165"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65166"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65167"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65168"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65169"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65170"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65171"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65172"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65173"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65174"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65175"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65176"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65177"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65178"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65179"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65180"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65181"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65182"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65183"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65184"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65185"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65186"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65187"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65188"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65189"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65190"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65191"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65192"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65193"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65194"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65195"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65196"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65197"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65198"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65199"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65200"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65201"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65202"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65203"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65204"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65205"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65206"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65207"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65208"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65209"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65210"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65211"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65212"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65213"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65214"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65215"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65216"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65217"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65218"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65219"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65220"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65221"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65222"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65223"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65224"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65225"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65226"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65227"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65228"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65229"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65230"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65231"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65232"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65233"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65234"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65235"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65236"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65237"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65238"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65239"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65240"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65241"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65242"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65243"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65244"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65245"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65246"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65247"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65248"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65249"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65250"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65251"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65252"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65253"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65254"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65255"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65256"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65257"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65258"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65259"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65260"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65261"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65262"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65263"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65264"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65265"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65266"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65267"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65268"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65281"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65282"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65283"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65284"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65285"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65286"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65287"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65288"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65289"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65290"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65291"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65292"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65293"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65294"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65295"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65296"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65297"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65298"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65299"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65300"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65301"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65302"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65303"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65304"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65305"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65306"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65307"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65308"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65309"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65310"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65311"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65312"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65313"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65314"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65315"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65316"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65317"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65318"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65319"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65320"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65321"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65322"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65323"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65324"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65325"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65326"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65327"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65328"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65329"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65330"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65331"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65332"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65333"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65334"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65335"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65336"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65337"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65338"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65339"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65340"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65341"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65342"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65343"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65344"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65371"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65372"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65373"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65374"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65375"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65376"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65377"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65378"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65379"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65380"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65381"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65382"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65383"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65384"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65385"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65386"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65387"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65388"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65389"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65390"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65391"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65392"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65393"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65394"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65395"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65396"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65397"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65398"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65399"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65400"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65401"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65402"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65403"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65404"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65405"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65406"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65407"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65408"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65409"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65410"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65411"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65412"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65413"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65414"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65415"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65416"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65417"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65418"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65419"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65420"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65421"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65422"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65423"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65424"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65425"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65426"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65427"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65428"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65429"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65430"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65431"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65432"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65433"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65434"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65435"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65436"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65437"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65438"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65439"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65440"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65441"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65442"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65443"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65444"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65445"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65446"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65447"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65448"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65449"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65450"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65451"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65452"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65453"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65454"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65455"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65456"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65457"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65458"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65459"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65460"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65461"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65462"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65463"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65464"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65465"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65466"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65467"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65468"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65469"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65470"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65474"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65475"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65476"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65477"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65478"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65479"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65482"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65483"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65484"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65485"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65486"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65487"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65490"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65491"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65492"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65493"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65494"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65495"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65498"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65499"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65500"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65504"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65505"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65506"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65507"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65508"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65509"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65510"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65512"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65513"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65514"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65515"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65516"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65517"}, {"type_category": "unknown", "concrete_type": "uint16_t", "value": "65518"}]}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint uni_utf8_get_char_buf(const void *buffer, size_t size, unichar_t *chr_r)\n{\n", "Selected Statement": "if (max_new_size == 0)", "Function Input": {}, "Variable Values Before Statement": {"max_new_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "};\n\npool_t pool_datastack_create(void)\n{\n\tstruct datastack_pool *dpool;\n\n\tdpool = t_new(struct datastack_pool, 1);\n\tdpool->pool = static_data_stack_pool;\n\tdpool->refcount = 1;\n\tdpool->data_stack_frame = data_stack_frame_id;\n", "Selected Statement": "if (unlikely(dpool->data_stack_frame != data_stack_frame_id))", "Function Input": {}, "Variable Values Before Statement": {"unlikely": "NULL", "dpool->data_stack_frame": "3", "data_stack_frame_id": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "};\n\npool_t pool_datastack_create(void)\n{\n\tstruct datastack_pool *dpool;\n\n\tdpool = t_new(struct datastack_pool, 1);\n\tdpool->pool = static_data_stack_pool;\n\tdpool->refcount = 1;\n\tdpool->data_stack_frame = data_stack_frame_id;\n", "Selected Statement": "if (old_size >= new_size)", "Function Input": {}, "Variable Values Before Statement": {"old_size": "NULL", "new_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint imap_utf8_to_utf7(const char *src, string_t *dest)\n{\n", "Selected Statement": "if (len > 0)", "Function Input": {}, "Variable Values Before Statement": {"len": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nint imap_utf8_to_utf7(const char *src, string_t *dest)\n{\n", "Selected Statement": "if (++outpos % 4 == outstart)", "Function Input": {}, "Variable Values Before Statement": {"outpos": "NULL", "outstart": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int imap_bodystructure_parse_full(const char *bodystructure,\n\tpool_t pool, struct message_part **parts,\n\tconst char **error_r)\n{\n\tstruct istream *input;\n\tstruct imap_parser *parser;\n\tconst struct imap_arg *args;\n\tint ret;\n\n\ti_assert(*parts == NULL || (*parts)->next == NULL);\n\n\tinput = i_stream_create_from_data(bodystructure, strlen(bodystructure));\n\t(void)i_stream_read(input);\n\n\tparser = imap_parser_create(input, NULL, SIZE_MAX);\n\tret = imap_parser_finish_line(parser, 0,\n\t\t\t\t      IMAP_PARSE_FLAG_LITERAL_TYPE, &args);\n\tif (ret < 0) {\n\t\t*error_r = t_strdup_printf(\"IMAP parser failed: %s\",\n\t\t\t\t\t   imap_parser_get_error(parser, NULL));\n\t} else if (ret == 0) {\n\t\t*error_r = \"Empty bodystructure\";\n\t\tret = -1;\n\t} else {\n\t\tT_BEGIN {\n\t\t\tret = imap_bodystructure_parse_args\n\t\t\t\t(args, pool, parts, error_r);\n\t\t} T_END_PASS_STR_IF(ret < 0, error_r);\n\t}\n\n\tif (ret < 0) {\n\t\t\n\t\timap_bodystructure_reset_data(*parts);\n\t}\n\n\timap_parser_unref(&parser);\n\ti_stream_destroy(&input);\n", "Selected Statement": "if (!imap_arg_get_string(&list_args[i], &item))", "Function Input": {}, "Variable Values Before Statement": {"imap_arg_get_string": "NULL", "list_args": "NULL", "i": "NULL", "item": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int imap_bodystructure_parse_full(const char *bodystructure,\n\tpool_t pool, struct message_part **parts,\n\tconst char **error_r)\n{\n\tstruct istream *input;\n\tstruct imap_parser *parser;\n\tconst struct imap_arg *args;\n\tint ret;\n\n\ti_assert(*parts == NULL || (*parts)->next == NULL);\n\n\tinput = i_stream_create_from_data(bodystructure, strlen(bodystructure));\n\t(void)i_stream_read(input);\n\n\tparser = imap_parser_create(input, NULL, SIZE_MAX);\n\tret = imap_parser_finish_line(parser, 0,\n\t\t\t\t      IMAP_PARSE_FLAG_LITERAL_TYPE, &args);\n\tif (ret < 0) {\n\t\t*error_r = t_strdup_printf(\"IMAP parser failed: %s\",\n\t\t\t\t\t   imap_parser_get_error(parser, NULL));\n\t} else if (ret == 0) {\n\t\t*error_r = \"Empty bodystructure\";\n\t\tret = -1;\n\t} else {\n\t\tT_BEGIN {\n\t\t\tret = imap_bodystructure_parse_args\n\t\t\t\t(args, pool, parts, error_r);\n\t\t} T_END_PASS_STR_IF(ret < 0, error_r);\n\t}\n\n\tif (ret < 0) {\n\t\t\n\t\timap_bodystructure_reset_data(*parts);\n\t}\n\n\timap_parser_unref(&parser);\n\ti_stream_destroy(&input);\n", "Selected Statement": "if (data->content_type == NULL)", "Function Input": {}, "Variable Values Before Statement": {"data->content_type": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "struct imap_parser *\nimap_parser_create(struct istream *input, struct ostream *output,\n\t\t   size_t max_line_size)\n{\n\tstruct imap_parser *parser;\n\n\tparser = i_new(struct imap_parser, 1);\n\tparser->refcount = 1;\n\tparser->pool = pool_alloconly_create(MEMPOOL_GROWING\"IMAP parser\",\n\t\t\t\t\t     1024);\n\tparser->input = input;\n\tparser->output = output;\n\tparser->max_line_size = max_line_size;\n\n\tp_array_init(&parser->root_list, parser->pool, LIST_INIT_COUNT);\n\tparser->cur_list = &parser->root_list;\n", "Selected Statement": "if (IS_ATOM_PARSER_INPUT(chr))", "Function Input": {}, "Variable Values Before Statement": {"IS_ATOM_PARSER_INPUT": "NULL", "chr": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "struct imap_parser *\nimap_parser_create(struct istream *input, struct ostream *output,\n\t\t   size_t max_line_size)\n{\n\tstruct imap_parser *parser;\n\n\tparser = i_new(struct imap_parser, 1);\n\tparser->refcount = 1;\n\tparser->pool = pool_alloconly_create(MEMPOOL_GROWING\"IMAP parser\",\n\t\t\t\t\t     1024);\n\tparser->input = input;\n\tparser->output = output;\n\tparser->max_line_size = max_line_size;\n\n\tp_array_init(&parser->root_list, parser->pool, LIST_INIT_COUNT);\n\tparser->cur_list = &parser->root_list;\n", "Selected Statement": "if (!imap_parser_read_string(parser, data, data_size))", "Function Input": {}, "Variable Values Before Statement": {"imap_parser_read_string": "NULL", "parser": {"refcount": "1", "pool": "0x1044e50", "input": null, "output": null, "max_line_size": "18446744073709551615", "flags": "0", "line_size": "0", "root_list": null, "cur_list": null, "list_arg": null, "cur_type": "ARG_PARSE_NONE", "cur_pos": "0", "cur_resp_text": "false", "str_first_escape": "0", "literal_size": "0", "error": "IMAP_PARSE_ERROR_NONE", "error_msg": null, "literal_minus": "false", "literal_skip_crlf": "false", "literal_nonsync": "false", "literal8": "false", "literal_size_return": "false", "eol": "false", "args_added_extra_eol": "false", "fatal_error": "false"}, "data": "NULL", "data_size": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nbool imap_arg_get_string(const struct imap_arg *arg, const char **str_r)\n{\n\tif (arg->type != IMAP_ARG_STRING && arg->type != IMAP_ARG_LITERAL)\n\t\treturn FALSE;\n\n\t*str_r = arg->_data.str;\n\treturn TRUE;\n", "Selected Statement": "if (!imap_arg_get_list(arg, &ret))", "Function Input": {"arg": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x70\n", "message": "Cannot access memory at address 0x70"}}, "str_r": {"value": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdc50 \"\\260\\334\\377\\377\\377\\177\""}}}, "Variable Values Before Statement": {"imap_arg_get_list": "NULL", "arg": {"type": "IMAP_ARG_EOL", "parent": null, "str_len": "0", "_data": null, "literal8": "false"}, "ret": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nbool imap_arg_get_string(const struct imap_arg *arg, const char **str_r)\n{\n\tif (arg->type != IMAP_ARG_STRING && arg->type != IMAP_ARG_LITERAL)\n\t\treturn FALSE;\n\n\t*str_r = arg->_data.str;\n\treturn TRUE;\n", "Selected Statement": "if (arg->type != IMAP_ARG_STRING && arg->type != IMAP_ARG_LITERAL)", "Function Input": {"arg": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x70\n", "message": "Cannot access memory at address 0x70"}}, "str_r": {"value": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdc50 \"\\260\\334\\377\\377\\377\\177\""}}}, "Variable Values Before Statement": {"arg->type": "IMAP_ARG_EOL", "IMAP_ARG_STRING": "NULL", "IMAP_ARG_LITERAL": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nbool imap_arg_get_string(const struct imap_arg *arg, const char **str_r)\n{\n\tif (arg->type != IMAP_ARG_STRING && arg->type != IMAP_ARG_LITERAL)\n\t\treturn FALSE;\n\n\t*str_r = arg->_data.str;\n\treturn TRUE;\n", "Selected Statement": "if (count > 0 && (*list_r)[count-1].type == IMAP_ARG_EOL)", "Function Input": {"arg": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x70\n", "message": "Cannot access memory at address 0x70"}}, "str_r": {"value": {"type_category": "string", "concrete_type": "string", "value": "0x7fffffffdc50 \"\\260\\334\\377\\377\\377\\177\""}}}, "Variable Values Before Statement": {"count": "NULL", "(*list_r)[count-1].type": "NULL", "IMAP_ARG_EOL": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "struct message_parser_ctx *\nmessage_parser_init(pool_t part_pool, struct istream *input,\n\t\t    const struct message_parser_settings *set)\n{\n\tstruct message_parser_ctx *ctx;\n\n\tctx = message_parser_init_int(input, set);\n\tctx->part_pool = part_pool;\n\tctx->parts = ctx->part = p_new(part_pool, struct message_part, 1);\n\tctx->next_part = &ctx->part->children;\n\tctx->parse_next_block = parse_next_header_init;\n\tctx->total_parts_count = 1;\n\ti_array_init(&ctx->next_part_stack, 4);\n", "Selected Statement": "if (hdr->eoh)", "Function Input": {}, "Variable Values Before Statement": {"hdr->eoh": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "struct message_parser_ctx *\nmessage_parser_init(pool_t part_pool, struct istream *input,\n\t\t    const struct message_parser_settings *set)\n{\n\tstruct message_parser_ctx *ctx;\n\n\tctx = message_parser_init_int(input, set);\n\tctx->part_pool = part_pool;\n\tctx->parts = ctx->part = p_new(part_pool, struct message_part, 1);\n\tctx->next_part = &ctx->part->children;\n\tctx->parse_next_block = parse_next_header_init;\n\tctx->total_parts_count = 1;\n\ti_array_init(&ctx->next_part_stack, 4);\n", "Selected Statement": "if (*data == '\\n')", "Function Input": {}, "Variable Values Before Statement": {"data": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "struct message_header_parser_ctx *\nmessage_parse_header_init(struct istream *input, struct message_size *hdr_size,\n\t\t\t  enum message_header_parser_flags flags)\n{\n\tstruct message_header_parser_ctx *ctx;\n\n\tctx = i_new(struct message_header_parser_ctx, 1);\n\tctx->input = input;\n\tctx->hdr_size = hdr_size;\n\tctx->name = str_new(default_pool, 128);\n\tctx->flags = flags;\n\tctx->value_buf = buffer_create_dynamic(default_pool, 4096);\n\ti_stream_ref(input);\n\n\tif (hdr_size != NULL)\n\t\ti_zero(hdr_size);\n", "Selected Statement": "if (hdr_size != NULL)", "Function Input": {}, "Variable Values Before Statement": {"hdr_size": {"physical_size": "0", "virtual_size": "0", "lines": "0"}}, "Value After Statement Execution": "Yes", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "struct message_header_parser_ctx *\nmessage_parse_header_init(struct istream *input, struct message_size *hdr_size,\n\t\t\t  enum message_header_parser_flags flags)\n{\n\tstruct message_header_parser_ctx *ctx;\n\n\tctx = i_new(struct message_header_parser_ctx, 1);\n\tctx->input = input;\n\tctx->hdr_size = hdr_size;\n\tctx->name = str_new(default_pool, 128);\n\tctx->flags = flags;\n\tctx->value_buf = buffer_create_dynamic(default_pool, 4096);\n\ti_stream_ref(input);\n\n\tif (hdr_size != NULL)\n\t\ti_zero(hdr_size);\n", "Selected Statement": "if (msg[i] == ':' && !ctx->skip_line)", "Function Input": {}, "Variable Values Before Statement": {"msg": "NULL", "i": "NULL", "ctx->skip_line": "false"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "struct message_header_parser_ctx *\nmessage_parse_header_init(struct istream *input, struct message_size *hdr_size,\n\t\t\t  enum message_header_parser_flags flags)\n{\n\tstruct message_header_parser_ctx *ctx;\n\n\tctx = i_new(struct message_header_parser_ctx, 1);\n\tctx->input = input;\n\tctx->hdr_size = hdr_size;\n\tctx->name = str_new(default_pool, 128);\n\tctx->flags = flags;\n\tctx->value_buf = buffer_create_dynamic(default_pool, 4096);\n\ti_stream_ref(input);\n\n\tif (hdr_size != NULL)\n\t\ti_zero(hdr_size);\n", "Selected Statement": "if (last_no_newline)", "Function Input": {}, "Variable Values Before Statement": {"last_no_newline": "NULL"}, "Value After Statement Execution": "No", "Project Information": "dovecot"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#error Macro DIGEST_SIZE must be defined.\n#endif\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\n  if (!size)\n    return 0;\n\n  FuzzedDataProvider stream(data, size);\n  hash_state *hs;\n  if (init(&hs))\n    return 0;\n\n  while (stream.remaining_bytes()) {\n    size_t num_bytes = stream.ConsumeIntegral<size_t>();\n    std::vector<uint8_t> buffer = stream.ConsumeBytes<uint8_t>(num_bytes);\n\n    if (update(hs, buffer.data(), buffer.size()))\n      goto error;\n  }\n\n  uint8_t result[DIGEST_SIZE];\n\n#ifndef DIGEST_THIRD_PARAM\n  digest(hs, result);\n#else\n  digest(hs, result, DIGEST_SIZE);\n#endif\n\nerror:\n  destroy(hs);\n  return 0;\n", "Selected Statement": "if (init(&hs))", "Function Input": {"data": {"value": "0xf5b3e0 \"\\001\""}, "size": {"value": "5584384"}}, "Variable Values Before Statement": {"init": "NULL", "hs": {"h": [{"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "3238371032"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "914150663"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "812702999"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "4144912697"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "4290775857"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "1750603025"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "1694076839"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "3204075428"}], "buf": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "curlen": "0", "totbits": [{"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "0"}], "digest_size": "28"}}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#error Macro DIGEST_SIZE must be defined.\n#endif\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\n  if (!size)\n    return 0;\n\n  FuzzedDataProvider stream(data, size);\n  hash_state *hs;\n  if (init(&hs))\n    return 0;\n\n  while (stream.remaining_bytes()) {\n    size_t num_bytes = stream.ConsumeIntegral<size_t>();\n    std::vector<uint8_t> buffer = stream.ConsumeBytes<uint8_t>(num_bytes);\n\n    if (update(hs, buffer.data(), buffer.size()))\n      goto error;\n  }\n\n  uint8_t result[DIGEST_SIZE];\n\n#ifndef DIGEST_THIRD_PARAM\n  digest(hs, result);\n#else\n  digest(hs, result, DIGEST_SIZE);\n#endif\n\nerror:\n  destroy(hs);\n  return 0;\n", "Selected Statement": "if (update(hs, buffer.data(), buffer.size()))", "Function Input": {"data": {"value": "0xf5b3e0 \"\\001\""}, "size": {"value": "5584384"}}, "Variable Values Before Statement": {"update": "NULL", "hs": {"h": [{"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "3238371032"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "914150663"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "812702999"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "4144912697"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "4290775857"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "1750603025"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "1694076839"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "3204075428"}], "buf": "\"\\001\\000\\000\\000\\377\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "curlen": "5", "totbits": [{"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "0"}, {"type_category": "unknown", "concrete_type": "sha2_word_t", "value": "0"}], "digest_size": "28"}, "buffer.data": "NULL", "buffer.size": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#error Macro DIGEST_SIZE must be defined.\n#endif\n\nextern \"C\" int LLVMFuzzerTestOneInput(const uint8_t *data, size_t size) {\n\n  if (!size)\n    return 0;\n\n  FuzzedDataProvider stream(data, size);\n  hash_state *hs;\n  if (init(&hs))\n    return 0;\n\n  while (stream.remaining_bytes()) {\n    size_t num_bytes = stream.ConsumeIntegral<size_t>();\n    std::vector<uint8_t> buffer = stream.ConsumeBytes<uint8_t>(num_bytes);\n\n    if (update(hs, buffer.data(), buffer.size()))\n      goto error;\n  }\n\n  uint8_t result[DIGEST_SIZE];\n\n#ifndef DIGEST_THIRD_PARAM\n  digest(hs, result);\n#else\n  digest(hs, result, DIGEST_SIZE);\n#endif\n\nerror:\n  destroy(hs);\n  return 0;\n", "Selected Statement": "if (!size)", "Function Input": {"data": {"value": "0xf5b3e0 \"\\001\""}, "size": {"value": "5584384"}}, "Variable Values Before Statement": {"size": "46"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "        , size_t digest_size\n#endif\n        )\n{\n    hash_state *hs;\n    int i;\n#if DIGEST_SIZE == (512/8)\n    size_t variant;\n#endif\n\n    if (NULL == shaState) {\n        return ERR_NULL;\n    }\n\n    *shaState = hs = (hash_state*) calloc(1, sizeof(hash_state));\n    if (NULL == hs)\n        return ERR_MEMORY;\n\n    hs->curlen = 0;\n    hs->totbits[0] = hs->totbits[1] = 0;\n\n    \n#if DIGEST_SIZE == (512/8)\n    hs->digest_size = digest_size;\n\n    switch (digest_size) {\n        case 28: variant = 1;   \n                 break;\n        case 32: variant = 2;   \n                 break;\n        default: variant = 0;   \n    }\n    \n    for (i=0; i<8; i++) {\n        hs->h[i] = H_SHA_512[variant][i];\n    }\n#else\n    hs->digest_size = DIGEST_SIZE;\n    for (i=0; i<8; i++) {\n        hs->h[i] = H[i];\n    }\n#endif\n\n    return 0;\n", "Selected Statement": "if (NULL == src || NULL == dst)", "Function Input": {}, "Variable Values Before Statement": {"src": "NULL", "dst": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "        , size_t digest_size\n#endif\n        )\n{\n    hash_state *hs;\n    int i;\n#if DIGEST_SIZE == (512/8)\n    size_t variant;\n#endif\n\n    if (NULL == shaState) {\n        return ERR_NULL;\n    }\n\n    *shaState = hs = (hash_state*) calloc(1, sizeof(hash_state));\n    if (NULL == hs)\n        return ERR_MEMORY;\n\n    hs->curlen = 0;\n    hs->totbits[0] = hs->totbits[1] = 0;\n\n    \n#if DIGEST_SIZE == (512/8)\n    hs->digest_size = digest_size;\n\n    switch (digest_size) {\n        case 28: variant = 1;   \n                 break;\n        case 32: variant = 2;   \n                 break;\n        default: variant = 0;   \n    }\n    \n    for (i=0; i<8; i++) {\n        hs->h[i] = H_SHA_512[variant][i];\n    }\n#else\n    hs->digest_size = DIGEST_SIZE;\n    for (i=0; i<8; i++) {\n        hs->h[i] = H[i];\n    }\n#endif\n\n    return 0;\n", "Selected Statement": "if (digest_size != hs->digest_size)", "Function Input": {}, "Variable Values Before Statement": {"digest_size": "NULL", "hs->digest_size": "28"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic inline void u32to8_big(uint8_t *p, const uint32_t *w)\n{\n#ifdef PYCRYPTO_BIG_ENDIAN\n    memcpy(p, w, 4);\n#else\n    p[0] = (uint8_t)(*w >> 24);\n    p[1] = (uint8_t)(*w >> 16);\n    p[2] = (uint8_t)(*w >> 8);\n    p[3] = (uint8_t)*w;\n#endif\n", "Selected Statement": "if (real_len > len)", "Function Input": {"p": {"value": "0xf5a0f0 \"\""}, "w": {"value": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "3238371032"}}}, "Variable Values Before Statement": {"real_len": "NULL", "len": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nstatic inline void u32to8_big(uint8_t *p, const uint32_t *w)\n{\n#ifdef PYCRYPTO_BIG_ENDIAN\n    memcpy(p, w, 4);\n#else\n    p[0] = (uint8_t)(*w >> 24);\n    p[1] = (uint8_t)(*w >> 16);\n    p[2] = (uint8_t)(*w >> 8);\n    p[3] = (uint8_t)*w;\n#endif\n", "Selected Statement": "if (0 == words || 0 == len)", "Function Input": {"p": {"value": "0xf5a0f0 \"\""}, "w": {"value": {"type_category": "unknown", "concrete_type": "uint32_t", "value": "3238371032"}}}, "Variable Values Before Statement": {"words": "NULL", "len": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nEXPORT_SYM int MD5_init(hash_state **mdState)\n{\n    hash_state *hs;\n\n    if (NULL == mdState) {\n        return ERR_NULL;\n    }\n\n    *mdState = hs = (hash_state*) calloc(1, sizeof(hash_state));\n    if (NULL == hs)\n        return ERR_MEMORY;\n\n    hs->curlen = 0;\n    hs->totbits = 0;\n\n    \n    hs->h[0] = 0x67452301;\n    hs->h[1] = 0xefcdab89;\n    hs->h[2] = 0x98badcfe;\n    hs->h[3] = 0x10325476;\n\n    return 0;\n", "Selected Statement": "if (NULL == mdState)", "Function Input": {"hs": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x48\n", "message": "Cannot access memory at address 0x48"}}}, "Variable Values Before Statement": {"mdState": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "}\n\nEXPORT_SYM int MD5_init(hash_state **mdState)\n{\n    hash_state *hs;\n\n    if (NULL == mdState) {\n        return ERR_NULL;\n    }\n\n    *mdState = hs = (hash_state*) calloc(1, sizeof(hash_state));\n    if (NULL == hs)\n        return ERR_MEMORY;\n\n    hs->curlen = 0;\n    hs->totbits = 0;\n\n    \n    hs->h[0] = 0x67452301;\n    hs->h[1] = 0xefcdab89;\n    hs->h[2] = 0x98badcfe;\n    hs->h[3] = 0x10325476;\n\n    return 0;\n", "Selected Statement": "if (NULL == inner || NULL == outer || NULL == first_hmac || NULL == result)", "Function Input": {"hs": {"value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x48\n", "message": "Cannot access memory at address 0x48"}}}, "Variable Values Before Statement": {"inner": "NULL", "outer": "NULL", "first_hmac": "NULL", "result": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "} hash_state;\n\nEXPORT_SYM int md2_init(hash_state **md2State)\n{\n    hash_state *hs;\n    \n    if (NULL == md2State) {\n        return ERR_NULL;\n    }\n\n    *md2State = hs = (hash_state*) calloc(1, sizeof(hash_state));\n    if (NULL == hs)\n        return ERR_MEMORY;\n\n    return 0;\n", "Selected Statement": "if (NULL == md2State)", "Function Input": {"md2State": {"value": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf48880", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1ff6a4a00\n", "message": "Cannot access memory at address 0x1ff6a4a00"}}}}, "Variable Values Before Statement": {"md2State": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "} hash_state;\n\nEXPORT_SYM int md2_init(hash_state **md2State)\n{\n    hash_state *hs;\n    \n    if (NULL == md2State) {\n        return ERR_NULL;\n    }\n\n    *md2State = hs = (hash_state*) calloc(1, sizeof(hash_state));\n    if (NULL == hs)\n        return ERR_MEMORY;\n\n    return 0;\n", "Selected Statement": "if (NULL == hs)", "Function Input": {"md2State": {"value": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf48880", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x1ff6a4a00\n", "message": "Cannot access memory at address 0x1ff6a4a00"}}}}, "Variable Values Before Statement": {"hs": {"C": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "X": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "count": "0", "buf": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\""}}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define ROL(x, n) (((x) << n) | ((x) >> (32-n) ))\n\nEXPORT_SYM int md4_init (hash_state **md4State)\n{\n    hash_state *hs;\n    \n    if (NULL == md4State) {\n        return ERR_NULL;\n    }\n\n    *md4State = hs = (hash_state*) calloc(1, sizeof(hash_state));\n    if (NULL == hs)\n        return ERR_MEMORY;\n \n    hs->A=0x67452301;\n    hs->B=0xefcdab89;\n    hs->C=0x98badcfe;\n    hs->D=0x10325476;\n\n    return 0;\n", "Selected Statement": "if (hs->count==64)", "Function Input": {"md4State": {"value": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf583b0", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x2ff3d\n", "message": "Cannot access memory at address 0x2ff3d"}}}}, "Variable Values Before Statement": {"hs->count": "0"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#define ROL(x, n) (((x) << n) | ((x) >> (32-n) ))\n\nEXPORT_SYM int md4_init (hash_state **md4State)\n{\n    hash_state *hs;\n    \n    if (NULL == md4State) {\n        return ERR_NULL;\n    }\n\n    *md4State = hs = (hash_state*) calloc(1, sizeof(hash_state));\n    if (NULL == hs)\n        return ERR_MEMORY;\n \n    hs->A=0x67452301;\n    hs->B=0xefcdab89;\n    hs->C=0x98badcfe;\n    hs->D=0x10325476;\n\n    return 0;\n", "Selected Statement": "if (NULL == hs || NULL == buf)", "Function Input": {"md4State": {"value": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf583b0", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0x2ff3d\n", "message": "Cannot access memory at address 0x2ff3d"}}}}, "Variable Values Before Statement": {"hs": {"A": "1732584193", "B": "4023233417", "C": "2562383102", "D": "271733878", "bitlen": "0", "buf": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "count": "0"}, "buf": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "};\n\nEXPORT_SYM int ripemd160_init(hash_state **ripemd160State)\n{\n    hash_state *hs;\n    \n    \n    static const uint32_t initial_h[5] = { 0x67452301u, 0xEFCDAB89u, 0x98BADCFEu, 0x10325476u, 0xC3D2E1F0u };\n\n    if (NULL == ripemd160State) {\n        return ERR_NULL;\n    }\n\n    *ripemd160State = hs = (hash_state*) calloc(1, sizeof(hash_state));\n    if (NULL == hs)\n        return ERR_MEMORY;\n\n    memcpy(hs->h, initial_h, RIPEMD160_DIGEST_SIZE);\n    return 0;\n", "Selected Statement": "if (NULL==hs || digest==NULL)", "Function Input": {"ripemd160State": {"value": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf779c0", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xffffffffffff0000\n", "message": "Cannot access memory at address 0xffffffffffff0000"}}}}, "Variable Values Before Statement": {"hs": {"h": [{"type_category": "unknown", "concrete_type": "uint32_t", "value": "1732584193"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "4023233417"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "2562383102"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "271733878"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "3285377520"}], "length": "0", "buf": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "bufpos": "0"}, "digest": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "};\n\nEXPORT_SYM int ripemd160_init(hash_state **ripemd160State)\n{\n    hash_state *hs;\n    \n    \n    static const uint32_t initial_h[5] = { 0x67452301u, 0xEFCDAB89u, 0x98BADCFEu, 0x10325476u, 0xC3D2E1F0u };\n\n    if (NULL == ripemd160State) {\n        return ERR_NULL;\n    }\n\n    *ripemd160State = hs = (hash_state*) calloc(1, sizeof(hash_state));\n    if (NULL == hs)\n        return ERR_MEMORY;\n\n    memcpy(hs->h, initial_h, RIPEMD160_DIGEST_SIZE);\n    return 0;\n", "Selected Statement": "if (NULL==hs || NULL==in)", "Function Input": {"ripemd160State": {"value": {"type_category": "pointer", "concrete_type": "POINTER", "address": "0xf779c0", "value": {"type_category": "struct", "concrete_type": "error", "error_type": "gdb.MemoryError", "stacktrace": "Traceback (most recent call last):\n  File \"/tracer/var_utils.py\", line 72, in serialize_value_to_json\n    if str(value) == \"0x0\":\ngdb.MemoryError: Cannot access memory at address 0xffffffffffff0000\n", "message": "Cannot access memory at address 0xffffffffffff0000"}}}}, "Variable Values Before Statement": {"hs": {"h": [{"type_category": "unknown", "concrete_type": "uint32_t", "value": "1732584193"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "4023233417"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "2562383102"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "271733878"}, {"type_category": "unknown", "concrete_type": "uint32_t", "value": "3285377520"}], "length": "0", "buf": "\"\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\\000\"", "bufpos": "0"}, "in": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"common.h\"\n#include <fuzzer/FuzzedDataProvider.h>\n\n", "Selected Statement": "if (AES_start_operation(key, keySize, reinterpret_cast<AES_State **>(&state)))", "Function Input": {"data": {"value": "0xf54f80 \"\""}}, "Variable Values Before Statement": {"AES_start_operation": "NULL", "key": "0xf54f80 \"\"", "keySize": "KeySize", "reinterpret_cast": "NULL", "AES_State": "NULL", "": "NULL", "state": "NULL"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "#include \"common.h\"\n#include <fuzzer/FuzzedDataProvider.h>\n\n", "Selected Statement": "if (stream.remaining_bytes() < keySize)", "Function Input": {"data": {"value": "0xf54f80 \"\""}}, "Variable Values Before Statement": {"stream.remaining_bytes": "NULL", "keySize": "KeySize"}, "Value After Statement Execution": "No", "Project Information": "pycryptodome"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "int\nk5_utf16le_to_utf8(const uint8_t *utf16bytes, size_t nbytes, char **utf8_out)\n{\n    struct k5buf buf;\n    struct k5input in;\n    uint16_t ch1, ch2;\n    krb5_ucs4 ch;\n    size_t chlen;\n    void *p;\n\n    *utf8_out = NULL;\n\n    if (nbytes % 2 != 0)\n        return EINVAL;\n\n    k5_buf_init_dynamic(&buf);\n    k5_input_init(&in, utf16bytes, nbytes);\n    while (!in.status && in.len > 0) {\n        \n        ch1 = k5_input_get_uint16_le(&in);\n        if (IS_LOW_SURROGATE(ch1))\n            goto invalid;\n        if (IS_HIGH_SURROGATE(ch1)) {\n            \n            ch2 = k5_input_get_uint16_le(&in);\n            if (!IS_LOW_SURROGATE(ch2))\n                goto invalid;\n            ch = COMPOSE(ch1, ch2);\n        } else {\n            ch = ch1;\n        }\n\n        chlen = krb5int_ucs4_to_utf8(ch, NULL);\n        p = k5_buf_get_space(&buf, chlen);\n        if (p == NULL)\n            return ENOMEM;\n        (void)krb5int_ucs4_to_utf8(ch, p);\n    }\n\n    if (in.status)\n        goto invalid;\n\n    *utf8_out = k5_buf_cstring(&buf);\n    return (*utf8_out == NULL) ? ENOMEM : 0;\n\ninvalid:\n    k5_buf_free(&buf);\n    return EINVAL;\n}", "Selected Statement": "if (!IS_LOW_SURROGATE(ch2))", "Function Input": {}, "Variable Values Before Statement": {"IS_LOW_SURROGATE": "NULL", "ch2": "32767"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "size_t krb5int_ucs4_to_utf8(krb5_ucs4 c, char *buf)\n{\n    size_t len = 0;\n    unsigned char *p = (unsigned char *) buf;\n\n    \n    if (c > 0x10ffff)\n        return 0;\n\n    \n    if (buf == NULL) {\n        if (c < 0x80) return 1;\n        else if (c < 0x800) return 2;\n        else if (c < 0x10000) return 3;\n        else return 4;\n    }\n\n    if (c < 0x80) {\n        p[len++] = c;\n    } else if (c < 0x800) {\n        p[len++] = 0xc0 | ( c >> 6 );\n        p[len++] = 0x80 | ( c & 0x3f );\n    } else if (c < 0x10000) {\n        p[len++] = 0xe0 | ( c >> 12 );\n        p[len++] = 0x80 | ( (c >> 6) & 0x3f );\n        p[len++] = 0x80 | ( c & 0x3f );\n    } else  {\n        p[len++] = 0xf0 | ( c >> 18 );\n        p[len++] = 0x80 | ( (c >> 12) & 0x3f );\n        p[len++] = 0x80 | ( (c >> 6) & 0x3f );\n        p[len++] = 0x80 | ( c & 0x3f );\n    }\n\n    return len;\n}", "Selected Statement": "if (buf == NULL)", "Function Input": {"p": {"value": "0x6c004c1cdf <error: Cannot access memory at address 0x6c004c1cdf>"}}, "Variable Values Before Statement": {"buf": "NULL"}, "Value After Statement Execution": "Yes", "Project Information": "krb5"}
{"Programming Language": "C", "Statement Type": "Branch", "Source Code": "size_t krb5int_ucs4_to_utf8(krb5_ucs4 c, char *buf)\n{\n    size_t len = 0;\n    unsigned char *p = (unsigned char *) buf;\n\n    \n    if (c > 0x10ffff)\n        return 0;\n\n    \n    if (buf == NULL) {\n        if (c < 0x80) return 1;\n        else if (c < 0x800) return 2;\n        else if (c < 0x10000) return 3;\n        else return 4;\n    }\n\n    if (c < 0x80) {\n        p[len++] = c;\n    } else if (c < 0x800) {\n        p[len++] = 0xc0 | ( c >> 6 );\n        p[len++] = 0x80 | ( c & 0x3f );\n    } else if (c < 0x10000) {\n        p[len++] = 0xe0 | ( c >> 12 );\n        p[len++] = 0x80 | ( (c >> 6) & 0x3f );\n        p[len++] = 0x80 | ( c & 0x3f );\n    } else  {\n        p[len++] = 0xf0 | ( c >> 18 );\n        p[len++] = 0x80 | ( (c >> 12) & 0x3f );\n        p[len++] = 0x80 | ( (c >> 6) & 0x3f );\n        p[len++] = 0x80 | ( c & 0x3f );\n    }\n\n    return len;\n}", "Selected Statement": "if (c > 0x10ffff)", "Function Input": {"p": {"value": "0x6c004c1cdf <error: Cannot access memory at address 0x6c004c1cdf>"}}, "Variable Values Before Statement": {"c": "krb5_ucs4"}, "Value After Statement Execution": "No", "Project Information": "krb5"}
